<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="message_8c" kind="file" language="C++">
    <compoundname>message.c</compoundname>
    <includes local="no">xc.h</includes>
    <includes refid="message_8h" local="yes">message.h</includes>
    <includes refid="powerspy_8h" local="yes">powerspy.h</includes>
    <incdepgraph>
      <node id="1">
        <label>xc.h</label>
      </node>
      <node id="3">
        <label>types.h</label>
        <link refid="types_8h"/>
      </node>
      <node id="4">
        <label>powerspy.h</label>
        <link refid="powerspy_8h"/>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="0">
        <label>powerspy.X/message.c</label>
        <link refid="message.c"/>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>message.h</label>
        <link refid="message_8h"/>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="message_8c_1a88f6f7f9f1e3fda77ed83f6687059c28" prot="public" static="no" mutable="no">
        <type>int8_t</type>
        <definition>int8_t readpos</definition>
        <argsstring></argsstring>
        <name>readpos</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="powerspy.X/message.c" line="13" column="1" bodyfile="powerspy.X/message.c" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="message_8c_1a25367e656c66718d1666cb947b399530" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char reading</definition>
        <argsstring></argsstring>
        <name>reading</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="powerspy.X/message.c" line="14" column="1" bodyfile="powerspy.X/message.c" bodystart="14" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="message_8c_1a01e4010741e5ee38acf158276ed9a3af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void initMessaging</definition>
        <argsstring>()</argsstring>
        <name>initMessaging</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialises the messaging buffer and pointers. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="powerspy.X/message.c" line="16" column="1" bodyfile="powerspy.X/message.c" bodystart="16" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="message_8c_1aeb40694579584385585c7e39e574ed26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int8_t</type>
        <definition>int8_t charAvailable</definition>
        <argsstring>()</argsstring>
        <name>charAvailable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Counts the available Characters in the receive buffer and returns that number. <simplesect kind="return"><para>the number of available characters </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="powerspy.X/message.c" line="23" column="1" bodyfile="powerspy.X/message.c" bodystart="23" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="message_8c_1a2d521f5c5511bc21deb5a3e13b422cc1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>char readNext</definition>
        <argsstring>()</argsstring>
        <name>readNext</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reads the next Character and advances the buffer by one. <simplesect kind="return"><para>the read character </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="powerspy.X/message.c" line="31" column="1" bodyfile="powerspy.X/message.c" bodystart="31" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="message_8c_1a47e2fdede9224e382c30d55ee13e5b1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>char packageStarted</definition>
        <argsstring>()</argsstring>
        <name>packageStarted</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns 1 if at least one byte has been written to the buffer, otherwise 0. <simplesect kind="return"><para>1 if a byte is in the buffer, otherwise 0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="powerspy.X/message.c" line="39" column="1" bodyfile="powerspy.X/message.c" bodystart="39" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="message_8c_1afe58d05adb4037123536accff5de3106" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>char packageFinished</definition>
        <argsstring>()</argsstring>
        <name>packageFinished</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The return value behaves in the same way as does <ref refid="message_8h_1a38b46e4932111be93e3701203451c416" kindref="member">readPackage()</ref>. <simplesect kind="return"><para>0 if the package is not finshied, otherwise 1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="powerspy.X/message.c" line="49" column="1" bodyfile="powerspy.X/message.c" bodystart="49" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="message_8c_1ac41facd93e52b5ff8c8ab5913aa2775e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>char getType</definition>
        <argsstring>()</argsstring>
        <name>getType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the type of the package as a Character. <simplesect kind="return"><para>the type </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="powerspy.X/message.c" line="60" column="1" bodyfile="powerspy.X/message.c" bodystart="60" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="message_8c_1aec8d527271ad094a4fd0cf605e7c4751" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void seekFront</definition>
        <argsstring>()</argsstring>
        <name>seekFront</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the position of the buffer to the beginning of the buffer effectively resetting the buffer. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="powerspy.X/message.c" line="71" column="1" bodyfile="powerspy.X/message.c" bodystart="71" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="message_8c_1ac8bb3912a3ce86b15842e79d0b421204" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Clears the whole buffer with 0s (zeros). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="powerspy.X/message.c" line="81" column="1" bodyfile="powerspy.X/message.c" bodystart="81" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="message_8c_1a24c9f312341ccfb47ae7a007ae32c39f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int8_t</type>
        <definition>int8_t readInt8</definition>
        <argsstring>()</argsstring>
        <name>readInt8</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reads an 8 bit signed Integer from the buffer. <simplesect kind="return"><para>the 8 bit Integer </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="powerspy.X/message.c" line="91" column="1" bodyfile="powerspy.X/message.c" bodystart="91" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="message_8c_1a7cf018b7a5d7bed8aa4d201e4399fce0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int16_t</type>
        <definition>int16_t readInt16</definition>
        <argsstring>()</argsstring>
        <name>readInt16</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reads an 16 bit signed Integer from the buffer. <simplesect kind="return"><para>the 16 bit Integer </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="powerspy.X/message.c" line="102" column="1" bodyfile="powerspy.X/message.c" bodystart="102" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="message_8c_1adea3200a30db84b746743790b5696598" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int24_t</type>
        <definition>int24_t readInt24</definition>
        <argsstring>()</argsstring>
        <name>readInt24</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reads an 24 bit signed Integer from the buffer. <simplesect kind="return"><para>the 24 bit Integer </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="powerspy.X/message.c" line="115" column="1" bodyfile="powerspy.X/message.c" bodystart="115" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="message_8c_1adbc23fa2b53ee3f0bd8cc0af521900d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t readInt32</definition>
        <argsstring>()</argsstring>
        <name>readInt32</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reads an 32 bit signed Integer from the buffer. <simplesect kind="return"><para>the 32 bit Integer </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="powerspy.X/message.c" line="130" column="1" bodyfile="powerspy.X/message.c" bodystart="130" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="message_8c_1aa5de12b8cd82d61b545a85ea991944a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float readFloat</definition>
        <argsstring>()</argsstring>
        <name>readFloat</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reads an 3 byte Float from the buffer. <simplesect kind="return"><para>the Float </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="powerspy.X/message.c" line="147" column="1" bodyfile="powerspy.X/message.c" bodystart="147" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="message_8c_1abae34479c3e66c8878999c3e4836dd65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void readString</definition>
        <argsstring>(char **c)</argsstring>
        <name>readString</name>
        <param>
          <type>char **</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reads a string from the buffer into the specified char array. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>the destination </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="powerspy.X/message.c" line="154" column="1" bodyfile="powerspy.X/message.c" bodystart="154" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="message_8c_1aaf66edbf84a1bcbafe1a750077e995ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _sendchar_</definition>
        <argsstring>(char c)</argsstring>
        <name>_sendchar_</name>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="powerspy.X/message.c" line="159" column="1" bodyfile="powerspy.X/message.c" bodystart="159" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="message_8c_1ac7621400232b4f9108bc751f447ae486" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sendInt8</definition>
        <argsstring>(int8_t i)</argsstring>
        <name>sendInt8</name>
        <param>
          <type>int8_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sends an 8 bit wide Integer variable over the USART register <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>the data </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="powerspy.X/message.c" line="166" column="1" bodyfile="powerspy.X/message.c" bodystart="166" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="message_8c_1abc1593b6987bbc3b871743e20c86c7d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sendInt16</definition>
        <argsstring>(int16_t i)</argsstring>
        <name>sendInt16</name>
        <param>
          <type>int16_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sends an 16 bit wide Integer variable over the USART register <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>the data </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="powerspy.X/message.c" line="173" column="1" bodyfile="powerspy.X/message.c" bodystart="173" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="message_8c_1a5451b692d0059527514ddbbab9ced49f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sendInt24</definition>
        <argsstring>(int24_t i)</argsstring>
        <name>sendInt24</name>
        <param>
          <type>int24_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sends an 24 bit wide Integer variable over the USART register <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>the data </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="powerspy.X/message.c" line="181" column="1" bodyfile="powerspy.X/message.c" bodystart="181" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="message_8c_1a3fbb2c5d6c23e1fc978f1ae234927c88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sendInt32</definition>
        <argsstring>(int32_t i)</argsstring>
        <name>sendInt32</name>
        <param>
          <type>int32_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sends an 32 bit wide Integer variable over the USART register <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>the data </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="powerspy.X/message.c" line="190" column="1" bodyfile="powerspy.X/message.c" bodystart="190" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="message_8c_1a0c25a5fe76d1638f8da153040e752c00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sendUInt8</definition>
        <argsstring>(uint8_t i)</argsstring>
        <name>sendUInt8</name>
        <param>
          <type>uint8_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sends an 8 bit wide unsigned Integer variable over the USART register <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>the data </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="powerspy.X/message.c" line="200" column="1" bodyfile="powerspy.X/message.c" bodystart="200" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="message_8c_1a0fd945471da0bce0fab9ee18cd61924e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sendUInt16</definition>
        <argsstring>(uint16_t i)</argsstring>
        <name>sendUInt16</name>
        <param>
          <type>uint16_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sends an 16 bit wide unsigned Integer variable over the USART register <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>the data </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="powerspy.X/message.c" line="207" column="1" bodyfile="powerspy.X/message.c" bodystart="207" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="message_8c_1a9ee52554eb39dd8851c6dd79a3bacc5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sendUInt24</definition>
        <argsstring>(uint24_t i)</argsstring>
        <name>sendUInt24</name>
        <param>
          <type>uint24_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sends an 24 bit wide unsigned Integer variable over the USART register <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>the data </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="powerspy.X/message.c" line="215" column="1" bodyfile="powerspy.X/message.c" bodystart="215" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="message_8c_1aec24bbc16bcb0cd411f64472f4de1bb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sendUInt32</definition>
        <argsstring>(uint32_t i)</argsstring>
        <name>sendUInt32</name>
        <param>
          <type>uint32_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="powerspy.X/message.c" line="224" column="1" bodyfile="powerspy.X/message.c" bodystart="224" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="message_8c_1a08cbc9f34ffb5422939e306a0e5f3348" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sendFloat</definition>
        <argsstring>(float f)</argsstring>
        <name>sendFloat</name>
        <param>
          <type>float</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sends a 3 byte wide Float over the USART module. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>the Float to send </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="powerspy.X/message.c" line="234" column="1" bodyfile="powerspy.X/message.c" bodystart="234" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="message_8c_1a8d6be23dfc9d486b1164f13153d4173a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sendString</definition>
        <argsstring>(char *val)</argsstring>
        <name>sendString</name>
        <param>
          <type>char *</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sends a null-terminated String over the USART module. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>the pointer to the first element of the String </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="powerspy.X/message.c" line="244" column="1" bodyfile="powerspy.X/message.c" bodystart="244" bodyend="253"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>File:<sp/><sp/><sp/>message.c</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Author:<sp/>redxef</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Created<sp/>on<sp/>18<sp/>March<sp/>2016,<sp/>09:25</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;xc.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="message_8h" kindref="compound">message.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="powerspy_8h" kindref="compound">powerspy.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal">int8_t<sp/>readpos;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>reading;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="message_8h_1a01e4010741e5ee38acf158276ed9a3af" kindref="member">initMessaging</ref>()</highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffpos<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>readpos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reading<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="21"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal">int8_t<sp/><ref refid="message_8h_1aeb40694579584385585c7e39e574ed26" kindref="member">charAvailable</ref>()</highlight></codeline>
<codeline lineno="24"><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buffpos<sp/>&lt;<sp/>readpos)<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>RECEIVEBUFF_SIZE<sp/>-<sp/>readpos<sp/>+<sp/>buffpos;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buffpos<sp/>-<sp/>readpos;</highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="message_8h_1a2d521f5c5511bc21deb5a3e13b422cc1" kindref="member">readNext</ref>()</highlight></codeline>
<codeline lineno="32"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>receive_buff[readpos++];</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(readpos<sp/>==<sp/>RECEIVEBUFF_SIZE)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>readpos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="message_8h_1a47e2fdede9224e382c30d55ee13e5b1b" kindref="member">packageStarted</ref>()</highlight></codeline>
<codeline lineno="40"><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int8_t<sp/>i;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>RECEIVEBUFF_SIZE;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(receive_buff[i]<sp/>==<sp/>START_OF_TEXT)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="message_8h_1afe58d05adb4037123536accff5de3106" kindref="member">packageFinished</ref>()</highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int8_t<sp/>i;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="message_8h_1a47e2fdede9224e382c30d55ee13e5b1b" kindref="member">packageStarted</ref>())</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>RECEIVEBUFF_SIZE;<sp/>i++)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(receive_buff[i]<sp/>==<sp/>END_OF_TEXT)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="message_8h_1ac41facd93e52b5ff8c8ab5913aa2775e" kindref="member">getType</ref>()</highlight></codeline>
<codeline lineno="61"><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int8_t<sp/>i;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>RECEIVEBUFF_SIZE;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(receive_buff[i]<sp/>==<sp/>START_OF_TEXT)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>receive_buff[i<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NONE;</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="message_8h_1aec8d527271ad094a4fd0cf605e7c4751" kindref="member">seekFront</ref>()</highlight></codeline>
<codeline lineno="72"><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int8_t<sp/>i;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>RECEIVEBUFF_SIZE;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(receive_buff[i]<sp/>==<sp/>START_OF_TEXT)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>readpos<sp/>=<sp/>i<sp/>+<sp/>2;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="message_8h_1ac8bb3912a3ce86b15842e79d0b421204" kindref="member">clear</ref>()</highlight></codeline>
<codeline lineno="82"><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int8_t<sp/>i;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>RECEIVEBUFF_SIZE;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>receive_buff[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reading<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>readpos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal">int8_t<sp/><ref refid="message_8h_1a24c9f312341ccfb47ae7a007ae32c39f" kindref="member">readInt8</ref>()</highlight></codeline>
<codeline lineno="92"><highlight class="normal">{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int8_t<sp/>res<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="message_8h_1aec8d527271ad094a4fd0cf605e7c4751" kindref="member">seekFront</ref>();</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>(int8_t)<sp/><ref refid="message_8h_1a2d521f5c5511bc21deb5a3e13b422cc1" kindref="member">readNext</ref>();</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="message_8h_1ac8bb3912a3ce86b15842e79d0b421204" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="100"><highlight class="normal">}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal">int16_t<sp/><ref refid="message_8h_1a7cf018b7a5d7bed8aa4d201e4399fce0" kindref="member">readInt16</ref>()</highlight></codeline>
<codeline lineno="103"><highlight class="normal">{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16_t<sp/>res<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="message_8h_1aec8d527271ad094a4fd0cf605e7c4751" kindref="member">seekFront</ref>();</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/><ref refid="message_8h_1a2d521f5c5511bc21deb5a3e13b422cc1" kindref="member">readNext</ref>();</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>&lt;&lt;=<sp/>8;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>|=<sp/><ref refid="message_8h_1a2d521f5c5511bc21deb5a3e13b422cc1" kindref="member">readNext</ref>();</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="message_8h_1ac8bb3912a3ce86b15842e79d0b421204" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal">int24_t<sp/><ref refid="message_8h_1adea3200a30db84b746743790b5696598" kindref="member">readInt24</ref>()</highlight></codeline>
<codeline lineno="116"><highlight class="normal">{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int24_t<sp/>res<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="message_8h_1aec8d527271ad094a4fd0cf605e7c4751" kindref="member">seekFront</ref>();</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/><ref refid="message_8h_1a2d521f5c5511bc21deb5a3e13b422cc1" kindref="member">readNext</ref>();</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>&lt;&lt;=<sp/>8;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>|=<sp/><ref refid="message_8h_1a2d521f5c5511bc21deb5a3e13b422cc1" kindref="member">readNext</ref>();</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>&lt;&lt;=<sp/>8;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>|=<sp/><ref refid="message_8h_1a2d521f5c5511bc21deb5a3e13b422cc1" kindref="member">readNext</ref>();</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="message_8h_1ac8bb3912a3ce86b15842e79d0b421204" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal">int32_t<sp/><ref refid="message_8h_1adbc23fa2b53ee3f0bd8cc0af521900d4" kindref="member">readInt32</ref>()</highlight></codeline>
<codeline lineno="131"><highlight class="normal">{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>res<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="message_8h_1aec8d527271ad094a4fd0cf605e7c4751" kindref="member">seekFront</ref>();</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/><ref refid="message_8h_1a2d521f5c5511bc21deb5a3e13b422cc1" kindref="member">readNext</ref>();</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>&lt;&lt;=<sp/>8;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>|=<sp/><ref refid="message_8h_1a2d521f5c5511bc21deb5a3e13b422cc1" kindref="member">readNext</ref>();</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>&lt;&lt;=<sp/>8;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>|=<sp/><ref refid="message_8h_1a2d521f5c5511bc21deb5a3e13b422cc1" kindref="member">readNext</ref>();</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>&lt;&lt;=<sp/>8;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>|=<sp/><ref refid="message_8h_1a2d521f5c5511bc21deb5a3e13b422cc1" kindref="member">readNext</ref>();</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="message_8h_1ac8bb3912a3ce86b15842e79d0b421204" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="145"><highlight class="normal">}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="message_8h_1aa5de12b8cd82d61b545a85ea991944a3" kindref="member">readFloat</ref>()</highlight></codeline>
<codeline lineno="148"><highlight class="normal">{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int24_t<sp/>i<sp/>=<sp/><ref refid="message_8h_1adea3200a30db84b746743790b5696598" kindref="member">readInt24</ref>();</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*res<sp/>=<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*)<sp/>&amp;<sp/>i;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*res;</highlight></codeline>
<codeline lineno="152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="message_8h_1abae34479c3e66c8878999c3e4836dd65" kindref="member">readString</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**c)</highlight></codeline>
<codeline lineno="155"><highlight class="normal">{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_sendchar_(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c)</highlight></codeline>
<codeline lineno="160"><highlight class="normal">{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TXREG<sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!TRMT);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__delay_ms(1);</highlight></codeline>
<codeline lineno="164"><highlight class="normal">}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="message_8h_1ac7621400232b4f9108bc751f447ae486" kindref="member">sendInt8</ref>(int8_t<sp/>i)</highlight></codeline>
<codeline lineno="167"><highlight class="normal">{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_sendchar_(START_OF_TEXT);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_sendchar_(INT8);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_sendchar_(i);</highlight></codeline>
<codeline lineno="171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="message_8h_1abc1593b6987bbc3b871743e20c86c7d0" kindref="member">sendInt16</ref>(int16_t<sp/>i)</highlight></codeline>
<codeline lineno="174"><highlight class="normal">{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_sendchar_(START_OF_TEXT);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_sendchar_(INT16);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_sendchar_((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>(i<sp/>&gt;&gt;<sp/>8<sp/>&amp;<sp/>0xff));</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_sendchar_((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>(i<sp/>&amp;<sp/>0xff));</highlight></codeline>
<codeline lineno="179"><highlight class="normal">}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="message_8h_1a5451b692d0059527514ddbbab9ced49f" kindref="member">sendInt24</ref>(int24_t<sp/>i)</highlight></codeline>
<codeline lineno="182"><highlight class="normal">{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_sendchar_(START_OF_TEXT);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_sendchar_(INT24);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_sendchar_((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>(i<sp/>&gt;&gt;<sp/>16<sp/>&amp;<sp/>0xff));</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_sendchar_((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>(i<sp/>&gt;&gt;<sp/>8<sp/>&amp;<sp/>0xff));</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_sendchar_((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>(i<sp/>&amp;<sp/>0xff));</highlight></codeline>
<codeline lineno="188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="message_8h_1a3fbb2c5d6c23e1fc978f1ae234927c88" kindref="member">sendInt32</ref>(int32_t<sp/>i)</highlight></codeline>
<codeline lineno="191"><highlight class="normal">{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_sendchar_(START_OF_TEXT);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_sendchar_(INT32);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_sendchar_((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>(i<sp/>&gt;&gt;<sp/>24<sp/>&amp;<sp/>0xff));</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_sendchar_((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>(i<sp/>&gt;&gt;<sp/>16<sp/>&amp;<sp/>0xff));</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_sendchar_((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>(i<sp/>&gt;&gt;<sp/>8<sp/>&amp;<sp/>0xff));</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_sendchar_((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>(i<sp/>&amp;<sp/>0xff));</highlight></codeline>
<codeline lineno="198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="message_8h_1a0c25a5fe76d1638f8da153040e752c00" kindref="member">sendUInt8</ref>(uint8_t<sp/>i)</highlight></codeline>
<codeline lineno="201"><highlight class="normal">{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_sendchar_(START_OF_TEXT);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_sendchar_(UINT8);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_sendchar_(i);</highlight></codeline>
<codeline lineno="205"><highlight class="normal">}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="message_8h_1a0fd945471da0bce0fab9ee18cd61924e" kindref="member">sendUInt16</ref>(uint16_t<sp/>i)</highlight></codeline>
<codeline lineno="208"><highlight class="normal">{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_sendchar_(START_OF_TEXT);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_sendchar_(UINT16);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_sendchar_((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>(i<sp/>&gt;&gt;<sp/>8<sp/>&amp;<sp/>0xff));</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_sendchar_((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>(i<sp/>&amp;<sp/>0xff));</highlight></codeline>
<codeline lineno="213"><highlight class="normal">}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="message_8h_1a9ee52554eb39dd8851c6dd79a3bacc5e" kindref="member">sendUInt24</ref>(uint24_t<sp/>i)</highlight></codeline>
<codeline lineno="216"><highlight class="normal">{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_sendchar_(START_OF_TEXT);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_sendchar_(UINT24);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_sendchar_((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>(i<sp/>&gt;&gt;<sp/>16<sp/>&amp;<sp/>0xff));</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_sendchar_((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>(i<sp/>&gt;&gt;<sp/>8<sp/>&amp;<sp/>0xff));</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_sendchar_((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>(i<sp/>&amp;<sp/>0xff));</highlight></codeline>
<codeline lineno="222"><highlight class="normal">}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sendUInt32(uint32_t<sp/>i)</highlight></codeline>
<codeline lineno="225"><highlight class="normal">{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_sendchar_(START_OF_TEXT);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_sendchar_(UINT32);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_sendchar_((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>(i<sp/>&gt;&gt;<sp/>24<sp/>&amp;<sp/>0xff));</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_sendchar_((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>(i<sp/>&gt;&gt;<sp/>16<sp/>&amp;<sp/>0xff));</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_sendchar_((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>(i<sp/>&gt;&gt;<sp/>8<sp/>&amp;<sp/>0xff));</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_sendchar_((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>(i<sp/>&amp;<sp/>0xff));</highlight></codeline>
<codeline lineno="232"><highlight class="normal">}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="message_8h_1a08cbc9f34ffb5422939e306a0e5f3348" kindref="member">sendFloat</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>f)</highlight></codeline>
<codeline lineno="235"><highlight class="normal">{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint24_t<sp/>*ptr<sp/>=<sp/>(uint24_t<sp/>*)<sp/>&amp;<sp/>f;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_sendchar_(START_OF_TEXT);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_sendchar_(FLOAT);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_sendchar_((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>(*ptr<sp/>&gt;&gt;<sp/>16<sp/>&amp;<sp/>0xff));</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_sendchar_((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>(*ptr<sp/>&gt;&gt;<sp/>8<sp/>&amp;<sp/>0xff));</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_sendchar_((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>(*ptr<sp/>&amp;<sp/>0xff));</highlight></codeline>
<codeline lineno="242"><highlight class="normal">}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="message_8h_1a8d6be23dfc9d486b1164f13153d4173a" kindref="member">sendString</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*val)</highlight></codeline>
<codeline lineno="245"><highlight class="normal">{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_sendchar_(START_OF_TEXT);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_sendchar_(STRING);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*val)<sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_sendchar_(*val);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val++;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_sendchar_(END_OF_TEXT);</highlight></codeline>
<codeline lineno="253"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="powerspy.X/message.c"/>
  </compounddef>
</doxygen>
