

Microchip Technology PIC LITE Macro Assembler V1.36 build -262312587 
                                                                                               Fri Mar 18 18:32:46 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext,global,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	dabs	1,0x7E,2
    23  0000                     	;# 
    24  0001                     	;# 
    25  0002                     	;# 
    26  0003                     	;# 
    27  0004                     	;# 
    28  0005                     	;# 
    29  0006                     	;# 
    30  0007                     	;# 
    31  0008                     	;# 
    32  0009                     	;# 
    33  000A                     	;# 
    34  000B                     	;# 
    35  000C                     	;# 
    36  000D                     	;# 
    37  0011                     	;# 
    38  0012                     	;# 
    39  0013                     	;# 
    40  0014                     	;# 
    41  0015                     	;# 
    42  0016                     	;# 
    43  0016                     	;# 
    44  0017                     	;# 
    45  0018                     	;# 
    46  0019                     	;# 
    47  001A                     	;# 
    48  001B                     	;# 
    49  001C                     	;# 
    50  001E                     	;# 
    51  001F                     	;# 
    52  008C                     	;# 
    53  008D                     	;# 
    54  0091                     	;# 
    55  0092                     	;# 
    56  0093                     	;# 
    57  0094                     	;# 
    58  0095                     	;# 
    59  0096                     	;# 
    60  0097                     	;# 
    61  0098                     	;# 
    62  0099                     	;# 
    63  009A                     	;# 
    64  009B                     	;# 
    65  009B                     	;# 
    66  009C                     	;# 
    67  009D                     	;# 
    68  009E                     	;# 
    69  010C                     	;# 
    70  010D                     	;# 
    71  0111                     	;# 
    72  0112                     	;# 
    73  0113                     	;# 
    74  0114                     	;# 
    75  0115                     	;# 
    76  0116                     	;# 
    77  0117                     	;# 
    78  0118                     	;# 
    79  0119                     	;# 
    80  011A                     	;# 
    81  011B                     	;# 
    82  011D                     	;# 
    83  011E                     	;# 
    84  018C                     	;# 
    85  018D                     	;# 
    86  0191                     	;# 
    87  0191                     	;# 
    88  0192                     	;# 
    89  0193                     	;# 
    90  0193                     	;# 
    91  0193                     	;# 
    92  0194                     	;# 
    93  0195                     	;# 
    94  0196                     	;# 
    95  0199                     	;# 
    96  019A                     	;# 
    97  019B                     	;# 
    98  019B                     	;# 
    99  019B                     	;# 
   100  019B                     	;# 
   101  019C                     	;# 
   102  019C                     	;# 
   103  019D                     	;# 
   104  019E                     	;# 
   105  019F                     	;# 
   106  020C                     	;# 
   107  020D                     	;# 
   108  0211                     	;# 
   109  0211                     	;# 
   110  0212                     	;# 
   111  0212                     	;# 
   112  0213                     	;# 
   113  0213                     	;# 
   114  0214                     	;# 
   115  0214                     	;# 
   116  0215                     	;# 
   117  0215                     	;# 
   118  0215                     	;# 
   119  0216                     	;# 
   120  0216                     	;# 
   121  0217                     	;# 
   122  0217                     	;# 
   123  0219                     	;# 
   124  021A                     	;# 
   125  021B                     	;# 
   126  021C                     	;# 
   127  021D                     	;# 
   128  021E                     	;# 
   129  021F                     	;# 
   130  0291                     	;# 
   131  0291                     	;# 
   132  0292                     	;# 
   133  0293                     	;# 
   134  0294                     	;# 
   135  0295                     	;# 
   136  0295                     	;# 
   137  0296                     	;# 
   138  0298                     	;# 
   139  0298                     	;# 
   140  0299                     	;# 
   141  029A                     	;# 
   142  029B                     	;# 
   143  029C                     	;# 
   144  029C                     	;# 
   145  029D                     	;# 
   146  029E                     	;# 
   147  029E                     	;# 
   148  0311                     	;# 
   149  0311                     	;# 
   150  0312                     	;# 
   151  0313                     	;# 
   152  0318                     	;# 
   153  0318                     	;# 
   154  0319                     	;# 
   155  031A                     	;# 
   156  0394                     	;# 
   157  0395                     	;# 
   158  0396                     	;# 
   159  039A                     	;# 
   160  039C                     	;# 
   161  039D                     	;# 
   162  039E                     	;# 
   163  039F                     	;# 
   164  0415                     	;# 
   165  0416                     	;# 
   166  0417                     	;# 
   167  041C                     	;# 
   168  041D                     	;# 
   169  041E                     	;# 
   170  0FE4                     	;# 
   171  0FE5                     	;# 
   172  0FE6                     	;# 
   173  0FE7                     	;# 
   174  0FE8                     	;# 
   175  0FE9                     	;# 
   176  0FEA                     	;# 
   177  0FEB                     	;# 
   178  0FED                     	;# 
   179  0FEE                     	;# 
   180  0FEF                     	;# 
   181  0000                     	;# 
   182  0001                     	;# 
   183  0002                     	;# 
   184  0003                     	;# 
   185  0004                     	;# 
   186  0005                     	;# 
   187  0006                     	;# 
   188  0007                     	;# 
   189  0008                     	;# 
   190  0009                     	;# 
   191  000A                     	;# 
   192  000B                     	;# 
   193  000C                     	;# 
   194  000D                     	;# 
   195  0011                     	;# 
   196  0012                     	;# 
   197  0013                     	;# 
   198  0014                     	;# 
   199  0015                     	;# 
   200  0016                     	;# 
   201  0016                     	;# 
   202  0017                     	;# 
   203  0018                     	;# 
   204  0019                     	;# 
   205  001A                     	;# 
   206  001B                     	;# 
   207  001C                     	;# 
   208  001E                     	;# 
   209  001F                     	;# 
   210  008C                     	;# 
   211  008D                     	;# 
   212  0091                     	;# 
   213  0092                     	;# 
   214  0093                     	;# 
   215  0094                     	;# 
   216  0095                     	;# 
   217  0096                     	;# 
   218  0097                     	;# 
   219  0098                     	;# 
   220  0099                     	;# 
   221  009A                     	;# 
   222  009B                     	;# 
   223  009B                     	;# 
   224  009C                     	;# 
   225  009D                     	;# 
   226  009E                     	;# 
   227  010C                     	;# 
   228  010D                     	;# 
   229  0111                     	;# 
   230  0112                     	;# 
   231  0113                     	;# 
   232  0114                     	;# 
   233  0115                     	;# 
   234  0116                     	;# 
   235  0117                     	;# 
   236  0118                     	;# 
   237  0119                     	;# 
   238  011A                     	;# 
   239  011B                     	;# 
   240  011D                     	;# 
   241  011E                     	;# 
   242  018C                     	;# 
   243  018D                     	;# 
   244  0191                     	;# 
   245  0191                     	;# 
   246  0192                     	;# 
   247  0193                     	;# 
   248  0193                     	;# 
   249  0193                     	;# 
   250  0194                     	;# 
   251  0195                     	;# 
   252  0196                     	;# 
   253  0199                     	;# 
   254  019A                     	;# 
   255  019B                     	;# 
   256  019B                     	;# 
   257  019B                     	;# 
   258  019B                     	;# 
   259  019C                     	;# 
   260  019C                     	;# 
   261  019D                     	;# 
   262  019E                     	;# 
   263  019F                     	;# 
   264  020C                     	;# 
   265  020D                     	;# 
   266  0211                     	;# 
   267  0211                     	;# 
   268  0212                     	;# 
   269  0212                     	;# 
   270  0213                     	;# 
   271  0213                     	;# 
   272  0214                     	;# 
   273  0214                     	;# 
   274  0215                     	;# 
   275  0215                     	;# 
   276  0215                     	;# 
   277  0216                     	;# 
   278  0216                     	;# 
   279  0217                     	;# 
   280  0217                     	;# 
   281  0219                     	;# 
   282  021A                     	;# 
   283  021B                     	;# 
   284  021C                     	;# 
   285  021D                     	;# 
   286  021E                     	;# 
   287  021F                     	;# 
   288  0291                     	;# 
   289  0291                     	;# 
   290  0292                     	;# 
   291  0293                     	;# 
   292  0294                     	;# 
   293  0295                     	;# 
   294  0295                     	;# 
   295  0296                     	;# 
   296  0298                     	;# 
   297  0298                     	;# 
   298  0299                     	;# 
   299  029A                     	;# 
   300  029B                     	;# 
   301  029C                     	;# 
   302  029C                     	;# 
   303  029D                     	;# 
   304  029E                     	;# 
   305  029E                     	;# 
   306  0311                     	;# 
   307  0311                     	;# 
   308  0312                     	;# 
   309  0313                     	;# 
   310  0318                     	;# 
   311  0318                     	;# 
   312  0319                     	;# 
   313  031A                     	;# 
   314  0394                     	;# 
   315  0395                     	;# 
   316  0396                     	;# 
   317  039A                     	;# 
   318  039C                     	;# 
   319  039D                     	;# 
   320  039E                     	;# 
   321  039F                     	;# 
   322  0415                     	;# 
   323  0416                     	;# 
   324  0417                     	;# 
   325  041C                     	;# 
   326  041D                     	;# 
   327  041E                     	;# 
   328  0FE4                     	;# 
   329  0FE5                     	;# 
   330  0FE6                     	;# 
   331  0FE7                     	;# 
   332  0FE8                     	;# 
   333  0FE9                     	;# 
   334  0FEA                     	;# 
   335  0FEB                     	;# 
   336  0FED                     	;# 
   337  0FEE                     	;# 
   338  0FEF                     	;# 
   339  0000                     	;# 
   340  0001                     	;# 
   341  0002                     	;# 
   342  0003                     	;# 
   343  0004                     	;# 
   344  0005                     	;# 
   345  0006                     	;# 
   346  0007                     	;# 
   347  0008                     	;# 
   348  0009                     	;# 
   349  000A                     	;# 
   350  000B                     	;# 
   351  000C                     	;# 
   352  000D                     	;# 
   353  0011                     	;# 
   354  0012                     	;# 
   355  0013                     	;# 
   356  0014                     	;# 
   357  0015                     	;# 
   358  0016                     	;# 
   359  0016                     	;# 
   360  0017                     	;# 
   361  0018                     	;# 
   362  0019                     	;# 
   363  001A                     	;# 
   364  001B                     	;# 
   365  001C                     	;# 
   366  001E                     	;# 
   367  001F                     	;# 
   368  008C                     	;# 
   369  008D                     	;# 
   370  0091                     	;# 
   371  0092                     	;# 
   372  0093                     	;# 
   373  0094                     	;# 
   374  0095                     	;# 
   375  0096                     	;# 
   376  0097                     	;# 
   377  0098                     	;# 
   378  0099                     	;# 
   379  009A                     	;# 
   380  009B                     	;# 
   381  009B                     	;# 
   382  009C                     	;# 
   383  009D                     	;# 
   384  009E                     	;# 
   385  010C                     	;# 
   386  010D                     	;# 
   387  0111                     	;# 
   388  0112                     	;# 
   389  0113                     	;# 
   390  0114                     	;# 
   391  0115                     	;# 
   392  0116                     	;# 
   393  0117                     	;# 
   394  0118                     	;# 
   395  0119                     	;# 
   396  011A                     	;# 
   397  011B                     	;# 
   398  011D                     	;# 
   399  011E                     	;# 
   400  018C                     	;# 
   401  018D                     	;# 
   402  0191                     	;# 
   403  0191                     	;# 
   404  0192                     	;# 
   405  0193                     	;# 
   406  0193                     	;# 
   407  0193                     	;# 
   408  0194                     	;# 
   409  0195                     	;# 
   410  0196                     	;# 
   411  0199                     	;# 
   412  019A                     	;# 
   413  019B                     	;# 
   414  019B                     	;# 
   415  019B                     	;# 
   416  019B                     	;# 
   417  019C                     	;# 
   418  019C                     	;# 
   419  019D                     	;# 
   420  019E                     	;# 
   421  019F                     	;# 
   422  020C                     	;# 
   423  020D                     	;# 
   424  0211                     	;# 
   425  0211                     	;# 
   426  0212                     	;# 
   427  0212                     	;# 
   428  0213                     	;# 
   429  0213                     	;# 
   430  0214                     	;# 
   431  0214                     	;# 
   432  0215                     	;# 
   433  0215                     	;# 
   434  0215                     	;# 
   435  0216                     	;# 
   436  0216                     	;# 
   437  0217                     	;# 
   438  0217                     	;# 
   439  0219                     	;# 
   440  021A                     	;# 
   441  021B                     	;# 
   442  021C                     	;# 
   443  021D                     	;# 
   444  021E                     	;# 
   445  021F                     	;# 
   446  0291                     	;# 
   447  0291                     	;# 
   448  0292                     	;# 
   449  0293                     	;# 
   450  0294                     	;# 
   451  0295                     	;# 
   452  0295                     	;# 
   453  0296                     	;# 
   454  0298                     	;# 
   455  0298                     	;# 
   456  0299                     	;# 
   457  029A                     	;# 
   458  029B                     	;# 
   459  029C                     	;# 
   460  029C                     	;# 
   461  029D                     	;# 
   462  029E                     	;# 
   463  029E                     	;# 
   464  0311                     	;# 
   465  0311                     	;# 
   466  0312                     	;# 
   467  0313                     	;# 
   468  0318                     	;# 
   469  0318                     	;# 
   470  0319                     	;# 
   471  031A                     	;# 
   472  0394                     	;# 
   473  0395                     	;# 
   474  0396                     	;# 
   475  039A                     	;# 
   476  039C                     	;# 
   477  039D                     	;# 
   478  039E                     	;# 
   479  039F                     	;# 
   480  0415                     	;# 
   481  0416                     	;# 
   482  0417                     	;# 
   483  041C                     	;# 
   484  041D                     	;# 
   485  041E                     	;# 
   486  0FE4                     	;# 
   487  0FE5                     	;# 
   488  0FE6                     	;# 
   489  0FE7                     	;# 
   490  0FE8                     	;# 
   491  0FE9                     	;# 
   492  0FEA                     	;# 
   493  0FEB                     	;# 
   494  0FED                     	;# 
   495  0FEE                     	;# 
   496  0FEF                     	;# 
   497  0000                     	;# 
   498  0001                     	;# 
   499  0002                     	;# 
   500  0003                     	;# 
   501  0004                     	;# 
   502  0005                     	;# 
   503  0006                     	;# 
   504  0007                     	;# 
   505  0008                     	;# 
   506  0009                     	;# 
   507  000A                     	;# 
   508  000B                     	;# 
   509  000C                     	;# 
   510  000D                     	;# 
   511  0011                     	;# 
   512  0012                     	;# 
   513  0013                     	;# 
   514  0014                     	;# 
   515  0015                     	;# 
   516  0016                     	;# 
   517  0016                     	;# 
   518  0017                     	;# 
   519  0018                     	;# 
   520  0019                     	;# 
   521  001A                     	;# 
   522  001B                     	;# 
   523  001C                     	;# 
   524  001E                     	;# 
   525  001F                     	;# 
   526  008C                     	;# 
   527  008D                     	;# 
   528  0091                     	;# 
   529  0092                     	;# 
   530  0093                     	;# 
   531  0094                     	;# 
   532  0095                     	;# 
   533  0096                     	;# 
   534  0097                     	;# 
   535  0098                     	;# 
   536  0099                     	;# 
   537  009A                     	;# 
   538  009B                     	;# 
   539  009B                     	;# 
   540  009C                     	;# 
   541  009D                     	;# 
   542  009E                     	;# 
   543  010C                     	;# 
   544  010D                     	;# 
   545  0111                     	;# 
   546  0112                     	;# 
   547  0113                     	;# 
   548  0114                     	;# 
   549  0115                     	;# 
   550  0116                     	;# 
   551  0117                     	;# 
   552  0118                     	;# 
   553  0119                     	;# 
   554  011A                     	;# 
   555  011B                     	;# 
   556  011D                     	;# 
   557  011E                     	;# 
   558  018C                     	;# 
   559  018D                     	;# 
   560  0191                     	;# 
   561  0191                     	;# 
   562  0192                     	;# 
   563  0193                     	;# 
   564  0193                     	;# 
   565  0193                     	;# 
   566  0194                     	;# 
   567  0195                     	;# 
   568  0196                     	;# 
   569  0199                     	;# 
   570  019A                     	;# 
   571  019B                     	;# 
   572  019B                     	;# 
   573  019B                     	;# 
   574  019B                     	;# 
   575  019C                     	;# 
   576  019C                     	;# 
   577  019D                     	;# 
   578  019E                     	;# 
   579  019F                     	;# 
   580  020C                     	;# 
   581  020D                     	;# 
   582  0211                     	;# 
   583  0211                     	;# 
   584  0212                     	;# 
   585  0212                     	;# 
   586  0213                     	;# 
   587  0213                     	;# 
   588  0214                     	;# 
   589  0214                     	;# 
   590  0215                     	;# 
   591  0215                     	;# 
   592  0215                     	;# 
   593  0216                     	;# 
   594  0216                     	;# 
   595  0217                     	;# 
   596  0217                     	;# 
   597  0219                     	;# 
   598  021A                     	;# 
   599  021B                     	;# 
   600  021C                     	;# 
   601  021D                     	;# 
   602  021E                     	;# 
   603  021F                     	;# 
   604  0291                     	;# 
   605  0291                     	;# 
   606  0292                     	;# 
   607  0293                     	;# 
   608  0294                     	;# 
   609  0295                     	;# 
   610  0295                     	;# 
   611  0296                     	;# 
   612  0298                     	;# 
   613  0298                     	;# 
   614  0299                     	;# 
   615  029A                     	;# 
   616  029B                     	;# 
   617  029C                     	;# 
   618  029C                     	;# 
   619  029D                     	;# 
   620  029E                     	;# 
   621  029E                     	;# 
   622  0311                     	;# 
   623  0311                     	;# 
   624  0312                     	;# 
   625  0313                     	;# 
   626  0318                     	;# 
   627  0318                     	;# 
   628  0319                     	;# 
   629  031A                     	;# 
   630  0394                     	;# 
   631  0395                     	;# 
   632  0396                     	;# 
   633  039A                     	;# 
   634  039C                     	;# 
   635  039D                     	;# 
   636  039E                     	;# 
   637  039F                     	;# 
   638  0415                     	;# 
   639  0416                     	;# 
   640  0417                     	;# 
   641  041C                     	;# 
   642  041D                     	;# 
   643  041E                     	;# 
   644  0FE4                     	;# 
   645  0FE5                     	;# 
   646  0FE6                     	;# 
   647  0FE7                     	;# 
   648  0FE8                     	;# 
   649  0FE9                     	;# 
   650  0FEA                     	;# 
   651  0FEB                     	;# 
   652  0FED                     	;# 
   653  0FEE                     	;# 
   654  0FEF                     	;# 
   655                           
   656                           	psect	idataBANK0
   657  01E5                     __pidataBANK0:	
   658                           
   659                           ;initializer for _curr_time
   660  01E5  34FF               	retlw	255
   661  01E6  34FF               	retlw	255
   662  01E7  34FF               	retlw	255
   663                           
   664                           ;initializer for _delta_t
   665  01E8  34FF               	retlw	255
   666  01E9  34FF               	retlw	255
   667  01EA  34FF               	retlw	255
   668                           
   669                           ;initializer for _volt_time
   670  01EB  34FF               	retlw	255
   671  01EC  34FF               	retlw	255
   672  01ED  34FF               	retlw	255
   673                           
   674                           	psect	stringtext
   675  0194                     __pstringtext:	
   676  0194                     _get_shift_byte:	
   677  0194  347E               	retlw	126
   678  0195  3442               	retlw	66
   679  0196  3437               	retlw	55
   680  0197  3467               	retlw	103
   681  0198  344B               	retlw	75
   682  0199  346D               	retlw	109
   683  019A  347D               	retlw	125
   684  019B  3446               	retlw	70
   685  019C  347F               	retlw	127
   686  019D  346F               	retlw	111
   687  019E                     __end_of_get_shift_byte:	
   688  000C                     _PORTA	set	12
   689  000D                     _PORTB	set	13
   690  001B                     _PR2	set	27
   691  0017                     _TMR1H	set	23
   692  0016                     _TMR1L	set	22
   693  0095                     _C1IF	set	149
   694  0096                     _C2IF	set	150
   695  005F                     _GIE	set	95
   696  005E                     _PEIE	set	94
   697  0063                     _RA3	set	99
   698  0064                     _RA4	set	100
   699  0066                     _RA6	set	102
   700  0067                     _RA7	set	103
   701  008D                     _RCIF	set	141
   702  00C4                     _T1CKPS0	set	196
   703  00C5                     _T1CKPS1	set	197
   704  00E0                     _T2CKPS0	set	224
   705  00E1                     _T2CKPS1	set	225
   706  00E3                     _T2OUTPS0	set	227
   707  00E4                     _T2OUTPS1	set	228
   708  00E5                     _T2OUTPS2	set	229
   709  00E6                     _T2OUTPS3	set	230
   710  00C6                     _TMR1CS0	set	198
   711  00C7                     _TMR1CS1	set	199
   712  0088                     _TMR1IF	set	136
   713  00C0                     _TMR1ON	set	192
   714  0089                     _TMR2IF	set	137
   715  00E2                     _TMR2ON	set	226
   716  0099                     _TMR4IF	set	153
   717  009C                     _ADRESH	set	156
   718  008C                     _TRISA	set	140
   719  008D                     _TRISB	set	141
   720  008D                     _TRISBbits	set	141
   721  04F4                     _ADCS0	set	1268
   722  04F5                     _ADCS1	set	1269
   723  04F6                     _ADCS2	set	1270
   724  04F7                     _ADFM	set	1271
   725  04F2                     _ADNREF	set	1266
   726  04E8                     _ADON	set	1256
   727  04F0                     _ADPREF0	set	1264
   728  04F1                     _ADPREF1	set	1265
   729  0495                     _C1IE	set	1173
   730  0496                     _C2IE	set	1174
   731  04EA                     _CHS0	set	1258
   732  04EB                     _CHS1	set	1259
   733  04EC                     _CHS2	set	1260
   734  04ED                     _CHS3	set	1261
   735  04EE                     _CHS4	set	1262
   736  04E9                     _GO_nDONE	set	1257
   737  04CB                     _IRCF0	set	1227
   738  04CC                     _IRCF1	set	1228
   739  04CD                     _IRCF2	set	1229
   740  04CE                     _IRCF3	set	1230
   741  048D                     _RCIE	set	1165
   742  04C8                     _SCS0	set	1224
   743  04C9                     _SCS1	set	1225
   744  04CF                     _SPLLEN	set	1231
   745  0488                     _TMR1IE	set	1160
   746  0489                     _TMR2IE	set	1161
   747  04AF                     _nWPUEN	set	1199
   748  0897                     _C1INTP	set	2199
   749  0890                     _C1NCH0	set	2192
   750  0891                     _C1NCH1	set	2193
   751  088F                     _C1ON	set	2191
   752  0894                     _C1PCH0	set	2196
   753  0895                     _C1PCH1	set	2197
   754  08A7                     _C2INTP	set	2215
   755  08A0                     _C2NCH0	set	2208
   756  08A1                     _C2NCH1	set	2209
   757  089F                     _C2ON	set	2207
   758  08A4                     _C2PCH0	set	2212
   759  08A5                     _C2PCH1	set	2213
   760  08E8                     _CCP1SEL	set	2280
   761  08BA                     _CDAFVR0	set	2234
   762  08BB                     _CDAFVR1	set	2235
   763  08BF                     _FVREN	set	2239
   764  08BE                     _FVRRDY	set	2238
   765  08EF                     _RXDTSEL	set	2287
   766  08F0                     _TXCKSEL	set	2288
   767  018C                     _ANSELA	set	396
   768  018D                     _ANSELB	set	397
   769  0199                     _RCREG	set	409
   770  019B                     _SPBRG	set	411
   771  019A                     _TXREG	set	410
   772  0CFB                     _BRG16	set	3323
   773  0CF2                     _BRGH	set	3314
   774  0CEC                     _CREN	set	3308
   775  0CEF                     _SPEN	set	3311
   776  0CF4                     _SYNC	set	3316
   777  0CF1                     _TRMT	set	3313
   778  0CF5                     _TXEN	set	3317
   779  020D                     _WPUB	set	525
   780  0293                     _CCP1CON	set	659
   781  0291                     _CCPR1L	set	657
   782  14F0                     _C1TSEL0	set	5360
   783  14F1                     _C1TSEL1	set	5361
   784  149C                     _DC1B0	set	5276
   785  149D                     _DC1B1	set	5277
   786  20B8                     _T4CKPS0	set	8376
   787  20B9                     _T4CKPS1	set	8377
   788  20BA                     _TMR4ON	set	8378
   789  019E                     STR_1:	
   790  019E  3468               	retlw	104	;'h'
   791  019F  3465               	retlw	101	;'e'
   792  01A0  346C               	retlw	108	;'l'
   793  01A1  346C               	retlw	108	;'l'
   794  01A2  346F               	retlw	111	;'o'
   795  01A3  3400               	retlw	0
   796  01A4                     STR_2:	
   797  01A4  3465               	retlw	101	;'e'
   798  01A5  3472               	retlw	114	;'r'
   799  01A6  3472               	retlw	114	;'r'
   800  01A7  346F               	retlw	111	;'o'
   801  01A8  3472               	retlw	114	;'r'
   802  01A9  3400               	retlw	0
   803                           
   804                           ; #config settings
   805  0000                     
   806                           	psect	cinit
   807  0079                     start_initialization:	
   808  0079                     __initialization:	
   809                           
   810                           ; Clear objects allocated to BANK0
   811  0079  01A0               	clrf	__pbssBANK0& (0+127)
   812  007A  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   813  007B  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   814  007C  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   815  007D  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   816  007E  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   817  007F  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   818  0080  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   819  0081  01A8               	clrf	(__pbssBANK0+8)& (0+127)
   820  0082  01A9               	clrf	(__pbssBANK0+9)& (0+127)
   821  0083  01AA               	clrf	(__pbssBANK0+10)& (0+127)
   822  0084  01AB               	clrf	(__pbssBANK0+11)& (0+127)
   823                           
   824                           ; Initialize objects allocated to BANK0
   825  0085  30E5               	movlw	low __pidataBANK0
   826  0086  0084               	movwf	4
   827  0087  3081               	movlw	(high __pidataBANK0)| (0+128)
   828  0088  0085               	movwf	5
   829  0089  3037               	movlw	low __pdataBANK0
   830  008A  0086               	movwf	6
   831  008B  3000               	movlw	high __pdataBANK0
   832  008C  0087               	movwf	7
   833  008D  3009               	movlw	9
   834  008E  3181  21F6         	fcall	init_ram
   835  0090                     end_of_initialization:	
   836                           ;End of C runtime variable initialization code
   837                           
   838  0090                     __end_of__initialization:	
   839  0090  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   840  0091  0020               	movlb	0
   841  0092  3180  28F2         	ljmp	_main	;jump to C main() function
   842                           
   843                           	psect	bssBANK0
   844  0020                     __pbssBANK0:	
   845  0020                     _receive_buff:	
   846  0020                     	ds	8
   847  0028                     _led_rest:	
   848  0028                     	ds	2
   849  002A                     _buffpos:	
   850  002A                     	ds	1
   851  002B                     _readpos:	
   852  002B                     	ds	1
   853                           
   854                           	psect	dataBANK0
   855  0037                     __pdataBANK0:	
   856  0037                     _curr_time:	
   857  0037                     	ds	3
   858  003A                     _delta_t:	
   859  003A                     	ds	3
   860  003D                     _volt_time:	
   861  003D                     	ds	3
   862                           
   863                           	psect	inittext
   864  01F6                     init_ram:	
   865  01F6  00FE               	movwf	126
   866  01F7                     initloop:	
   867  01F7  0012               	moviw fsr0++
   868  01F8  001E               	movwi fsr1++
   869  01F9  0BFE               	decfsz	126,f
   870  01FA  29F7               	goto	initloop
   871  01FB  3400               	retlw	0
   872                           
   873                           	psect	cstackCOMMON
   874  0070                     __pcstackCOMMON:	
   875  0070                     ?_charAvailable:	
   876  0070                     ?_readNext:	
   877                           ; 1 bytes @ 0x0
   878                           
   879  0070                     ?_initPins:	
   880                           ; 1 bytes @ 0x0
   881                           
   882  0070                     ?_initBT:	
   883                           ; 1 bytes @ 0x0
   884                           
   885  0070                     ?_deltaT:	
   886                           ; 1 bytes @ 0x0
   887                           
   888  0070                     ?_ISR:	
   889                           ; 1 bytes @ 0x0
   890                           
   891  0070                     ?_main:	
   892                           ; 1 bytes @ 0x0
   893                           
   894  0070                     ?_sendChar:	
   895                           ; 1 bytes @ 0x0
   896                           
   897  0070                     deltaT@tm_low:	
   898                           ; 1 bytes @ 0x0
   899                           
   900                           
   901                           ; 3 bytes @ 0x0
   902  0070                     	ds	3
   903  0073                     deltaT@tm_high:	
   904                           
   905                           ; 3 bytes @ 0x3
   906  0073                     	ds	3
   907  0076                     ??_deltaT:	
   908                           
   909                           ; 1 bytes @ 0x6
   910  0076                     	ds	6
   911  007C                     ??_ISR:	
   912                           
   913                           ; 1 bytes @ 0xC
   914  007C                     	ds	2
   915                           
   916                           	psect	cstackBANK0
   917  002C                     __pcstackBANK0:	
   918  002C                     ??_charAvailable:	
   919  002C                     ??_readNext:	
   920                           ; 1 bytes @ 0x0
   921                           
   922  002C                     ??_initPins:	
   923                           ; 1 bytes @ 0x0
   924                           
   925  002C                     ??_initBT:	
   926                           ; 1 bytes @ 0x0
   927                           
   928  002C                     ??_sendChar:	
   929                           ; 1 bytes @ 0x0
   930                           
   931  002C                     sendChar@c:	
   932                           ; 1 bytes @ 0x0
   933                           
   934                           
   935                           ; 1 bytes @ 0x0
   936  002C                     	ds	1
   937  002D                     ?_sendString:	
   938  002D                     ?_sendInt16:	
   939                           ; 1 bytes @ 0x1
   940                           
   941  002D                     readNext@ret:	
   942                           ; 1 bytes @ 0x1
   943                           
   944  002D                     sendInt16@i:	
   945                           ; 1 bytes @ 0x1
   946                           
   947  002D                     sendString@val:	
   948                           ; 2 bytes @ 0x1
   949                           
   950                           
   951                           ; 2 bytes @ 0x1
   952  002D                     	ds	2
   953  002F                     ??_sendString:	
   954  002F                     ??_sendInt16:	
   955                           ; 1 bytes @ 0x3
   956                           
   957                           
   958                           ; 1 bytes @ 0x3
   959  002F                     	ds	1
   960  0030                     ??_main:	
   961                           
   962                           ; 1 bytes @ 0x4
   963  0030                     	ds	3
   964  0033                     main@f:	
   965                           
   966                           ; 3 bytes @ 0x7
   967  0033                     	ds	3
   968  0036                     main@cmd:	
   969                           
   970                           ; 1 bytes @ 0xA
   971  0036                     	ds	1
   972                           
   973                           	psect	maintext
   974  00F2                     __pmaintext:	
   975 ;;
   976 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   977 ;;
   978 ;; *************** function _main *****************
   979 ;; Defined at:
   980 ;;		line 589 in file "powerspy.c"
   981 ;; Parameters:    Size  Location     Type
   982 ;;		None
   983 ;; Auto vars:     Size  Location     Type
   984 ;;  buff           10    0        unsigned char [10]
   985 ;;  f               3    7[BANK0 ] float 
   986 ;;  f_              2    0        PTR unsigned um
   987 ;;  cmd             1   10[BANK0 ] unsigned char 
   988 ;; Return value:  Size  Location     Type
   989 ;;                  1    wreg      void 
   990 ;; Registers used:
   991 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   992 ;; Tracked objects:
   993 ;;		On entry : B1F/0
   994 ;;		On exit  : 0/0
   995 ;;		Unchanged: 0/0
   996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   997 ;;      Params:         0       0       0       0       0       0
   998 ;;      Locals:         0       4       0       0       0       0
   999 ;;      Temps:          0       3       0       0       0       0
  1000 ;;      Totals:         0       7       0       0       0       0
  1001 ;;Total ram usage:        7 bytes
  1002 ;; Hardware stack levels required when called:    4
  1003 ;; This function calls:
  1004 ;;		_charAvailable
  1005 ;;		_initBT
  1006 ;;		_initPins
  1007 ;;		_readNext
  1008 ;;		_sendInt16
  1009 ;;		_sendString
  1010 ;; This function is called by:
  1011 ;;		Startup code after reset
  1012 ;; This function uses a non-reentrant model
  1013 ;;
  1014                           
  1015                           
  1016                           ;psect for function _main
  1017  00F2                     _main:	
  1018                           
  1019                           ;powerspy.c: 590: char cmd;
  1020                           ;powerspy.c: 591: float f = 1.1111;
  1021                           
  1022                           ;incstack = 0
  1023                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1024  00F2  3039               	movlw	57
  1025  00F3  0020               	movlb	0	; select bank0
  1026  00F4  00B3               	movwf	main@f
  1027  00F5  308E               	movlw	142
  1028  00F6  00B4               	movwf	main@f+1
  1029  00F7  303F               	movlw	63
  1030  00F8  00B5               	movwf	main@f+2
  1031                           
  1032                           ;powerspy.c: 592: uint24_t *f_;
  1033                           ;powerspy.c: 593: char buff[10];
  1034                           ;powerspy.c: 594: (GIE = 0);
  1035  00F9  138B               	bcf	11,7	;volatile
  1036                           
  1037                           ;powerspy.c: 595: initPins();
  1038  00FA  3181  2160  3180   	fcall	_initPins
  1039                           
  1040                           ;powerspy.c: 603: initBT();
  1041  00FD  3181  217D  3180   	fcall	_initBT
  1042                           
  1043                           ;powerspy.c: 605: PEIE = 1;
  1044  0100  170B               	bsf	11,6	;volatile
  1045                           
  1046                           ;powerspy.c: 606: GIE = 1;
  1047  0101  178B               	bsf	11,7	;volatile
  1048  0102                     l1843:	
  1049                           ;powerspy.c: 607: while (1) {
  1050                           
  1051                           
  1052                           ;powerspy.c: 608: sendString("hello");
  1053  0102  309E               	movlw	low (STR_1| (0+32768))
  1054  0103  0020               	movlb	0	; select bank0
  1055  0104  00AD               	movwf	sendString@val
  1056  0105  3081               	movlw	high (STR_1| (0+32768))
  1057  0106  00AE               	movwf	sendString@val+1
  1058  0107  3181  213D  3180   	fcall	_sendString
  1059                           
  1060                           ;powerspy.c: 609: if (charAvailable()) {
  1061  010A  3181  21D3  3180   	fcall	_charAvailable
  1062  010D  3A00               	xorlw	0
  1063  010E  1903               	skipnz
  1064  010F  292F               	goto	l1857
  1065                           
  1066                           ;powerspy.c: 610: cmd = readNext();
  1067  0110  3181  21C0  3180   	fcall	_readNext
  1068  0113  0020               	movlb	0	; select bank0
  1069  0114  00B0               	movwf	??_main
  1070  0115  0830               	movf	??_main,w
  1071  0116  00B6               	movwf	main@cmd
  1072                           
  1073                           ;powerspy.c: 611: switch (cmd) {
  1074  0117  2929               	goto	l1855
  1075  0118                     l1849:	
  1076                           ;powerspy.c: 612: case 'g':
  1077                           
  1078                           
  1079                           ;powerspy.c: 619: sendInt16(0xffff);
  1080  0118  30FF               	movlw	255
  1081  0119  00AD               	movwf	sendInt16@i
  1082  011A  30FF               	movlw	255
  1083  011B  00AE               	movwf	sendInt16@i+1
  1084  011C  3181  21AA  3180   	fcall	_sendInt16
  1085                           
  1086                           ;powerspy.c: 620: break;
  1087  011F  292F               	goto	l1857
  1088  0120                     l1851:	
  1089                           ;powerspy.c: 621: default:
  1090                           
  1091                           
  1092                           ;powerspy.c: 622: sendString("error");
  1093  0120  30A4               	movlw	low (STR_2| (0+32768))
  1094  0121  0020               	movlb	0	; select bank0
  1095  0122  00AD               	movwf	sendString@val
  1096  0123  3081               	movlw	high (STR_2| (0+32768))
  1097  0124  00AE               	movwf	sendString@val+1
  1098  0125  3181  213D  3180   	fcall	_sendString
  1099                           
  1100                           ;powerspy.c: 624: }
  1101                           
  1102                           ;powerspy.c: 623: break;
  1103  0128  292F               	goto	l1857
  1104  0129                     l1855:	
  1105  0129  0020               	movlb	0	; select bank0
  1106  012A  0836               	movf	main@cmd,w
  1107                           
  1108                           ; Switch size 1, requested type "space"
  1109                           ; Number of cases is 1, Range of values is 103 to 103
  1110                           ; switch strategies available:
  1111                           ; Name         Instructions Cycles
  1112                           ; simple_byte            4     3 (average)
  1113                           ; direct_byte           11     9 (fixed)
  1114                           ; jumptable            263     9 (fixed)
  1115                           ;	Chosen strategy is simple_byte
  1116  012B  3A67               	xorlw	103	; case 103
  1117  012C  1903               	skipnz
  1118  012D  2918               	goto	l1849
  1119  012E  2920               	goto	l1851
  1120  012F                     l1857:	
  1121                           
  1122                           ;powerspy.c: 625: }
  1123                           ;powerspy.c: 626: _delay((unsigned long)((1000)*(32000000/4000.0)));
  1124  012F  3029               	movlw	41
  1125  0130  0020               	movlb	0	; select bank0
  1126  0131  00B2               	movwf	??_main+2
  1127  0132  3096               	movlw	150
  1128  0133  00B1               	movwf	??_main+1
  1129  0134  30A6               	movlw	166
  1130  0135  00B0               	movwf	??_main
  1131  0136                     u1377:	
  1132  0136  0BB0               	decfsz	??_main,f
  1133  0137  2936               	goto	u1377
  1134  0138  0BB1               	decfsz	??_main+1,f
  1135  0139  2936               	goto	u1377
  1136  013A  0BB2               	decfsz	??_main+2,f
  1137  013B  2936               	goto	u1377
  1138  013C  2902               	goto	l1843
  1139  013D                     __end_of_main:	
  1140                           
  1141                           	psect	text1
  1142  013D                     __ptext1:	
  1143 ;; *************** function _sendString *****************
  1144 ;; Defined at:
  1145 ;;		line 79 in file "message.c"
  1146 ;; Parameters:    Size  Location     Type
  1147 ;;  val             2    1[BANK0 ] PTR unsigned char 
  1148 ;;		 -> STR_2(6), STR_1(6), 
  1149 ;; Auto vars:     Size  Location     Type
  1150 ;;		None
  1151 ;; Return value:  Size  Location     Type
  1152 ;;                  1    wreg      void 
  1153 ;; Registers used:
  1154 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1155 ;; Tracked objects:
  1156 ;;		On entry : 0/0
  1157 ;;		On exit  : 0/0
  1158 ;;		Unchanged: 0/0
  1159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1160 ;;      Params:         0       2       0       0       0       0
  1161 ;;      Locals:         0       0       0       0       0       0
  1162 ;;      Temps:          0       1       0       0       0       0
  1163 ;;      Totals:         0       3       0       0       0       0
  1164 ;;Total ram usage:        3 bytes
  1165 ;; Hardware stack levels used:    1
  1166 ;; Hardware stack levels required when called:    3
  1167 ;; This function calls:
  1168 ;;		_sendChar
  1169 ;; This function is called by:
  1170 ;;		_main
  1171 ;; This function uses a non-reentrant model
  1172 ;;
  1173                           
  1174                           
  1175                           ;psect for function _sendString
  1176  013D                     _sendString:	
  1177                           
  1178                           ;message.c: 80: sendChar(2);
  1179                           
  1180                           ;incstack = 0
  1181                           ; Regs used in _sendString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1182  013D  3002               	movlw	2
  1183  013E  3181  21EE  3181   	fcall	_sendChar
  1184                           
  1185                           ;message.c: 81: sendChar('1');
  1186  0141  3031               	movlw	49
  1187  0142  3181  21EE  3181   	fcall	_sendChar
  1188  0145                     l1725:	
  1189                           ;message.c: 82: while (*val) {
  1190                           
  1191  0145  0020               	movlb	0	; select bank0
  1192  0146  082D               	movf	sendString@val,w
  1193  0147  0084               	movwf	4
  1194  0148  082E               	movf	sendString@val+1,w
  1195  0149  0085               	movwf	5
  1196  014A  0012               	moviw fsr0++
  1197  014B  1903               	btfsc	3,2
  1198  014C  295C               	goto	l1727
  1199                           
  1200                           ;message.c: 83: sendChar(*val);
  1201  014D  0020               	movlb	0	; select bank0
  1202  014E  082D               	movf	sendString@val,w
  1203  014F  0084               	movwf	4
  1204  0150  082E               	movf	sendString@val+1,w
  1205  0151  0085               	movwf	5
  1206  0152  0800               	movf	0,w	;code access
  1207  0153  3181  21EE  3181   	fcall	_sendChar
  1208                           
  1209                           ;message.c: 84: val++;
  1210  0156  3001               	movlw	1
  1211  0157  0020               	movlb	0	; select bank0
  1212  0158  07AD               	addwf	sendString@val,f
  1213  0159  3000               	movlw	0
  1214  015A  3DAE               	addwfc	sendString@val+1,f
  1215  015B  2945               	goto	l1725
  1216  015C                     l1727:	
  1217                           
  1218                           ;message.c: 85: }
  1219                           ;message.c: 86: sendChar(3);
  1220  015C  3003               	movlw	3
  1221  015D  3181  21EE         	fcall	_sendChar
  1222  015F  0008               	return
  1223  0160                     __end_of_sendString:	
  1224                           
  1225                           	psect	text2
  1226  01AA                     __ptext2:	
  1227 ;; *************** function _sendInt16 *****************
  1228 ;; Defined at:
  1229 ;;		line 42 in file "message.c"
  1230 ;; Parameters:    Size  Location     Type
  1231 ;;  i               2    1[BANK0 ] short 
  1232 ;; Auto vars:     Size  Location     Type
  1233 ;;		None
  1234 ;; Return value:  Size  Location     Type
  1235 ;;                  1    wreg      void 
  1236 ;; Registers used:
  1237 ;;		wreg, status,2, status,0, pclath, cstack
  1238 ;; Tracked objects:
  1239 ;;		On entry : 0/0
  1240 ;;		On exit  : 0/0
  1241 ;;		Unchanged: 0/0
  1242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1243 ;;      Params:         0       2       0       0       0       0
  1244 ;;      Locals:         0       0       0       0       0       0
  1245 ;;      Temps:          0       0       0       0       0       0
  1246 ;;      Totals:         0       2       0       0       0       0
  1247 ;;Total ram usage:        2 bytes
  1248 ;; Hardware stack levels used:    1
  1249 ;; Hardware stack levels required when called:    3
  1250 ;; This function calls:
  1251 ;;		_sendChar
  1252 ;; This function is called by:
  1253 ;;		_main
  1254 ;; This function uses a non-reentrant model
  1255 ;;
  1256                           
  1257                           
  1258                           ;psect for function _sendInt16
  1259  01AA                     _sendInt16:	
  1260                           
  1261                           ;message.c: 43: sendChar(2);
  1262                           
  1263                           ;incstack = 0
  1264                           ; Regs used in _sendInt16: [wreg+status,2+status,0+pclath+cstack]
  1265  01AA  3002               	movlw	2
  1266  01AB  3181  21EE  3181   	fcall	_sendChar
  1267                           
  1268                           ;message.c: 44: sendChar('3');
  1269  01AE  3033               	movlw	51
  1270  01AF  3181  21EE  3181   	fcall	_sendChar
  1271                           
  1272                           ;message.c: 45: sendChar((char) (i >> 8 & 0xff));
  1273  01B2  0020               	movlb	0	; select bank0
  1274  01B3  082E               	movf	sendInt16@i+1,w
  1275  01B4  3181  21EE  3181   	fcall	_sendChar
  1276                           
  1277                           ;message.c: 46: sendChar((char) (i & 0xff));
  1278  01B7  0020               	movlb	0	; select bank0
  1279  01B8  082D               	movf	sendInt16@i,w
  1280  01B9  3181  21EE  3181   	fcall	_sendChar
  1281                           
  1282                           ;message.c: 47: sendChar(3);
  1283  01BC  3003               	movlw	3
  1284  01BD  3181  21EE         	fcall	_sendChar
  1285  01BF  0008               	return
  1286  01C0                     __end_of_sendInt16:	
  1287                           
  1288                           	psect	text3
  1289  01EE                     __ptext3:	
  1290 ;; *************** function _sendChar *****************
  1291 ;; Defined at:
  1292 ;;		line 31 in file "message.c"
  1293 ;; Parameters:    Size  Location     Type
  1294 ;;  c               1    wreg     unsigned char 
  1295 ;; Auto vars:     Size  Location     Type
  1296 ;;  c               1    0[BANK0 ] unsigned char 
  1297 ;; Return value:  Size  Location     Type
  1298 ;;                  1    wreg      void 
  1299 ;; Registers used:
  1300 ;;		wreg
  1301 ;; Tracked objects:
  1302 ;;		On entry : 0/0
  1303 ;;		On exit  : 0/0
  1304 ;;		Unchanged: 0/0
  1305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1306 ;;      Params:         0       0       0       0       0       0
  1307 ;;      Locals:         0       1       0       0       0       0
  1308 ;;      Temps:          0       0       0       0       0       0
  1309 ;;      Totals:         0       1       0       0       0       0
  1310 ;;Total ram usage:        1 bytes
  1311 ;; Hardware stack levels used:    1
  1312 ;; Hardware stack levels required when called:    2
  1313 ;; This function calls:
  1314 ;;		Nothing
  1315 ;; This function is called by:
  1316 ;;		_sendInt16
  1317 ;;		_sendString
  1318 ;;		_sendInt8
  1319 ;;		_sendInt24
  1320 ;;		_sendInt32
  1321 ;;		_sendFloat
  1322 ;; This function uses a non-reentrant model
  1323 ;;
  1324                           
  1325                           
  1326                           ;psect for function _sendChar
  1327  01EE                     _sendChar:	
  1328                           
  1329                           ;incstack = 0
  1330                           ; Regs used in _sendChar: [wreg]
  1331                           ;sendChar@c stored from wreg
  1332  01EE  0020               	movlb	0	; select bank0
  1333  01EF  00AC               	movwf	sendChar@c
  1334                           
  1335                           ;message.c: 32: TXREG = c;
  1336  01F0  082C               	movf	sendChar@c,w
  1337  01F1  0023               	movlb	3	; select bank3
  1338  01F2  009A               	movwf	26	;volatile
  1339  01F3                     l473:	
  1340                           ;message.c: 33: while (!TRMT);
  1341                           
  1342  01F3  189E               	btfsc	30,1	;volatile
  1343  01F4  0008               	return
  1344  01F5  29F3               	goto	l473
  1345  01F6                     __end_of_sendChar:	
  1346                           
  1347                           	psect	text4
  1348  01C0                     __ptext4:	
  1349 ;; *************** function _readNext *****************
  1350 ;; Defined at:
  1351 ;;		line 24 in file "message.c"
  1352 ;; Parameters:    Size  Location     Type
  1353 ;;		None
  1354 ;; Auto vars:     Size  Location     Type
  1355 ;;  ret             1    1[BANK0 ] unsigned char 
  1356 ;; Return value:  Size  Location     Type
  1357 ;;                  1    wreg      unsigned char 
  1358 ;; Registers used:
  1359 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1360 ;; Tracked objects:
  1361 ;;		On entry : 0/0
  1362 ;;		On exit  : 0/0
  1363 ;;		Unchanged: 0/0
  1364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1365 ;;      Params:         0       0       0       0       0       0
  1366 ;;      Locals:         0       1       0       0       0       0
  1367 ;;      Temps:          0       1       0       0       0       0
  1368 ;;      Totals:         0       2       0       0       0       0
  1369 ;;Total ram usage:        2 bytes
  1370 ;; Hardware stack levels used:    1
  1371 ;; Hardware stack levels required when called:    2
  1372 ;; This function calls:
  1373 ;;		Nothing
  1374 ;; This function is called by:
  1375 ;;		_main
  1376 ;; This function uses a non-reentrant model
  1377 ;;
  1378                           
  1379                           
  1380                           ;psect for function _readNext
  1381  01C0                     _readNext:	
  1382                           
  1383                           ;message.c: 25: char ret = receive_buff[readpos];
  1384                           
  1385                           ;incstack = 0
  1386                           ; Regs used in _readNext: [wreg+fsr1l+fsr1h+status,2+status,0]
  1387  01C0  0020               	movlb	0	; select bank0
  1388  01C1  082B               	movf	_readpos,w
  1389  01C2  3E20               	addlw	(low (_receive_buff| 0))& (0+255)
  1390  01C3  0086               	movwf	6
  1391  01C4  0187               	clrf	7
  1392  01C5  0801               	movf	1,w
  1393  01C6  00AC               	movwf	??_readNext
  1394  01C7  082C               	movf	??_readNext,w
  1395  01C8  00AD               	movwf	readNext@ret
  1396                           
  1397                           ;message.c: 26: readpos++;
  1398  01C9  3001               	movlw	1
  1399  01CA  00AC               	movwf	??_readNext
  1400  01CB  082C               	movf	??_readNext,w
  1401  01CC  07AB               	addwf	_readpos,f
  1402                           
  1403                           ;message.c: 27: if (readpos == 8) readpos = 0;
  1404  01CD  3008               	movlw	8
  1405  01CE  062B               	xorwf	_readpos,w
  1406  01CF  1903               	btfsc	3,2
  1407  01D0  01AB               	clrf	_readpos
  1408                           
  1409                           ;message.c: 28: return ret;
  1410  01D1  082D               	movf	readNext@ret,w
  1411  01D2  0008               	return
  1412  01D3                     __end_of_readNext:	
  1413                           
  1414                           	psect	text5
  1415  0160                     __ptext5:	
  1416 ;; *************** function _initPins *****************
  1417 ;; Defined at:
  1418 ;;		line 50 in file "powerspy.c"
  1419 ;; Parameters:    Size  Location     Type
  1420 ;;		None
  1421 ;; Auto vars:     Size  Location     Type
  1422 ;;		None
  1423 ;; Return value:  Size  Location     Type
  1424 ;;                  1    wreg      void 
  1425 ;; Registers used:
  1426 ;;		wreg, status,2
  1427 ;; Tracked objects:
  1428 ;;		On entry : 0/0
  1429 ;;		On exit  : 0/0
  1430 ;;		Unchanged: 0/0
  1431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1432 ;;      Params:         0       0       0       0       0       0
  1433 ;;      Locals:         0       0       0       0       0       0
  1434 ;;      Temps:          0       0       0       0       0       0
  1435 ;;      Totals:         0       0       0       0       0       0
  1436 ;;Total ram usage:        0 bytes
  1437 ;; Hardware stack levels used:    1
  1438 ;; Hardware stack levels required when called:    2
  1439 ;; This function calls:
  1440 ;;		Nothing
  1441 ;; This function is called by:
  1442 ;;		_main
  1443 ;; This function uses a non-reentrant model
  1444 ;;
  1445                           
  1446                           
  1447                           ;psect for function _initPins
  1448  0160                     _initPins:	
  1449                           
  1450                           ;powerspy.c: 51: PORTA = 0b00000000;
  1451                           
  1452                           ;incstack = 0
  1453                           ; Regs used in _initPins: [wreg+status,2]
  1454  0160  0020               	movlb	0	; select bank0
  1455  0161  018C               	clrf	12	;volatile
  1456                           
  1457                           ;powerspy.c: 52: ANSELA = 0b00000111;
  1458  0162  3007               	movlw	7
  1459  0163  0023               	movlb	3	; select bank3
  1460  0164  008C               	movwf	12	;volatile
  1461                           
  1462                           ;powerspy.c: 53: TRISA = 0b00000111;
  1463  0165  3007               	movlw	7
  1464  0166  0021               	movlb	1	; select bank1
  1465  0167  008C               	movwf	12	;volatile
  1466                           
  1467                           ;powerspy.c: 55: PORTB = 0b00000000;
  1468  0168  0020               	movlb	0	; select bank0
  1469  0169  018D               	clrf	13	;volatile
  1470                           
  1471                           ;powerspy.c: 56: ANSELB = 0b00110000;
  1472  016A  3030               	movlw	48
  1473  016B  0023               	movlb	3	; select bank3
  1474  016C  008D               	movwf	13	;volatile
  1475                           
  1476                           ;powerspy.c: 57: TRISB = 0b00111010;
  1477  016D  303A               	movlw	58
  1478  016E  0021               	movlb	1	; select bank1
  1479  016F  008D               	movwf	13	;volatile
  1480                           
  1481                           ;powerspy.c: 59: nWPUEN = 0;
  1482  0170  1395               	bcf	21,7	;volatile
  1483                           
  1484                           ;powerspy.c: 60: WPUB = 0b00001000;
  1485  0171  3008               	movlw	8
  1486  0172  0024               	movlb	4	; select bank4
  1487  0173  008D               	movwf	13	;volatile
  1488                           
  1489                           ;powerspy.c: 64: SCS0 = 0;
  1490  0174  0021               	movlb	1	; select bank1
  1491  0175  1019               	bcf	25,0	;volatile
  1492                           
  1493                           ;powerspy.c: 65: SCS1 = 0;
  1494  0176  1099               	bcf	25,1	;volatile
  1495                           
  1496                           ;powerspy.c: 67: IRCF0 = 0;
  1497  0177  1199               	bcf	25,3	;volatile
  1498                           
  1499                           ;powerspy.c: 68: IRCF1 = 1;
  1500  0178  1619               	bsf	25,4	;volatile
  1501                           
  1502                           ;powerspy.c: 69: IRCF2 = 1;
  1503  0179  1699               	bsf	25,5	;volatile
  1504                           
  1505                           ;powerspy.c: 70: IRCF3 = 1;
  1506  017A  1719               	bsf	25,6	;volatile
  1507                           
  1508                           ;powerspy.c: 72: SPLLEN = 1;
  1509  017B  1799               	bsf	25,7	;volatile
  1510  017C  0008               	return
  1511  017D                     __end_of_initPins:	
  1512                           
  1513                           	psect	text6
  1514  017D                     __ptext6:	
  1515 ;; *************** function _initBT *****************
  1516 ;; Defined at:
  1517 ;;		line 316 in file "powerspy.c"
  1518 ;; Parameters:    Size  Location     Type
  1519 ;;		None
  1520 ;; Auto vars:     Size  Location     Type
  1521 ;;		None
  1522 ;; Return value:  Size  Location     Type
  1523 ;;                  1    wreg      void 
  1524 ;; Registers used:
  1525 ;;		wreg
  1526 ;; Tracked objects:
  1527 ;;		On entry : 0/0
  1528 ;;		On exit  : 0/0
  1529 ;;		Unchanged: 0/0
  1530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1531 ;;      Params:         0       0       0       0       0       0
  1532 ;;      Locals:         0       0       0       0       0       0
  1533 ;;      Temps:          0       0       0       0       0       0
  1534 ;;      Totals:         0       0       0       0       0       0
  1535 ;;Total ram usage:        0 bytes
  1536 ;; Hardware stack levels used:    1
  1537 ;; Hardware stack levels required when called:    2
  1538 ;; This function calls:
  1539 ;;		Nothing
  1540 ;; This function is called by:
  1541 ;;		_main
  1542 ;; This function uses a non-reentrant model
  1543 ;;
  1544                           
  1545                           
  1546                           ;psect for function _initBT
  1547  017D                     _initBT:	
  1548                           
  1549                           ;powerspy.c: 319: RXDTSEL = 0;
  1550                           
  1551                           ;incstack = 0
  1552                           ; Regs used in _initBT: [wreg]
  1553  017D  0022               	movlb	2	; select bank2
  1554  017E  139D               	bcf	29,7	;volatile
  1555                           
  1556                           ;powerspy.c: 320: TXCKSEL = 0;
  1557  017F  101E               	bcf	30,0	;volatile
  1558                           
  1559                           ;powerspy.c: 323: TXEN = 1;
  1560  0180  0023               	movlb	3	; select bank3
  1561  0181  169E               	bsf	30,5	;volatile
  1562                           
  1563                           ;powerspy.c: 324: SYNC = 0;
  1564  0182  121E               	bcf	30,4	;volatile
  1565                           
  1566                           ;powerspy.c: 325: SPEN = 1;
  1567  0183  179D               	bsf	29,7	;volatile
  1568                           
  1569                           ;powerspy.c: 328: CREN = 1;
  1570  0184  161D               	bsf	29,4	;volatile
  1571                           
  1572                           ;powerspy.c: 329: SYNC = 0;
  1573  0185  121E               	bcf	30,4	;volatile
  1574                           
  1575                           ;powerspy.c: 330: SPEN = 1;
  1576  0186  179D               	bsf	29,7	;volatile
  1577                           
  1578                           ;powerspy.c: 333: BRGH = 0;
  1579  0187  111E               	bcf	30,2	;volatile
  1580                           
  1581                           ;powerspy.c: 334: BRG16 = 0;
  1582  0188  119F               	bcf	31,3	;volatile
  1583                           
  1584                           ;powerspy.c: 335: SPBRG = 51;
  1585  0189  3033               	movlw	51
  1586  018A  009B               	movwf	27	;volatile
  1587  018B                     l1675:	
  1588                           ;powerspy.c: 337: while (RCIF) {
  1589                           
  1590  018B  0020               	movlb	0	; select bank0
  1591  018C  1E91               	btfss	17,5	;volatile
  1592  018D  2991               	goto	l258
  1593                           
  1594                           ;powerspy.c: 338: RCREG;
  1595  018E  0023               	movlb	3	; select bank3
  1596  018F  0819               	movf	25,w	;volatile
  1597  0190  298B               	goto	l1675
  1598  0191                     l258:	
  1599                           
  1600                           ;powerspy.c: 339: }
  1601                           ;powerspy.c: 341: RCIE = 1;
  1602  0191  0021               	movlb	1	; select bank1
  1603  0192  1691               	bsf	17,5	;volatile
  1604  0193  0008               	return
  1605  0194                     __end_of_initBT:	
  1606                           
  1607                           	psect	text7
  1608  01D3                     __ptext7:	
  1609 ;; *************** function _charAvailable *****************
  1610 ;; Defined at:
  1611 ;;		line 17 in file "message.c"
  1612 ;; Parameters:    Size  Location     Type
  1613 ;;		None
  1614 ;; Auto vars:     Size  Location     Type
  1615 ;;		None
  1616 ;; Return value:  Size  Location     Type
  1617 ;;                  1    wreg      char 
  1618 ;; Registers used:
  1619 ;;		wreg, status,2, status,0
  1620 ;; Tracked objects:
  1621 ;;		On entry : 0/0
  1622 ;;		On exit  : 0/0
  1623 ;;		Unchanged: 0/0
  1624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1625 ;;      Params:         0       0       0       0       0       0
  1626 ;;      Locals:         0       0       0       0       0       0
  1627 ;;      Temps:          0       1       0       0       0       0
  1628 ;;      Totals:         0       1       0       0       0       0
  1629 ;;Total ram usage:        1 bytes
  1630 ;; Hardware stack levels used:    1
  1631 ;; Hardware stack levels required when called:    2
  1632 ;; This function calls:
  1633 ;;		Nothing
  1634 ;; This function is called by:
  1635 ;;		_main
  1636 ;; This function uses a non-reentrant model
  1637 ;;
  1638                           
  1639                           
  1640                           ;psect for function _charAvailable
  1641  01D3                     _charAvailable:	
  1642                           
  1643                           ;message.c: 18: if (buffpos < readpos) {
  1644                           
  1645                           ;incstack = 0
  1646                           ; Regs used in _charAvailable: [wreg+status,2+status,0]
  1647  01D3  0020               	movlb	0	; select bank0
  1648  01D4  082A               	movf	_buffpos,w
  1649  01D5  3A80               	xorlw	128
  1650  01D6  00AC               	movwf	??_charAvailable
  1651  01D7  082B               	movf	_readpos,w
  1652  01D8  3A80               	xorlw	128
  1653  01D9  02AC               	subwf	??_charAvailable,f
  1654  01DA  1803               	skipnc
  1655  01DB  29E1               	goto	l1735
  1656                           
  1657                           ;message.c: 19: return 8 - readpos + buffpos;
  1658  01DC  032B               	decf	_readpos,w
  1659  01DD  3AFF               	xorlw	255
  1660  01DE  072A               	addwf	_buffpos,w
  1661  01DF  3E08               	addlw	8
  1662  01E0  0008               	return
  1663  01E1                     l1735:	
  1664                           
  1665                           ;message.c: 20: }
  1666                           ;message.c: 21: return buffpos - readpos;
  1667  01E1  032B               	decf	_readpos,w
  1668  01E2  3AFF               	xorlw	255
  1669  01E3  072A               	addwf	_buffpos,w
  1670  01E4  0008               	return
  1671  01E5                     __end_of_charAvailable:	
  1672                           
  1673                           	psect	intentry
  1674  0004                     __pintentry:	
  1675 ;; *************** function _ISR *****************
  1676 ;; Defined at:
  1677 ;;		line 548 in file "powerspy.c"
  1678 ;; Parameters:    Size  Location     Type
  1679 ;;		None
  1680 ;; Auto vars:     Size  Location     Type
  1681 ;;		None
  1682 ;; Return value:  Size  Location     Type
  1683 ;;                  1    wreg      void 
  1684 ;; Registers used:
  1685 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1686 ;; Tracked objects:
  1687 ;;		On entry : 0/0
  1688 ;;		On exit  : 0/0
  1689 ;;		Unchanged: 0/0
  1690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1691 ;;      Params:         0       0       0       0       0       0
  1692 ;;      Locals:         0       0       0       0       0       0
  1693 ;;      Temps:          2       0       0       0       0       0
  1694 ;;      Totals:         2       0       0       0       0       0
  1695 ;;Total ram usage:        2 bytes
  1696 ;; Hardware stack levels used:    1
  1697 ;; Hardware stack levels required when called:    1
  1698 ;; This function calls:
  1699 ;;		_deltaT
  1700 ;; This function is called by:
  1701 ;;		Interrupt level 1
  1702 ;; This function uses a non-reentrant model
  1703 ;;
  1704                           
  1705  0004                     _ISR:	
  1706                           
  1707                           ;incstack = 0
  1708                           ; Regs used in _ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1709  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  1710  0005  3180               	pagesel	$
  1711  0006  0020               	movlb	0	; select bank0
  1712  0007  087F               	movf	127,w
  1713  0008  00FD               	movwf	??_ISR+1
  1714                           
  1715                           ;powerspy.c: 550: if (RCIE && RCIF) {
  1716  0009  0021               	movlb	1	; select bank1
  1717  000A  1E91               	btfss	17,5	;volatile
  1718  000B  2822               	goto	i1l1797
  1719  000C  0020               	movlb	0	; select bank0
  1720  000D  1E91               	btfss	17,5	;volatile
  1721  000E  2822               	goto	i1l1797
  1722                           
  1723                           ;powerspy.c: 551: receive_buff[buffpos] = RCREG;
  1724  000F  0023               	movlb	3	; select bank3
  1725  0010  0819               	movf	25,w	;volatile
  1726  0011  00FC               	movwf	??_ISR
  1727  0012  0020               	movlb	0	; select bank0
  1728  0013  082A               	movf	_buffpos,w
  1729  0014  3E20               	addlw	(low (_receive_buff| 0))& (0+255)
  1730  0015  0086               	movwf	6
  1731  0016  0187               	clrf	7
  1732  0017  087C               	movf	??_ISR,w
  1733  0018  0081               	movwf	1
  1734                           
  1735                           ;powerspy.c: 552: buffpos++;
  1736  0019  3001               	movlw	1
  1737  001A  00FC               	movwf	??_ISR
  1738  001B  087C               	movf	??_ISR,w
  1739  001C  07AA               	addwf	_buffpos,f
  1740                           
  1741                           ;powerspy.c: 553: if (buffpos == 8) buffpos = 0;
  1742  001D  3008               	movlw	8
  1743  001E  062A               	xorwf	_buffpos,w
  1744  001F  1903               	btfsc	3,2
  1745  0020  01AA               	clrf	_buffpos
  1746                           
  1747                           ;powerspy.c: 554: RCIF = 0;
  1748  0021  1291               	bcf	17,5	;volatile
  1749  0022                     i1l1797:	
  1750                           
  1751                           ;powerspy.c: 555: }
  1752                           ;powerspy.c: 558: if (TMR1IE && TMR1IF) {
  1753  0022  0021               	movlb	1	; select bank1
  1754  0023  1C11               	btfss	17,0	;volatile
  1755  0024  2829               	goto	i1l340
  1756  0025  0020               	movlb	0	; select bank0
  1757  0026  1C11               	btfss	17,0	;volatile
  1758  0027  2829               	goto	i1l340
  1759                           
  1760                           ;powerspy.c: 561: TMR1IF = 0;
  1761  0028  1011               	bcf	17,0	;volatile
  1762  0029                     i1l340:	
  1763                           
  1764                           ;powerspy.c: 562: }
  1765                           ;powerspy.c: 565: if (C1IE && C1IF) {
  1766  0029  0021               	movlb	1	; select bank1
  1767  002A  1E92               	btfss	18,5	;volatile
  1768  002B  284A               	goto	i1l1813
  1769  002C  0020               	movlb	0	; select bank0
  1770  002D  1E92               	btfss	18,5	;volatile
  1771  002E  284A               	goto	i1l1813
  1772                           
  1773                           ;powerspy.c: 566: volt_time = (TMR1H<<8|TMR1L);
  1774  002F  0816               	movf	22,w	;volatile
  1775  0030  00BD               	movwf	_volt_time
  1776  0031  0817               	movf	23,w	;volatile
  1777  0032  00BE               	movwf	_volt_time+1
  1778  0033  0D89               	rlf	9,f
  1779  0034  3B89               	subwfb	9,f
  1780  0035  0989               	comf	9,f
  1781  0036  00BF               	movwf	_volt_time+2
  1782                           
  1783                           ;powerspy.c: 567: if (curr_time >= 0) deltaT(curr_time, volt_time);
  1784  0037  1BB9               	btfsc	_curr_time+2,7
  1785  0038  2848               	goto	i1l1811
  1786  0039  0837               	movf	_curr_time,w
  1787  003A  00F0               	movwf	deltaT@tm_low
  1788  003B  0838               	movf	_curr_time+1,w
  1789  003C  00F1               	movwf	deltaT@tm_low+1
  1790  003D  0839               	movf	_curr_time+2,w
  1791  003E  00F2               	movwf	deltaT@tm_low+2
  1792  003F  083D               	movf	_volt_time,w
  1793  0040  00F3               	movwf	deltaT@tm_high
  1794  0041  083E               	movf	_volt_time+1,w
  1795  0042  00F4               	movwf	deltaT@tm_high+1
  1796  0043  083F               	movf	_volt_time+2,w
  1797  0044  00F5               	movwf	deltaT@tm_high+2
  1798  0045  3180  2094  3180   	fcall	_deltaT
  1799  0048                     i1l1811:	
  1800                           
  1801                           ;powerspy.c: 569: C1IF = 0;
  1802  0048  0020               	movlb	0	; select bank0
  1803  0049  1292               	bcf	18,5	;volatile
  1804  004A                     i1l1813:	
  1805                           
  1806                           ;powerspy.c: 570: }
  1807                           ;powerspy.c: 573: if (C2IE && C2IF) {
  1808  004A  0021               	movlb	1	; select bank1
  1809  004B  1F12               	btfss	18,6	;volatile
  1810  004C  286B               	goto	i1l1825
  1811  004D  0020               	movlb	0	; select bank0
  1812  004E  1F12               	btfss	18,6	;volatile
  1813  004F  286B               	goto	i1l1825
  1814                           
  1815                           ;powerspy.c: 574: curr_time = (TMR1H<<8|TMR1L);
  1816  0050  0816               	movf	22,w	;volatile
  1817  0051  00B7               	movwf	_curr_time
  1818  0052  0817               	movf	23,w	;volatile
  1819  0053  00B8               	movwf	_curr_time+1
  1820  0054  0D89               	rlf	9,f
  1821  0055  3B89               	subwfb	9,f
  1822  0056  0989               	comf	9,f
  1823  0057  00B9               	movwf	_curr_time+2
  1824                           
  1825                           ;powerspy.c: 575: if (volt_time >= 0) deltaT(volt_time, curr_time);
  1826  0058  1BBF               	btfsc	_volt_time+2,7
  1827  0059  2869               	goto	i1l1823
  1828  005A  083D               	movf	_volt_time,w
  1829  005B  00F0               	movwf	deltaT@tm_low
  1830  005C  083E               	movf	_volt_time+1,w
  1831  005D  00F1               	movwf	deltaT@tm_low+1
  1832  005E  083F               	movf	_volt_time+2,w
  1833  005F  00F2               	movwf	deltaT@tm_low+2
  1834  0060  0837               	movf	_curr_time,w
  1835  0061  00F3               	movwf	deltaT@tm_high
  1836  0062  0838               	movf	_curr_time+1,w
  1837  0063  00F4               	movwf	deltaT@tm_high+1
  1838  0064  0839               	movf	_curr_time+2,w
  1839  0065  00F5               	movwf	deltaT@tm_high+2
  1840  0066  3180  2094  3180   	fcall	_deltaT
  1841  0069                     i1l1823:	
  1842                           
  1843                           ;powerspy.c: 577: C2IF = 0;
  1844  0069  0020               	movlb	0	; select bank0
  1845  006A  1312               	bcf	18,6	;volatile
  1846  006B                     i1l1825:	
  1847                           
  1848                           ;powerspy.c: 578: }
  1849                           ;powerspy.c: 580: if (TMR2IE && TMR2IF) {
  1850  006B  0021               	movlb	1	; select bank1
  1851  006C  1C91               	btfss	17,1	;volatile
  1852  006D  2872               	goto	i1l346
  1853  006E  0020               	movlb	0	; select bank0
  1854  006F  1C91               	btfss	17,1	;volatile
  1855  0070  2872               	goto	i1l346
  1856                           
  1857                           ;powerspy.c: 582: TMR2IF = 0;
  1858  0071  1091               	bcf	17,1	;volatile
  1859  0072                     i1l346:	
  1860  0072  087D               	movf	??_ISR+1,w
  1861  0073  0020               	movlb	0	; select bank0
  1862  0074  00FF               	movwf	127
  1863  0075  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  1864  0076  0009               	retfie
  1865  0077                     __end_of_ISR:	
  1866                           
  1867                           	psect	text9
  1868  0094                     __ptext9:	
  1869 ;; *************** function _deltaT *****************
  1870 ;; Defined at:
  1871 ;;		line 509 in file "powerspy.c"
  1872 ;; Parameters:    Size  Location     Type
  1873 ;;  tm_low          3    0[COMMON] m
  1874 ;;  tm_high         3    3[COMMON] m
  1875 ;; Auto vars:     Size  Location     Type
  1876 ;;		None
  1877 ;; Return value:  Size  Location     Type
  1878 ;;                  1    wreg      void 
  1879 ;; Registers used:
  1880 ;;		wreg, status,2, status,0
  1881 ;; Tracked objects:
  1882 ;;		On entry : 0/0
  1883 ;;		On exit  : 0/0
  1884 ;;		Unchanged: 0/0
  1885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1886 ;;      Params:         6       0       0       0       0       0
  1887 ;;      Locals:         0       0       0       0       0       0
  1888 ;;      Temps:          6       0       0       0       0       0
  1889 ;;      Totals:        12       0       0       0       0       0
  1890 ;;Total ram usage:       12 bytes
  1891 ;; Hardware stack levels used:    1
  1892 ;; This function calls:
  1893 ;;		Nothing
  1894 ;; This function is called by:
  1895 ;;		_ISR
  1896 ;; This function uses a non-reentrant model
  1897 ;;
  1898                           
  1899                           
  1900                           ;psect for function _deltaT
  1901  0094                     _deltaT:	
  1902                           
  1903                           ;powerspy.c: 510: (GIE = 0);
  1904                           
  1905                           ;incstack = 0
  1906                           ; Regs used in _deltaT: [wreg+status,2+status,0]
  1907  0094  138B               	bcf	11,7	;volatile
  1908                           
  1909                           ;powerspy.c: 511: volt_time = -1;
  1910  0095  30FF               	movlw	255
  1911  0096  0020               	movlb	0	; select bank0
  1912  0097  00BD               	movwf	_volt_time
  1913  0098  30FF               	movlw	255
  1914  0099  00BE               	movwf	_volt_time+1
  1915  009A  30FF               	movlw	255
  1916  009B  00BF               	movwf	_volt_time+2
  1917                           
  1918                           ;powerspy.c: 512: curr_time = -1;
  1919  009C  30FF               	movlw	255
  1920  009D  00B7               	movwf	_curr_time
  1921  009E  30FF               	movlw	255
  1922  009F  00B8               	movwf	_curr_time+1
  1923  00A0  30FF               	movlw	255
  1924  00A1  00B9               	movwf	_curr_time+2
  1925                           
  1926                           ;powerspy.c: 514: (GIE = 1);
  1927  00A2  178B               	bsf	11,7	;volatile
  1928                           
  1929                           ;powerspy.c: 516: if (tm_low < tm_high) {
  1930  00A3  0872               	movf	deltaT@tm_low+2,w
  1931  00A4  3A80               	xorlw	128
  1932  00A5  00F6               	movwf	??_deltaT
  1933  00A6  0875               	movf	deltaT@tm_high+2,w
  1934  00A7  3A80               	xorlw	128
  1935  00A8  0276               	subwf	??_deltaT,w
  1936  00A9  1D03               	skipz
  1937  00AA  28B1               	goto	u110_23
  1938  00AB  0874               	movf	deltaT@tm_high+1,w
  1939  00AC  0271               	subwf	deltaT@tm_low+1,w
  1940  00AD  1D03               	skipz
  1941  00AE  28B1               	goto	u110_23
  1942  00AF  0873               	movf	deltaT@tm_high,w
  1943  00B0  0270               	subwf	deltaT@tm_low,w
  1944  00B1                     u110_23:	
  1945  00B1  1803               	skipnc
  1946  00B2  28D1               	goto	i1l1717
  1947                           
  1948                           ;powerspy.c: 517: delta_t = tm_high - tm_low;
  1949  00B3  0873               	movf	deltaT@tm_high,w
  1950  00B4  00F6               	movwf	??_deltaT
  1951  00B5  0874               	movf	deltaT@tm_high+1,w
  1952  00B6  00F7               	movwf	??_deltaT+1
  1953  00B7  0875               	movf	deltaT@tm_high+2,w
  1954  00B8  00F8               	movwf	??_deltaT+2
  1955  00B9  0970               	comf	deltaT@tm_low,w
  1956  00BA  00F9               	movwf	??_deltaT+3
  1957  00BB  0971               	comf	deltaT@tm_low+1,w
  1958  00BC  00FA               	movwf	??_deltaT+4
  1959  00BD  0972               	comf	deltaT@tm_low+2,w
  1960  00BE  00FB               	movwf	??_deltaT+5
  1961  00BF  0AF9               	incf	??_deltaT+3,f
  1962  00C0  1903               	skipnz
  1963  00C1  0AFA               	incf	??_deltaT+4,f
  1964  00C2  1903               	skipnz
  1965  00C3  0AFB               	incf	??_deltaT+5,f
  1966  00C4  0879               	movf	??_deltaT+3,w
  1967  00C5  07F6               	addwf	??_deltaT,f
  1968  00C6  087A               	movf	??_deltaT+4,w
  1969  00C7  3DF7               	addwfc	??_deltaT+1,f
  1970  00C8  087B               	movf	??_deltaT+5,w
  1971  00C9  3DF8               	addwfc	??_deltaT+2,f
  1972  00CA  0876               	movf	??_deltaT,w
  1973  00CB  00BA               	movwf	_delta_t
  1974  00CC  0877               	movf	??_deltaT+1,w
  1975  00CD  00BB               	movwf	_delta_t+1
  1976  00CE  0878               	movf	??_deltaT+2,w
  1977  00CF  00BC               	movwf	_delta_t+2
  1978                           
  1979                           ;powerspy.c: 518: } else {
  1980  00D0  0008               	return
  1981  00D1                     i1l1717:	
  1982                           
  1983                           ;powerspy.c: 519: delta_t = 0x00ffff - tm_low + tm_high;
  1984  00D1  0873               	movf	deltaT@tm_high,w
  1985  00D2  00F6               	movwf	??_deltaT
  1986  00D3  0874               	movf	deltaT@tm_high+1,w
  1987  00D4  00F7               	movwf	??_deltaT+1
  1988  00D5  0875               	movf	deltaT@tm_high+2,w
  1989  00D6  00F8               	movwf	??_deltaT+2
  1990  00D7  0970               	comf	deltaT@tm_low,w
  1991  00D8  00F9               	movwf	??_deltaT+3
  1992  00D9  0971               	comf	deltaT@tm_low+1,w
  1993  00DA  00FA               	movwf	??_deltaT+4
  1994  00DB  0972               	comf	deltaT@tm_low+2,w
  1995  00DC  00FB               	movwf	??_deltaT+5
  1996  00DD  0AF9               	incf	??_deltaT+3,f
  1997  00DE  1903               	skipnz
  1998  00DF  0AFA               	incf	??_deltaT+4,f
  1999  00E0  1903               	skipnz
  2000  00E1  0AFB               	incf	??_deltaT+5,f
  2001  00E2  0879               	movf	??_deltaT+3,w
  2002  00E3  07F6               	addwf	??_deltaT,f
  2003  00E4  087A               	movf	??_deltaT+4,w
  2004  00E5  3DF7               	addwfc	??_deltaT+1,f
  2005  00E6  087B               	movf	??_deltaT+5,w
  2006  00E7  3DF8               	addwfc	??_deltaT+2,f
  2007  00E8  30FF               	movlw	255
  2008  00E9  0776               	addwf	??_deltaT,w
  2009  00EA  00BA               	movwf	_delta_t
  2010  00EB  30FF               	movlw	255
  2011  00EC  3D77               	addwfc	??_deltaT+1,w
  2012  00ED  00BB               	movwf	_delta_t+1
  2013  00EE  3000               	movlw	0
  2014  00EF  3D78               	addwfc	??_deltaT+2,w
  2015  00F0  00BC               	movwf	_delta_t+2
  2016  00F1  0008               	return
  2017  00F2                     __end_of_deltaT:	
  2018  007E                     btemp	set	126	;btemp
  2019  007E                     int$flags	set	126
  2020  007E                     wtemp	set	126
  2021  007E                     wtemp0	set	126
  2022  0080                     wtemp1	set	128
  2023  0082                     wtemp2	set	130
  2024  0084                     wtemp3	set	132
  2025  0086                     wtemp4	set	134
  2026  0088                     wtemp5	set	136
  2027  007F                     wtemp6	set	127
  2028  007E                     ttemp	set	126
  2029  007E                     ttemp0	set	126
  2030  0081                     ttemp1	set	129
  2031  0084                     ttemp2	set	132
  2032  0087                     ttemp3	set	135
  2033  007F                     ttemp4	set	127
  2034  007E                     ltemp	set	126
  2035  007E                     ltemp0	set	126
  2036  0082                     ltemp1	set	130
  2037  0086                     ltemp2	set	134
  2038  0080                     ltemp3	set	128


Data Sizes:
    Strings     12
    Constant    10
    Data        9
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     11      32
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    sendString@val	PTR unsigned char  size(2) Largest target is 6
		 -> STR_2(CODE[6]), STR_1(CODE[6]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_deltaT

Critical Paths under _main in BANK0

    _main->_sendString
    _sendString->_sendChar
    _sendInt16->_sendChar

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                19    19      0     339
                                              4 BANK0      7     7      0
                      _charAvailable
                             _initBT
                           _initPins
                           _readNext
                          _sendInt16
                         _sendString
 ---------------------------------------------------------------------------------
 (1) _sendString                                           3     1      2     173
                                              1 BANK0      3     1      2
                           _sendChar
 ---------------------------------------------------------------------------------
 (1) _sendInt16                                            2     0      2     119
                                              1 BANK0      2     0      2
                           _sendChar
 ---------------------------------------------------------------------------------
 (2) _sendChar                                             1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _readNext                                             2     2      0      23
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _initPins                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initBT                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _charAvailable                                        1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  2     2      0     344
                                             12 COMMON     2     2      0
                             _deltaT
 ---------------------------------------------------------------------------------
 (4) _deltaT                                              12     6      6     344
                                              0 COMMON    12     6      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _charAvailable
   _initBT
   _initPins
   _readNext
   _sendInt16
     _sendChar
   _sendString
     _sendChar

 _ISR (ROOT)
   _deltaT

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      2E       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      B      20       6       40.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      2E      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Fri Mar 18 18:32:46 2016

            __CFG_CP$OFF 0000                      l258 0191                      l473 01F3  
                    _GIE 005F                      _RA3 0063                      _RA4 0064  
                    _RA6 0066                      _RA7 0067                      _PR2 001B  
           __CFG_CPD$OFF 0000                      _ISR 0004             __CFG_BORV$LO 0000  
                    wreg 0009             __CFG_LVP$OFF 0000                     ?_ISR 0070  
                   _C1IE 0495                     _C1IF 0095                     _C2IE 0496  
                   _C2IF 0096                     _C1ON 088F                     _C2ON 089F  
                   l1725 0145                     l1735 01E1                     l1727 015C  
                   l1675 018B                     l1851 0120                     l1843 0102  
                   l1855 0129                     l1849 0118                     l1857 012F  
                   _ADFM 04F7                     _ADON 04E8                     _CHS0 04EA  
                   _CHS1 04EB                     _CHS2 04EC                     _CHS3 04ED  
                   _CHS4 04EE                     STR_1 019E                     STR_2 01A4  
                   _BRGH 0CF2                     _CREN 0CEC                     u1377 0136  
                   _PEIE 005E                     _RCIE 048D                     _RCIF 008D  
                   _SCS0 04C8                     _SCS1 04C9                     _SPEN 0CEF  
                   _TRMT 0CF1                     _TXEN 0CF5                     _SYNC 0CF4  
                   _WPUB 020D             __CFG_WRT$OFF 0000                     _main 00F2  
                   fsr0h 0005                     fsr1h 0007                     fsr0l 0004  
                   indf0 0000                     indf1 0001                     fsr1l 0006  
                   btemp 007E                     ltemp 007E                     start 0077  
                   ttemp 007E                     wtemp 007E            __CFG_IESO$OFF 0000  
          __CFG_MCLRE$ON 0000                    ??_ISR 007C            __CFG_PLLEN$ON 0000  
                  _DC1B0 149C                    _DC1B1 149D                    _ADCS0 04F4  
                  _ADCS1 04F5                    _ADCS2 04F6                    ?_main 0070  
                  _BRG16 0CFB            __CFG_WDTE$OFF 0000                    _IRCF0 04CB  
                  _IRCF1 04CC                    _IRCF2 04CD                    _IRCF3 04CE  
                  i1l340 0029                    i1l346 0072                    _FVREN 08BF  
                  _RCREG 0199                    _TMR1H 0017                    _TMR1L 0016  
                  _SPBRG 019B                    _PORTA 000C                    _PORTB 000D  
                  _TRISA 008C                    _TRISB 008D                    _TXREG 019A  
         __CFG_FCMEN$OFF 0000                    main@f 0033           __CFG_BOREN$OFF 0000  
                  ltemp0 007E                    ltemp1 0082                    ltemp2 0086  
                  ltemp3 0080                    ttemp0 007E                    ttemp1 0081  
                  ttemp2 0084                    ttemp3 0087                    ttemp4 007F  
                  status 0003                    wtemp0 007E                    wtemp1 0080  
                  wtemp2 0082                    wtemp3 0084                    wtemp4 0086  
                  wtemp5 0088                    wtemp6 007F          __initialization 0079  
           __end_of_main 013D                   ??_main 0030                   _C1NCH0 0890  
                 _C1NCH1 0891                   _C2NCH0 08A0                   _C1PCH0 0894  
                 _C2NCH1 08A1                   _C1PCH1 0895                   _C2PCH0 08A4  
                 _C2PCH1 08A5                   _C1INTP 0897                   _C2INTP 08A7  
                 _ADNREF 04F2                   _ADRESH 009C                   _CCPR1L 0291  
                 _ANSELA 018C                   _ANSELB 018D                   u110_23 00B1  
                 i1l1811 0048                   i1l1717 00D1                   i1l1813 004A  
                 i1l1823 0069                   i1l1825 006B                   i1l1797 0022  
                 _FVRRDY 08BE                   _TMR1IE 0488                   _TMR1IF 0088  
                 _TMR2IE 0489                   _TMR2IF 0089                   _TMR4IF 0099  
                 _TMR1ON 00C0                   _TMR2ON 00E2                   _TMR4ON 20BA  
                 _SPLLEN 04CF           __CFG_PWRTE$OFF 0000              readNext@ret 002D  
                 _nWPUEN 04AF                   _deltaT 0094         __end_of_initPins 017D  
                 _initBT 017D         __end_of_readNext 01D3         __end_of_sendChar 01F6  
__end_of__initialization 0090           __pcstackCOMMON 0070             __pidataBANK0 01E5  
             __pbssBANK0 0020               __pmaintext 00F2   __size_of_charAvailable 0012  
     __size_of_sendInt16 0016                  _C1TSEL0 14F0                  _C1TSEL1 14F1  
                ?_deltaT 0070               __pintentry 0004                  _CCP1CON 0293  
                _CDAFVR0 08BA                  _CDAFVR1 08BB                  ?_initBT 0070  
                _CCP1SEL 08E8                  _ADPREF0 04F0                  _ADPREF1 04F1  
                _T1CKPS0 00C4                  _T1CKPS1 00C5                  _T2CKPS0 00E0  
                _T2CKPS1 00E1                  _T4CKPS0 20B8                  _T4CKPS1 20B9  
                _TMR1CS0 00C6                  _TMR1CS1 00C7                  _RXDTSEL 08EF  
                _TXCKSEL 08F0                ?_initPins 0070                ?_readNext 0070  
              ?_sendChar 0070          __size_of_deltaT 005E          __CFG_STVREN$OFF 0000  
        __size_of_initBT 0017                  _delta_t 003A                  __ptext1 013D  
                __ptext2 01AA                  __ptext3 01EE                  __ptext4 01C0  
                __ptext5 0160                  __ptext6 017D                  __ptext7 01D3  
                __ptext9 0094                  _buffpos 002A             __size_of_ISR 0073  
                _readpos 002B            _charAvailable 01D3                  main@cmd 0036  
      __end_of_sendInt16 01C0     end_of_initialization 0090               _sendString 013D  
             ??_initPins 002C                  init_ram 01F6               ??_readNext 002C  
                initloop 01F7               ??_sendChar 002C             __pstringtext 0194  
          sendString@val 002D         __CFG_FOSC$INTOSC 0000           ?_charAvailable 0070  
              _TRISBbits 008D            deltaT@tm_high 0073           __end_of_deltaT 00F2  
         __end_of_initBT 0194      start_initialization 0079              __end_of_ISR 0077  
            ?_sendString 002D                 ??_deltaT 0076              __pdataBANK0 0037  
               ??_initBT 002C          ??_charAvailable 002C                ___latbits 0001  
          __pcstackBANK0 002C               sendInt16@i 002D        __size_of_initPins 001D  
      __size_of_readNext 0013        __size_of_sendChar 0008      __size_of_sendString 0023  
              _curr_time 0037                 _T2OUTPS0 00E3                 _T2OUTPS1 00E4  
               _T2OUTPS2 00E5                 _T2OUTPS3 00E6                _sendInt16 01AA  
           _receive_buff 0020                 _GO_nDONE 04E9                _volt_time 003D  
           deltaT@tm_low 0070               ?_sendInt16 002D                sendChar@c 002C  
               _led_rest 0028             ??_sendString 002F                 _initPins 0160  
               _readNext 01C0            __size_of_main 004B                 _sendChar 01EE  
               int$flags 007E       __end_of_sendString 0160           _get_shift_byte 0194  
               intlevel1 0000              ??_sendInt16 002F        __CFG_CLKOUTEN$OFF 0000  
  __end_of_charAvailable 01E5   __end_of_get_shift_byte 019E  
