

Microchip Technology PIC LITE Macro Assembler V1.36 build -262312587 
                                                                                               Thu May 12 20:01:03 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	stringtext,global,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2
    43                           	psect	text28,local,class=CODE,merge=1,delta=2
    44                           	psect	text29,local,class=CODE,merge=1,delta=2
    45                           	psect	text30,local,class=CODE,merge=1,delta=2
    46                           	psect	text31,local,class=CODE,merge=1,delta=2
    47                           	psect	text32,local,class=CODE,merge=1,delta=2
    48                           	psect	text33,local,class=CODE,merge=1,delta=2
    49                           	psect	text34,local,class=CODE,merge=1,delta=2
    50                           	psect	text35,local,class=CODE,merge=1,delta=2
    51                           	psect	text36,local,class=CODE,merge=1,delta=2
    52                           	psect	text37,local,class=CODE,merge=1,delta=2
    53                           	psect	text38,local,class=CODE,merge=1,delta=2
    54                           	psect	text39,local,class=CODE,merge=1,delta=2
    55                           	psect	text40,local,class=CODE,merge=1,delta=2
    56                           	psect	intentry,global,class=CODE,delta=2
    57                           	psect	text42,local,class=CODE,merge=1,delta=2
    58                           	psect	text43,local,class=CODE,merge=1,delta=2
    59                           	psect	text44,local,class=CODE,merge=1,delta=2
    60                           	dabs	1,0x7E,2
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0014                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0094                     	;# 
    96  0095                     	;# 
    97  0096                     	;# 
    98  0097                     	;# 
    99  0098                     	;# 
   100  0099                     	;# 
   101  009A                     	;# 
   102  009B                     	;# 
   103  009B                     	;# 
   104  009C                     	;# 
   105  009D                     	;# 
   106  009E                     	;# 
   107  010C                     	;# 
   108  010D                     	;# 
   109  0111                     	;# 
   110  0112                     	;# 
   111  0113                     	;# 
   112  0114                     	;# 
   113  0115                     	;# 
   114  0116                     	;# 
   115  0117                     	;# 
   116  0118                     	;# 
   117  0119                     	;# 
   118  011A                     	;# 
   119  011B                     	;# 
   120  011D                     	;# 
   121  011E                     	;# 
   122  018C                     	;# 
   123  018D                     	;# 
   124  0191                     	;# 
   125  0191                     	;# 
   126  0192                     	;# 
   127  0193                     	;# 
   128  0193                     	;# 
   129  0193                     	;# 
   130  0194                     	;# 
   131  0195                     	;# 
   132  0196                     	;# 
   133  0199                     	;# 
   134  019A                     	;# 
   135  019B                     	;# 
   136  019B                     	;# 
   137  019B                     	;# 
   138  019B                     	;# 
   139  019C                     	;# 
   140  019C                     	;# 
   141  019D                     	;# 
   142  019E                     	;# 
   143  019F                     	;# 
   144  020C                     	;# 
   145  020D                     	;# 
   146  0211                     	;# 
   147  0211                     	;# 
   148  0212                     	;# 
   149  0212                     	;# 
   150  0213                     	;# 
   151  0213                     	;# 
   152  0214                     	;# 
   153  0214                     	;# 
   154  0215                     	;# 
   155  0215                     	;# 
   156  0215                     	;# 
   157  0216                     	;# 
   158  0216                     	;# 
   159  0217                     	;# 
   160  0217                     	;# 
   161  0219                     	;# 
   162  021A                     	;# 
   163  021B                     	;# 
   164  021C                     	;# 
   165  021D                     	;# 
   166  021E                     	;# 
   167  021F                     	;# 
   168  0291                     	;# 
   169  0291                     	;# 
   170  0292                     	;# 
   171  0293                     	;# 
   172  0294                     	;# 
   173  0295                     	;# 
   174  0295                     	;# 
   175  0296                     	;# 
   176  0298                     	;# 
   177  0298                     	;# 
   178  0299                     	;# 
   179  029A                     	;# 
   180  029B                     	;# 
   181  029C                     	;# 
   182  029C                     	;# 
   183  029D                     	;# 
   184  029E                     	;# 
   185  029E                     	;# 
   186  0311                     	;# 
   187  0311                     	;# 
   188  0312                     	;# 
   189  0313                     	;# 
   190  0318                     	;# 
   191  0318                     	;# 
   192  0319                     	;# 
   193  031A                     	;# 
   194  0394                     	;# 
   195  0395                     	;# 
   196  0396                     	;# 
   197  039A                     	;# 
   198  039C                     	;# 
   199  039D                     	;# 
   200  039E                     	;# 
   201  039F                     	;# 
   202  0415                     	;# 
   203  0416                     	;# 
   204  0417                     	;# 
   205  041C                     	;# 
   206  041D                     	;# 
   207  041E                     	;# 
   208  0FE4                     	;# 
   209  0FE5                     	;# 
   210  0FE6                     	;# 
   211  0FE7                     	;# 
   212  0FE8                     	;# 
   213  0FE9                     	;# 
   214  0FEA                     	;# 
   215  0FEB                     	;# 
   216  0FED                     	;# 
   217  0FEE                     	;# 
   218  0FEF                     	;# 
   219  0000                     	;# 
   220  0001                     	;# 
   221  0002                     	;# 
   222  0003                     	;# 
   223  0004                     	;# 
   224  0005                     	;# 
   225  0006                     	;# 
   226  0007                     	;# 
   227  0008                     	;# 
   228  0009                     	;# 
   229  000A                     	;# 
   230  000B                     	;# 
   231  000C                     	;# 
   232  000D                     	;# 
   233  0011                     	;# 
   234  0012                     	;# 
   235  0013                     	;# 
   236  0014                     	;# 
   237  0015                     	;# 
   238  0016                     	;# 
   239  0016                     	;# 
   240  0017                     	;# 
   241  0018                     	;# 
   242  0019                     	;# 
   243  001A                     	;# 
   244  001B                     	;# 
   245  001C                     	;# 
   246  001E                     	;# 
   247  001F                     	;# 
   248  008C                     	;# 
   249  008D                     	;# 
   250  0091                     	;# 
   251  0092                     	;# 
   252  0093                     	;# 
   253  0094                     	;# 
   254  0095                     	;# 
   255  0096                     	;# 
   256  0097                     	;# 
   257  0098                     	;# 
   258  0099                     	;# 
   259  009A                     	;# 
   260  009B                     	;# 
   261  009B                     	;# 
   262  009C                     	;# 
   263  009D                     	;# 
   264  009E                     	;# 
   265  010C                     	;# 
   266  010D                     	;# 
   267  0111                     	;# 
   268  0112                     	;# 
   269  0113                     	;# 
   270  0114                     	;# 
   271  0115                     	;# 
   272  0116                     	;# 
   273  0117                     	;# 
   274  0118                     	;# 
   275  0119                     	;# 
   276  011A                     	;# 
   277  011B                     	;# 
   278  011D                     	;# 
   279  011E                     	;# 
   280  018C                     	;# 
   281  018D                     	;# 
   282  0191                     	;# 
   283  0191                     	;# 
   284  0192                     	;# 
   285  0193                     	;# 
   286  0193                     	;# 
   287  0193                     	;# 
   288  0194                     	;# 
   289  0195                     	;# 
   290  0196                     	;# 
   291  0199                     	;# 
   292  019A                     	;# 
   293  019B                     	;# 
   294  019B                     	;# 
   295  019B                     	;# 
   296  019B                     	;# 
   297  019C                     	;# 
   298  019C                     	;# 
   299  019D                     	;# 
   300  019E                     	;# 
   301  019F                     	;# 
   302  020C                     	;# 
   303  020D                     	;# 
   304  0211                     	;# 
   305  0211                     	;# 
   306  0212                     	;# 
   307  0212                     	;# 
   308  0213                     	;# 
   309  0213                     	;# 
   310  0214                     	;# 
   311  0214                     	;# 
   312  0215                     	;# 
   313  0215                     	;# 
   314  0215                     	;# 
   315  0216                     	;# 
   316  0216                     	;# 
   317  0217                     	;# 
   318  0217                     	;# 
   319  0219                     	;# 
   320  021A                     	;# 
   321  021B                     	;# 
   322  021C                     	;# 
   323  021D                     	;# 
   324  021E                     	;# 
   325  021F                     	;# 
   326  0291                     	;# 
   327  0291                     	;# 
   328  0292                     	;# 
   329  0293                     	;# 
   330  0294                     	;# 
   331  0295                     	;# 
   332  0295                     	;# 
   333  0296                     	;# 
   334  0298                     	;# 
   335  0298                     	;# 
   336  0299                     	;# 
   337  029A                     	;# 
   338  029B                     	;# 
   339  029C                     	;# 
   340  029C                     	;# 
   341  029D                     	;# 
   342  029E                     	;# 
   343  029E                     	;# 
   344  0311                     	;# 
   345  0311                     	;# 
   346  0312                     	;# 
   347  0313                     	;# 
   348  0318                     	;# 
   349  0318                     	;# 
   350  0319                     	;# 
   351  031A                     	;# 
   352  0394                     	;# 
   353  0395                     	;# 
   354  0396                     	;# 
   355  039A                     	;# 
   356  039C                     	;# 
   357  039D                     	;# 
   358  039E                     	;# 
   359  039F                     	;# 
   360  0415                     	;# 
   361  0416                     	;# 
   362  0417                     	;# 
   363  041C                     	;# 
   364  041D                     	;# 
   365  041E                     	;# 
   366  0FE4                     	;# 
   367  0FE5                     	;# 
   368  0FE6                     	;# 
   369  0FE7                     	;# 
   370  0FE8                     	;# 
   371  0FE9                     	;# 
   372  0FEA                     	;# 
   373  0FEB                     	;# 
   374  0FED                     	;# 
   375  0FEE                     	;# 
   376  0FEF                     	;# 
   377                           
   378                           	psect	idataBANK1
   379  09B1                     __pidataBANK1:	
   380                           
   381                           ;initializer for _i_u_diode_offs
   382  09B1  34D7               	retlw	215
   383  09B2  3423               	retlw	35
   384  09B3  34BD               	retlw	189
   385                           
   386                           ;initializer for _i_u_offs
   387  09B4  3400               	retlw	0
   388  09B5  3448               	retlw	72
   389  09B6  34C1               	retlw	193
   390                           
   391                           	psect	stringtext
   392  07FE                     __pstringtext:	
   393  07FE                     _get_shift_byte:	
   394  07FE  3481               	retlw	129
   395  07FF  34BD               	retlw	189
   396  0800  34C8               	retlw	200
   397  0801  3498               	retlw	152
   398  0802  34B4               	retlw	180
   399  0803  3492               	retlw	146
   400  0804  3482               	retlw	130
   401  0805  34B9               	retlw	185
   402  0806  3480               	retlw	128
   403  0807  3490               	retlw	144
   404  0808                     __end_of_get_shift_byte:	
   405  0016                     _TMR1	set	22
   406  000C                     _PORTA	set	12
   407  000D                     _PORTB	set	13
   408  001B                     _PR2	set	27
   409  0095                     _C1IF	set	149
   410  0096                     _C2IF	set	150
   411  005F                     _GIE	set	95
   412  005B                     _IOCIE	set	91
   413  005E                     _PEIE	set	94
   414  0063                     _RA3	set	99
   415  0064                     _RA4	set	100
   416  0066                     _RA6	set	102
   417  0067                     _RA7	set	103
   418  008D                     _RCIF	set	141
   419  00C4                     _T1CKPS0	set	196
   420  00C5                     _T1CKPS1	set	197
   421  00E0                     _T2CKPS0	set	224
   422  00E1                     _T2CKPS1	set	225
   423  00E3                     _T2OUTPS0	set	227
   424  00E4                     _T2OUTPS1	set	228
   425  00E5                     _T2OUTPS2	set	229
   426  00E6                     _T2OUTPS3	set	230
   427  00C6                     _TMR1CS0	set	198
   428  00C7                     _TMR1CS1	set	199
   429  0088                     _TMR1IF	set	136
   430  00C0                     _TMR1ON	set	192
   431  0089                     _TMR2IF	set	137
   432  00E2                     _TMR2ON	set	226
   433  0099                     _TMR4IF	set	153
   434  008C                     _TRISA	set	140
   435  008D                     _TRISB	set	141
   436  008D                     _TRISBbits	set	141
   437  009B                     _ADRES	set	155
   438  04F4                     _ADCS0	set	1268
   439  04F5                     _ADCS1	set	1269
   440  04F6                     _ADCS2	set	1270
   441  04F7                     _ADFM	set	1271
   442  04F2                     _ADNREF	set	1266
   443  04E8                     _ADON	set	1256
   444  04F0                     _ADPREF0	set	1264
   445  04F1                     _ADPREF1	set	1265
   446  0495                     _C1IE	set	1173
   447  0496                     _C2IE	set	1174
   448  04EA                     _CHS0	set	1258
   449  04EB                     _CHS1	set	1259
   450  04EC                     _CHS2	set	1260
   451  04ED                     _CHS3	set	1261
   452  04EE                     _CHS4	set	1262
   453  04E9                     _GO_nDONE	set	1257
   454  04CB                     _IRCF0	set	1227
   455  04CC                     _IRCF1	set	1228
   456  04CD                     _IRCF2	set	1229
   457  04CE                     _IRCF3	set	1230
   458  048D                     _RCIE	set	1165
   459  04C8                     _SCS0	set	1224
   460  04C9                     _SCS1	set	1225
   461  04CF                     _SPLLEN	set	1231
   462  0488                     _TMR1IE	set	1160
   463  0489                     _TMR2IE	set	1161
   464  04AF                     _nWPUEN	set	1199
   465  08B8                     _ADFVR0	set	2232
   466  08B9                     _ADFVR1	set	2233
   467  0897                     _C1INTP	set	2199
   468  0890                     _C1NCH0	set	2192
   469  0891                     _C1NCH1	set	2193
   470  088F                     _C1ON	set	2191
   471  0894                     _C1PCH0	set	2196
   472  0895                     _C1PCH1	set	2197
   473  08A7                     _C2INTP	set	2215
   474  08A0                     _C2NCH0	set	2208
   475  08A1                     _C2NCH1	set	2209
   476  089F                     _C2ON	set	2207
   477  08A4                     _C2PCH0	set	2212
   478  08A5                     _C2PCH1	set	2213
   479  08E8                     _CCP1SEL	set	2280
   480  08BA                     _CDAFVR0	set	2234
   481  08BB                     _CDAFVR1	set	2235
   482  08BF                     _FVREN	set	2239
   483  08BE                     _FVRRDY	set	2238
   484  08EF                     _RXDTSEL	set	2287
   485  08F0                     _TXCKSEL	set	2288
   486  018C                     _ANSELA	set	396
   487  018D                     _ANSELB	set	397
   488  0199                     _RCREG	set	409
   489  019B                     _SPBRG	set	411
   490  019A                     _TXREG	set	410
   491  0CFB                     _BRG16	set	3323
   492  0CF2                     _BRGH	set	3314
   493  0CEC                     _CREN	set	3308
   494  0CEF                     _SPEN	set	3311
   495  0CF4                     _SYNC	set	3316
   496  0CF1                     _TRMT	set	3313
   497  0CF5                     _TXEN	set	3317
   498  020D                     _WPUB	set	525
   499  0293                     _CCP1CON	set	659
   500  0291                     _CCPR1L	set	657
   501  14F0                     _C1TSEL0	set	5360
   502  14F1                     _C1TSEL1	set	5361
   503  149C                     _DC1B0	set	5276
   504  149D                     _DC1B1	set	5277
   505  1CB5                     _IOCBF5	set	7349
   506  1CAD                     _IOCBN5	set	7341
   507  20B8                     _T4CKPS0	set	8376
   508  20B9                     _T4CKPS1	set	8377
   509  20BA                     _TMR4ON	set	8378
   510                           
   511                           ; #config settings
   512  0000                     
   513                           	psect	cinit
   514  0099                     start_initialization:	
   515  0099                     __initialization:	
   516                           
   517                           ; Clear objects allocated to COMMON
   518  0099  01FC               	clrf	__pbssCOMMON& (0+127)
   519  009A  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
   520                           
   521                           ; Clear objects allocated to BANK1
   522  009B  30CD               	movlw	low __pbssBANK1
   523  009C  0084               	movwf	4
   524  009D  3000               	movlw	high __pbssBANK1
   525  009E  0085               	movwf	5
   526  009F  3009               	movlw	9
   527  00A0  3189  21AB  3180   	fcall	clear_ram0
   528                           
   529                           ; Clear objects allocated to BANK2
   530  00A3  3020               	movlw	low __pbssBANK2
   531  00A4  0084               	movwf	4
   532  00A5  3001               	movlw	high __pbssBANK2
   533  00A6  0085               	movwf	5
   534  00A7  3020               	movlw	32
   535  00A8  3189  21AB         	fcall	clear_ram0
   536                           
   537                           ; Initialize objects allocated to BANK1
   538  00AA  30B1               	movlw	low __pidataBANK1
   539  00AB  0084               	movwf	4
   540  00AC  3089               	movlw	(high __pidataBANK1)| (0+128)
   541  00AD  0085               	movwf	5
   542  00AE  0021               	movlb	1	; select bank1
   543  00AF  0012               	moviw fsr0++
   544  00B0  00D6               	movwf	__pdataBANK1& (0+127)
   545  00B1  0012               	moviw fsr0++
   546  00B2  00D7               	movwf	(__pdataBANK1+1)& (0+127)
   547  00B3  0012               	moviw fsr0++
   548  00B4  00D8               	movwf	(__pdataBANK1+2)& (0+127)
   549  00B5  0012               	moviw fsr0++
   550  00B6  00D9               	movwf	(__pdataBANK1+3)& (0+127)
   551  00B7  0012               	moviw fsr0++
   552  00B8  00DA               	movwf	(__pdataBANK1+4)& (0+127)
   553  00B9  0012               	moviw fsr0++
   554  00BA  00DB               	movwf	(__pdataBANK1+5)& (0+127)
   555  00BB                     end_of_initialization:	
   556                           ;End of C runtime variable initialization code
   557                           
   558  00BB                     __end_of__initialization:	
   559  00BB  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   560  00BC  0020               	movlb	0
   561  00BD  3180  28BF         	ljmp	_main	;jump to C main() function
   562                           
   563                           	psect	bssCOMMON
   564  007C                     __pbssCOMMON:	
   565  007C                     _flag:	
   566  007C                     	ds	1
   567  007D                     _mode:	
   568  007D                     	ds	1
   569                           
   570                           	psect	bssBANK1
   571  00CD                     __pbssBANK1:	
   572  00CD                     _curr_time:	
   573  00CD                     	ds	2
   574  00CF                     _led_rest:	
   575  00CF                     	ds	2
   576  00D1                     _volt_time:	
   577  00D1                     	ds	2
   578  00D3                     _buffpos:	
   579  00D3                     	ds	1
   580  00D4                     _reading:	
   581  00D4                     	ds	1
   582  00D5                     _readpos:	
   583  00D5                     	ds	1
   584                           
   585                           	psect	dataBANK1
   586  00D6                     __pdataBANK1:	
   587  00D6                     _i_u_diode_offs:	
   588  00D6                     	ds	3
   589  00D9                     _i_u_offs:	
   590  00D9                     	ds	3
   591                           
   592                           	psect	bssBANK2
   593  0120                     __pbssBANK2:	
   594  0120                     _receive_buff:	
   595  0120                     	ds	32
   596                           
   597                           	psect	clrtext
   598  09AB                     clear_ram0:	
   599                           ;	Called with FSR0 containing the base address, and
   600                           ;	WREG with the size to clear
   601                           
   602  09AB  0064               	clrwdt	;clear the watchdog before getting into this loop
   603  09AC                     clrloop0:	
   604  09AC  0180               	clrf	0	;clear RAM location pointed to by FSR
   605  09AD  3101               	addfsr 0,1
   606  09AE  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   607  09AF  29AC               	goto	clrloop0	;have we reached the end yet?
   608  09B0  3400               	retlw	0	;all done for this memory range, return
   609                           
   610                           	psect	cstackBANK1
   611  00A0                     __pcstackBANK1:	
   612  00A0                     ?_readCurrent:	
   613                           
   614                           ; 3 bytes @ 0x0
   615  00A0                     	ds	3
   616  00A3                     _readCurrent$799:	
   617                           
   618                           ; 3 bytes @ 0x3
   619  00A3                     	ds	3
   620  00A6                     ??_main:	
   621                           
   622                           ; 1 bytes @ 0x6
   623  00A6                     	ds	4
   624  00AA                     _main$800:	
   625                           
   626                           ; 3 bytes @ 0xA
   627  00AA                     	ds	3
   628  00AD                     _main$254:	
   629                           
   630                           ; 3 bytes @ 0xD
   631  00AD                     	ds	3
   632  00B0                     _main$255:	
   633                           
   634                           ; 3 bytes @ 0x10
   635  00B0                     	ds	3
   636  00B3                     _main$256:	
   637                           
   638                           ; 3 bytes @ 0x13
   639  00B3                     	ds	3
   640  00B6                     _main$257:	
   641                           
   642                           ; 3 bytes @ 0x16
   643  00B6                     	ds	3
   644  00B9                     main@voltage:	
   645                           
   646                           ; 3 bytes @ 0x19
   647  00B9                     	ds	3
   648  00BC                     main@real:	
   649                           
   650                           ; 3 bytes @ 0x1C
   651  00BC                     	ds	3
   652  00BF                     main@reactive:	
   653                           
   654                           ; 3 bytes @ 0x1F
   655  00BF                     	ds	3
   656  00C2                     main@current:	
   657                           
   658                           ; 3 bytes @ 0x22
   659  00C2                     	ds	3
   660  00C5                     main@angle:	
   661                           
   662                           ; 3 bytes @ 0x25
   663  00C5                     	ds	3
   664  00C8                     main@apparent:	
   665                           
   666                           ; 3 bytes @ 0x28
   667  00C8                     	ds	3
   668  00CB                     main@so_buff:	
   669                           
   670                           ; 2 bytes @ 0x2B
   671  00CB                     	ds	2
   672                           
   673                           	psect	cstackCOMMON
   674  0070                     __pcstackCOMMON:	
   675  0070                     ?_initMessaging:	
   676  0070                     ?_sendChar:	
   677                           ; 1 bytes @ 0x0
   678                           
   679  0070                     ?_initPins:	
   680                           ; 1 bytes @ 0x0
   681                           
   682  0070                     ?_initADC:	
   683                           ; 1 bytes @ 0x0
   684                           
   685  0070                     ?_initTMR1:	
   686                           ; 1 bytes @ 0x0
   687                           
   688  0070                     ?_initFVR:	
   689                           ; 1 bytes @ 0x0
   690                           
   691  0070                     ?_initPWMTMR4:	
   692                           ; 1 bytes @ 0x0
   693                           
   694  0070                     ?_initCOMP1:	
   695                           ; 1 bytes @ 0x0
   696                           
   697  0070                     ?_initCOMP2:	
   698                           ; 1 bytes @ 0x0
   699                           
   700  0070                     ?_initBT:	
   701                           ; 1 bytes @ 0x0
   702                           
   703  0070                     ?_adc:	
   704                           ; 1 bytes @ 0x0
   705                           
   706  0070                     ?_readVoltage:	
   707                           ; 1 bytes @ 0x0
   708                           
   709  0070                     ?_so:	
   710                           ; 1 bytes @ 0x0
   711                           
   712  0070                     ?_clearDisplay:	
   713                           ; 1 bytes @ 0x0
   714                           
   715  0070                     ?_sendColour:	
   716                           ; 1 bytes @ 0x0
   717                           
   718  0070                     ??_sendColour:	
   719                           ; 1 bytes @ 0x0
   720                           
   721  0070                     ?_ISR:	
   722                           ; 1 bytes @ 0x0
   723                           
   724  0070                     ?_main:	
   725                           ; 1 bytes @ 0x0
   726                           
   727  0070                     ?__sendchar_:	
   728                           ; 1 bytes @ 0x0
   729                           
   730  0070                     ?_sendInt8:	
   731                           ; 1 bytes @ 0x0
   732                           
   733  0070                     ?___lbmod:	
   734                           ; 1 bytes @ 0x0
   735                           
   736  0070                     sendColour@c:	
   737                           ; 1 bytes @ 0x0
   738                           
   739  0070                     ___lbmod@divisor:	
   740                           ; 1 bytes @ 0x0
   741                           
   742                           
   743                           ; 1 bytes @ 0x0
   744  0070                     	ds	1
   745  0071                     ?_setLED:	
   746  0071                     ??___lbmod:	
   747                           ; 1 bytes @ 0x1
   748                           
   749  0071                     setLED@r:	
   750                           ; 1 bytes @ 0x1
   751                           
   752                           
   753                           ; 1 bytes @ 0x1
   754  0071                     	ds	1
   755  0072                     setLED@b:	
   756                           
   757                           ; 1 bytes @ 0x2
   758  0072                     	ds	1
   759  0073                     ??_setLED:	
   760  0073                     setLED@g:	
   761                           ; 1 bytes @ 0x3
   762                           
   763  0073                     ___lbmod@dividend:	
   764                           ; 1 bytes @ 0x3
   765                           
   766                           
   767                           ; 1 bytes @ 0x3
   768  0073                     	ds	1
   769  0074                     ___lbmod@counter:	
   770                           
   771                           ; 1 bytes @ 0x4
   772  0074                     	ds	1
   773  0075                     ___lbmod@rem:	
   774                           
   775                           ; 1 bytes @ 0x5
   776  0075                     	ds	1
   777  0076                     ??_ISR:	
   778                           
   779                           ; 1 bytes @ 0x6
   780  0076                     	ds	6
   781                           
   782                           	psect	cstackBANK0
   783  0020                     __pcstackBANK0:	
   784  0020                     ?___ftge:	
   785  0020                     ??_initMessaging:	
   786                           ; 1 bit 
   787                           
   788  0020                     ??_initPins:	
   789                           ; 1 bytes @ 0x0
   790                           
   791  0020                     ??_initADC:	
   792                           ; 1 bytes @ 0x0
   793                           
   794  0020                     ??_initTMR1:	
   795                           ; 1 bytes @ 0x0
   796                           
   797  0020                     ??_initFVR:	
   798                           ; 1 bytes @ 0x0
   799                           
   800  0020                     ??_initPWMTMR4:	
   801                           ; 1 bytes @ 0x0
   802                           
   803  0020                     ??_initCOMP1:	
   804                           ; 1 bytes @ 0x0
   805                           
   806  0020                     ??_initCOMP2:	
   807                           ; 1 bytes @ 0x0
   808                           
   809  0020                     ??_initBT:	
   810                           ; 1 bytes @ 0x0
   811                           
   812  0020                     ??_adc:	
   813                           ; 1 bytes @ 0x0
   814                           
   815  0020                     ??_readVoltage:	
   816                           ; 1 bytes @ 0x0
   817                           
   818  0020                     ??_so:	
   819                           ; 1 bytes @ 0x0
   820                           
   821  0020                     ??__sendchar_:	
   822                           ; 1 bytes @ 0x0
   823                           
   824  0020                     ?_deltaT:	
   825                           ; 1 bytes @ 0x0
   826                           
   827  0020                     ?___wmul:	
   828                           ; 2 bytes @ 0x0
   829                           
   830  0020                     ?___lwdiv:	
   831                           ; 2 bytes @ 0x0
   832                           
   833  0020                     ?___lwmod:	
   834                           ; 2 bytes @ 0x0
   835                           
   836  0020                     ?___ftpack:	
   837                           ; 2 bytes @ 0x0
   838                           
   839  0020                     ?___tmul:	
   840                           ; 3 bytes @ 0x0
   841                           
   842  0020                     ?___ltdiv:	
   843                           ; 3 bytes @ 0x0
   844                           
   845  0020                     ?___fttol:	
   846                           ; 3 bytes @ 0x0
   847                           
   848  0020                     __sendchar_@c:	
   849                           ; 4 bytes @ 0x0
   850                           
   851  0020                     deltaT@tm_low:	
   852                           ; 1 bytes @ 0x0
   853                           
   854  0020                     ___wmul@multiplier:	
   855                           ; 2 bytes @ 0x0
   856                           
   857  0020                     ___lwdiv@divisor:	
   858                           ; 2 bytes @ 0x0
   859                           
   860  0020                     ___lwmod@divisor:	
   861                           ; 2 bytes @ 0x0
   862                           
   863  0020                     ___tmul@multiplier:	
   864                           ; 2 bytes @ 0x0
   865                           
   866  0020                     ___ftpack@arg:	
   867                           ; 3 bytes @ 0x0
   868                           
   869  0020                     ___ftge@ff1:	
   870                           ; 3 bytes @ 0x0
   871                           
   872  0020                     ___fttol@f1:	
   873                           ; 3 bytes @ 0x0
   874                           
   875  0020                     ___ltdiv@divisor:	
   876                           ; 3 bytes @ 0x0
   877                           
   878                           
   879                           ; 3 bytes @ 0x0
   880  0020                     	ds	1
   881  0021                     ?_sendFloat:	
   882  0021                     ??_sendInt8:	
   883                           ; 1 bytes @ 0x1
   884                           
   885  0021                     adc@src:	
   886                           ; 1 bytes @ 0x1
   887                           
   888  0021                     so@data:	
   889                           ; 1 bytes @ 0x1
   890                           
   891  0021                     sendInt8@i:	
   892                           ; 1 bytes @ 0x1
   893                           
   894  0021                     sendFloat@f:	
   895                           ; 1 bytes @ 0x1
   896                           
   897                           
   898                           ; 3 bytes @ 0x1
   899  0021                     	ds	1
   900  0022                     ??_sendChar:	
   901  0022                     so@c:	
   902                           ; 1 bytes @ 0x2
   903                           
   904  0022                     sendChar@i:	
   905                           ; 1 bytes @ 0x2
   906                           
   907  0022                     deltaT@tm_high:	
   908                           ; 1 bytes @ 0x2
   909                           
   910  0022                     ___wmul@multiplicand:	
   911                           ; 2 bytes @ 0x2
   912                           
   913  0022                     ___lwdiv@dividend:	
   914                           ; 2 bytes @ 0x2
   915                           
   916  0022                     ___lwmod@dividend:	
   917                           ; 2 bytes @ 0x2
   918                           
   919                           
   920                           ; 2 bytes @ 0x2
   921  0022                     	ds	1
   922  0023                     ??_clearDisplay:	
   923  0023                     ___ftpack@exp:	
   924                           ; 1 bytes @ 0x3
   925                           
   926  0023                     ___tmul@multiplicand:	
   927                           ; 1 bytes @ 0x3
   928                           
   929  0023                     ___ftge@ff2:	
   930                           ; 3 bytes @ 0x3
   931                           
   932  0023                     ___ltdiv@dividend:	
   933                           ; 3 bytes @ 0x3
   934                           
   935                           
   936                           ; 3 bytes @ 0x3
   937  0023                     	ds	1
   938  0024                     ??_sendFloat:	
   939  0024                     ??_deltaT:	
   940                           ; 1 bytes @ 0x4
   941                           
   942  0024                     ??___wmul:	
   943                           ; 1 bytes @ 0x4
   944                           
   945  0024                     ??___fttol:	
   946                           ; 1 bytes @ 0x4
   947                           
   948  0024                     ??___lwdiv:	
   949                           ; 1 bytes @ 0x4
   950                           
   951  0024                     ??___lwmod:	
   952                           ; 1 bytes @ 0x4
   953                           
   954  0024                     clearDisplay@leng:	
   955                           ; 1 bytes @ 0x4
   956                           
   957  0024                     ___ftpack@sign:	
   958                           ; 1 bytes @ 0x4
   959                           
   960  0024                     ___wmul@product:	
   961                           ; 1 bytes @ 0x4
   962                           
   963                           
   964                           ; 2 bytes @ 0x4
   965  0024                     	ds	1
   966  0025                     ??___ftpack:	
   967  0025                     ___lwmod@counter:	
   968                           ; 1 bytes @ 0x5
   969                           
   970  0025                     ___lwdiv@quotient:	
   971                           ; 1 bytes @ 0x5
   972                           
   973                           
   974                           ; 2 bytes @ 0x5
   975  0025                     	ds	1
   976  0026                     ??___tmul:	
   977  0026                     ??___ftge:	
   978                           ; 1 bytes @ 0x6
   979                           
   980  0026                     ??___ltdiv:	
   981                           ; 1 bytes @ 0x6
   982                           
   983  0026                     ?___awdiv:	
   984                           ; 1 bytes @ 0x6
   985                           
   986  0026                     ___awdiv@divisor:	
   987                           ; 2 bytes @ 0x6
   988                           
   989  0026                     ___tmul@product:	
   990                           ; 2 bytes @ 0x6
   991                           
   992                           
   993                           ; 3 bytes @ 0x6
   994  0026                     	ds	1
   995  0027                     sendFloat@ptr:	
   996  0027                     ___lwdiv@counter:	
   997                           ; 1 bytes @ 0x7
   998                           
   999  0027                     ___ltdiv@quotient:	
  1000                           ; 1 bytes @ 0x7
  1001                           
  1002                           
  1003                           ; 3 bytes @ 0x7
  1004  0027                     	ds	1
  1005  0028                     ?___lbtoft:	
  1006  0028                     ?___lwtoft:	
  1007                           ; 3 bytes @ 0x8
  1008                           
  1009  0028                     ___fttol@sign1:	
  1010                           ; 3 bytes @ 0x8
  1011                           
  1012  0028                     ___awdiv@dividend:	
  1013                           ; 1 bytes @ 0x8
  1014                           
  1015  0028                     ___lwtoft@c:	
  1016                           ; 2 bytes @ 0x8
  1017                           
  1018                           
  1019                           ; 2 bytes @ 0x8
  1020  0028                     	ds	1
  1021  0029                     ___fttol@lval:	
  1022                           
  1023                           ; 4 bytes @ 0x9
  1024  0029                     	ds	1
  1025  002A                     ??___awdiv:	
  1026  002A                     ___ltdiv@counter:	
  1027                           ; 1 bytes @ 0xA
  1028                           
  1029                           
  1030                           ; 1 bytes @ 0xA
  1031  002A                     	ds	1
  1032  002B                     ??___lbtoft:	
  1033  002B                     ??___lwtoft:	
  1034                           ; 1 bytes @ 0xB
  1035                           
  1036  002B                     ___awdiv@counter:	
  1037                           ; 1 bytes @ 0xB
  1038                           
  1039                           
  1040                           ; 1 bytes @ 0xB
  1041  002B                     	ds	1
  1042  002C                     ___awdiv@sign:	
  1043                           
  1044                           ; 1 bytes @ 0xC
  1045  002C                     	ds	1
  1046  002D                     ___fttol@exp1:	
  1047  002D                     ___awdiv@quotient:	
  1048                           ; 1 bytes @ 0xD
  1049                           
  1050                           
  1051                           ; 2 bytes @ 0xD
  1052  002D                     	ds	1
  1053  002E                     ?_setNr:	
  1054  002E                     setNr@nr:	
  1055                           ; 1 bytes @ 0xE
  1056                           
  1057                           
  1058                           ; 2 bytes @ 0xE
  1059  002E                     	ds	1
  1060  002F                     ?_isin_:	
  1061  002F                     ___lbtoft@c:	
  1062                           ; 2 bytes @ 0xF
  1063                           
  1064  002F                     isin_@z:	
  1065                           ; 1 bytes @ 0xF
  1066                           
  1067                           
  1068                           ; 2 bytes @ 0xF
  1069  002F                     	ds	1
  1070  0030                     ??_setNr:	
  1071                           
  1072                           ; 1 bytes @ 0x10
  1073  0030                     	ds	1
  1074  0031                     ??_isin_:	
  1075  0031                     setNr@it:	
  1076                           ; 1 bytes @ 0x11
  1077                           
  1078                           
  1079                           ; 1 bytes @ 0x11
  1080  0031                     	ds	2
  1081  0033                     _isin_$801:	
  1082                           
  1083                           ; 2 bytes @ 0x13
  1084  0033                     	ds	2
  1085  0035                     ?_isin:	
  1086  0035                     isin@z:	
  1087                           ; 2 bytes @ 0x15
  1088                           
  1089                           
  1090                           ; 2 bytes @ 0x15
  1091  0035                     	ds	2
  1092  0037                     ??_isin:	
  1093                           
  1094                           ; 1 bytes @ 0x17
  1095  0037                     	ds	4
  1096  003B                     ?_icos:	
  1097  003B                     icos@z:	
  1098                           ; 2 bytes @ 0x1B
  1099                           
  1100                           
  1101                           ; 2 bytes @ 0x1B
  1102  003B                     	ds	2
  1103  003D                     ??_icos:	
  1104  003D                     ?___awtoft:	
  1105                           ; 1 bytes @ 0x1D
  1106                           
  1107  003D                     ___awtoft@c:	
  1108                           ; 3 bytes @ 0x1D
  1109                           
  1110                           
  1111                           ; 2 bytes @ 0x1D
  1112  003D                     	ds	3
  1113  0040                     ??___awtoft:	
  1114                           
  1115                           ; 1 bytes @ 0x20
  1116  0040                     	ds	2
  1117  0042                     ___awtoft@sign:	
  1118                           
  1119                           ; 1 bytes @ 0x22
  1120  0042                     	ds	1
  1121  0043                     ?___ftmul:	
  1122  0043                     ___ftmul@f1:	
  1123                           ; 3 bytes @ 0x23
  1124                           
  1125                           
  1126                           ; 3 bytes @ 0x23
  1127  0043                     	ds	3
  1128  0046                     ___ftmul@f2:	
  1129                           
  1130                           ; 3 bytes @ 0x26
  1131  0046                     	ds	3
  1132  0049                     ??___ftmul:	
  1133                           
  1134                           ; 1 bytes @ 0x29
  1135  0049                     	ds	4
  1136  004D                     ___ftmul@exp:	
  1137                           
  1138                           ; 1 bytes @ 0x2D
  1139  004D                     	ds	1
  1140  004E                     ___ftmul@f3_as_product:	
  1141                           
  1142                           ; 3 bytes @ 0x2E
  1143  004E                     	ds	3
  1144  0051                     ___ftmul@cntr:	
  1145                           
  1146                           ; 1 bytes @ 0x31
  1147  0051                     	ds	1
  1148  0052                     ___ftmul@sign:	
  1149                           
  1150                           ; 1 bytes @ 0x32
  1151  0052                     	ds	1
  1152  0053                     ?___ftdiv:	
  1153  0053                     ___ftdiv@f2:	
  1154                           ; 3 bytes @ 0x33
  1155                           
  1156                           
  1157                           ; 3 bytes @ 0x33
  1158  0053                     	ds	3
  1159  0056                     ___ftdiv@f1:	
  1160                           
  1161                           ; 3 bytes @ 0x36
  1162  0056                     	ds	3
  1163  0059                     ??___ftdiv:	
  1164                           
  1165                           ; 1 bytes @ 0x39
  1166  0059                     	ds	4
  1167  005D                     ___ftdiv@cntr:	
  1168                           
  1169                           ; 1 bytes @ 0x3D
  1170  005D                     	ds	1
  1171  005E                     ___ftdiv@f3:	
  1172                           
  1173                           ; 3 bytes @ 0x3E
  1174  005E                     	ds	3
  1175  0061                     ___ftdiv@exp:	
  1176                           
  1177                           ; 1 bytes @ 0x41
  1178  0061                     	ds	1
  1179  0062                     ___ftdiv@sign:	
  1180                           
  1181                           ; 1 bytes @ 0x42
  1182  0062                     	ds	1
  1183  0063                     ?_readVdd:	
  1184  0063                     ?___ftadd:	
  1185                           ; 3 bytes @ 0x43
  1186                           
  1187  0063                     ___ftadd@f1:	
  1188                           ; 3 bytes @ 0x43
  1189                           
  1190                           
  1191                           ; 3 bytes @ 0x43
  1192  0063                     	ds	3
  1193  0066                     ??_readVdd:	
  1194  0066                     ?___ftneg:	
  1195                           ; 1 bytes @ 0x46
  1196                           
  1197  0066                     ___ftadd@f2:	
  1198                           ; 3 bytes @ 0x46
  1199                           
  1200  0066                     ___ftneg@f1:	
  1201                           ; 3 bytes @ 0x46
  1202                           
  1203                           
  1204                           ; 3 bytes @ 0x46
  1205  0066                     	ds	3
  1206  0069                     ??___ftadd:	
  1207  0069                     ??___ftneg:	
  1208                           ; 1 bytes @ 0x49
  1209                           
  1210                           
  1211                           ; 1 bytes @ 0x49
  1212  0069                     	ds	4
  1213  006D                     ___ftadd@sign:	
  1214                           
  1215                           ; 1 bytes @ 0x4D
  1216  006D                     	ds	1
  1217  006E                     ___ftadd@exp2:	
  1218                           
  1219                           ; 1 bytes @ 0x4E
  1220  006E                     	ds	1
  1221  006F                     ___ftadd@exp1:	
  1222                           
  1223                           ; 1 bytes @ 0x4F
  1224  006F                     	ds	1
  1225  0070                     ??_readCurrent:	
  1226                           
  1227                           	psect	maintext
  1228  00BF                     __pmaintext:	
  1229                           ; 1 bytes @ 0x50
  1230 ;;
  1231 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1232 ;;
  1233 ;; *************** function _main *****************
  1234 ;; Defined at:
  1235 ;;		line 632 in file "powerspy.c"
  1236 ;; Parameters:    Size  Location     Type
  1237 ;;		None
  1238 ;; Auto vars:     Size  Location     Type
  1239 ;;  apparent        3   40[BANK1 ] float 
  1240 ;;  angle           3   37[BANK1 ] unsigned um
  1241 ;;  current         3   34[BANK1 ] float 
  1242 ;;  reactive        3   31[BANK1 ] float 
  1243 ;;  real            3   28[BANK1 ] float 
  1244 ;;  voltage         3   25[BANK1 ] float 
  1245 ;;  so_buff         2   43[BANK1 ] unsigned short 
  1246 ;; Return value:  Size  Location     Type
  1247 ;;                  1    wreg      void 
  1248 ;; Registers used:
  1249 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1250 ;; Tracked objects:
  1251 ;;		On entry : B1F/0
  1252 ;;		On exit  : 0/0
  1253 ;;		Unchanged: 0/0
  1254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1255 ;;      Params:         0       0       0       0       0       0
  1256 ;;      Locals:         0       0      35       0       0       0
  1257 ;;      Temps:          0       0       4       0       0       0
  1258 ;;      Totals:         0       0      39       0       0       0
  1259 ;;Total ram usage:       39 bytes
  1260 ;; Hardware stack levels required when called:    7
  1261 ;; This function calls:
  1262 ;;		___awtoft
  1263 ;;		___ftdiv
  1264 ;;		___ftge
  1265 ;;		___ftmul
  1266 ;;		___ftneg
  1267 ;;		___fttol
  1268 ;;		___lbtoft
  1269 ;;		___ltdiv
  1270 ;;		___tmul
  1271 ;;		_clearDisplay
  1272 ;;		_deltaT
  1273 ;;		_icos
  1274 ;;		_initADC
  1275 ;;		_initBT
  1276 ;;		_initCOMP1
  1277 ;;		_initCOMP2
  1278 ;;		_initFVR
  1279 ;;		_initMessaging
  1280 ;;		_initPWMTMR4
  1281 ;;		_initPins
  1282 ;;		_initTMR1
  1283 ;;		_isin
  1284 ;;		_readCurrent
  1285 ;;		_readVdd
  1286 ;;		_readVoltage
  1287 ;;		_sendChar
  1288 ;;		_sendFloat
  1289 ;;		_setNr
  1290 ;;		_so
  1291 ;; This function is called by:
  1292 ;;		Startup code after reset
  1293 ;; This function uses a non-reentrant model
  1294 ;;
  1295                           
  1296                           
  1297                           ;psect for function _main
  1298  00BF                     _main:	
  1299                           
  1300                           ;powerspy.c: 634: uint24_t angle;
  1301                           ;powerspy.c: 635: float current;
  1302                           ;powerspy.c: 636: float voltage;
  1303                           ;powerspy.c: 637: float apparent;
  1304                           ;powerspy.c: 638: float real;
  1305                           ;powerspy.c: 639: float reactive;
  1306                           ;powerspy.c: 640: uint16_t so_buff;
  1307                           ;powerspy.c: 642: PEIE = 0;
  1308                           
  1309                           ;incstack = 0
  1310                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1311  00BF  130B               	bcf	11,6	;volatile
  1312                           
  1313                           ;powerspy.c: 643: GIE = 0;
  1314  00C0  138B               	bcf	11,7	;volatile
  1315                           
  1316                           ;powerspy.c: 645: initPins();
  1317  00C1  318A  22C7  3180   	fcall	_initPins
  1318                           
  1319                           ;powerspy.c: 646: initFVR();
  1320  00C4  3189  21C8  3180   	fcall	_initFVR
  1321                           
  1322                           ;powerspy.c: 647: initADC();
  1323  00C7  3189  21D1  3180   	fcall	_initADC
  1324                           
  1325                           ;powerspy.c: 648: initTMR1();
  1326  00CA  3189  21DB  3180   	fcall	_initTMR1
  1327                           
  1328                           ;powerspy.c: 649: initPWMTMR4();
  1329  00CD  318A  22E7  3180   	fcall	_initPWMTMR4
  1330                           
  1331                           ;powerspy.c: 650: initCOMP1();
  1332  00D0  3189  21E6  3180   	fcall	_initCOMP1
  1333                           
  1334                           ;powerspy.c: 651: initCOMP2();
  1335  00D3  3189  21F3  3180   	fcall	_initCOMP2
  1336                           
  1337                           ;powerspy.c: 652: initBT();
  1338  00D6  318A  225A  3180   	fcall	_initBT
  1339                           
  1340                           ;powerspy.c: 653: initMessaging();
  1341  00D9  3189  219F  3180   	fcall	_initMessaging
  1342                           
  1343                           ;powerspy.c: 655: PEIE = 1;
  1344  00DC  170B               	bsf	11,6	;volatile
  1345  00DD                     L10:	
  1346                           
  1347                           ;powerspy.c: 656: GIE = 0;
  1348  00DD  138B               	bcf	11,7	;volatile
  1349                           
  1350                           ;powerspy.c: 661: if ((flag & 0x02) && (flag & 0x01)) {
  1351                           
  1352                           ;powerspy.c: 658: while (1) {
  1353  00DE  18FC               	btfsc	_flag,1	;volatile
  1354  00DF  1C7C               	btfss	_flag,0	;volatile
  1355  00E0  2CC1               	goto	l3177
  1356                           
  1357                           ;powerspy.c: 662: if (flag & 0x04)
  1358  00E1  1D7C               	btfss	_flag,2	;volatile
  1359  00E2  28F2               	goto	l359
  1360                           
  1361                           ;powerspy.c: 663: angle = (deltaT(volt_time, curr_time) >> 2);
  1362  00E3  0021               	movlb	1	; select bank1
  1363  00E4  0852               	movf	(_volt_time+1)^(0+128),w
  1364  00E5  0020               	movlb	0	; select bank0
  1365  00E6  00A1               	movwf	deltaT@tm_low+1
  1366  00E7  0021               	movlb	1	; select bank1
  1367  00E8  0851               	movf	_volt_time^(0+128),w
  1368  00E9  0020               	movlb	0	; select bank0
  1369  00EA  00A0               	movwf	deltaT@tm_low
  1370  00EB  0021               	movlb	1	; select bank1
  1371  00EC  084E               	movf	(_curr_time+1)^(0+128),w
  1372  00ED  0020               	movlb	0	; select bank0
  1373  00EE  00A3               	movwf	deltaT@tm_high+1
  1374  00EF  0021               	movlb	1	; select bank1
  1375  00F0  084D               	movf	_curr_time^(0+128),w
  1376  00F1  2902               	goto	L11
  1377  00F2                     l359:	
  1378                           
  1379                           ;powerspy.c: 664: else if (flag & 0x08)
  1380  00F2  1DFC               	btfss	_flag,3	;volatile
  1381  00F3  2918               	goto	l3041
  1382                           
  1383                           ;powerspy.c: 665: angle = (deltaT(curr_time, volt_time) >> 2);
  1384  00F4  0021               	movlb	1	; select bank1
  1385  00F5  084E               	movf	(_curr_time+1)^(0+128),w
  1386  00F6  0020               	movlb	0	; select bank0
  1387  00F7  00A1               	movwf	deltaT@tm_low+1
  1388  00F8  0021               	movlb	1	; select bank1
  1389  00F9  084D               	movf	_curr_time^(0+128),w
  1390  00FA  0020               	movlb	0	; select bank0
  1391  00FB  00A0               	movwf	deltaT@tm_low
  1392  00FC  0021               	movlb	1	; select bank1
  1393  00FD  0852               	movf	(_volt_time+1)^(0+128),w
  1394  00FE  0020               	movlb	0	; select bank0
  1395  00FF  00A3               	movwf	deltaT@tm_high+1
  1396  0100  0021               	movlb	1	; select bank1
  1397  0101  0851               	movf	_volt_time^(0+128),w
  1398  0102                     L11:	
  1399  0102  0020               	movlb	0	; select bank0
  1400  0103  00A2               	movwf	deltaT@tm_high
  1401  0104  318B  2351  3180   	fcall	_deltaT
  1402  0107  0020               	movlb	0	; select bank0
  1403  0108  0820               	movf	?_deltaT,w
  1404  0109  0021               	movlb	1	; select bank1
  1405  010A  00A6               	movwf	??_main^(0+128)
  1406  010B  0020               	movlb	0	; select bank0
  1407  010C  0821               	movf	?_deltaT+1,w
  1408  010D  0021               	movlb	1	; select bank1
  1409  010E  00A7               	movwf	(??_main^(0+128)+1)
  1410  010F  36A7               	lsrf	(??_main^(0+128)+1),f
  1411  0110  0CA6               	rrf	??_main^(0+128),f
  1412  0111  36A7               	lsrf	(??_main^(0+128)+1),f
  1413  0112  0CA6               	rrf	??_main^(0+128),f
  1414  0113  0826               	movf	??_main^(0+128),w
  1415  0114  00C5               	movwf	main@angle^(0+128)
  1416  0115  0827               	movf	(??_main+1)^(0+128),w
  1417  0116  00C6               	movwf	(main@angle+1)^(0+128)
  1418  0117  01C7               	clrf	(main@angle+2)^(0+128)
  1419  0118                     l3041:	
  1420                           
  1421                           ;powerspy.c: 667: flag = 0;
  1422  0118  01FC               	clrf	_flag	;volatile
  1423                           
  1424                           ;powerspy.c: 669: angle /= 1000;
  1425  0119  30E8               	movlw	232
  1426  011A  0020               	movlb	0	; select bank0
  1427  011B  00A0               	movwf	___ltdiv@divisor
  1428  011C  3003               	movlw	3
  1429  011D  00A1               	movwf	___ltdiv@divisor+1
  1430  011E  3000               	movlw	0
  1431  011F  00A2               	movwf	___ltdiv@divisor+2
  1432  0120  0021               	movlb	1	; select bank1
  1433  0121  0845               	movf	main@angle^(0+128),w
  1434  0122  0020               	movlb	0	; select bank0
  1435  0123  00A3               	movwf	___ltdiv@dividend
  1436  0124  0021               	movlb	1	; select bank1
  1437  0125  0846               	movf	(main@angle+1)^(0+128),w
  1438  0126  0020               	movlb	0	; select bank0
  1439  0127  00A4               	movwf	___ltdiv@dividend+1
  1440  0128  0021               	movlb	1	; select bank1
  1441  0129  0847               	movf	(main@angle+2)^(0+128),w
  1442  012A  0020               	movlb	0	; select bank0
  1443  012B  00A5               	movwf	___ltdiv@dividend+2
  1444  012C  318C  24C3  3180   	fcall	___ltdiv
  1445  012F  0020               	movlb	0	; select bank0
  1446  0130  0820               	movf	?___ltdiv,w
  1447  0131  0021               	movlb	1	; select bank1
  1448  0132  00C5               	movwf	main@angle^(0+128)
  1449  0133  0020               	movlb	0	; select bank0
  1450  0134  0821               	movf	?___ltdiv+1,w
  1451  0135  0021               	movlb	1	; select bank1
  1452  0136  00C6               	movwf	(main@angle+1)^(0+128)
  1453  0137  0020               	movlb	0	; select bank0
  1454  0138  0822               	movf	?___ltdiv+2,w
  1455  0139  0021               	movlb	1	; select bank1
  1456  013A  00C7               	movwf	(main@angle+2)^(0+128)
  1457                           
  1458                           ;powerspy.c: 670: angle *= ((0xff)<<2) * 50;
  1459  013B  3038               	movlw	56
  1460  013C  0020               	movlb	0	; select bank0
  1461  013D  00A0               	movwf	___tmul@multiplier
  1462  013E  30C7               	movlw	199
  1463  013F  00A1               	movwf	___tmul@multiplier+1
  1464  0140  30FF               	movlw	255
  1465  0141  00A2               	movwf	___tmul@multiplier+2
  1466  0142  0021               	movlb	1	; select bank1
  1467  0143  0845               	movf	main@angle^(0+128),w
  1468  0144  0020               	movlb	0	; select bank0
  1469  0145  00A3               	movwf	___tmul@multiplicand
  1470  0146  0021               	movlb	1	; select bank1
  1471  0147  0846               	movf	(main@angle+1)^(0+128),w
  1472  0148  0020               	movlb	0	; select bank0
  1473  0149  00A4               	movwf	___tmul@multiplicand+1
  1474  014A  0021               	movlb	1	; select bank1
  1475  014B  0847               	movf	(main@angle+2)^(0+128),w
  1476  014C  0020               	movlb	0	; select bank0
  1477  014D  00A5               	movwf	___tmul@multiplicand+2
  1478  014E  318B  232A  3180   	fcall	___tmul
  1479  0151  0020               	movlb	0	; select bank0
  1480  0152  0820               	movf	?___tmul,w
  1481  0153  0021               	movlb	1	; select bank1
  1482  0154  00C5               	movwf	main@angle^(0+128)
  1483  0155  0020               	movlb	0	; select bank0
  1484  0156  0821               	movf	?___tmul+1,w
  1485  0157  0021               	movlb	1	; select bank1
  1486  0158  00C6               	movwf	(main@angle+1)^(0+128)
  1487  0159  0020               	movlb	0	; select bank0
  1488  015A  0822               	movf	?___tmul+2,w
  1489  015B  0021               	movlb	1	; select bank1
  1490  015C  00C7               	movwf	(main@angle+2)^(0+128)
  1491                           
  1492                           ;powerspy.c: 673: angle /= 1000;
  1493  015D  30E8               	movlw	232
  1494  015E  0020               	movlb	0	; select bank0
  1495  015F  00A0               	movwf	___ltdiv@divisor
  1496  0160  3003               	movlw	3
  1497  0161  00A1               	movwf	___ltdiv@divisor+1
  1498  0162  3000               	movlw	0
  1499  0163  00A2               	movwf	___ltdiv@divisor+2
  1500  0164  0021               	movlb	1	; select bank1
  1501  0165  0845               	movf	main@angle^(0+128),w
  1502  0166  0020               	movlb	0	; select bank0
  1503  0167  00A3               	movwf	___ltdiv@dividend
  1504  0168  0021               	movlb	1	; select bank1
  1505  0169  0846               	movf	(main@angle+1)^(0+128),w
  1506  016A  0020               	movlb	0	; select bank0
  1507  016B  00A4               	movwf	___ltdiv@dividend+1
  1508  016C  0021               	movlb	1	; select bank1
  1509  016D  0847               	movf	(main@angle+2)^(0+128),w
  1510  016E  0020               	movlb	0	; select bank0
  1511  016F  00A5               	movwf	___ltdiv@dividend+2
  1512  0170  318C  24C3  3180   	fcall	___ltdiv
  1513  0173  0020               	movlb	0	; select bank0
  1514  0174  0820               	movf	?___ltdiv,w
  1515  0175  0021               	movlb	1	; select bank1
  1516  0176  00C5               	movwf	main@angle^(0+128)
  1517  0177  0020               	movlb	0	; select bank0
  1518  0178  0821               	movf	?___ltdiv+1,w
  1519  0179  0021               	movlb	1	; select bank1
  1520  017A  00C6               	movwf	(main@angle+1)^(0+128)
  1521  017B  0020               	movlb	0	; select bank0
  1522  017C  0822               	movf	?___ltdiv+2,w
  1523  017D  0021               	movlb	1	; select bank1
  1524  017E  00C7               	movwf	(main@angle+2)^(0+128)
  1525                           
  1526                           ;powerspy.c: 675: i_u_offs = -readVdd()* 5.0 / 2.0;
  1527  017F  3187  27C5  3180   	fcall	_readVdd
  1528  0182  0020               	movlb	0	; select bank0
  1529  0183  0863               	movf	?_readVdd,w
  1530  0184  00E6               	movwf	___ftneg@f1
  1531  0185  0864               	movf	?_readVdd+1,w
  1532  0186  00E7               	movwf	___ftneg@f1+1
  1533  0187  0865               	movf	?_readVdd+2,w
  1534  0188  00E8               	movwf	___ftneg@f1+2
  1535  0189  3189  21BF  3180   	fcall	___ftneg
  1536  018C  0020               	movlb	0	; select bank0
  1537  018D  0866               	movf	?___ftneg,w
  1538  018E  0021               	movlb	1	; select bank1
  1539  018F  00AA               	movwf	_main$800^(0+128)
  1540  0190  0020               	movlb	0	; select bank0
  1541  0191  0867               	movf	?___ftneg+1,w
  1542  0192  0021               	movlb	1	; select bank1
  1543  0193  00AB               	movwf	(_main$800+1)^(0+128)
  1544  0194  0020               	movlb	0	; select bank0
  1545  0195  0868               	movf	?___ftneg+2,w
  1546  0196  0021               	movlb	1	; select bank1
  1547  0197  00AC               	movwf	(_main$800+2)^(0+128)
  1548                           
  1549                           ;powerspy.c: 675: i_u_offs = -readVdd()* 5.0 / 2.0;
  1550  0198  3000               	movlw	0
  1551  0199  0020               	movlb	0	; select bank0
  1552  019A  00D3               	movwf	___ftdiv@f2
  1553  019B  3000               	movlw	0
  1554  019C  00D4               	movwf	___ftdiv@f2+1
  1555  019D  3040               	movlw	64
  1556  019E  00D5               	movwf	___ftdiv@f2+2
  1557  019F  3000               	movlw	0
  1558  01A0  00C3               	movwf	___ftmul@f1
  1559  01A1  30A0               	movlw	160
  1560  01A2  00C4               	movwf	___ftmul@f1+1
  1561  01A3  3040               	movlw	64
  1562  01A4  00C5               	movwf	___ftmul@f1+2
  1563  01A5  0021               	movlb	1	; select bank1
  1564  01A6  082A               	movf	_main$800^(0+128),w
  1565  01A7  0020               	movlb	0	; select bank0
  1566  01A8  00C6               	movwf	___ftmul@f2
  1567  01A9  0021               	movlb	1	; select bank1
  1568  01AA  082B               	movf	(_main$800+1)^(0+128),w
  1569  01AB  0020               	movlb	0	; select bank0
  1570  01AC  00C7               	movwf	___ftmul@f2+1
  1571  01AD  0021               	movlb	1	; select bank1
  1572  01AE  082C               	movf	(_main$800+2)^(0+128),w
  1573  01AF  0020               	movlb	0	; select bank0
  1574  01B0  00C8               	movwf	___ftmul@f2+2
  1575  01B1  3185  25C6  3180   	fcall	___ftmul
  1576  01B4  0020               	movlb	0	; select bank0
  1577  01B5  0843               	movf	?___ftmul,w
  1578  01B6  00D6               	movwf	___ftdiv@f1
  1579  01B7  0844               	movf	?___ftmul+1,w
  1580  01B8  00D7               	movwf	___ftdiv@f1+1
  1581  01B9  0845               	movf	?___ftmul+2,w
  1582  01BA  00D8               	movwf	___ftdiv@f1+2
  1583  01BB  3186  267A  3180   	fcall	___ftdiv
  1584  01BE  0020               	movlb	0	; select bank0
  1585  01BF  0853               	movf	?___ftdiv,w
  1586  01C0  0021               	movlb	1	; select bank1
  1587  01C1  00D9               	movwf	_i_u_offs^(0+128)
  1588  01C2  0020               	movlb	0	; select bank0
  1589  01C3  0854               	movf	?___ftdiv+1,w
  1590  01C4  0021               	movlb	1	; select bank1
  1591  01C5  00DA               	movwf	(_i_u_offs+1)^(0+128)
  1592  01C6  0020               	movlb	0	; select bank0
  1593  01C7  0855               	movf	?___ftdiv+2,w
  1594  01C8  0021               	movlb	1	; select bank1
  1595  01C9  00DB               	movwf	(_i_u_offs+2)^(0+128)
  1596                           
  1597                           ;powerspy.c: 676: current = readCurrent();
  1598  01CA  318E  26EB  3180   	fcall	_readCurrent
  1599  01CD  0021               	movlb	1	; select bank1
  1600  01CE  0820               	movf	?_readCurrent^(0+128),w
  1601  01CF  00C2               	movwf	main@current^(0+128)
  1602  01D0  0821               	movf	(?_readCurrent+1)^(0+128),w
  1603  01D1  00C3               	movwf	(main@current+1)^(0+128)
  1604  01D2  0822               	movf	(?_readCurrent+2)^(0+128),w
  1605  01D3  00C4               	movwf	(main@current+2)^(0+128)
  1606                           
  1607                           ;powerspy.c: 677: voltage = readVoltage();
  1608  01D4  3180  2002  3180   	fcall	_readVoltage
  1609  01D7  318A  2271  3180   	fcall	___lbtoft
  1610  01DA  0020               	movlb	0	; select bank0
  1611  01DB  0828               	movf	?___lbtoft,w
  1612  01DC  0021               	movlb	1	; select bank1
  1613  01DD  00B9               	movwf	main@voltage^(0+128)
  1614  01DE  0020               	movlb	0	; select bank0
  1615  01DF  0829               	movf	?___lbtoft+1,w
  1616  01E0  0021               	movlb	1	; select bank1
  1617  01E1  00BA               	movwf	(main@voltage+1)^(0+128)
  1618  01E2  0020               	movlb	0	; select bank0
  1619  01E3  082A               	movf	?___lbtoft+2,w
  1620  01E4  0021               	movlb	1	; select bank1
  1621  01E5  00BB               	movwf	(main@voltage+2)^(0+128)
  1622                           
  1623                           ;powerspy.c: 678: apparent = voltage * current;
  1624  01E6  0842               	movf	main@current^(0+128),w
  1625  01E7  0020               	movlb	0	; select bank0
  1626  01E8  00C3               	movwf	___ftmul@f1
  1627  01E9  0021               	movlb	1	; select bank1
  1628  01EA  0843               	movf	(main@current+1)^(0+128),w
  1629  01EB  0020               	movlb	0	; select bank0
  1630  01EC  00C4               	movwf	___ftmul@f1+1
  1631  01ED  0021               	movlb	1	; select bank1
  1632  01EE  0844               	movf	(main@current+2)^(0+128),w
  1633  01EF  0020               	movlb	0	; select bank0
  1634  01F0  00C5               	movwf	___ftmul@f1+2
  1635  01F1  0021               	movlb	1	; select bank1
  1636  01F2  0839               	movf	main@voltage^(0+128),w
  1637  01F3  0020               	movlb	0	; select bank0
  1638  01F4  00C6               	movwf	___ftmul@f2
  1639  01F5  0021               	movlb	1	; select bank1
  1640  01F6  083A               	movf	(main@voltage+1)^(0+128),w
  1641  01F7  0020               	movlb	0	; select bank0
  1642  01F8  00C7               	movwf	___ftmul@f2+1
  1643  01F9  0021               	movlb	1	; select bank1
  1644  01FA  083B               	movf	(main@voltage+2)^(0+128),w
  1645  01FB  0020               	movlb	0	; select bank0
  1646  01FC  00C8               	movwf	___ftmul@f2+2
  1647  01FD  3185  25C6  3180   	fcall	___ftmul
  1648  0200  0020               	movlb	0	; select bank0
  1649  0201  0843               	movf	?___ftmul,w
  1650  0202  0021               	movlb	1	; select bank1
  1651  0203  00C8               	movwf	main@apparent^(0+128)
  1652  0204  0020               	movlb	0	; select bank0
  1653  0205  0844               	movf	?___ftmul+1,w
  1654  0206  0021               	movlb	1	; select bank1
  1655  0207  00C9               	movwf	(main@apparent+1)^(0+128)
  1656  0208  0020               	movlb	0	; select bank0
  1657  0209  0845               	movf	?___ftmul+2,w
  1658  020A  0021               	movlb	1	; select bank1
  1659  020B  00CA               	movwf	(main@apparent+2)^(0+128)
  1660                           
  1661                           ;powerspy.c: 679: real = (apparent * icos(angle)) / (0xff);
  1662  020C  3000               	movlw	0
  1663  020D  0020               	movlb	0	; select bank0
  1664  020E  00D3               	movwf	___ftdiv@f2
  1665  020F  307F               	movlw	127
  1666  0210  00D4               	movwf	___ftdiv@f2+1
  1667  0211  3043               	movlw	67
  1668  0212  00D5               	movwf	___ftdiv@f2+2
  1669  0213  0021               	movlb	1	; select bank1
  1670  0214  0848               	movf	main@apparent^(0+128),w
  1671  0215  0020               	movlb	0	; select bank0
  1672  0216  00C3               	movwf	___ftmul@f1
  1673  0217  0021               	movlb	1	; select bank1
  1674  0218  0849               	movf	(main@apparent+1)^(0+128),w
  1675  0219  0020               	movlb	0	; select bank0
  1676  021A  00C4               	movwf	___ftmul@f1+1
  1677  021B  0021               	movlb	1	; select bank1
  1678  021C  084A               	movf	(main@apparent+2)^(0+128),w
  1679  021D  0020               	movlb	0	; select bank0
  1680  021E  00C5               	movwf	___ftmul@f1+2
  1681  021F  0021               	movlb	1	; select bank1
  1682  0220  0846               	movf	(main@angle+1)^(0+128),w
  1683  0221  0020               	movlb	0	; select bank0
  1684  0222  00BC               	movwf	icos@z+1
  1685  0223  0021               	movlb	1	; select bank1
  1686  0224  0845               	movf	main@angle^(0+128),w
  1687  0225  0020               	movlb	0	; select bank0
  1688  0226  00BB               	movwf	icos@z
  1689  0227  318A  220E  3180   	fcall	_icos
  1690  022A  0020               	movlb	0	; select bank0
  1691  022B  083C               	movf	?_icos+1,w
  1692  022C  00BE               	movwf	___awtoft@c+1
  1693  022D  083B               	movf	?_icos,w
  1694  022E  00BD               	movwf	___awtoft@c
  1695  022F  318B  2308  3180   	fcall	___awtoft
  1696  0232  0020               	movlb	0	; select bank0
  1697  0233  083D               	movf	?___awtoft,w
  1698  0234  00C6               	movwf	___ftmul@f2
  1699  0235  083E               	movf	?___awtoft+1,w
  1700  0236  00C7               	movwf	___ftmul@f2+1
  1701  0237  083F               	movf	?___awtoft+2,w
  1702  0238  00C8               	movwf	___ftmul@f2+2
  1703  0239  3185  25C6  3180   	fcall	___ftmul
  1704  023C  0020               	movlb	0	; select bank0
  1705  023D  0843               	movf	?___ftmul,w
  1706  023E  00D6               	movwf	___ftdiv@f1
  1707  023F  0844               	movf	?___ftmul+1,w
  1708  0240  00D7               	movwf	___ftdiv@f1+1
  1709  0241  0845               	movf	?___ftmul+2,w
  1710  0242  00D8               	movwf	___ftdiv@f1+2
  1711  0243  3186  267A  3180   	fcall	___ftdiv
  1712  0246  0020               	movlb	0	; select bank0
  1713  0247  0853               	movf	?___ftdiv,w
  1714  0248  0021               	movlb	1	; select bank1
  1715  0249  00BC               	movwf	main@real^(0+128)
  1716  024A  0020               	movlb	0	; select bank0
  1717  024B  0854               	movf	?___ftdiv+1,w
  1718  024C  0021               	movlb	1	; select bank1
  1719  024D  00BD               	movwf	(main@real+1)^(0+128)
  1720  024E  0020               	movlb	0	; select bank0
  1721  024F  0855               	movf	?___ftdiv+2,w
  1722  0250  0021               	movlb	1	; select bank1
  1723  0251  00BE               	movwf	(main@real+2)^(0+128)
  1724                           
  1725                           ;powerspy.c: 680: reactive = (apparent * isin(angle)) / (0xff);
  1726  0252  3000               	movlw	0
  1727  0253  0020               	movlb	0	; select bank0
  1728  0254  00D3               	movwf	___ftdiv@f2
  1729  0255  307F               	movlw	127
  1730  0256  00D4               	movwf	___ftdiv@f2+1
  1731  0257  3043               	movlw	67
  1732  0258  00D5               	movwf	___ftdiv@f2+2
  1733  0259  0021               	movlb	1	; select bank1
  1734  025A  0848               	movf	main@apparent^(0+128),w
  1735  025B  0020               	movlb	0	; select bank0
  1736  025C  00C3               	movwf	___ftmul@f1
  1737  025D  0021               	movlb	1	; select bank1
  1738  025E  0849               	movf	(main@apparent+1)^(0+128),w
  1739  025F  0020               	movlb	0	; select bank0
  1740  0260  00C4               	movwf	___ftmul@f1+1
  1741  0261  0021               	movlb	1	; select bank1
  1742  0262  084A               	movf	(main@apparent+2)^(0+128),w
  1743  0263  0020               	movlb	0	; select bank0
  1744  0264  00C5               	movwf	___ftmul@f1+2
  1745  0265  0021               	movlb	1	; select bank1
  1746  0266  0846               	movf	(main@angle+1)^(0+128),w
  1747  0267  0020               	movlb	0	; select bank0
  1748  0268  00B6               	movwf	isin@z+1
  1749  0269  0021               	movlb	1	; select bank1
  1750  026A  0845               	movf	main@angle^(0+128),w
  1751  026B  0020               	movlb	0	; select bank0
  1752  026C  00B5               	movwf	isin@z
  1753  026D  318F  2774  3180   	fcall	_isin
  1754  0270  0020               	movlb	0	; select bank0
  1755  0271  0836               	movf	?_isin+1,w
  1756  0272  00BE               	movwf	___awtoft@c+1
  1757  0273  0835               	movf	?_isin,w
  1758  0274  00BD               	movwf	___awtoft@c
  1759  0275  318B  2308  3180   	fcall	___awtoft
  1760  0278  0020               	movlb	0	; select bank0
  1761  0279  083D               	movf	?___awtoft,w
  1762  027A  00C6               	movwf	___ftmul@f2
  1763  027B  083E               	movf	?___awtoft+1,w
  1764  027C  00C7               	movwf	___ftmul@f2+1
  1765  027D  083F               	movf	?___awtoft+2,w
  1766  027E  00C8               	movwf	___ftmul@f2+2
  1767  027F  3185  25C6  3180   	fcall	___ftmul
  1768  0282  0020               	movlb	0	; select bank0
  1769  0283  0843               	movf	?___ftmul,w
  1770  0284  00D6               	movwf	___ftdiv@f1
  1771  0285  0844               	movf	?___ftmul+1,w
  1772  0286  00D7               	movwf	___ftdiv@f1+1
  1773  0287  0845               	movf	?___ftmul+2,w
  1774  0288  00D8               	movwf	___ftdiv@f1+2
  1775  0289  3186  267A  3180   	fcall	___ftdiv
  1776  028C  0020               	movlb	0	; select bank0
  1777  028D  0853               	movf	?___ftdiv,w
  1778  028E  0021               	movlb	1	; select bank1
  1779  028F  00BF               	movwf	main@reactive^(0+128)
  1780  0290  0020               	movlb	0	; select bank0
  1781  0291  0854               	movf	?___ftdiv+1,w
  1782  0292  0021               	movlb	1	; select bank1
  1783  0293  00C0               	movwf	(main@reactive+1)^(0+128)
  1784  0294  0020               	movlb	0	; select bank0
  1785  0295  0855               	movf	?___ftdiv+2,w
  1786  0296  0021               	movlb	1	; select bank1
  1787  0297  00C1               	movwf	(main@reactive+2)^(0+128)
  1788                           
  1789                           ;powerspy.c: 682: RA3 = 0;
  1790  0298  0020               	movlb	0	; select bank0
  1791  0299  118C               	bcf	12,3	;volatile
  1792                           
  1793                           ;powerspy.c: 683: switch (mode) {
  1794  029A  2B63               	goto	l3131
  1795  029B                     l3065:	
  1796                           ;powerspy.c: 684: case 0:
  1797                           
  1798                           
  1799                           ;powerspy.c: 685: clearDisplay(7);
  1800  029B  3007               	movlw	7
  1801  029C  318A  2200  3180   	fcall	_clearDisplay
  1802                           
  1803                           ;powerspy.c: 686: so_buff = 5;
  1804  029F  3005               	movlw	5
  1805  02A0  0021               	movlb	1	; select bank1
  1806  02A1  00CB               	movwf	main@so_buff^(0+128)
  1807  02A2  3000               	movlw	0
  1808  02A3  00CC               	movwf	(main@so_buff^(0+128)+1)
  1809                           
  1810                           ;powerspy.c: 687: break;
  1811  02A4  2B77               	goto	l3137
  1812  02A5                     l3069:	
  1813                           ;powerspy.c: 688: case 1:
  1814                           
  1815                           
  1816                           ;powerspy.c: 689: clearDisplay(7);
  1817  02A5  3007               	movlw	7
  1818  02A6  318A  2200  3180   	fcall	_clearDisplay
  1819                           
  1820                           ;powerspy.c: 690: so_buff = 0b111111111111111101011111;
  1821  02A9  305F               	movlw	95
  1822  02AA  0021               	movlb	1	; select bank1
  1823  02AB  00CB               	movwf	main@so_buff^(0+128)
  1824  02AC  30FF               	movlw	255
  1825  02AD  00CC               	movwf	(main@so_buff^(0+128)+1)
  1826                           
  1827                           ;powerspy.c: 691: so(so_buff & 0xff);
  1828  02AE  084B               	movf	main@so_buff^(0+128),w
  1829  02AF  318B  23A9  3180   	fcall	_so
  1830                           
  1831                           ;powerspy.c: 692: so(so_buff >> 8 & 0xff);
  1832  02B2  0021               	movlb	1	; select bank1
  1833  02B3  084C               	movf	(main@so_buff+1)^(0+128),w
  1834  02B4  318B  23A9  3180   	fcall	_so
  1835                           
  1836                           ;powerspy.c: 693: so(so_buff >> 16 & 0xff);
  1837  02B7  0021               	movlb	1	; select bank1
  1838  02B8  084B               	movf	main@so_buff^(0+128),w
  1839  02B9  318B  23A9  3180   	fcall	_so
  1840                           
  1841                           ;powerspy.c: 694: so_buff = setNr((uint16_t) current);
  1842  02BC  0021               	movlb	1	; select bank1
  1843  02BD  0842               	movf	main@current^(0+128),w
  1844  02BE  0020               	movlb	0	; select bank0
  1845  02BF  00A0               	movwf	___fttol@f1
  1846  02C0  0021               	movlb	1	; select bank1
  1847  02C1  0843               	movf	(main@current+1)^(0+128),w
  1848  02C2  0020               	movlb	0	; select bank0
  1849  02C3  00A1               	movwf	___fttol@f1+1
  1850  02C4  0021               	movlb	1	; select bank1
  1851  02C5  0844               	movf	(main@current+2)^(0+128),w
  1852  02C6  2B4E               	goto	L12
  1853  02C7                     l3081:	
  1854                           ;powerspy.c: 696: case 2:
  1855                           
  1856                           ;powerspy.c: 695: break;
  1857                           
  1858                           
  1859                           ;powerspy.c: 697: clearDisplay(7);
  1860  02C7  3007               	movlw	7
  1861  02C8  318A  2200  3180   	fcall	_clearDisplay
  1862                           
  1863                           ;powerspy.c: 698: so_buff = 0b111101101011101111111111;
  1864  02CB  30FF               	movlw	255
  1865  02CC  0021               	movlb	1	; select bank1
  1866  02CD  00CB               	movwf	main@so_buff^(0+128)
  1867  02CE  30BB               	movlw	187
  1868  02CF  00CC               	movwf	(main@so_buff^(0+128)+1)
  1869                           
  1870                           ;powerspy.c: 699: so(so_buff & 0xff);
  1871  02D0  084B               	movf	main@so_buff^(0+128),w
  1872  02D1  318B  23A9  3180   	fcall	_so
  1873                           
  1874                           ;powerspy.c: 700: so(so_buff >> 8 & 0xff);
  1875  02D4  0021               	movlb	1	; select bank1
  1876  02D5  084C               	movf	(main@so_buff+1)^(0+128),w
  1877  02D6  318B  23A9  3180   	fcall	_so
  1878                           
  1879                           ;powerspy.c: 701: so(so_buff >> 16 & 0xff);
  1880  02D9  0021               	movlb	1	; select bank1
  1881  02DA  084B               	movf	main@so_buff^(0+128),w
  1882  02DB  318B  23A9  3180   	fcall	_so
  1883                           
  1884                           ;powerspy.c: 702: so_buff = setNr((uint16_t) voltage);
  1885  02DE  0021               	movlb	1	; select bank1
  1886  02DF  0839               	movf	main@voltage^(0+128),w
  1887  02E0  0020               	movlb	0	; select bank0
  1888  02E1  00A0               	movwf	___fttol@f1
  1889  02E2  0021               	movlb	1	; select bank1
  1890  02E3  083A               	movf	(main@voltage+1)^(0+128),w
  1891  02E4  0020               	movlb	0	; select bank0
  1892  02E5  00A1               	movwf	___fttol@f1+1
  1893  02E6  0021               	movlb	1	; select bank1
  1894  02E7  083B               	movf	(main@voltage+2)^(0+128),w
  1895  02E8  2B4E               	goto	L12
  1896  02E9                     l3093:	
  1897                           ;powerspy.c: 704: case 4:
  1898                           
  1899                           ;powerspy.c: 703: break;
  1900                           
  1901                           
  1902                           ;powerspy.c: 705: clearDisplay(7);
  1903  02E9  3007               	movlw	7
  1904  02EA  318A  2200  3180   	fcall	_clearDisplay
  1905                           
  1906                           ;powerspy.c: 706: so_buff = 0b111101101011101111111111 & 0b111111111111111101011111;
  1907  02ED  305F               	movlw	95
  1908  02EE  0021               	movlb	1	; select bank1
  1909  02EF  00CB               	movwf	main@so_buff^(0+128)
  1910  02F0  30BB               	movlw	187
  1911  02F1  00CC               	movwf	(main@so_buff^(0+128)+1)
  1912                           
  1913                           ;powerspy.c: 707: so(so_buff & 0xff);
  1914  02F2  084B               	movf	main@so_buff^(0+128),w
  1915  02F3  318B  23A9  3180   	fcall	_so
  1916                           
  1917                           ;powerspy.c: 708: so(so_buff >> 8 & 0xff);
  1918  02F6  0021               	movlb	1	; select bank1
  1919  02F7  084C               	movf	(main@so_buff+1)^(0+128),w
  1920  02F8  318B  23A9  3180   	fcall	_so
  1921                           
  1922                           ;powerspy.c: 709: so(so_buff >> 16 & 0xff);
  1923  02FB  0021               	movlb	1	; select bank1
  1924  02FC  084B               	movf	main@so_buff^(0+128),w
  1925  02FD  318B  23A9  3180   	fcall	_so
  1926                           
  1927                           ;powerspy.c: 710: so_buff = setNr((uint16_t) apparent);
  1928  0300  0021               	movlb	1	; select bank1
  1929  0301  0848               	movf	main@apparent^(0+128),w
  1930  0302  0020               	movlb	0	; select bank0
  1931  0303  00A0               	movwf	___fttol@f1
  1932  0304  0021               	movlb	1	; select bank1
  1933  0305  0849               	movf	(main@apparent+1)^(0+128),w
  1934  0306  0020               	movlb	0	; select bank0
  1935  0307  00A1               	movwf	___fttol@f1+1
  1936  0308  0021               	movlb	1	; select bank1
  1937  0309  084A               	movf	(main@apparent+2)^(0+128),w
  1938  030A  2B4E               	goto	L12
  1939  030B                     l3105:	
  1940                           ;powerspy.c: 712: case 5:
  1941                           
  1942                           ;powerspy.c: 711: break;
  1943                           
  1944                           
  1945                           ;powerspy.c: 713: clearDisplay(7);
  1946  030B  3007               	movlw	7
  1947  030C  318A  2200  3180   	fcall	_clearDisplay
  1948                           
  1949                           ;powerspy.c: 714: so_buff = 0b111111111111111100111111;
  1950  030F  303F               	movlw	63
  1951  0310  0021               	movlb	1	; select bank1
  1952  0311  00CB               	movwf	main@so_buff^(0+128)
  1953  0312  30FF               	movlw	255
  1954  0313  00CC               	movwf	(main@so_buff^(0+128)+1)
  1955                           
  1956                           ;powerspy.c: 715: so(so_buff & 0xff);
  1957  0314  084B               	movf	main@so_buff^(0+128),w
  1958  0315  318B  23A9  3180   	fcall	_so
  1959                           
  1960                           ;powerspy.c: 716: so(so_buff >> 8 & 0xff);
  1961  0318  0021               	movlb	1	; select bank1
  1962  0319  084C               	movf	(main@so_buff+1)^(0+128),w
  1963  031A  318B  23A9  3180   	fcall	_so
  1964                           
  1965                           ;powerspy.c: 717: so(so_buff >> 16 & 0xff);
  1966  031D  0021               	movlb	1	; select bank1
  1967  031E  084B               	movf	main@so_buff^(0+128),w
  1968  031F  318B  23A9  3180   	fcall	_so
  1969                           
  1970                           ;powerspy.c: 718: so_buff = setNr((uint16_t) real);
  1971  0322  0021               	movlb	1	; select bank1
  1972  0323  083C               	movf	main@real^(0+128),w
  1973  0324  0020               	movlb	0	; select bank0
  1974  0325  00A0               	movwf	___fttol@f1
  1975  0326  0021               	movlb	1	; select bank1
  1976  0327  083D               	movf	(main@real+1)^(0+128),w
  1977  0328  0020               	movlb	0	; select bank0
  1978  0329  00A1               	movwf	___fttol@f1+1
  1979  032A  0021               	movlb	1	; select bank1
  1980  032B  083E               	movf	(main@real+2)^(0+128),w
  1981  032C  2B4E               	goto	L12
  1982  032D                     l3117:	
  1983                           ;powerspy.c: 720: case 6:
  1984                           
  1985                           ;powerspy.c: 719: break;
  1986                           
  1987                           
  1988                           ;powerspy.c: 721: clearDisplay(7);
  1989  032D  3007               	movlw	7
  1990  032E  318A  2200  3180   	fcall	_clearDisplay
  1991                           
  1992                           ;powerspy.c: 722: so_buff = 0b111101101011101111111111 & 0b111110100111101011100111 & 0b
      +                          111111111111111101011111;
  1993  0331  3047               	movlw	71
  1994  0332  0021               	movlb	1	; select bank1
  1995  0333  00CB               	movwf	main@so_buff^(0+128)
  1996  0334  303A               	movlw	58
  1997  0335  00CC               	movwf	(main@so_buff^(0+128)+1)
  1998                           
  1999                           ;powerspy.c: 723: so(so_buff & 0xff);
  2000  0336  084B               	movf	main@so_buff^(0+128),w
  2001  0337  318B  23A9  3180   	fcall	_so
  2002                           
  2003                           ;powerspy.c: 724: so(so_buff >> 8 & 0xff);
  2004  033A  0021               	movlb	1	; select bank1
  2005  033B  084C               	movf	(main@so_buff+1)^(0+128),w
  2006  033C  318B  23A9  3180   	fcall	_so
  2007                           
  2008                           ;powerspy.c: 725: so(so_buff >> 16 & 0xff);
  2009  033F  0021               	movlb	1	; select bank1
  2010  0340  084B               	movf	main@so_buff^(0+128),w
  2011  0341  318B  23A9  3180   	fcall	_so
  2012                           
  2013                           ;powerspy.c: 726: so_buff = setNr((uint16_t) reactive);
  2014  0344  0021               	movlb	1	; select bank1
  2015  0345  083F               	movf	main@reactive^(0+128),w
  2016  0346  0020               	movlb	0	; select bank0
  2017  0347  00A0               	movwf	___fttol@f1
  2018  0348  0021               	movlb	1	; select bank1
  2019  0349  0840               	movf	(main@reactive+1)^(0+128),w
  2020  034A  0020               	movlb	0	; select bank0
  2021  034B  00A1               	movwf	___fttol@f1+1
  2022  034C  0021               	movlb	1	; select bank1
  2023  034D  0841               	movf	(main@reactive+2)^(0+128),w
  2024  034E                     L12:	
  2025  034E  0020               	movlb	0	; select bank0
  2026  034F  00A2               	movwf	___fttol@f1+2
  2027  0350  318E  2664  3180   	fcall	___fttol
  2028  0353  0020               	movlb	0	; select bank0
  2029  0354  0821               	movf	?___fttol+1,w
  2030  0355  00AF               	movwf	setNr@nr+1
  2031  0356  0820               	movf	?___fttol,w
  2032  0357  00AE               	movwf	setNr@nr
  2033  0358  318C  2410  3180   	fcall	_setNr
  2034  035B  0021               	movlb	1	; select bank1
  2035  035C  00A6               	movwf	??_main^(0+128)
  2036  035D  01A7               	clrf	(??_main^(0+128)+1)
  2037  035E  0826               	movf	??_main^(0+128),w
  2038  035F  00CB               	movwf	main@so_buff^(0+128)
  2039  0360  0827               	movf	(??_main+1)^(0+128),w
  2040  0361  00CC               	movwf	(main@so_buff+1)^(0+128)
  2041                           
  2042                           ;powerspy.c: 728: }
  2043                           
  2044                           ;powerspy.c: 727: break;
  2045  0362  2B77               	goto	l3137
  2046  0363                     l3131:	
  2047  0363  087D               	movf	_mode,w	;volatile
  2048                           
  2049                           ; Switch size 1, requested type "space"
  2050                           ; Number of cases is 6, Range of values is 0 to 6
  2051                           ; switch strategies available:
  2052                           ; Name         Instructions Cycles
  2053                           ; simple_byte           19    10 (average)
  2054                           ; direct_byte           20     6 (fixed)
  2055                           ; jumptable            260     6 (fixed)
  2056                           ;	Chosen strategy is simple_byte
  2057  0364  3A00               	xorlw	0	; case 0
  2058  0365  1903               	skipnz
  2059  0366  2A9B               	goto	l3065
  2060  0367  3A01               	xorlw	1	; case 1
  2061  0368  1903               	skipnz
  2062  0369  2AA5               	goto	l3069
  2063  036A  3A03               	xorlw	3	; case 2
  2064  036B  1903               	skipnz
  2065  036C  2AC7               	goto	l3081
  2066  036D  3A06               	xorlw	6	; case 4
  2067  036E  1903               	skipnz
  2068  036F  2AE9               	goto	l3093
  2069  0370  3A01               	xorlw	1	; case 5
  2070  0371  1903               	skipnz
  2071  0372  2B0B               	goto	l3105
  2072  0373  3A03               	xorlw	3	; case 6
  2073  0374  1903               	skipnz
  2074  0375  2B2D               	goto	l3117
  2075  0376  2B77               	goto	l3137
  2076  0377                     l3137:	
  2077                           ;powerspy.c: 731: while (7 - 2 - so_buff) {
  2078                           
  2079  0377  0021               	movlb	1	; select bank1
  2080  0378  094B               	comf	main@so_buff^(0+128),w
  2081  0379  00A6               	movwf	??_main^(0+128)
  2082  037A  094C               	comf	(main@so_buff+1)^(0+128),w
  2083  037B  00A7               	movwf	(??_main^(0+128)+1)
  2084  037C  0AA6               	incf	??_main^(0+128),f
  2085  037D  1903               	skipnz
  2086  037E  0AA7               	incf	(??_main^(0+128)+1),f
  2087  037F  0826               	movf	??_main^(0+128),w
  2088  0380  3E05               	addlw	5
  2089  0381  00A8               	movwf	(??_main+2)^(0+128)
  2090  0382  3000               	movlw	0
  2091  0383  3D27               	addwfc	(??_main+1)^(0+128),w
  2092  0384  00A9               	movwf	(??_main+3)^(0+128)
  2093  0385  0828               	movf	(??_main+2)^(0+128),w
  2094  0386  0429               	iorwf	((??_main+2)^(0+128)+1),w
  2095  0387  1903               	btfsc	3,2
  2096  0388  2B93               	goto	l372
  2097                           
  2098                           ;powerspy.c: 732: so(0xff);
  2099  0389  30FF               	movlw	255
  2100  038A  318B  23A9  3180   	fcall	_so
  2101                           
  2102                           ;powerspy.c: 733: so_buff--;
  2103  038D  3001               	movlw	1
  2104  038E  0021               	movlb	1	; select bank1
  2105  038F  02CB               	subwf	main@so_buff^(0+128),f
  2106  0390  3000               	movlw	0
  2107  0391  3BCC               	subwfb	(main@so_buff+1)^(0+128),f
  2108  0392  2B77               	goto	l3137
  2109  0393                     l372:	
  2110                           
  2111                           ;powerspy.c: 734: }
  2112                           ;powerspy.c: 735: RA3 = 1;
  2113  0393  0020               	movlb	0	; select bank0
  2114  0394  158C               	bsf	12,3	;volatile
  2115                           
  2116                           ;powerspy.c: 737: sendChar('c');
  2117  0395  3063               	movlw	99
  2118  0396  3189  21A5  3180   	fcall	_sendChar
  2119                           
  2120                           ;powerspy.c: 738: sendFloat((current < 0) ? -current : current);
  2121  0399  0021               	movlb	1	; select bank1
  2122  039A  0842               	movf	main@current^(0+128),w
  2123  039B  0020               	movlb	0	; select bank0
  2124  039C  00A0               	movwf	___ftge@ff1
  2125  039D  0021               	movlb	1	; select bank1
  2126  039E  0843               	movf	(main@current+1)^(0+128),w
  2127  039F  0020               	movlb	0	; select bank0
  2128  03A0  00A1               	movwf	___ftge@ff1+1
  2129  03A1  0021               	movlb	1	; select bank1
  2130  03A2  0844               	movf	(main@current+2)^(0+128),w
  2131  03A3  0020               	movlb	0	; select bank0
  2132  03A4  00A2               	movwf	___ftge@ff1+2
  2133  03A5  3000               	movlw	0
  2134  03A6  00A3               	movwf	___ftge@ff2
  2135  03A7  3000               	movlw	0
  2136  03A8  00A4               	movwf	___ftge@ff2+1
  2137  03A9  3000               	movlw	0
  2138  03AA  00A5               	movwf	___ftge@ff2+2
  2139  03AB  318C  2446  3180   	fcall	___ftge
  2140  03AE  1C03               	btfss	3,0
  2141  03AF  2BB7               	goto	l3143
  2142  03B0  0021               	movlb	1	; select bank1
  2143  03B1  0842               	movf	main@current^(0+128),w
  2144  03B2  00AD               	movwf	_main$254^(0+128)
  2145  03B3  0843               	movf	(main@current+1)^(0+128),w
  2146  03B4  00AE               	movwf	(_main$254+1)^(0+128)
  2147  03B5  0844               	movf	(main@current+2)^(0+128),w
  2148  03B6  2BD1               	goto	L6
  2149  03B7                     l3143:	
  2150  03B7  0021               	movlb	1	; select bank1
  2151  03B8  0842               	movf	main@current^(0+128),w
  2152  03B9  0020               	movlb	0	; select bank0
  2153  03BA  00E6               	movwf	___ftneg@f1
  2154  03BB  0021               	movlb	1	; select bank1
  2155  03BC  0843               	movf	(main@current+1)^(0+128),w
  2156  03BD  0020               	movlb	0	; select bank0
  2157  03BE  00E7               	movwf	___ftneg@f1+1
  2158  03BF  0021               	movlb	1	; select bank1
  2159  03C0  0844               	movf	(main@current+2)^(0+128),w
  2160  03C1  0020               	movlb	0	; select bank0
  2161  03C2  00E8               	movwf	___ftneg@f1+2
  2162  03C3  3189  21BF  3180   	fcall	___ftneg
  2163  03C6  0020               	movlb	0	; select bank0
  2164  03C7  0866               	movf	?___ftneg,w
  2165  03C8  0021               	movlb	1	; select bank1
  2166  03C9  00AD               	movwf	_main$254^(0+128)
  2167  03CA  0020               	movlb	0	; select bank0
  2168  03CB  0867               	movf	?___ftneg+1,w
  2169  03CC  0021               	movlb	1	; select bank1
  2170  03CD  00AE               	movwf	(_main$254+1)^(0+128)
  2171  03CE  0020               	movlb	0	; select bank0
  2172  03CF  0868               	movf	?___ftneg+2,w
  2173  03D0  0021               	movlb	1	; select bank1
  2174  03D1                     L6:	
  2175  03D1  00AF               	movwf	(_main$254+2)^(0+128)
  2176  03D2  082D               	movf	_main$254^(0+128),w
  2177  03D3  0020               	movlb	0	; select bank0
  2178  03D4  00A1               	movwf	sendFloat@f
  2179  03D5  0021               	movlb	1	; select bank1
  2180  03D6  082E               	movf	(_main$254+1)^(0+128),w
  2181  03D7  0020               	movlb	0	; select bank0
  2182  03D8  00A2               	movwf	sendFloat@f+1
  2183  03D9  0021               	movlb	1	; select bank1
  2184  03DA  082F               	movf	(_main$254+2)^(0+128),w
  2185  03DB  0020               	movlb	0	; select bank0
  2186  03DC  00A3               	movwf	sendFloat@f+2
  2187  03DD  318C  2482  3180   	fcall	_sendFloat
  2188                           
  2189                           ;powerspy.c: 739: sendChar('A');
  2190  03E0  3041               	movlw	65
  2191  03E1  3189  21A5  3180   	fcall	_sendChar
  2192                           
  2193                           ;powerspy.c: 740: sendFloat((apparent < 0) ? -apparent : apparent);
  2194  03E4  0021               	movlb	1	; select bank1
  2195  03E5  0848               	movf	main@apparent^(0+128),w
  2196  03E6  0020               	movlb	0	; select bank0
  2197  03E7  00A0               	movwf	___ftge@ff1
  2198  03E8  0021               	movlb	1	; select bank1
  2199  03E9  0849               	movf	(main@apparent+1)^(0+128),w
  2200  03EA  0020               	movlb	0	; select bank0
  2201  03EB  00A1               	movwf	___ftge@ff1+1
  2202  03EC  0021               	movlb	1	; select bank1
  2203  03ED  084A               	movf	(main@apparent+2)^(0+128),w
  2204  03EE  0020               	movlb	0	; select bank0
  2205  03EF  00A2               	movwf	___ftge@ff1+2
  2206  03F0  3000               	movlw	0
  2207  03F1  00A3               	movwf	___ftge@ff2
  2208  03F2  3000               	movlw	0
  2209  03F3  00A4               	movwf	___ftge@ff2+1
  2210  03F4  3000               	movlw	0
  2211  03F5  00A5               	movwf	___ftge@ff2+2
  2212  03F6  318C  2446  3180   	fcall	___ftge
  2213  03F9  1C03               	btfss	3,0
  2214  03FA  2C02               	goto	l3153
  2215  03FB  0021               	movlb	1	; select bank1
  2216  03FC  0848               	movf	main@apparent^(0+128),w
  2217  03FD  00B0               	movwf	_main$255^(0+128)
  2218  03FE  0849               	movf	(main@apparent+1)^(0+128),w
  2219  03FF  00B1               	movwf	(_main$255+1)^(0+128)
  2220  0400  084A               	movf	(main@apparent+2)^(0+128),w
  2221  0401  2C1C               	goto	L7
  2222  0402                     l3153:	
  2223  0402  0021               	movlb	1	; select bank1
  2224  0403  0848               	movf	main@apparent^(0+128),w
  2225  0404  0020               	movlb	0	; select bank0
  2226  0405  00E6               	movwf	___ftneg@f1
  2227  0406  0021               	movlb	1	; select bank1
  2228  0407  0849               	movf	(main@apparent+1)^(0+128),w
  2229  0408  0020               	movlb	0	; select bank0
  2230  0409  00E7               	movwf	___ftneg@f1+1
  2231  040A  0021               	movlb	1	; select bank1
  2232  040B  084A               	movf	(main@apparent+2)^(0+128),w
  2233  040C  0020               	movlb	0	; select bank0
  2234  040D  00E8               	movwf	___ftneg@f1+2
  2235  040E  3189  21BF  3180   	fcall	___ftneg
  2236  0411  0020               	movlb	0	; select bank0
  2237  0412  0866               	movf	?___ftneg,w
  2238  0413  0021               	movlb	1	; select bank1
  2239  0414  00B0               	movwf	_main$255^(0+128)
  2240  0415  0020               	movlb	0	; select bank0
  2241  0416  0867               	movf	?___ftneg+1,w
  2242  0417  0021               	movlb	1	; select bank1
  2243  0418  00B1               	movwf	(_main$255+1)^(0+128)
  2244  0419  0020               	movlb	0	; select bank0
  2245  041A  0868               	movf	?___ftneg+2,w
  2246  041B  0021               	movlb	1	; select bank1
  2247  041C                     L7:	
  2248  041C  00B2               	movwf	(_main$255+2)^(0+128)
  2249  041D  0830               	movf	_main$255^(0+128),w
  2250  041E  0020               	movlb	0	; select bank0
  2251  041F  00A1               	movwf	sendFloat@f
  2252  0420  0021               	movlb	1	; select bank1
  2253  0421  0831               	movf	(_main$255+1)^(0+128),w
  2254  0422  0020               	movlb	0	; select bank0
  2255  0423  00A2               	movwf	sendFloat@f+1
  2256  0424  0021               	movlb	1	; select bank1
  2257  0425  0832               	movf	(_main$255+2)^(0+128),w
  2258  0426  0020               	movlb	0	; select bank0
  2259  0427  00A3               	movwf	sendFloat@f+2
  2260  0428  318C  2482  3180   	fcall	_sendFloat
  2261                           
  2262                           ;powerspy.c: 741: sendChar('r');
  2263  042B  3072               	movlw	114
  2264  042C  3189  21A5  3180   	fcall	_sendChar
  2265                           
  2266                           ;powerspy.c: 742: sendFloat((real < 0) ? -real : real);
  2267  042F  0021               	movlb	1	; select bank1
  2268  0430  083C               	movf	main@real^(0+128),w
  2269  0431  0020               	movlb	0	; select bank0
  2270  0432  00A0               	movwf	___ftge@ff1
  2271  0433  0021               	movlb	1	; select bank1
  2272  0434  083D               	movf	(main@real+1)^(0+128),w
  2273  0435  0020               	movlb	0	; select bank0
  2274  0436  00A1               	movwf	___ftge@ff1+1
  2275  0437  0021               	movlb	1	; select bank1
  2276  0438  083E               	movf	(main@real+2)^(0+128),w
  2277  0439  0020               	movlb	0	; select bank0
  2278  043A  00A2               	movwf	___ftge@ff1+2
  2279  043B  3000               	movlw	0
  2280  043C  00A3               	movwf	___ftge@ff2
  2281  043D  3000               	movlw	0
  2282  043E  00A4               	movwf	___ftge@ff2+1
  2283  043F  3000               	movlw	0
  2284  0440  00A5               	movwf	___ftge@ff2+2
  2285  0441  318C  2446  3180   	fcall	___ftge
  2286  0444  1C03               	btfss	3,0
  2287  0445  2C4D               	goto	l3163
  2288  0446  0021               	movlb	1	; select bank1
  2289  0447  083C               	movf	main@real^(0+128),w
  2290  0448  00B3               	movwf	_main$256^(0+128)
  2291  0449  083D               	movf	(main@real+1)^(0+128),w
  2292  044A  00B4               	movwf	(_main$256+1)^(0+128)
  2293  044B  083E               	movf	(main@real+2)^(0+128),w
  2294  044C  2C67               	goto	L8
  2295  044D                     l3163:	
  2296  044D  0021               	movlb	1	; select bank1
  2297  044E  083C               	movf	main@real^(0+128),w
  2298  044F  0020               	movlb	0	; select bank0
  2299  0450  00E6               	movwf	___ftneg@f1
  2300  0451  0021               	movlb	1	; select bank1
  2301  0452  083D               	movf	(main@real+1)^(0+128),w
  2302  0453  0020               	movlb	0	; select bank0
  2303  0454  00E7               	movwf	___ftneg@f1+1
  2304  0455  0021               	movlb	1	; select bank1
  2305  0456  083E               	movf	(main@real+2)^(0+128),w
  2306  0457  0020               	movlb	0	; select bank0
  2307  0458  00E8               	movwf	___ftneg@f1+2
  2308  0459  3189  21BF  3180   	fcall	___ftneg
  2309  045C  0020               	movlb	0	; select bank0
  2310  045D  0866               	movf	?___ftneg,w
  2311  045E  0021               	movlb	1	; select bank1
  2312  045F  00B3               	movwf	_main$256^(0+128)
  2313  0460  0020               	movlb	0	; select bank0
  2314  0461  0867               	movf	?___ftneg+1,w
  2315  0462  0021               	movlb	1	; select bank1
  2316  0463  00B4               	movwf	(_main$256+1)^(0+128)
  2317  0464  0020               	movlb	0	; select bank0
  2318  0465  0868               	movf	?___ftneg+2,w
  2319  0466  0021               	movlb	1	; select bank1
  2320  0467                     L8:	
  2321  0467  00B5               	movwf	(_main$256+2)^(0+128)
  2322  0468  0833               	movf	_main$256^(0+128),w
  2323  0469  0020               	movlb	0	; select bank0
  2324  046A  00A1               	movwf	sendFloat@f
  2325  046B  0021               	movlb	1	; select bank1
  2326  046C  0834               	movf	(_main$256+1)^(0+128),w
  2327  046D  0020               	movlb	0	; select bank0
  2328  046E  00A2               	movwf	sendFloat@f+1
  2329  046F  0021               	movlb	1	; select bank1
  2330  0470  0835               	movf	(_main$256+2)^(0+128),w
  2331  0471  0020               	movlb	0	; select bank0
  2332  0472  00A3               	movwf	sendFloat@f+2
  2333  0473  318C  2482  3180   	fcall	_sendFloat
  2334                           
  2335                           ;powerspy.c: 743: sendChar('R');
  2336  0476  3052               	movlw	82
  2337  0477  3189  21A5  3180   	fcall	_sendChar
  2338                           
  2339                           ;powerspy.c: 744: sendFloat((reactive < 0) ? -reactive : reactive);
  2340  047A  0021               	movlb	1	; select bank1
  2341  047B  083F               	movf	main@reactive^(0+128),w
  2342  047C  0020               	movlb	0	; select bank0
  2343  047D  00A0               	movwf	___ftge@ff1
  2344  047E  0021               	movlb	1	; select bank1
  2345  047F  0840               	movf	(main@reactive+1)^(0+128),w
  2346  0480  0020               	movlb	0	; select bank0
  2347  0481  00A1               	movwf	___ftge@ff1+1
  2348  0482  0021               	movlb	1	; select bank1
  2349  0483  0841               	movf	(main@reactive+2)^(0+128),w
  2350  0484  0020               	movlb	0	; select bank0
  2351  0485  00A2               	movwf	___ftge@ff1+2
  2352  0486  3000               	movlw	0
  2353  0487  00A3               	movwf	___ftge@ff2
  2354  0488  3000               	movlw	0
  2355  0489  00A4               	movwf	___ftge@ff2+1
  2356  048A  3000               	movlw	0
  2357  048B  00A5               	movwf	___ftge@ff2+2
  2358  048C  318C  2446  3180   	fcall	___ftge
  2359  048F  1C03               	btfss	3,0
  2360  0490  2C98               	goto	l3173
  2361  0491  0021               	movlb	1	; select bank1
  2362  0492  083F               	movf	main@reactive^(0+128),w
  2363  0493  00B6               	movwf	_main$257^(0+128)
  2364  0494  0840               	movf	(main@reactive+1)^(0+128),w
  2365  0495  00B7               	movwf	(_main$257+1)^(0+128)
  2366  0496  0841               	movf	(main@reactive+2)^(0+128),w
  2367  0497  2CB2               	goto	L9
  2368  0498                     l3173:	
  2369  0498  0021               	movlb	1	; select bank1
  2370  0499  083F               	movf	main@reactive^(0+128),w
  2371  049A  0020               	movlb	0	; select bank0
  2372  049B  00E6               	movwf	___ftneg@f1
  2373  049C  0021               	movlb	1	; select bank1
  2374  049D  0840               	movf	(main@reactive+1)^(0+128),w
  2375  049E  0020               	movlb	0	; select bank0
  2376  049F  00E7               	movwf	___ftneg@f1+1
  2377  04A0  0021               	movlb	1	; select bank1
  2378  04A1  0841               	movf	(main@reactive+2)^(0+128),w
  2379  04A2  0020               	movlb	0	; select bank0
  2380  04A3  00E8               	movwf	___ftneg@f1+2
  2381  04A4  3189  21BF  3180   	fcall	___ftneg
  2382  04A7  0020               	movlb	0	; select bank0
  2383  04A8  0866               	movf	?___ftneg,w
  2384  04A9  0021               	movlb	1	; select bank1
  2385  04AA  00B6               	movwf	_main$257^(0+128)
  2386  04AB  0020               	movlb	0	; select bank0
  2387  04AC  0867               	movf	?___ftneg+1,w
  2388  04AD  0021               	movlb	1	; select bank1
  2389  04AE  00B7               	movwf	(_main$257+1)^(0+128)
  2390  04AF  0020               	movlb	0	; select bank0
  2391  04B0  0868               	movf	?___ftneg+2,w
  2392  04B1  0021               	movlb	1	; select bank1
  2393  04B2                     L9:	
  2394  04B2  00B8               	movwf	(_main$257+2)^(0+128)
  2395  04B3  0836               	movf	_main$257^(0+128),w
  2396  04B4  0020               	movlb	0	; select bank0
  2397  04B5  00A1               	movwf	sendFloat@f
  2398  04B6  0021               	movlb	1	; select bank1
  2399  04B7  0837               	movf	(_main$257+1)^(0+128),w
  2400  04B8  0020               	movlb	0	; select bank0
  2401  04B9  00A2               	movwf	sendFloat@f+1
  2402  04BA  0021               	movlb	1	; select bank1
  2403  04BB  0838               	movf	(_main$257+2)^(0+128),w
  2404  04BC  0020               	movlb	0	; select bank0
  2405  04BD  00A3               	movwf	sendFloat@f+2
  2406  04BE  318C  2482  3180   	fcall	_sendFloat
  2407  04C1                     l3177:	
  2408                           
  2409                           ;powerspy.c: 745: }
  2410                           ;powerspy.c: 747: GIE = 1;
  2411  04C1  178B               	bsf	11,7	;volatile
  2412                           
  2413                           ;powerspy.c: 748: _delay((unsigned long)((100)*(32000000/4000.0)));
  2414  04C2  3005               	movlw	5
  2415  04C3  0021               	movlb	1	; select bank1
  2416  04C4  00A8               	movwf	(??_main^(0+128)+2)
  2417  04C5  300F               	movlw	15
  2418  04C6  00A7               	movwf	(??_main^(0+128)+1)
  2419  04C7  30F4               	movlw	244
  2420  04C8  00A6               	movwf	??_main^(0+128)
  2421  04C9                     u4097:	
  2422  04C9  0BA6               	decfsz	??_main^(0+128),f
  2423  04CA  2CC9               	goto	u4097
  2424  04CB  0BA7               	decfsz	(??_main^(0+128)+1),f
  2425  04CC  2CC9               	goto	u4097
  2426  04CD  0BA8               	decfsz	(??_main^(0+128)+2),f
  2427  04CE  2CC9               	goto	u4097
  2428  04CF  28DD               	goto	L10
  2429  04D0                     __end_of_main:	
  2430                           ;powerspy.c: 749: GIE = 0;
  2431                           
  2432                           
  2433                           	psect	text1
  2434  0C10                     __ptext1:	
  2435 ;; *************** function _setNr *****************
  2436 ;; Defined at:
  2437 ;;		line 495 in file "powerspy.c"
  2438 ;; Parameters:    Size  Location     Type
  2439 ;;  nr              2   14[BANK0 ] unsigned short 
  2440 ;; Auto vars:     Size  Location     Type
  2441 ;;  it              1   17[BANK0 ] unsigned char 
  2442 ;; Return value:  Size  Location     Type
  2443 ;;                  1    wreg      unsigned char 
  2444 ;; Registers used:
  2445 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2446 ;; Tracked objects:
  2447 ;;		On entry : 0/0
  2448 ;;		On exit  : 0/0
  2449 ;;		Unchanged: 0/0
  2450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2451 ;;      Params:         0       2       0       0       0       0
  2452 ;;      Locals:         0       1       0       0       0       0
  2453 ;;      Temps:          0       1       0       0       0       0
  2454 ;;      Totals:         0       4       0       0       0       0
  2455 ;;Total ram usage:        4 bytes
  2456 ;; Hardware stack levels used:    1
  2457 ;; Hardware stack levels required when called:    4
  2458 ;; This function calls:
  2459 ;;		___lwdiv
  2460 ;;		___lwmod
  2461 ;;		_so
  2462 ;; This function is called by:
  2463 ;;		_main
  2464 ;; This function uses a non-reentrant model
  2465 ;;
  2466                           
  2467                           
  2468                           ;psect for function _setNr
  2469  0C10                     _setNr:	
  2470                           
  2471                           ;powerspy.c: 497: uint8_t it = 0;
  2472                           
  2473                           ;incstack = 0
  2474                           ; Regs used in _setNr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2475  0C10  0020               	movlb	0	; select bank0
  2476  0C11  01B1               	clrf	setNr@it
  2477  0C12                     l2721:	
  2478                           ;powerspy.c: 498: while (nr) {
  2479                           
  2480  0C12  082E               	movf	setNr@nr,w
  2481  0C13  042F               	iorwf	setNr@nr+1,w
  2482  0C14  1903               	btfsc	3,2
  2483  0C15  2C44               	goto	l2723
  2484                           
  2485                           ;powerspy.c: 499: so(get_shift_byte[nr % 10]);
  2486  0C16  300A               	movlw	10
  2487  0C17  00A0               	movwf	___lwmod@divisor
  2488  0C18  3000               	movlw	0
  2489  0C19  00A1               	movwf	___lwmod@divisor+1
  2490  0C1A  082F               	movf	setNr@nr+1,w
  2491  0C1B  00A3               	movwf	___lwmod@dividend+1
  2492  0C1C  082E               	movf	setNr@nr,w
  2493  0C1D  00A2               	movwf	___lwmod@dividend
  2494  0C1E  318B  237C  318C   	fcall	___lwmod
  2495  0C21  0020               	movlb	0	; select bank0
  2496  0C22  0821               	movf	?___lwmod+1,w
  2497  0C23  0085               	movwf	5
  2498  0C24  0820               	movf	?___lwmod,w
  2499  0C25  0084               	movwf	4
  2500  0C26  30FE               	movlw	low (_get_shift_byte| (0+32768))
  2501  0C27  0784               	addwf	4,f
  2502  0C28  3087               	movlw	high (_get_shift_byte| (0+32768))
  2503  0C29  3D85               	addwfc	5,f
  2504  0C2A  0800               	movf	0,w	;code access
  2505  0C2B  318B  23A9  318C   	fcall	_so
  2506                           
  2507                           ;powerspy.c: 500: nr /= 10;
  2508  0C2E  300A               	movlw	10
  2509  0C2F  0020               	movlb	0	; select bank0
  2510  0C30  00A0               	movwf	___lwdiv@divisor
  2511  0C31  3000               	movlw	0
  2512  0C32  00A1               	movwf	___lwdiv@divisor+1
  2513  0C33  082F               	movf	setNr@nr+1,w
  2514  0C34  00A3               	movwf	___lwdiv@dividend+1
  2515  0C35  082E               	movf	setNr@nr,w
  2516  0C36  00A2               	movwf	___lwdiv@dividend
  2517  0C37  318B  23DB  318C   	fcall	___lwdiv
  2518  0C3A  0020               	movlb	0	; select bank0
  2519  0C3B  0821               	movf	?___lwdiv+1,w
  2520  0C3C  00AF               	movwf	setNr@nr+1
  2521  0C3D  0820               	movf	?___lwdiv,w
  2522  0C3E  00AE               	movwf	setNr@nr
  2523                           
  2524                           ;powerspy.c: 501: it++;
  2525  0C3F  3001               	movlw	1
  2526  0C40  00B0               	movwf	??_setNr
  2527  0C41  0830               	movf	??_setNr,w
  2528  0C42  07B1               	addwf	setNr@it,f
  2529  0C43  2C12               	goto	l2721
  2530  0C44                     l2723:	
  2531                           
  2532                           ;powerspy.c: 502: }
  2533                           ;powerspy.c: 503: return it;
  2534  0C44  0831               	movf	setNr@it,w
  2535  0C45  0008               	return
  2536  0C46                     __end_of_setNr:	
  2537                           
  2538                           	psect	text2
  2539  0B7C                     __ptext2:	
  2540 ;; *************** function ___lwmod *****************
  2541 ;; Defined at:
  2542 ;;		line 6 in file "/Applications/microchip/xc8/v1.36/sources/common/lwmod.c"
  2543 ;; Parameters:    Size  Location     Type
  2544 ;;  divisor         2    0[BANK0 ] unsigned int 
  2545 ;;  dividend        2    2[BANK0 ] unsigned int 
  2546 ;; Auto vars:     Size  Location     Type
  2547 ;;  counter         1    5[BANK0 ] unsigned char 
  2548 ;; Return value:  Size  Location     Type
  2549 ;;                  2    0[BANK0 ] unsigned int 
  2550 ;; Registers used:
  2551 ;;		wreg, status,2, status,0
  2552 ;; Tracked objects:
  2553 ;;		On entry : 0/0
  2554 ;;		On exit  : 0/0
  2555 ;;		Unchanged: 0/0
  2556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2557 ;;      Params:         0       4       0       0       0       0
  2558 ;;      Locals:         0       1       0       0       0       0
  2559 ;;      Temps:          0       1       0       0       0       0
  2560 ;;      Totals:         0       6       0       0       0       0
  2561 ;;Total ram usage:        6 bytes
  2562 ;; Hardware stack levels used:    1
  2563 ;; Hardware stack levels required when called:    3
  2564 ;; This function calls:
  2565 ;;		Nothing
  2566 ;; This function is called by:
  2567 ;;		_setNr
  2568 ;; This function uses a non-reentrant model
  2569 ;;
  2570                           
  2571                           
  2572                           ;psect for function ___lwmod
  2573  0B7C                     ___lwmod:	
  2574                           
  2575                           ;incstack = 0
  2576                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2577  0B7C  0020               	movlb	0	; select bank0
  2578  0B7D  0820               	movf	___lwmod@divisor,w
  2579  0B7E  0421               	iorwf	___lwmod@divisor+1,w
  2580  0B7F  1903               	btfsc	3,2
  2581  0B80  2BA4               	goto	l2601
  2582  0B81  01A5               	clrf	___lwmod@counter
  2583  0B82  0AA5               	incf	___lwmod@counter,f
  2584  0B83                     l2591:	
  2585  0B83  1BA1               	btfsc	___lwmod@divisor+1,7
  2586  0B84  2B8F               	goto	l2593
  2587  0B85  3001               	movlw	1
  2588  0B86                     u3215:	
  2589  0B86  35A0               	lslf	___lwmod@divisor,f
  2590  0B87  0DA1               	rlf	___lwmod@divisor+1,f
  2591  0B88  0B89               	decfsz	9,f
  2592  0B89  2B86               	goto	u3215
  2593  0B8A  3001               	movlw	1
  2594  0B8B  00A4               	movwf	??___lwmod
  2595  0B8C  0824               	movf	??___lwmod,w
  2596  0B8D  07A5               	addwf	___lwmod@counter,f
  2597  0B8E  2B83               	goto	l2591
  2598  0B8F                     l2593:	
  2599  0B8F  0821               	movf	___lwmod@divisor+1,w
  2600  0B90  0223               	subwf	___lwmod@dividend+1,w
  2601  0B91  1D03               	skipz
  2602  0B92  2B95               	goto	u3235
  2603  0B93  0820               	movf	___lwmod@divisor,w
  2604  0B94  0222               	subwf	___lwmod@dividend,w
  2605  0B95                     u3235:	
  2606  0B95  1C03               	skipc
  2607  0B96  2B9B               	goto	l2597
  2608  0B97  0820               	movf	___lwmod@divisor,w
  2609  0B98  02A2               	subwf	___lwmod@dividend,f
  2610  0B99  0821               	movf	___lwmod@divisor+1,w
  2611  0B9A  3BA3               	subwfb	___lwmod@dividend+1,f
  2612  0B9B                     l2597:	
  2613  0B9B  3001               	movlw	1
  2614  0B9C                     u3245:	
  2615  0B9C  36A1               	lsrf	___lwmod@divisor+1,f
  2616  0B9D  0CA0               	rrf	___lwmod@divisor,f
  2617  0B9E  0B89               	decfsz	9,f
  2618  0B9F  2B9C               	goto	u3245
  2619  0BA0  3001               	movlw	1
  2620  0BA1  02A5               	subwf	___lwmod@counter,f
  2621  0BA2  1D03               	btfss	3,2
  2622  0BA3  2B8F               	goto	l2593
  2623  0BA4                     l2601:	
  2624  0BA4  0823               	movf	___lwmod@dividend+1,w
  2625  0BA5  00A1               	movwf	?___lwmod+1
  2626  0BA6  0822               	movf	___lwmod@dividend,w
  2627  0BA7  00A0               	movwf	?___lwmod
  2628  0BA8  0008               	return
  2629  0BA9                     __end_of___lwmod:	
  2630                           
  2631                           	psect	text3
  2632  0BDB                     __ptext3:	
  2633 ;; *************** function ___lwdiv *****************
  2634 ;; Defined at:
  2635 ;;		line 6 in file "/Applications/microchip/xc8/v1.36/sources/common/lwdiv.c"
  2636 ;; Parameters:    Size  Location     Type
  2637 ;;  divisor         2    0[BANK0 ] unsigned int 
  2638 ;;  dividend        2    2[BANK0 ] unsigned int 
  2639 ;; Auto vars:     Size  Location     Type
  2640 ;;  quotient        2    5[BANK0 ] unsigned int 
  2641 ;;  counter         1    7[BANK0 ] unsigned char 
  2642 ;; Return value:  Size  Location     Type
  2643 ;;                  2    0[BANK0 ] unsigned int 
  2644 ;; Registers used:
  2645 ;;		wreg, status,2, status,0
  2646 ;; Tracked objects:
  2647 ;;		On entry : 0/0
  2648 ;;		On exit  : 0/0
  2649 ;;		Unchanged: 0/0
  2650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2651 ;;      Params:         0       4       0       0       0       0
  2652 ;;      Locals:         0       3       0       0       0       0
  2653 ;;      Temps:          0       1       0       0       0       0
  2654 ;;      Totals:         0       8       0       0       0       0
  2655 ;;Total ram usage:        8 bytes
  2656 ;; Hardware stack levels used:    1
  2657 ;; Hardware stack levels required when called:    3
  2658 ;; This function calls:
  2659 ;;		Nothing
  2660 ;; This function is called by:
  2661 ;;		_setNr
  2662 ;; This function uses a non-reentrant model
  2663 ;;
  2664                           
  2665                           
  2666                           ;psect for function ___lwdiv
  2667  0BDB                     ___lwdiv:	
  2668                           
  2669                           ;incstack = 0
  2670                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2671  0BDB  0020               	movlb	0	; select bank0
  2672  0BDC  01A5               	clrf	___lwdiv@quotient
  2673  0BDD  01A6               	clrf	___lwdiv@quotient+1
  2674  0BDE  0820               	movf	___lwdiv@divisor,w
  2675  0BDF  0421               	iorwf	___lwdiv@divisor+1,w
  2676  0BE0  1903               	btfsc	3,2
  2677  0BE1  2C0B               	goto	l2579
  2678  0BE2  01A7               	clrf	___lwdiv@counter
  2679  0BE3  0AA7               	incf	___lwdiv@counter,f
  2680  0BE4                     l2567:	
  2681  0BE4  1BA1               	btfsc	___lwdiv@divisor+1,7
  2682  0BE5  2BF0               	goto	l2569
  2683  0BE6  3001               	movlw	1
  2684  0BE7                     u3145:	
  2685  0BE7  35A0               	lslf	___lwdiv@divisor,f
  2686  0BE8  0DA1               	rlf	___lwdiv@divisor+1,f
  2687  0BE9  0B89               	decfsz	9,f
  2688  0BEA  2BE7               	goto	u3145
  2689  0BEB  3001               	movlw	1
  2690  0BEC  00A4               	movwf	??___lwdiv
  2691  0BED  0824               	movf	??___lwdiv,w
  2692  0BEE  07A7               	addwf	___lwdiv@counter,f
  2693  0BEF  2BE4               	goto	l2567
  2694  0BF0                     l2569:	
  2695  0BF0  3001               	movlw	1
  2696  0BF1                     u3165:	
  2697  0BF1  35A5               	lslf	___lwdiv@quotient,f
  2698  0BF2  0DA6               	rlf	___lwdiv@quotient+1,f
  2699  0BF3  0B89               	decfsz	9,f
  2700  0BF4  2BF1               	goto	u3165
  2701  0BF5  0821               	movf	___lwdiv@divisor+1,w
  2702  0BF6  0223               	subwf	___lwdiv@dividend+1,w
  2703  0BF7  1D03               	skipz
  2704  0BF8  2BFB               	goto	u3175
  2705  0BF9  0820               	movf	___lwdiv@divisor,w
  2706  0BFA  0222               	subwf	___lwdiv@dividend,w
  2707  0BFB                     u3175:	
  2708  0BFB  1C03               	skipc
  2709  0BFC  2C02               	goto	l2575
  2710  0BFD  0820               	movf	___lwdiv@divisor,w
  2711  0BFE  02A2               	subwf	___lwdiv@dividend,f
  2712  0BFF  0821               	movf	___lwdiv@divisor+1,w
  2713  0C00  3BA3               	subwfb	___lwdiv@dividend+1,f
  2714  0C01  1425               	bsf	___lwdiv@quotient,0
  2715  0C02                     l2575:	
  2716  0C02  3001               	movlw	1
  2717  0C03                     u3185:	
  2718  0C03  36A1               	lsrf	___lwdiv@divisor+1,f
  2719  0C04  0CA0               	rrf	___lwdiv@divisor,f
  2720  0C05  0B89               	decfsz	9,f
  2721  0C06  2C03               	goto	u3185
  2722  0C07  3001               	movlw	1
  2723  0C08  02A7               	subwf	___lwdiv@counter,f
  2724  0C09  1D03               	btfss	3,2
  2725  0C0A  2BF0               	goto	l2569
  2726  0C0B                     l2579:	
  2727  0C0B  0826               	movf	___lwdiv@quotient+1,w
  2728  0C0C  00A1               	movwf	?___lwdiv+1
  2729  0C0D  0825               	movf	___lwdiv@quotient,w
  2730  0C0E  00A0               	movwf	?___lwdiv
  2731  0C0F  0008               	return
  2732  0C10                     __end_of___lwdiv:	
  2733                           
  2734                           	psect	text4
  2735  0C82                     __ptext4:	
  2736 ;; *************** function _sendFloat *****************
  2737 ;; Defined at:
  2738 ;;		line 201 in file "message.c"
  2739 ;; Parameters:    Size  Location     Type
  2740 ;;  f               3    1[BANK0 ] float 
  2741 ;; Auto vars:     Size  Location     Type
  2742 ;;  ptr             1    7[BANK0 ] PTR unsigned um
  2743 ;;		 -> sendFloat@f(3), 
  2744 ;; Return value:  Size  Location     Type
  2745 ;;                  1    wreg      void 
  2746 ;; Registers used:
  2747 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2748 ;; Tracked objects:
  2749 ;;		On entry : 0/0
  2750 ;;		On exit  : 0/0
  2751 ;;		Unchanged: 0/0
  2752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2753 ;;      Params:         0       3       0       0       0       0
  2754 ;;      Locals:         0       1       0       0       0       0
  2755 ;;      Temps:          0       3       0       0       0       0
  2756 ;;      Totals:         0       7       0       0       0       0
  2757 ;;Total ram usage:        7 bytes
  2758 ;; Hardware stack levels used:    1
  2759 ;; Hardware stack levels required when called:    4
  2760 ;; This function calls:
  2761 ;;		__sendchar_
  2762 ;; This function is called by:
  2763 ;;		_main
  2764 ;; This function uses a non-reentrant model
  2765 ;;
  2766                           
  2767                           
  2768                           ;psect for function _sendFloat
  2769  0C82                     _sendFloat:	
  2770                           
  2771                           ;message.c: 203: uint24_t *ptr = (uint24_t *) & f;
  2772                           
  2773                           ;incstack = 0
  2774                           ; Regs used in _sendFloat: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2775  0C82  3021               	movlw	(low (sendFloat@f| 0))& (0+255)
  2776  0C83  0020               	movlb	0	; select bank0
  2777  0C84  00A4               	movwf	??_sendFloat
  2778  0C85  0824               	movf	??_sendFloat,w
  2779  0C86  00A7               	movwf	sendFloat@ptr
  2780                           
  2781                           ;message.c: 204: _sendchar_(2);
  2782  0C87  3002               	movlw	2
  2783  0C88  3189  21B7  318C   	fcall	__sendchar_
  2784                           
  2785                           ;message.c: 205: _sendchar_('6');
  2786  0C8B  3036               	movlw	54
  2787  0C8C  3189  21B7  318C   	fcall	__sendchar_
  2788                           
  2789                           ;message.c: 206: _sendchar_((char) (*ptr >> 16 & 0xff));
  2790  0C8F  0020               	movlb	0	; select bank0
  2791  0C90  0827               	movf	sendFloat@ptr,w
  2792  0C91  0086               	movwf	6
  2793  0C92  0187               	clrf	7
  2794  0C93  3F40               	moviw [0]fsr1
  2795  0C94  00A4               	movwf	??_sendFloat
  2796  0C95  3F41               	moviw [1]fsr1
  2797  0C96  00A5               	movwf	??_sendFloat+1
  2798  0C97  3F42               	moviw [2]fsr1
  2799  0C98  00A6               	movwf	??_sendFloat+2
  2800  0C99  3010               	movlw	16
  2801  0C9A                     u3325:	
  2802  0C9A  36A6               	lsrf	??_sendFloat+2,f
  2803  0C9B  0CA5               	rrf	??_sendFloat+1,f
  2804  0C9C  0CA4               	rrf	??_sendFloat,f
  2805  0C9D  0B89               	decfsz	9,f
  2806  0C9E  2C9A               	goto	u3325
  2807  0C9F  0824               	movf	??_sendFloat,w
  2808  0CA0  3189  21B7  318C   	fcall	__sendchar_
  2809                           
  2810                           ;message.c: 207: _sendchar_((char) (*ptr >> 8 & 0xff));
  2811  0CA3  0020               	movlb	0	; select bank0
  2812  0CA4  0827               	movf	sendFloat@ptr,w
  2813  0CA5  0086               	movwf	6
  2814  0CA6  0187               	clrf	7
  2815  0CA7  3F40               	moviw [0]fsr1
  2816  0CA8  00A4               	movwf	??_sendFloat
  2817  0CA9  3F41               	moviw [1]fsr1
  2818  0CAA  00A5               	movwf	??_sendFloat+1
  2819  0CAB  3F42               	moviw [2]fsr1
  2820  0CAC  00A6               	movwf	??_sendFloat+2
  2821  0CAD  3008               	movlw	8
  2822  0CAE                     u3335:	
  2823  0CAE  36A6               	lsrf	??_sendFloat+2,f
  2824  0CAF  0CA5               	rrf	??_sendFloat+1,f
  2825  0CB0  0CA4               	rrf	??_sendFloat,f
  2826  0CB1  0B89               	decfsz	9,f
  2827  0CB2  2CAE               	goto	u3335
  2828  0CB3  0824               	movf	??_sendFloat,w
  2829  0CB4  3189  21B7  318C   	fcall	__sendchar_
  2830                           
  2831                           ;message.c: 208: _sendchar_((char) (*ptr & 0xff));
  2832  0CB7  0020               	movlb	0	; select bank0
  2833  0CB8  0827               	movf	sendFloat@ptr,w
  2834  0CB9  0086               	movwf	6
  2835  0CBA  0187               	clrf	7
  2836  0CBB  0801               	movf	1,w
  2837  0CBC  3189  21B7  318C   	fcall	__sendchar_
  2838                           
  2839                           ;message.c: 209: _sendchar_(3);
  2840  0CBF  3003               	movlw	3
  2841  0CC0  3189  21B7         	fcall	__sendchar_
  2842  0CC2  0008               	return
  2843  0CC3                     __end_of_sendFloat:	
  2844                           
  2845                           	psect	text5
  2846  09A5                     __ptext5:	
  2847 ;; *************** function _sendChar *****************
  2848 ;; Defined at:
  2849 ;;		line 167 in file "message.c"
  2850 ;; Parameters:    Size  Location     Type
  2851 ;;  i               1    wreg     unsigned char 
  2852 ;; Auto vars:     Size  Location     Type
  2853 ;;  i               1    2[BANK0 ] unsigned char 
  2854 ;; Return value:  Size  Location     Type
  2855 ;;                  1    wreg      void 
  2856 ;; Registers used:
  2857 ;;		wreg, status,2, status,0, pclath, cstack
  2858 ;; Tracked objects:
  2859 ;;		On entry : 0/0
  2860 ;;		On exit  : 0/0
  2861 ;;		Unchanged: 0/0
  2862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2863 ;;      Params:         0       0       0       0       0       0
  2864 ;;      Locals:         0       1       0       0       0       0
  2865 ;;      Temps:          0       0       0       0       0       0
  2866 ;;      Totals:         0       1       0       0       0       0
  2867 ;;Total ram usage:        1 bytes
  2868 ;; Hardware stack levels used:    1
  2869 ;; Hardware stack levels required when called:    5
  2870 ;; This function calls:
  2871 ;;		_sendInt8
  2872 ;; This function is called by:
  2873 ;;		_main
  2874 ;; This function uses a non-reentrant model
  2875 ;;
  2876                           
  2877                           
  2878                           ;psect for function _sendChar
  2879  09A5                     _sendChar:	
  2880                           
  2881                           ;incstack = 0
  2882                           ; Regs used in _sendChar: [wreg+status,2+status,0+pclath+cstack]
  2883                           ;sendChar@i stored from wreg
  2884  09A5  0020               	movlb	0	; select bank0
  2885  09A6  00A2               	movwf	sendChar@i
  2886                           
  2887                           ;message.c: 168: sendInt8((int8_t) i);
  2888  09A7  0822               	movf	sendChar@i,w
  2889  09A8  318A  221D         	fcall	_sendInt8
  2890  09AA  0008               	return
  2891  09AB                     __end_of_sendChar:	
  2892                           
  2893                           	psect	text6
  2894  0A1D                     __ptext6:	
  2895 ;; *************** function _sendInt8 *****************
  2896 ;; Defined at:
  2897 ;;		line 159 in file "message.c"
  2898 ;; Parameters:    Size  Location     Type
  2899 ;;  i               1    wreg     char 
  2900 ;; Auto vars:     Size  Location     Type
  2901 ;;  i               1    1[BANK0 ] char 
  2902 ;; Return value:  Size  Location     Type
  2903 ;;                  1    wreg      void 
  2904 ;; Registers used:
  2905 ;;		wreg, status,2, status,0, pclath, cstack
  2906 ;; Tracked objects:
  2907 ;;		On entry : 0/0
  2908 ;;		On exit  : 0/0
  2909 ;;		Unchanged: 0/0
  2910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2911 ;;      Params:         0       0       0       0       0       0
  2912 ;;      Locals:         0       1       0       0       0       0
  2913 ;;      Temps:          0       0       0       0       0       0
  2914 ;;      Totals:         0       1       0       0       0       0
  2915 ;;Total ram usage:        1 bytes
  2916 ;; Hardware stack levels used:    1
  2917 ;; Hardware stack levels required when called:    4
  2918 ;; This function calls:
  2919 ;;		__sendchar_
  2920 ;; This function is called by:
  2921 ;;		_sendChar
  2922 ;; This function uses a non-reentrant model
  2923 ;;
  2924                           
  2925                           
  2926                           ;psect for function _sendInt8
  2927  0A1D                     _sendInt8:	
  2928                           
  2929                           ;incstack = 0
  2930                           ; Regs used in _sendInt8: [wreg+status,2+status,0+pclath+cstack]
  2931                           ;sendInt8@i stored from wreg
  2932  0A1D  0020               	movlb	0	; select bank0
  2933  0A1E  00A1               	movwf	sendInt8@i
  2934                           
  2935                           ;message.c: 161: _sendchar_(2);
  2936  0A1F  3002               	movlw	2
  2937  0A20  3189  21B7  318A   	fcall	__sendchar_
  2938                           
  2939                           ;message.c: 162: _sendchar_('2');
  2940  0A23  3032               	movlw	50
  2941  0A24  3189  21B7  318A   	fcall	__sendchar_
  2942                           
  2943                           ;message.c: 163: _sendchar_(i);
  2944  0A27  0020               	movlb	0	; select bank0
  2945  0A28  0821               	movf	sendInt8@i,w
  2946  0A29  3189  21B7  318A   	fcall	__sendchar_
  2947                           
  2948                           ;message.c: 164: _sendchar_(3);
  2949  0A2C  3003               	movlw	3
  2950  0A2D  3189  21B7         	fcall	__sendchar_
  2951  0A2F  0008               	return
  2952  0A30                     __end_of_sendInt8:	
  2953                           
  2954                           	psect	text7
  2955  09B7                     __ptext7:	
  2956 ;; *************** function __sendchar_ *****************
  2957 ;; Defined at:
  2958 ;;		line 153 in file "message.c"
  2959 ;; Parameters:    Size  Location     Type
  2960 ;;  c               1    wreg     unsigned char 
  2961 ;; Auto vars:     Size  Location     Type
  2962 ;;  c               1    0[BANK0 ] unsigned char 
  2963 ;; Return value:  Size  Location     Type
  2964 ;;                  1    wreg      void 
  2965 ;; Registers used:
  2966 ;;		wreg
  2967 ;; Tracked objects:
  2968 ;;		On entry : 0/0
  2969 ;;		On exit  : 0/0
  2970 ;;		Unchanged: 0/0
  2971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2972 ;;      Params:         0       0       0       0       0       0
  2973 ;;      Locals:         0       1       0       0       0       0
  2974 ;;      Temps:          0       0       0       0       0       0
  2975 ;;      Totals:         0       1       0       0       0       0
  2976 ;;Total ram usage:        1 bytes
  2977 ;; Hardware stack levels used:    1
  2978 ;; Hardware stack levels required when called:    3
  2979 ;; This function calls:
  2980 ;;		Nothing
  2981 ;; This function is called by:
  2982 ;;		_sendInt8
  2983 ;;		_sendFloat
  2984 ;;		_sendInt16
  2985 ;;		_sendInt24
  2986 ;;		_sendInt32
  2987 ;;		_sendString
  2988 ;; This function uses a non-reentrant model
  2989 ;;
  2990                           
  2991                           
  2992                           ;psect for function __sendchar_
  2993  09B7                     __sendchar_:	
  2994                           
  2995                           ;incstack = 0
  2996                           ; Regs used in __sendchar_: [wreg]
  2997                           ;__sendchar_@c stored from wreg
  2998  09B7  0020               	movlb	0	; select bank0
  2999  09B8  00A0               	movwf	__sendchar_@c
  3000                           
  3001                           ;message.c: 155: TXREG = c;
  3002  09B9  0820               	movf	__sendchar_@c,w
  3003  09BA  0023               	movlb	3	; select bank3
  3004  09BB  009A               	movwf	26	;volatile
  3005  09BC                     l465:	
  3006                           ;message.c: 156: while (!TRMT);
  3007                           
  3008  09BC  189E               	btfsc	30,1	;volatile
  3009  09BD  0008               	return
  3010  09BE  29BC               	goto	l465
  3011  09BF                     __end_of__sendchar_:	
  3012                           
  3013                           	psect	text8
  3014  0002                     __ptext8:	
  3015 ;; *************** function _readVoltage *****************
  3016 ;; Defined at:
  3017 ;;		line 418 in file "powerspy.c"
  3018 ;; Parameters:    Size  Location     Type
  3019 ;;		None
  3020 ;; Auto vars:     Size  Location     Type
  3021 ;;		None
  3022 ;; Return value:  Size  Location     Type
  3023 ;;                  1    wreg      unsigned char 
  3024 ;; Registers used:
  3025 ;;		wreg
  3026 ;; Tracked objects:
  3027 ;;		On entry : 0/0
  3028 ;;		On exit  : 0/0
  3029 ;;		Unchanged: 0/0
  3030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3031 ;;      Params:         0       0       0       0       0       0
  3032 ;;      Locals:         0       0       0       0       0       0
  3033 ;;      Temps:          0       0       0       0       0       0
  3034 ;;      Totals:         0       0       0       0       0       0
  3035 ;;Total ram usage:        0 bytes
  3036 ;; Hardware stack levels used:    1
  3037 ;; Hardware stack levels required when called:    3
  3038 ;; This function calls:
  3039 ;;		Nothing
  3040 ;; This function is called by:
  3041 ;;		_main
  3042 ;; This function uses a non-reentrant model
  3043 ;;
  3044                           
  3045                           
  3046                           ;psect for function _readVoltage
  3047  0002                     _readVoltage:	
  3048                           
  3049                           ;powerspy.c: 420: return 230;
  3050                           
  3051                           ;incstack = 0
  3052                           ; Regs used in _readVoltage: [wreg]
  3053  0002  30E6               	movlw	230
  3054  0003  0008               	return
  3055  0004                     __end_of_readVoltage:	
  3056                           
  3057                           	psect	text9
  3058  07C5                     __ptext9:	
  3059 ;; *************** function _readVdd *****************
  3060 ;; Defined at:
  3061 ;;		line 442 in file "powerspy.c"
  3062 ;; Parameters:    Size  Location     Type
  3063 ;;		None
  3064 ;; Auto vars:     Size  Location     Type
  3065 ;;		None
  3066 ;; Return value:  Size  Location     Type
  3067 ;;                  3   67[BANK0 ] float 
  3068 ;; Registers used:
  3069 ;;		wreg, status,2, status,0, pclath, cstack
  3070 ;; Tracked objects:
  3071 ;;		On entry : 0/0
  3072 ;;		On exit  : 0/0
  3073 ;;		Unchanged: 0/0
  3074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3075 ;;      Params:         0       3       0       0       0       0
  3076 ;;      Locals:         0       0       0       0       0       0
  3077 ;;      Temps:          0       0       0       0       0       0
  3078 ;;      Totals:         0       3       0       0       0       0
  3079 ;;Total ram usage:        3 bytes
  3080 ;; Hardware stack levels used:    1
  3081 ;; Hardware stack levels required when called:    5
  3082 ;; This function calls:
  3083 ;;		___ftdiv
  3084 ;;		___ftmul
  3085 ;;		___lwtoft
  3086 ;;		_adc
  3087 ;; This function is called by:
  3088 ;;		_main
  3089 ;; This function uses a non-reentrant model
  3090 ;;
  3091                           
  3092                           
  3093                           ;psect for function _readVdd
  3094  07C5                     _readVdd:	
  3095                           
  3096                           ;powerspy.c: 444: ADFM = 1;
  3097                           
  3098                           ;incstack = 0
  3099                           ; Regs used in _readVdd: [wreg+status,2+status,0+pclath+cstack]
  3100  07C5  0021               	movlb	1	; select bank1
  3101  07C6  179E               	bsf	30,7	;volatile
  3102                           
  3103                           ;powerspy.c: 445: adc(0b00011111);
  3104  07C7  301F               	movlw	31
  3105  07C8  318D  25A8  3187   	fcall	_adc
  3106                           
  3107                           ;powerspy.c: 447: return (1024.0 / ADRES) * 1.024;
  3108  07CB  3012               	movlw	18
  3109  07CC  0020               	movlb	0	; select bank0
  3110  07CD  00C3               	movwf	___ftmul@f1
  3111  07CE  3083               	movlw	131
  3112  07CF  00C4               	movwf	___ftmul@f1+1
  3113  07D0  303F               	movlw	63
  3114  07D1  00C5               	movwf	___ftmul@f1+2
  3115  07D2  0021               	movlb	1	; select bank1
  3116  07D3  081C               	movf	28,w	;volatile
  3117  07D4  0020               	movlb	0	; select bank0
  3118  07D5  00A9               	movwf	___lwtoft@c+1
  3119  07D6  0021               	movlb	1	; select bank1
  3120  07D7  081B               	movf	27,w	;volatile
  3121  07D8  0020               	movlb	0	; select bank0
  3122  07D9  00A8               	movwf	___lwtoft@c
  3123  07DA  318A  2245  3187   	fcall	___lwtoft
  3124  07DD  0020               	movlb	0	; select bank0
  3125  07DE  0828               	movf	?___lwtoft,w
  3126  07DF  00D3               	movwf	___ftdiv@f2
  3127  07E0  0829               	movf	?___lwtoft+1,w
  3128  07E1  00D4               	movwf	___ftdiv@f2+1
  3129  07E2  082A               	movf	?___lwtoft+2,w
  3130  07E3  00D5               	movwf	___ftdiv@f2+2
  3131  07E4  3000               	movlw	0
  3132  07E5  00D6               	movwf	___ftdiv@f1
  3133  07E6  3080               	movlw	128
  3134  07E7  00D7               	movwf	___ftdiv@f1+1
  3135  07E8  3044               	movlw	68
  3136  07E9  00D8               	movwf	___ftdiv@f1+2
  3137  07EA  3186  267A  3187   	fcall	___ftdiv
  3138  07ED  0020               	movlb	0	; select bank0
  3139  07EE  0853               	movf	?___ftdiv,w
  3140  07EF  00C6               	movwf	___ftmul@f2
  3141  07F0  0854               	movf	?___ftdiv+1,w
  3142  07F1  00C7               	movwf	___ftmul@f2+1
  3143  07F2  0855               	movf	?___ftdiv+2,w
  3144  07F3  00C8               	movwf	___ftmul@f2+2
  3145  07F4  3185  25C6         	fcall	___ftmul
  3146  07F6  0020               	movlb	0	; select bank0
  3147  07F7  0843               	movf	?___ftmul,w
  3148  07F8  00E3               	movwf	?_readVdd
  3149  07F9  0844               	movf	?___ftmul+1,w
  3150  07FA  00E4               	movwf	?_readVdd+1
  3151  07FB  0845               	movf	?___ftmul+2,w
  3152  07FC  00E5               	movwf	?_readVdd+2
  3153  07FD  0008               	return
  3154  07FE                     __end_of_readVdd:	
  3155                           
  3156                           	psect	text10
  3157  0EEB                     __ptext10:	
  3158 ;; *************** function _readCurrent *****************
  3159 ;; Defined at:
  3160 ;;		line 428 in file "powerspy.c"
  3161 ;; Parameters:    Size  Location     Type
  3162 ;;		None
  3163 ;; Auto vars:     Size  Location     Type
  3164 ;;		None
  3165 ;; Return value:  Size  Location     Type
  3166 ;;                  3    0[BANK1 ] float 
  3167 ;; Registers used:
  3168 ;;		wreg, status,2, status,0, pclath, cstack
  3169 ;; Tracked objects:
  3170 ;;		On entry : 0/0
  3171 ;;		On exit  : 0/0
  3172 ;;		Unchanged: 0/0
  3173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3174 ;;      Params:         0       0       3       0       0       0
  3175 ;;      Locals:         0       0       3       0       0       0
  3176 ;;      Temps:          0       0       0       0       0       0
  3177 ;;      Totals:         0       0       6       0       0       0
  3178 ;;Total ram usage:        6 bytes
  3179 ;; Hardware stack levels used:    1
  3180 ;; Hardware stack levels required when called:    5
  3181 ;; This function calls:
  3182 ;;		___ftadd
  3183 ;;		___ftdiv
  3184 ;;		___ftmul
  3185 ;;		___lwtoft
  3186 ;;		_adc
  3187 ;; This function is called by:
  3188 ;;		_main
  3189 ;; This function uses a non-reentrant model
  3190 ;;
  3191                           
  3192                           
  3193                           ;psect for function _readCurrent
  3194  0EEB                     _readCurrent:	
  3195                           
  3196                           ;powerspy.c: 436: ADFM = 1;
  3197                           
  3198                           ;incstack = 0
  3199                           ; Regs used in _readCurrent: [wreg+status,2+status,0+pclath+cstack]
  3200  0EEB  0021               	movlb	1	; select bank1
  3201  0EEC  179E               	bsf	30,7	;volatile
  3202                           
  3203                           ;powerspy.c: 437: adc(7);
  3204  0EED  3007               	movlw	7
  3205  0EEE  318D  25A8  318E   	fcall	_adc
  3206                           
  3207                           ;powerspy.c: 439: return (ADRES * 5.0 / 1024.0 + i_u_diode_offs) * 5.0 + i_u_offs;
  3208  0EF1  0021               	movlb	1	; select bank1
  3209  0EF2  0856               	movf	_i_u_diode_offs^(0+128),w
  3210  0EF3  0020               	movlb	0	; select bank0
  3211  0EF4  00E3               	movwf	___ftadd@f1
  3212  0EF5  0021               	movlb	1	; select bank1
  3213  0EF6  0857               	movf	(_i_u_diode_offs+1)^(0+128),w
  3214  0EF7  0020               	movlb	0	; select bank0
  3215  0EF8  00E4               	movwf	___ftadd@f1+1
  3216  0EF9  0021               	movlb	1	; select bank1
  3217  0EFA  0858               	movf	(_i_u_diode_offs+2)^(0+128),w
  3218  0EFB  0020               	movlb	0	; select bank0
  3219  0EFC  00E5               	movwf	___ftadd@f1+2
  3220  0EFD  3000               	movlw	0
  3221  0EFE  00D3               	movwf	___ftdiv@f2
  3222  0EFF  3080               	movlw	128
  3223  0F00  00D4               	movwf	___ftdiv@f2+1
  3224  0F01  3044               	movlw	68
  3225  0F02  00D5               	movwf	___ftdiv@f2+2
  3226  0F03  3000               	movlw	0
  3227  0F04  00C3               	movwf	___ftmul@f1
  3228  0F05  30A0               	movlw	160
  3229  0F06  00C4               	movwf	___ftmul@f1+1
  3230  0F07  3040               	movlw	64
  3231  0F08  00C5               	movwf	___ftmul@f1+2
  3232  0F09  0021               	movlb	1	; select bank1
  3233  0F0A  081C               	movf	28,w	;volatile
  3234  0F0B  0020               	movlb	0	; select bank0
  3235  0F0C  00A9               	movwf	___lwtoft@c+1
  3236  0F0D  0021               	movlb	1	; select bank1
  3237  0F0E  081B               	movf	27,w	;volatile
  3238  0F0F  0020               	movlb	0	; select bank0
  3239  0F10  00A8               	movwf	___lwtoft@c
  3240  0F11  318A  2245  318E   	fcall	___lwtoft
  3241  0F14  0020               	movlb	0	; select bank0
  3242  0F15  0828               	movf	?___lwtoft,w
  3243  0F16  00C6               	movwf	___ftmul@f2
  3244  0F17  0829               	movf	?___lwtoft+1,w
  3245  0F18  00C7               	movwf	___ftmul@f2+1
  3246  0F19  082A               	movf	?___lwtoft+2,w
  3247  0F1A  00C8               	movwf	___ftmul@f2+2
  3248  0F1B  3185  25C6  318E   	fcall	___ftmul
  3249  0F1E  0020               	movlb	0	; select bank0
  3250  0F1F  0843               	movf	?___ftmul,w
  3251  0F20  00D6               	movwf	___ftdiv@f1
  3252  0F21  0844               	movf	?___ftmul+1,w
  3253  0F22  00D7               	movwf	___ftdiv@f1+1
  3254  0F23  0845               	movf	?___ftmul+2,w
  3255  0F24  00D8               	movwf	___ftdiv@f1+2
  3256  0F25  3186  267A  318E   	fcall	___ftdiv
  3257  0F28  0020               	movlb	0	; select bank0
  3258  0F29  0853               	movf	?___ftdiv,w
  3259  0F2A  00E6               	movwf	___ftadd@f2
  3260  0F2B  0854               	movf	?___ftdiv+1,w
  3261  0F2C  00E7               	movwf	___ftadd@f2+1
  3262  0F2D  0855               	movf	?___ftdiv+2,w
  3263  0F2E  00E8               	movwf	___ftadd@f2+2
  3264  0F2F  3184  24D0  318E   	fcall	___ftadd
  3265  0F32  0020               	movlb	0	; select bank0
  3266  0F33  0863               	movf	?___ftadd,w
  3267  0F34  0021               	movlb	1	; select bank1
  3268  0F35  00A3               	movwf	_readCurrent$799^(0+128)
  3269  0F36  0020               	movlb	0	; select bank0
  3270  0F37  0864               	movf	?___ftadd+1,w
  3271  0F38  0021               	movlb	1	; select bank1
  3272  0F39  00A4               	movwf	(_readCurrent$799+1)^(0+128)
  3273  0F3A  0020               	movlb	0	; select bank0
  3274  0F3B  0865               	movf	?___ftadd+2,w
  3275  0F3C  0021               	movlb	1	; select bank1
  3276  0F3D  00A5               	movwf	(_readCurrent$799+2)^(0+128)
  3277                           
  3278                           ;powerspy.c: 439: return (ADRES * 5.0 / 1024.0 + i_u_diode_offs) * 5.0 + i_u_offs;
  3279  0F3E  0859               	movf	_i_u_offs^(0+128),w
  3280  0F3F  0020               	movlb	0	; select bank0
  3281  0F40  00E3               	movwf	___ftadd@f1
  3282  0F41  0021               	movlb	1	; select bank1
  3283  0F42  085A               	movf	(_i_u_offs+1)^(0+128),w
  3284  0F43  0020               	movlb	0	; select bank0
  3285  0F44  00E4               	movwf	___ftadd@f1+1
  3286  0F45  0021               	movlb	1	; select bank1
  3287  0F46  085B               	movf	(_i_u_offs+2)^(0+128),w
  3288  0F47  0020               	movlb	0	; select bank0
  3289  0F48  00E5               	movwf	___ftadd@f1+2
  3290  0F49  3000               	movlw	0
  3291  0F4A  00C3               	movwf	___ftmul@f1
  3292  0F4B  30A0               	movlw	160
  3293  0F4C  00C4               	movwf	___ftmul@f1+1
  3294  0F4D  3040               	movlw	64
  3295  0F4E  00C5               	movwf	___ftmul@f1+2
  3296  0F4F  0021               	movlb	1	; select bank1
  3297  0F50  0823               	movf	_readCurrent$799^(0+128),w
  3298  0F51  0020               	movlb	0	; select bank0
  3299  0F52  00C6               	movwf	___ftmul@f2
  3300  0F53  0021               	movlb	1	; select bank1
  3301  0F54  0824               	movf	(_readCurrent$799+1)^(0+128),w
  3302  0F55  0020               	movlb	0	; select bank0
  3303  0F56  00C7               	movwf	___ftmul@f2+1
  3304  0F57  0021               	movlb	1	; select bank1
  3305  0F58  0825               	movf	(_readCurrent$799+2)^(0+128),w
  3306  0F59  0020               	movlb	0	; select bank0
  3307  0F5A  00C8               	movwf	___ftmul@f2+2
  3308  0F5B  3185  25C6  318E   	fcall	___ftmul
  3309  0F5E  0020               	movlb	0	; select bank0
  3310  0F5F  0843               	movf	?___ftmul,w
  3311  0F60  00E6               	movwf	___ftadd@f2
  3312  0F61  0844               	movf	?___ftmul+1,w
  3313  0F62  00E7               	movwf	___ftadd@f2+1
  3314  0F63  0845               	movf	?___ftmul+2,w
  3315  0F64  00E8               	movwf	___ftadd@f2+2
  3316  0F65  3184  24D0         	fcall	___ftadd
  3317  0F67  0020               	movlb	0	; select bank0
  3318  0F68  0863               	movf	?___ftadd,w
  3319  0F69  0021               	movlb	1	; select bank1
  3320  0F6A  00A0               	movwf	?_readCurrent^(0+128)
  3321  0F6B  0020               	movlb	0	; select bank0
  3322  0F6C  0864               	movf	?___ftadd+1,w
  3323  0F6D  0021               	movlb	1	; select bank1
  3324  0F6E  00A1               	movwf	(?_readCurrent+1)^(0+128)
  3325  0F6F  0020               	movlb	0	; select bank0
  3326  0F70  0865               	movf	?___ftadd+2,w
  3327  0F71  0021               	movlb	1	; select bank1
  3328  0F72  00A2               	movwf	(?_readCurrent+2)^(0+128)
  3329  0F73  0008               	return
  3330  0F74                     __end_of_readCurrent:	
  3331                           
  3332                           	psect	text11
  3333  0DA8                     __ptext11:	
  3334 ;; *************** function _adc *****************
  3335 ;; Defined at:
  3336 ;;		line 374 in file "powerspy.c"
  3337 ;; Parameters:    Size  Location     Type
  3338 ;;  src             1    wreg     const char 
  3339 ;; Auto vars:     Size  Location     Type
  3340 ;;  src             1    1[BANK0 ] const char 
  3341 ;; Return value:  Size  Location     Type
  3342 ;;                  1    wreg      void 
  3343 ;; Registers used:
  3344 ;;		wreg, status,2, status,0
  3345 ;; Tracked objects:
  3346 ;;		On entry : 0/0
  3347 ;;		On exit  : 0/0
  3348 ;;		Unchanged: 0/0
  3349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3350 ;;      Params:         0       0       0       0       0       0
  3351 ;;      Locals:         0       1       0       0       0       0
  3352 ;;      Temps:          0       1       0       0       0       0
  3353 ;;      Totals:         0       2       0       0       0       0
  3354 ;;Total ram usage:        2 bytes
  3355 ;; Hardware stack levels used:    1
  3356 ;; Hardware stack levels required when called:    3
  3357 ;; This function calls:
  3358 ;;		Nothing
  3359 ;; This function is called by:
  3360 ;;		_readCurrent
  3361 ;;		_readVdd
  3362 ;; This function uses a non-reentrant model
  3363 ;;
  3364                           
  3365                           
  3366                           ;psect for function _adc
  3367  0DA8                     _adc:	
  3368                           
  3369                           ;incstack = 0
  3370                           ; Regs used in _adc: [wreg+status,2+status,0]
  3371                           ;adc@src stored from wreg
  3372  0DA8  0020               	movlb	0	; select bank0
  3373  0DA9  00A1               	movwf	adc@src
  3374                           
  3375                           ;powerspy.c: 397: CHS0 = (bit) (src >> 0) & 0x01;
  3376  0DAA  1C21               	btfss	adc@src,0
  3377  0DAB  2DAF               	goto	u2320
  3378  0DAC  0021               	movlb	1	; select bank1
  3379  0DAD  151D               	bsf	29,2	;volatile
  3380  0DAE  2DB1               	goto	l2233
  3381  0DAF                     u2320:	
  3382  0DAF  0021               	movlb	1	; select bank1
  3383  0DB0  111D               	bcf	29,2	;volatile
  3384  0DB1                     l2233:	
  3385                           
  3386                           ;powerspy.c: 398: CHS1 = (bit) (src >> 1) & 0x01;
  3387  0DB1  0020               	movlb	0	; select bank0
  3388  0DB2  0821               	movf	adc@src,w
  3389  0DB3  00A0               	movwf	??_adc
  3390  0DB4  3001               	movlw	1
  3391  0DB5                     u2345:	
  3392  0DB5  1003               	clrc
  3393  0DB6  1BA0               	btfsc	??_adc,7
  3394  0DB7  1403               	setc
  3395  0DB8  0CA0               	rrf	??_adc,f
  3396  0DB9  0B89               	decfsz	9,f
  3397  0DBA  2DB5               	goto	u2345
  3398  0DBB  1C20               	btfss	??_adc,0
  3399  0DBC  2DC0               	goto	u2350
  3400  0DBD  0021               	movlb	1	; select bank1
  3401  0DBE  159D               	bsf	29,3	;volatile
  3402  0DBF  2DC2               	goto	l2235
  3403  0DC0                     u2350:	
  3404  0DC0  0021               	movlb	1	; select bank1
  3405  0DC1  119D               	bcf	29,3	;volatile
  3406  0DC2                     l2235:	
  3407                           
  3408                           ;powerspy.c: 399: CHS2 = (bit) (src >> 2) & 0x01;
  3409  0DC2  0020               	movlb	0	; select bank0
  3410  0DC3  0821               	movf	adc@src,w
  3411  0DC4  00A0               	movwf	??_adc
  3412  0DC5  3002               	movlw	2
  3413  0DC6                     u2375:	
  3414  0DC6  1003               	clrc
  3415  0DC7  1BA0               	btfsc	??_adc,7
  3416  0DC8  1403               	setc
  3417  0DC9  0CA0               	rrf	??_adc,f
  3418  0DCA  0B89               	decfsz	9,f
  3419  0DCB  2DC6               	goto	u2375
  3420  0DCC  1C20               	btfss	??_adc,0
  3421  0DCD  2DD1               	goto	u2380
  3422  0DCE  0021               	movlb	1	; select bank1
  3423  0DCF  161D               	bsf	29,4	;volatile
  3424  0DD0  2DD3               	goto	l2237
  3425  0DD1                     u2380:	
  3426  0DD1  0021               	movlb	1	; select bank1
  3427  0DD2  121D               	bcf	29,4	;volatile
  3428  0DD3                     l2237:	
  3429                           
  3430                           ;powerspy.c: 400: CHS3 = (bit) (src >> 3) & 0x01;
  3431  0DD3  0020               	movlb	0	; select bank0
  3432  0DD4  0821               	movf	adc@src,w
  3433  0DD5  00A0               	movwf	??_adc
  3434  0DD6  3003               	movlw	3
  3435  0DD7                     u2405:	
  3436  0DD7  1003               	clrc
  3437  0DD8  1BA0               	btfsc	??_adc,7
  3438  0DD9  1403               	setc
  3439  0DDA  0CA0               	rrf	??_adc,f
  3440  0DDB  0B89               	decfsz	9,f
  3441  0DDC  2DD7               	goto	u2405
  3442  0DDD  1C20               	btfss	??_adc,0
  3443  0DDE  2DE2               	goto	u2410
  3444  0DDF  0021               	movlb	1	; select bank1
  3445  0DE0  169D               	bsf	29,5	;volatile
  3446  0DE1  2DE4               	goto	l2239
  3447  0DE2                     u2410:	
  3448  0DE2  0021               	movlb	1	; select bank1
  3449  0DE3  129D               	bcf	29,5	;volatile
  3450  0DE4                     l2239:	
  3451                           
  3452                           ;powerspy.c: 401: CHS4 = (bit) (src >> 4) & 0x01;
  3453  0DE4  0020               	movlb	0	; select bank0
  3454  0DE5  0821               	movf	adc@src,w
  3455  0DE6  00A0               	movwf	??_adc
  3456  0DE7  3004               	movlw	4
  3457  0DE8                     u2435:	
  3458  0DE8  1003               	clrc
  3459  0DE9  1BA0               	btfsc	??_adc,7
  3460  0DEA  1403               	setc
  3461  0DEB  0CA0               	rrf	??_adc,f
  3462  0DEC  0B89               	decfsz	9,f
  3463  0DED  2DE8               	goto	u2435
  3464  0DEE  1C20               	btfss	??_adc,0
  3465  0DEF  2DF3               	goto	u2440
  3466  0DF0  0021               	movlb	1	; select bank1
  3467  0DF1  171D               	bsf	29,6	;volatile
  3468  0DF2  2DF5               	goto	u2454
  3469  0DF3                     u2440:	
  3470  0DF3  0021               	movlb	1	; select bank1
  3471  0DF4  131D               	bcf	29,6	;volatile
  3472  0DF5                     u2454:	
  3473                           
  3474                           ;powerspy.c: 403: _delay((unsigned long)((5)*(32000000/4000000.0)));
  3475  0DF5  300D               	movlw	13
  3476  0DF6  0020               	movlb	0	; select bank0
  3477  0DF7  00A0               	movwf	??_adc
  3478  0DF8                     u4107:	
  3479  0DF8  0BA0               	decfsz	??_adc,f
  3480  0DF9  2DF8               	goto	u4107
  3481                           
  3482                           ;powerspy.c: 406: GO_nDONE = 1;
  3483  0DFA  0021               	movlb	1	; select bank1
  3484  0DFB  149D               	bsf	29,1	;volatile
  3485  0DFC                     l276:	
  3486                           ;powerspy.c: 407: while (GO_nDONE);
  3487                           
  3488  0DFC  1C9D               	btfss	29,1	;volatile
  3489  0DFD  0008               	return
  3490  0DFE  2DFC               	goto	l276
  3491  0DFF                     __end_of_adc:	
  3492                           
  3493                           	psect	text12
  3494  0A45                     __ptext12:	
  3495 ;; *************** function ___lwtoft *****************
  3496 ;; Defined at:
  3497 ;;		line 28 in file "/Applications/microchip/xc8/v1.36/sources/common/lwtoft.c"
  3498 ;; Parameters:    Size  Location     Type
  3499 ;;  c               2    8[BANK0 ] unsigned int 
  3500 ;; Auto vars:     Size  Location     Type
  3501 ;;		None
  3502 ;; Return value:  Size  Location     Type
  3503 ;;                  3    8[BANK0 ] float 
  3504 ;; Registers used:
  3505 ;;		wreg, status,2, status,0, pclath, cstack
  3506 ;; Tracked objects:
  3507 ;;		On entry : 0/0
  3508 ;;		On exit  : 0/0
  3509 ;;		Unchanged: 0/0
  3510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3511 ;;      Params:         0       3       0       0       0       0
  3512 ;;      Locals:         0       0       0       0       0       0
  3513 ;;      Temps:          0       1       0       0       0       0
  3514 ;;      Totals:         0       4       0       0       0       0
  3515 ;;Total ram usage:        4 bytes
  3516 ;; Hardware stack levels used:    1
  3517 ;; Hardware stack levels required when called:    4
  3518 ;; This function calls:
  3519 ;;		___ftpack
  3520 ;; This function is called by:
  3521 ;;		_readCurrent
  3522 ;;		_readVdd
  3523 ;; This function uses a non-reentrant model
  3524 ;;
  3525                           
  3526                           
  3527                           ;psect for function ___lwtoft
  3528  0A45                     ___lwtoft:	
  3529                           
  3530                           ;incstack = 0
  3531                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  3532  0A45  0020               	movlb	0	; select bank0
  3533  0A46  0828               	movf	___lwtoft@c,w
  3534  0A47  00A0               	movwf	___ftpack@arg
  3535  0A48  0829               	movf	___lwtoft@c+1,w
  3536  0A49  00A1               	movwf	___ftpack@arg+1
  3537  0A4A  01A2               	clrf	___ftpack@arg+2
  3538  0A4B  308E               	movlw	142
  3539  0A4C  00AB               	movwf	??___lwtoft
  3540  0A4D  082B               	movf	??___lwtoft,w
  3541  0A4E  00A3               	movwf	___ftpack@exp
  3542  0A4F  01A4               	clrf	___ftpack@sign
  3543  0A50  318D  25FF         	fcall	___ftpack
  3544  0A52  0020               	movlb	0	; select bank0
  3545  0A53  0820               	movf	?___ftpack,w
  3546  0A54  00A8               	movwf	?___lwtoft
  3547  0A55  0821               	movf	?___ftpack+1,w
  3548  0A56  00A9               	movwf	?___lwtoft+1
  3549  0A57  0822               	movf	?___ftpack+2,w
  3550  0A58  00AA               	movwf	?___lwtoft+2
  3551  0A59  0008               	return
  3552  0A5A                     __end_of___lwtoft:	
  3553                           
  3554                           	psect	text13
  3555  05C6                     __ptext13:	
  3556 ;; *************** function ___ftmul *****************
  3557 ;; Defined at:
  3558 ;;		line 62 in file "/Applications/microchip/xc8/v1.36/sources/common/ftmul.c"
  3559 ;; Parameters:    Size  Location     Type
  3560 ;;  f1              3   35[BANK0 ] float 
  3561 ;;  f2              3   38[BANK0 ] float 
  3562 ;; Auto vars:     Size  Location     Type
  3563 ;;  f3_as_produc    3   46[BANK0 ] unsigned um
  3564 ;;  sign            1   50[BANK0 ] unsigned char 
  3565 ;;  cntr            1   49[BANK0 ] unsigned char 
  3566 ;;  exp             1   45[BANK0 ] unsigned char 
  3567 ;; Return value:  Size  Location     Type
  3568 ;;                  3   35[BANK0 ] float 
  3569 ;; Registers used:
  3570 ;;		wreg, status,2, status,0, pclath, cstack
  3571 ;; Tracked objects:
  3572 ;;		On entry : 0/0
  3573 ;;		On exit  : 0/0
  3574 ;;		Unchanged: 0/0
  3575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3576 ;;      Params:         0       6       0       0       0       0
  3577 ;;      Locals:         0       6       0       0       0       0
  3578 ;;      Temps:          0       4       0       0       0       0
  3579 ;;      Totals:         0      16       0       0       0       0
  3580 ;;Total ram usage:       16 bytes
  3581 ;; Hardware stack levels used:    1
  3582 ;; Hardware stack levels required when called:    4
  3583 ;; This function calls:
  3584 ;;		___ftpack
  3585 ;; This function is called by:
  3586 ;;		_readCurrent
  3587 ;;		_readVdd
  3588 ;;		_main
  3589 ;; This function uses a non-reentrant model
  3590 ;;
  3591                           
  3592                           
  3593                           ;psect for function ___ftmul
  3594  05C6                     ___ftmul:	
  3595                           
  3596                           ;incstack = 0
  3597                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  3598  05C6  0020               	movlb	0	; select bank0
  3599  05C7  0843               	movf	___ftmul@f1,w
  3600  05C8  00C9               	movwf	??___ftmul
  3601  05C9  0844               	movf	___ftmul@f1+1,w
  3602  05CA  00CA               	movwf	??___ftmul+1
  3603  05CB  0845               	movf	___ftmul@f1+2,w
  3604  05CC  00CB               	movwf	??___ftmul+2
  3605  05CD  1003               	clrc
  3606  05CE  0D4A               	rlf	??___ftmul+1,w
  3607  05CF  0D4B               	rlf	??___ftmul+2,w
  3608  05D0  00CC               	movwf	??___ftmul+3
  3609  05D1  084C               	movf	??___ftmul+3,w
  3610  05D2  00CD               	movwf	___ftmul@exp
  3611  05D3  084D               	movf	___ftmul@exp,w
  3612  05D4  1D03               	btfss	3,2
  3613  05D5  2DDD               	goto	l2513
  3614  05D6  3000               	movlw	0
  3615  05D7  00C3               	movwf	?___ftmul
  3616  05D8  3000               	movlw	0
  3617  05D9  00C4               	movwf	?___ftmul+1
  3618  05DA  3000               	movlw	0
  3619  05DB  00C5               	movwf	?___ftmul+2
  3620  05DC  0008               	return
  3621  05DD                     l2513:	
  3622  05DD  0846               	movf	___ftmul@f2,w
  3623  05DE  00C9               	movwf	??___ftmul
  3624  05DF  0847               	movf	___ftmul@f2+1,w
  3625  05E0  00CA               	movwf	??___ftmul+1
  3626  05E1  0848               	movf	___ftmul@f2+2,w
  3627  05E2  00CB               	movwf	??___ftmul+2
  3628  05E3  1003               	clrc
  3629  05E4  0D4A               	rlf	??___ftmul+1,w
  3630  05E5  0D4B               	rlf	??___ftmul+2,w
  3631  05E6  00CC               	movwf	??___ftmul+3
  3632  05E7  084C               	movf	??___ftmul+3,w
  3633  05E8  00D2               	movwf	___ftmul@sign
  3634  05E9  0852               	movf	___ftmul@sign,w
  3635  05EA  1D03               	btfss	3,2
  3636  05EB  2DF3               	goto	l2519
  3637  05EC  3000               	movlw	0
  3638  05ED  00C3               	movwf	?___ftmul
  3639  05EE  3000               	movlw	0
  3640  05EF  00C4               	movwf	?___ftmul+1
  3641  05F0  3000               	movlw	0
  3642  05F1  00C5               	movwf	?___ftmul+2
  3643  05F2  0008               	return
  3644  05F3                     l2519:	
  3645  05F3  0852               	movf	___ftmul@sign,w
  3646  05F4  3E7B               	addlw	123
  3647  05F5  00C9               	movwf	??___ftmul
  3648  05F6  0849               	movf	??___ftmul,w
  3649  05F7  07CD               	addwf	___ftmul@exp,f
  3650  05F8  0843               	movf	___ftmul@f1,w
  3651  05F9  00C9               	movwf	??___ftmul
  3652  05FA  0844               	movf	___ftmul@f1+1,w
  3653  05FB  00CA               	movwf	??___ftmul+1
  3654  05FC  0845               	movf	___ftmul@f1+2,w
  3655  05FD  00CB               	movwf	??___ftmul+2
  3656  05FE  3010               	movlw	16
  3657  05FF                     u3035:	
  3658  05FF  36CB               	lsrf	??___ftmul+2,f
  3659  0600  0CCA               	rrf	??___ftmul+1,f
  3660  0601  0CC9               	rrf	??___ftmul,f
  3661  0602  0B89               	decfsz	9,f
  3662  0603  2DFF               	goto	u3035
  3663  0604  0849               	movf	??___ftmul,w
  3664  0605  00CC               	movwf	??___ftmul+3
  3665  0606  084C               	movf	??___ftmul+3,w
  3666  0607  00D2               	movwf	___ftmul@sign
  3667  0608  0846               	movf	___ftmul@f2,w
  3668  0609  00C9               	movwf	??___ftmul
  3669  060A  0847               	movf	___ftmul@f2+1,w
  3670  060B  00CA               	movwf	??___ftmul+1
  3671  060C  0848               	movf	___ftmul@f2+2,w
  3672  060D  00CB               	movwf	??___ftmul+2
  3673  060E  3010               	movlw	16
  3674  060F                     u3045:	
  3675  060F  36CB               	lsrf	??___ftmul+2,f
  3676  0610  0CCA               	rrf	??___ftmul+1,f
  3677  0611  0CC9               	rrf	??___ftmul,f
  3678  0612  0B89               	decfsz	9,f
  3679  0613  2E0F               	goto	u3045
  3680  0614  0849               	movf	??___ftmul,w
  3681  0615  00CC               	movwf	??___ftmul+3
  3682  0616  084C               	movf	??___ftmul+3,w
  3683  0617  06D2               	xorwf	___ftmul@sign,f
  3684  0618  3080               	movlw	128
  3685  0619  00C9               	movwf	??___ftmul
  3686  061A  0849               	movf	??___ftmul,w
  3687  061B  05D2               	andwf	___ftmul@sign,f
  3688  061C  17C4               	bsf	___ftmul@f1+1,7
  3689  061D  17C7               	bsf	___ftmul@f2+1,7
  3690  061E  30FF               	movlw	255
  3691  061F  05C6               	andwf	___ftmul@f2,f
  3692  0620  30FF               	movlw	255
  3693  0621  05C7               	andwf	___ftmul@f2+1,f
  3694  0622  3000               	movlw	0
  3695  0623  05C8               	andwf	___ftmul@f2+2,f
  3696  0624  3000               	movlw	0
  3697  0625  00CE               	movwf	___ftmul@f3_as_product
  3698  0626  3000               	movlw	0
  3699  0627  00CF               	movwf	___ftmul@f3_as_product+1
  3700  0628  3000               	movlw	0
  3701  0629  00D0               	movwf	___ftmul@f3_as_product+2
  3702  062A  3007               	movlw	7
  3703  062B  00C9               	movwf	??___ftmul
  3704  062C  0849               	movf	??___ftmul,w
  3705  062D  00D1               	movwf	___ftmul@cntr
  3706  062E                     l2531:	
  3707  062E  1C43               	btfss	___ftmul@f1,0
  3708  062F  2E36               	goto	l2535
  3709  0630  0846               	movf	___ftmul@f2,w
  3710  0631  07CE               	addwf	___ftmul@f3_as_product,f
  3711  0632  0847               	movf	___ftmul@f2+1,w
  3712  0633  3DCF               	addwfc	___ftmul@f3_as_product+1,f
  3713  0634  0848               	movf	___ftmul@f2+2,w
  3714  0635  3DD0               	addwfc	___ftmul@f3_as_product+2,f
  3715  0636                     l2535:	
  3716  0636  3001               	movlw	1
  3717  0637                     u3065:	
  3718  0637  36C5               	lsrf	___ftmul@f1+2,f
  3719  0638  0CC4               	rrf	___ftmul@f1+1,f
  3720  0639  0CC3               	rrf	___ftmul@f1,f
  3721  063A  0B89               	decfsz	9,f
  3722  063B  2E37               	goto	u3065
  3723  063C  3001               	movlw	1
  3724  063D                     u3075:	
  3725  063D  35C6               	lslf	___ftmul@f2,f
  3726  063E  0DC7               	rlf	___ftmul@f2+1,f
  3727  063F  0DC8               	rlf	___ftmul@f2+2,f
  3728  0640  0B89               	decfsz	9,f
  3729  0641  2E3D               	goto	u3075
  3730  0642  3001               	movlw	1
  3731  0643  02D1               	subwf	___ftmul@cntr,f
  3732  0644  1D03               	btfss	3,2
  3733  0645  2E2E               	goto	l2531
  3734  0646  3009               	movlw	9
  3735  0647  00C9               	movwf	??___ftmul
  3736  0648  0849               	movf	??___ftmul,w
  3737  0649  00D1               	movwf	___ftmul@cntr
  3738  064A                     l2543:	
  3739  064A  1C43               	btfss	___ftmul@f1,0
  3740  064B  2E52               	goto	l2547
  3741  064C  0846               	movf	___ftmul@f2,w
  3742  064D  07CE               	addwf	___ftmul@f3_as_product,f
  3743  064E  0847               	movf	___ftmul@f2+1,w
  3744  064F  3DCF               	addwfc	___ftmul@f3_as_product+1,f
  3745  0650  0848               	movf	___ftmul@f2+2,w
  3746  0651  3DD0               	addwfc	___ftmul@f3_as_product+2,f
  3747  0652                     l2547:	
  3748  0652  3001               	movlw	1
  3749  0653                     u3105:	
  3750  0653  36C5               	lsrf	___ftmul@f1+2,f
  3751  0654  0CC4               	rrf	___ftmul@f1+1,f
  3752  0655  0CC3               	rrf	___ftmul@f1,f
  3753  0656  0B89               	decfsz	9,f
  3754  0657  2E53               	goto	u3105
  3755  0658  3001               	movlw	1
  3756  0659                     u3115:	
  3757  0659  36D0               	lsrf	___ftmul@f3_as_product+2,f
  3758  065A  0CCF               	rrf	___ftmul@f3_as_product+1,f
  3759  065B  0CCE               	rrf	___ftmul@f3_as_product,f
  3760  065C  0B89               	decfsz	9,f
  3761  065D  2E59               	goto	u3115
  3762  065E  3001               	movlw	1
  3763  065F  02D1               	subwf	___ftmul@cntr,f
  3764  0660  1D03               	btfss	3,2
  3765  0661  2E4A               	goto	l2543
  3766  0662  084E               	movf	___ftmul@f3_as_product,w
  3767  0663  00A0               	movwf	___ftpack@arg
  3768  0664  084F               	movf	___ftmul@f3_as_product+1,w
  3769  0665  00A1               	movwf	___ftpack@arg+1
  3770  0666  0850               	movf	___ftmul@f3_as_product+2,w
  3771  0667  00A2               	movwf	___ftpack@arg+2
  3772  0668  084D               	movf	___ftmul@exp,w
  3773  0669  00C9               	movwf	??___ftmul
  3774  066A  0849               	movf	??___ftmul,w
  3775  066B  00A3               	movwf	___ftpack@exp
  3776  066C  0852               	movf	___ftmul@sign,w
  3777  066D  00CA               	movwf	??___ftmul+1
  3778  066E  084A               	movf	??___ftmul+1,w
  3779  066F  00A4               	movwf	___ftpack@sign
  3780  0670  318D  25FF         	fcall	___ftpack
  3781  0672  0020               	movlb	0	; select bank0
  3782  0673  0820               	movf	?___ftpack,w
  3783  0674  00C3               	movwf	?___ftmul
  3784  0675  0821               	movf	?___ftpack+1,w
  3785  0676  00C4               	movwf	?___ftmul+1
  3786  0677  0822               	movf	?___ftpack+2,w
  3787  0678  00C5               	movwf	?___ftmul+2
  3788  0679  0008               	return
  3789  067A                     __end_of___ftmul:	
  3790                           
  3791                           	psect	text14
  3792  067A                     __ptext14:	
  3793 ;; *************** function ___ftdiv *****************
  3794 ;; Defined at:
  3795 ;;		line 56 in file "/Applications/microchip/xc8/v1.36/sources/common/ftdiv.c"
  3796 ;; Parameters:    Size  Location     Type
  3797 ;;  f2              3   51[BANK0 ] float 
  3798 ;;  f1              3   54[BANK0 ] float 
  3799 ;; Auto vars:     Size  Location     Type
  3800 ;;  f3              3   62[BANK0 ] float 
  3801 ;;  sign            1   66[BANK0 ] unsigned char 
  3802 ;;  exp             1   65[BANK0 ] unsigned char 
  3803 ;;  cntr            1   61[BANK0 ] unsigned char 
  3804 ;; Return value:  Size  Location     Type
  3805 ;;                  3   51[BANK0 ] float 
  3806 ;; Registers used:
  3807 ;;		wreg, status,2, status,0, pclath, cstack
  3808 ;; Tracked objects:
  3809 ;;		On entry : 0/0
  3810 ;;		On exit  : 0/0
  3811 ;;		Unchanged: 0/0
  3812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3813 ;;      Params:         0       6       0       0       0       0
  3814 ;;      Locals:         0       6       0       0       0       0
  3815 ;;      Temps:          0       4       0       0       0       0
  3816 ;;      Totals:         0      16       0       0       0       0
  3817 ;;Total ram usage:       16 bytes
  3818 ;; Hardware stack levels used:    1
  3819 ;; Hardware stack levels required when called:    4
  3820 ;; This function calls:
  3821 ;;		___ftpack
  3822 ;; This function is called by:
  3823 ;;		_readCurrent
  3824 ;;		_readVdd
  3825 ;;		_main
  3826 ;; This function uses a non-reentrant model
  3827 ;;
  3828                           
  3829                           
  3830                           ;psect for function ___ftdiv
  3831  067A                     ___ftdiv:	
  3832                           
  3833                           ;incstack = 0
  3834                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  3835  067A  0020               	movlb	0	; select bank0
  3836  067B  0856               	movf	___ftdiv@f1,w
  3837  067C  00D9               	movwf	??___ftdiv
  3838  067D  0857               	movf	___ftdiv@f1+1,w
  3839  067E  00DA               	movwf	??___ftdiv+1
  3840  067F  0858               	movf	___ftdiv@f1+2,w
  3841  0680  00DB               	movwf	??___ftdiv+2
  3842  0681  1003               	clrc
  3843  0682  0D5A               	rlf	??___ftdiv+1,w
  3844  0683  0D5B               	rlf	??___ftdiv+2,w
  3845  0684  00DC               	movwf	??___ftdiv+3
  3846  0685  085C               	movf	??___ftdiv+3,w
  3847  0686  00E1               	movwf	___ftdiv@exp
  3848  0687  0861               	movf	___ftdiv@exp,w
  3849  0688  1D03               	btfss	3,2
  3850  0689  2E91               	goto	l2471
  3851  068A  3000               	movlw	0
  3852  068B  00D3               	movwf	?___ftdiv
  3853  068C  3000               	movlw	0
  3854  068D  00D4               	movwf	?___ftdiv+1
  3855  068E  3000               	movlw	0
  3856  068F  00D5               	movwf	?___ftdiv+2
  3857  0690  0008               	return
  3858  0691                     l2471:	
  3859  0691  0853               	movf	___ftdiv@f2,w
  3860  0692  00D9               	movwf	??___ftdiv
  3861  0693  0854               	movf	___ftdiv@f2+1,w
  3862  0694  00DA               	movwf	??___ftdiv+1
  3863  0695  0855               	movf	___ftdiv@f2+2,w
  3864  0696  00DB               	movwf	??___ftdiv+2
  3865  0697  1003               	clrc
  3866  0698  0D5A               	rlf	??___ftdiv+1,w
  3867  0699  0D5B               	rlf	??___ftdiv+2,w
  3868  069A  00DC               	movwf	??___ftdiv+3
  3869  069B  085C               	movf	??___ftdiv+3,w
  3870  069C  00E2               	movwf	___ftdiv@sign
  3871  069D  0862               	movf	___ftdiv@sign,w
  3872  069E  1D03               	btfss	3,2
  3873  069F  2EA7               	goto	l2477
  3874  06A0  3000               	movlw	0
  3875  06A1  00D3               	movwf	?___ftdiv
  3876  06A2  3000               	movlw	0
  3877  06A3  00D4               	movwf	?___ftdiv+1
  3878  06A4  3000               	movlw	0
  3879  06A5  00D5               	movwf	?___ftdiv+2
  3880  06A6  0008               	return
  3881  06A7                     l2477:	
  3882  06A7  3000               	movlw	0
  3883  06A8  00DE               	movwf	___ftdiv@f3
  3884  06A9  3000               	movlw	0
  3885  06AA  00DF               	movwf	___ftdiv@f3+1
  3886  06AB  3000               	movlw	0
  3887  06AC  00E0               	movwf	___ftdiv@f3+2
  3888  06AD  3089               	movlw	137
  3889  06AE  0762               	addwf	___ftdiv@sign,w
  3890  06AF  00D9               	movwf	??___ftdiv
  3891  06B0  0859               	movf	??___ftdiv,w
  3892  06B1  02E1               	subwf	___ftdiv@exp,f
  3893  06B2  0856               	movf	___ftdiv@f1,w
  3894  06B3  00D9               	movwf	??___ftdiv
  3895  06B4  0857               	movf	___ftdiv@f1+1,w
  3896  06B5  00DA               	movwf	??___ftdiv+1
  3897  06B6  0858               	movf	___ftdiv@f1+2,w
  3898  06B7  00DB               	movwf	??___ftdiv+2
  3899  06B8  3010               	movlw	16
  3900  06B9                     u2955:	
  3901  06B9  36DB               	lsrf	??___ftdiv+2,f
  3902  06BA  0CDA               	rrf	??___ftdiv+1,f
  3903  06BB  0CD9               	rrf	??___ftdiv,f
  3904  06BC  0B89               	decfsz	9,f
  3905  06BD  2EB9               	goto	u2955
  3906  06BE  0859               	movf	??___ftdiv,w
  3907  06BF  00DC               	movwf	??___ftdiv+3
  3908  06C0  085C               	movf	??___ftdiv+3,w
  3909  06C1  00E2               	movwf	___ftdiv@sign
  3910  06C2  0853               	movf	___ftdiv@f2,w
  3911  06C3  00D9               	movwf	??___ftdiv
  3912  06C4  0854               	movf	___ftdiv@f2+1,w
  3913  06C5  00DA               	movwf	??___ftdiv+1
  3914  06C6  0855               	movf	___ftdiv@f2+2,w
  3915  06C7  00DB               	movwf	??___ftdiv+2
  3916  06C8  3010               	movlw	16
  3917  06C9                     u2965:	
  3918  06C9  36DB               	lsrf	??___ftdiv+2,f
  3919  06CA  0CDA               	rrf	??___ftdiv+1,f
  3920  06CB  0CD9               	rrf	??___ftdiv,f
  3921  06CC  0B89               	decfsz	9,f
  3922  06CD  2EC9               	goto	u2965
  3923  06CE  0859               	movf	??___ftdiv,w
  3924  06CF  00DC               	movwf	??___ftdiv+3
  3925  06D0  085C               	movf	??___ftdiv+3,w
  3926  06D1  06E2               	xorwf	___ftdiv@sign,f
  3927  06D2  3080               	movlw	128
  3928  06D3  00D9               	movwf	??___ftdiv
  3929  06D4  0859               	movf	??___ftdiv,w
  3930  06D5  05E2               	andwf	___ftdiv@sign,f
  3931  06D6  17D7               	bsf	___ftdiv@f1+1,7
  3932  06D7  30FF               	movlw	255
  3933  06D8  05D6               	andwf	___ftdiv@f1,f
  3934  06D9  30FF               	movlw	255
  3935  06DA  05D7               	andwf	___ftdiv@f1+1,f
  3936  06DB  3000               	movlw	0
  3937  06DC  05D8               	andwf	___ftdiv@f1+2,f
  3938  06DD  17D4               	bsf	___ftdiv@f2+1,7
  3939  06DE  30FF               	movlw	255
  3940  06DF  05D3               	andwf	___ftdiv@f2,f
  3941  06E0  30FF               	movlw	255
  3942  06E1  05D4               	andwf	___ftdiv@f2+1,f
  3943  06E2  3000               	movlw	0
  3944  06E3  05D5               	andwf	___ftdiv@f2+2,f
  3945  06E4  3018               	movlw	24
  3946  06E5  00D9               	movwf	??___ftdiv
  3947  06E6  0859               	movf	??___ftdiv,w
  3948  06E7  00DD               	movwf	___ftdiv@cntr
  3949  06E8                     l2491:	
  3950  06E8  3001               	movlw	1
  3951  06E9                     u2975:	
  3952  06E9  35DE               	lslf	___ftdiv@f3,f
  3953  06EA  0DDF               	rlf	___ftdiv@f3+1,f
  3954  06EB  0DE0               	rlf	___ftdiv@f3+2,f
  3955  06EC  0B89               	decfsz	9,f
  3956  06ED  2EE9               	goto	u2975
  3957  06EE  0855               	movf	___ftdiv@f2+2,w
  3958  06EF  0258               	subwf	___ftdiv@f1+2,w
  3959  06F0  1D03               	skipz
  3960  06F1  2EF8               	goto	u2985
  3961  06F2  0854               	movf	___ftdiv@f2+1,w
  3962  06F3  0257               	subwf	___ftdiv@f1+1,w
  3963  06F4  1D03               	skipz
  3964  06F5  2EF8               	goto	u2985
  3965  06F6  0853               	movf	___ftdiv@f2,w
  3966  06F7  0256               	subwf	___ftdiv@f1,w
  3967  06F8                     u2985:	
  3968  06F8  1C03               	skipc
  3969  06F9  2F01               	goto	l2499
  3970  06FA  0853               	movf	___ftdiv@f2,w
  3971  06FB  02D6               	subwf	___ftdiv@f1,f
  3972  06FC  0854               	movf	___ftdiv@f2+1,w
  3973  06FD  3BD7               	subwfb	___ftdiv@f1+1,f
  3974  06FE  0855               	movf	___ftdiv@f2+2,w
  3975  06FF  3BD8               	subwfb	___ftdiv@f1+2,f
  3976  0700  145E               	bsf	___ftdiv@f3,0
  3977  0701                     l2499:	
  3978  0701  3001               	movlw	1
  3979  0702                     u2995:	
  3980  0702  35D6               	lslf	___ftdiv@f1,f
  3981  0703  0DD7               	rlf	___ftdiv@f1+1,f
  3982  0704  0DD8               	rlf	___ftdiv@f1+2,f
  3983  0705  0B89               	decfsz	9,f
  3984  0706  2F02               	goto	u2995
  3985  0707  3001               	movlw	1
  3986  0708  02DD               	subwf	___ftdiv@cntr,f
  3987  0709  1D03               	btfss	3,2
  3988  070A  2EE8               	goto	l2491
  3989  070B  085E               	movf	___ftdiv@f3,w
  3990  070C  00A0               	movwf	___ftpack@arg
  3991  070D  085F               	movf	___ftdiv@f3+1,w
  3992  070E  00A1               	movwf	___ftpack@arg+1
  3993  070F  0860               	movf	___ftdiv@f3+2,w
  3994  0710  00A2               	movwf	___ftpack@arg+2
  3995  0711  0861               	movf	___ftdiv@exp,w
  3996  0712  00D9               	movwf	??___ftdiv
  3997  0713  0859               	movf	??___ftdiv,w
  3998  0714  00A3               	movwf	___ftpack@exp
  3999  0715  0862               	movf	___ftdiv@sign,w
  4000  0716  00DA               	movwf	??___ftdiv+1
  4001  0717  085A               	movf	??___ftdiv+1,w
  4002  0718  00A4               	movwf	___ftpack@sign
  4003  0719  318D  25FF         	fcall	___ftpack
  4004  071B  0020               	movlb	0	; select bank0
  4005  071C  0820               	movf	?___ftpack,w
  4006  071D  00D3               	movwf	?___ftdiv
  4007  071E  0821               	movf	?___ftpack+1,w
  4008  071F  00D4               	movwf	?___ftdiv+1
  4009  0720  0822               	movf	?___ftpack+2,w
  4010  0721  00D5               	movwf	?___ftdiv+2
  4011  0722  0008               	return
  4012  0723                     __end_of___ftdiv:	
  4013                           
  4014                           	psect	text15
  4015  04D0                     __ptext15:	
  4016 ;; *************** function ___ftadd *****************
  4017 ;; Defined at:
  4018 ;;		line 86 in file "/Applications/microchip/xc8/v1.36/sources/common/ftadd.c"
  4019 ;; Parameters:    Size  Location     Type
  4020 ;;  f1              3   67[BANK0 ] float 
  4021 ;;  f2              3   70[BANK0 ] float 
  4022 ;; Auto vars:     Size  Location     Type
  4023 ;;  exp1            1   79[BANK0 ] unsigned char 
  4024 ;;  exp2            1   78[BANK0 ] unsigned char 
  4025 ;;  sign            1   77[BANK0 ] unsigned char 
  4026 ;; Return value:  Size  Location     Type
  4027 ;;                  3   67[BANK0 ] float 
  4028 ;; Registers used:
  4029 ;;		wreg, status,2, status,0, pclath, cstack
  4030 ;; Tracked objects:
  4031 ;;		On entry : 0/0
  4032 ;;		On exit  : 0/0
  4033 ;;		Unchanged: 0/0
  4034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4035 ;;      Params:         0       6       0       0       0       0
  4036 ;;      Locals:         0       3       0       0       0       0
  4037 ;;      Temps:          0       4       0       0       0       0
  4038 ;;      Totals:         0      13       0       0       0       0
  4039 ;;Total ram usage:       13 bytes
  4040 ;; Hardware stack levels used:    1
  4041 ;; Hardware stack levels required when called:    4
  4042 ;; This function calls:
  4043 ;;		___ftpack
  4044 ;; This function is called by:
  4045 ;;		_readCurrent
  4046 ;; This function uses a non-reentrant model
  4047 ;;
  4048                           
  4049                           
  4050                           ;psect for function ___ftadd
  4051  04D0                     ___ftadd:	
  4052                           
  4053                           ;incstack = 0
  4054                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  4055  04D0  0020               	movlb	0	; select bank0
  4056  04D1  0863               	movf	___ftadd@f1,w
  4057  04D2  00E9               	movwf	??___ftadd
  4058  04D3  0864               	movf	___ftadd@f1+1,w
  4059  04D4  00EA               	movwf	??___ftadd+1
  4060  04D5  0865               	movf	___ftadd@f1+2,w
  4061  04D6  00EB               	movwf	??___ftadd+2
  4062  04D7  1003               	clrc
  4063  04D8  0D6A               	rlf	??___ftadd+1,w
  4064  04D9  0D6B               	rlf	??___ftadd+2,w
  4065  04DA  00EC               	movwf	??___ftadd+3
  4066  04DB  086C               	movf	??___ftadd+3,w
  4067  04DC  00EF               	movwf	___ftadd@exp1
  4068  04DD  0866               	movf	___ftadd@f2,w
  4069  04DE  00E9               	movwf	??___ftadd
  4070  04DF  0867               	movf	___ftadd@f2+1,w
  4071  04E0  00EA               	movwf	??___ftadd+1
  4072  04E1  0868               	movf	___ftadd@f2+2,w
  4073  04E2  00EB               	movwf	??___ftadd+2
  4074  04E3  1003               	clrc
  4075  04E4  0D6A               	rlf	??___ftadd+1,w
  4076  04E5  0D6B               	rlf	??___ftadd+2,w
  4077  04E6  00EC               	movwf	??___ftadd+3
  4078  04E7  086C               	movf	??___ftadd+3,w
  4079  04E8  00EE               	movwf	___ftadd@exp2
  4080  04E9  086F               	movf	___ftadd@exp1,w
  4081  04EA  1903               	btfsc	3,2
  4082  04EB  2CF8               	goto	l2401
  4083  04EC  086E               	movf	___ftadd@exp2,w
  4084  04ED  026F               	subwf	___ftadd@exp1,w
  4085  04EE  1803               	skipnc
  4086  04EF  2CFF               	goto	l2405
  4087  04F0  036F               	decf	___ftadd@exp1,w
  4088  04F1  3AFF               	xorlw	255
  4089  04F2  076E               	addwf	___ftadd@exp2,w
  4090  04F3  00E9               	movwf	??___ftadd
  4091  04F4  3019               	movlw	25
  4092  04F5  0269               	subwf	??___ftadd,w
  4093  04F6  1C03               	skipc
  4094  04F7  2CFF               	goto	l2405
  4095  04F8                     l2401:	
  4096  04F8  0866               	movf	___ftadd@f2,w
  4097  04F9  00E3               	movwf	?___ftadd
  4098  04FA  0867               	movf	___ftadd@f2+1,w
  4099  04FB  00E4               	movwf	?___ftadd+1
  4100  04FC  0868               	movf	___ftadd@f2+2,w
  4101  04FD  00E5               	movwf	?___ftadd+2
  4102  04FE  0008               	return
  4103  04FF                     l2405:	
  4104  04FF  086E               	movf	___ftadd@exp2,w
  4105  0500  1903               	btfsc	3,2
  4106  0501  0008               	return
  4107  0502  086F               	movf	___ftadd@exp1,w
  4108  0503  026E               	subwf	___ftadd@exp2,w
  4109  0504  1803               	skipnc
  4110  0505  2D0E               	goto	l2411
  4111  0506  036E               	decf	___ftadd@exp2,w
  4112  0507  3AFF               	xorlw	255
  4113  0508  076F               	addwf	___ftadd@exp1,w
  4114  0509  00E9               	movwf	??___ftadd
  4115  050A  3019               	movlw	25
  4116  050B  0269               	subwf	??___ftadd,w
  4117  050C  1803               	btfsc	3,0
  4118  050D  0008               	return
  4119  050E                     l2411:	
  4120  050E  3006               	movlw	6
  4121  050F  00E9               	movwf	??___ftadd
  4122  0510  0869               	movf	??___ftadd,w
  4123  0511  00ED               	movwf	___ftadd@sign
  4124  0512  1BE5               	btfsc	___ftadd@f1+2,7
  4125  0513  17ED               	bsf	___ftadd@sign,7
  4126  0514  1BE8               	btfsc	___ftadd@f2+2,7
  4127  0515  176D               	bsf	___ftadd@sign,6
  4128  0516  17E4               	bsf	___ftadd@f1+1,7
  4129  0517  30FF               	movlw	255
  4130  0518  05E3               	andwf	___ftadd@f1,f
  4131  0519  30FF               	movlw	255
  4132  051A  05E4               	andwf	___ftadd@f1+1,f
  4133  051B  3000               	movlw	0
  4134  051C  05E5               	andwf	___ftadd@f1+2,f
  4135  051D  17E7               	bsf	___ftadd@f2+1,7
  4136  051E  30FF               	movlw	255
  4137  051F  05E6               	andwf	___ftadd@f2,f
  4138  0520  30FF               	movlw	255
  4139  0521  05E7               	andwf	___ftadd@f2+1,f
  4140  0522  3000               	movlw	0
  4141  0523  05E8               	andwf	___ftadd@f2+2,f
  4142  0524  086E               	movf	___ftadd@exp2,w
  4143  0525  026F               	subwf	___ftadd@exp1,w
  4144  0526  1803               	skipnc
  4145  0527  2D4A               	goto	l2433
  4146  0528                     l2423:	
  4147  0528  3001               	movlw	1
  4148  0529                     u2795:	
  4149  0529  35E6               	lslf	___ftadd@f2,f
  4150  052A  0DE7               	rlf	___ftadd@f2+1,f
  4151  052B  0DE8               	rlf	___ftadd@f2+2,f
  4152  052C  0B89               	decfsz	9,f
  4153  052D  2D29               	goto	u2795
  4154  052E  3001               	movlw	1
  4155  052F  02EE               	subwf	___ftadd@exp2,f
  4156  0530  086E               	movf	___ftadd@exp2,w
  4157  0531  066F               	xorwf	___ftadd@exp1,w
  4158  0532  1903               	skipnz
  4159  0533  2D45               	goto	l2431
  4160  0534  3001               	movlw	1
  4161  0535  02ED               	subwf	___ftadd@sign,f
  4162  0536  086D               	movf	___ftadd@sign,w
  4163  0537  3907               	andlw	7
  4164  0538  1903               	btfsc	3,2
  4165  0539  2D45               	goto	l2431
  4166  053A  2D28               	goto	l2423
  4167  053B                     l2429:	
  4168  053B  3001               	movlw	1
  4169  053C                     u2825:	
  4170  053C  36E5               	lsrf	___ftadd@f1+2,f
  4171  053D  0CE4               	rrf	___ftadd@f1+1,f
  4172  053E  0CE3               	rrf	___ftadd@f1,f
  4173  053F  0B89               	decfsz	9,f
  4174  0540  2D3C               	goto	u2825
  4175  0541  3001               	movlw	1
  4176  0542  00E9               	movwf	??___ftadd
  4177  0543  0869               	movf	??___ftadd,w
  4178  0544  07EF               	addwf	___ftadd@exp1,f
  4179  0545                     l2431:	
  4180  0545  086F               	movf	___ftadd@exp1,w
  4181  0546  066E               	xorwf	___ftadd@exp2,w
  4182  0547  1903               	btfsc	3,2
  4183  0548  2D6F               	goto	l783
  4184  0549  2D3B               	goto	l2429
  4185  054A                     l2433:	
  4186  054A  086F               	movf	___ftadd@exp1,w
  4187  054B  026E               	subwf	___ftadd@exp2,w
  4188  054C  1803               	skipnc
  4189  054D  2D6F               	goto	l783
  4190  054E                     l2435:	
  4191  054E  3001               	movlw	1
  4192  054F                     u2855:	
  4193  054F  35E3               	lslf	___ftadd@f1,f
  4194  0550  0DE4               	rlf	___ftadd@f1+1,f
  4195  0551  0DE5               	rlf	___ftadd@f1+2,f
  4196  0552  0B89               	decfsz	9,f
  4197  0553  2D4F               	goto	u2855
  4198  0554  3001               	movlw	1
  4199  0555  02EF               	subwf	___ftadd@exp1,f
  4200  0556  086E               	movf	___ftadd@exp2,w
  4201  0557  066F               	xorwf	___ftadd@exp1,w
  4202  0558  1903               	skipnz
  4203  0559  2D6B               	goto	l2443
  4204  055A  3001               	movlw	1
  4205  055B  02ED               	subwf	___ftadd@sign,f
  4206  055C  086D               	movf	___ftadd@sign,w
  4207  055D  3907               	andlw	7
  4208  055E  1903               	btfsc	3,2
  4209  055F  2D6B               	goto	l2443
  4210  0560  2D4E               	goto	l2435
  4211  0561                     l2441:	
  4212  0561  3001               	movlw	1
  4213  0562                     u2885:	
  4214  0562  36E8               	lsrf	___ftadd@f2+2,f
  4215  0563  0CE7               	rrf	___ftadd@f2+1,f
  4216  0564  0CE6               	rrf	___ftadd@f2,f
  4217  0565  0B89               	decfsz	9,f
  4218  0566  2D62               	goto	u2885
  4219  0567  3001               	movlw	1
  4220  0568  00E9               	movwf	??___ftadd
  4221  0569  0869               	movf	??___ftadd,w
  4222  056A  07EE               	addwf	___ftadd@exp2,f
  4223  056B                     l2443:	
  4224  056B  086F               	movf	___ftadd@exp1,w
  4225  056C  066E               	xorwf	___ftadd@exp2,w
  4226  056D  1D03               	skipz
  4227  056E  2D61               	goto	l2441
  4228  056F                     l783:	
  4229  056F  1FED               	btfss	___ftadd@sign,7
  4230  0570  2D81               	goto	l2447
  4231  0571  30FF               	movlw	255
  4232  0572  06E3               	xorwf	___ftadd@f1,f
  4233  0573  30FF               	movlw	255
  4234  0574  06E4               	xorwf	___ftadd@f1+1,f
  4235  0575  30FF               	movlw	255
  4236  0576  06E5               	xorwf	___ftadd@f1+2,f
  4237  0577  3001               	movlw	1
  4238  0578  07E3               	addwf	___ftadd@f1,f
  4239  0579  3000               	movlw	0
  4240  057A  1803               	skipnc
  4241  057B  3001               	movlw	1
  4242  057C  07E4               	addwf	___ftadd@f1+1,f
  4243  057D  3000               	movlw	0
  4244  057E  1803               	skipnc
  4245  057F  3001               	movlw	1
  4246  0580  07E5               	addwf	___ftadd@f1+2,f
  4247  0581                     l2447:	
  4248  0581  1F6D               	btfss	___ftadd@sign,6
  4249  0582  2D93               	goto	l2451
  4250  0583  30FF               	movlw	255
  4251  0584  06E6               	xorwf	___ftadd@f2,f
  4252  0585  30FF               	movlw	255
  4253  0586  06E7               	xorwf	___ftadd@f2+1,f
  4254  0587  30FF               	movlw	255
  4255  0588  06E8               	xorwf	___ftadd@f2+2,f
  4256  0589  3001               	movlw	1
  4257  058A  07E6               	addwf	___ftadd@f2,f
  4258  058B  3000               	movlw	0
  4259  058C  1803               	skipnc
  4260  058D  3001               	movlw	1
  4261  058E  07E7               	addwf	___ftadd@f2+1,f
  4262  058F  3000               	movlw	0
  4263  0590  1803               	skipnc
  4264  0591  3001               	movlw	1
  4265  0592  07E8               	addwf	___ftadd@f2+2,f
  4266  0593                     l2451:	
  4267  0593  01ED               	clrf	___ftadd@sign
  4268  0594  0863               	movf	___ftadd@f1,w
  4269  0595  07E6               	addwf	___ftadd@f2,f
  4270  0596  0864               	movf	___ftadd@f1+1,w
  4271  0597  3DE7               	addwfc	___ftadd@f2+1,f
  4272  0598  0865               	movf	___ftadd@f1+2,w
  4273  0599  3DE8               	addwfc	___ftadd@f2+2,f
  4274  059A  1FE8               	btfss	___ftadd@f2+2,7
  4275  059B  2DAE               	goto	l2461
  4276  059C  30FF               	movlw	255
  4277  059D  06E6               	xorwf	___ftadd@f2,f
  4278  059E  30FF               	movlw	255
  4279  059F  06E7               	xorwf	___ftadd@f2+1,f
  4280  05A0  30FF               	movlw	255
  4281  05A1  06E8               	xorwf	___ftadd@f2+2,f
  4282  05A2  3001               	movlw	1
  4283  05A3  07E6               	addwf	___ftadd@f2,f
  4284  05A4  3000               	movlw	0
  4285  05A5  1803               	skipnc
  4286  05A6  3001               	movlw	1
  4287  05A7  07E7               	addwf	___ftadd@f2+1,f
  4288  05A8  3000               	movlw	0
  4289  05A9  1803               	skipnc
  4290  05AA  3001               	movlw	1
  4291  05AB  07E8               	addwf	___ftadd@f2+2,f
  4292  05AC  01ED               	clrf	___ftadd@sign
  4293  05AD  0AED               	incf	___ftadd@sign,f
  4294  05AE                     l2461:	
  4295  05AE  0866               	movf	___ftadd@f2,w
  4296  05AF  00A0               	movwf	___ftpack@arg
  4297  05B0  0867               	movf	___ftadd@f2+1,w
  4298  05B1  00A1               	movwf	___ftpack@arg+1
  4299  05B2  0868               	movf	___ftadd@f2+2,w
  4300  05B3  00A2               	movwf	___ftpack@arg+2
  4301  05B4  086F               	movf	___ftadd@exp1,w
  4302  05B5  00E9               	movwf	??___ftadd
  4303  05B6  0869               	movf	??___ftadd,w
  4304  05B7  00A3               	movwf	___ftpack@exp
  4305  05B8  086D               	movf	___ftadd@sign,w
  4306  05B9  00EA               	movwf	??___ftadd+1
  4307  05BA  086A               	movf	??___ftadd+1,w
  4308  05BB  00A4               	movwf	___ftpack@sign
  4309  05BC  318D  25FF         	fcall	___ftpack
  4310  05BE  0020               	movlb	0	; select bank0
  4311  05BF  0820               	movf	?___ftpack,w
  4312  05C0  00E3               	movwf	?___ftadd
  4313  05C1  0821               	movf	?___ftpack+1,w
  4314  05C2  00E4               	movwf	?___ftadd+1
  4315  05C3  0822               	movf	?___ftpack+2,w
  4316  05C4  00E5               	movwf	?___ftadd+2
  4317  05C5  0008               	return
  4318  05C6                     __end_of___ftadd:	
  4319                           
  4320                           	psect	text16
  4321  09DB                     __ptext16:	
  4322 ;; *************** function _initTMR1 *****************
  4323 ;; Defined at:
  4324 ;;		line 152 in file "powerspy.c"
  4325 ;; Parameters:    Size  Location     Type
  4326 ;;		None
  4327 ;; Auto vars:     Size  Location     Type
  4328 ;;		None
  4329 ;; Return value:  Size  Location     Type
  4330 ;;                  1    wreg      void 
  4331 ;; Registers used:
  4332 ;;		None
  4333 ;; Tracked objects:
  4334 ;;		On entry : 0/0
  4335 ;;		On exit  : 0/0
  4336 ;;		Unchanged: 0/0
  4337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4338 ;;      Params:         0       0       0       0       0       0
  4339 ;;      Locals:         0       0       0       0       0       0
  4340 ;;      Temps:          0       0       0       0       0       0
  4341 ;;      Totals:         0       0       0       0       0       0
  4342 ;;Total ram usage:        0 bytes
  4343 ;; Hardware stack levels used:    1
  4344 ;; Hardware stack levels required when called:    3
  4345 ;; This function calls:
  4346 ;;		Nothing
  4347 ;; This function is called by:
  4348 ;;		_main
  4349 ;; This function uses a non-reentrant model
  4350 ;;
  4351                           
  4352                           
  4353                           ;psect for function _initTMR1
  4354  09DB                     _initTMR1:	
  4355                           
  4356                           ;powerspy.c: 165: TMR1CS0 = 0;
  4357                           
  4358                           ;incstack = 0
  4359                           ; Regs used in _initTMR1: []
  4360  09DB  0020               	movlb	0	; select bank0
  4361  09DC  1318               	bcf	24,6	;volatile
  4362                           
  4363                           ;powerspy.c: 166: TMR1CS1 = 0;
  4364  09DD  1398               	bcf	24,7	;volatile
  4365                           
  4366                           ;powerspy.c: 170: T1CKPS0 = 1;
  4367  09DE  1618               	bsf	24,4	;volatile
  4368                           
  4369                           ;powerspy.c: 171: T1CKPS1 = 0;
  4370  09DF  1298               	bcf	24,5	;volatile
  4371                           
  4372                           ;powerspy.c: 173: TMR1IE = 1;
  4373  09E0  0021               	movlb	1	; select bank1
  4374  09E1  1411               	bsf	17,0	;volatile
  4375                           
  4376                           ;powerspy.c: 174: TMR1IF = 0;
  4377  09E2  0020               	movlb	0	; select bank0
  4378  09E3  1011               	bcf	17,0	;volatile
  4379                           
  4380                           ;powerspy.c: 176: TMR1ON = 1;
  4381  09E4  1418               	bsf	24,0	;volatile
  4382  09E5  0008               	return
  4383  09E6                     __end_of_initTMR1:	
  4384                           
  4385                           	psect	text17
  4386  0AC7                     __ptext17:	
  4387 ;; *************** function _initPins *****************
  4388 ;; Defined at:
  4389 ;;		line 49 in file "powerspy.c"
  4390 ;; Parameters:    Size  Location     Type
  4391 ;;		None
  4392 ;; Auto vars:     Size  Location     Type
  4393 ;;		None
  4394 ;; Return value:  Size  Location     Type
  4395 ;;                  1    wreg      void 
  4396 ;; Registers used:
  4397 ;;		wreg, status,2
  4398 ;; Tracked objects:
  4399 ;;		On entry : 0/0
  4400 ;;		On exit  : 0/0
  4401 ;;		Unchanged: 0/0
  4402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4403 ;;      Params:         0       0       0       0       0       0
  4404 ;;      Locals:         0       0       0       0       0       0
  4405 ;;      Temps:          0       0       0       0       0       0
  4406 ;;      Totals:         0       0       0       0       0       0
  4407 ;;Total ram usage:        0 bytes
  4408 ;; Hardware stack levels used:    1
  4409 ;; Hardware stack levels required when called:    3
  4410 ;; This function calls:
  4411 ;;		Nothing
  4412 ;; This function is called by:
  4413 ;;		_main
  4414 ;; This function uses a non-reentrant model
  4415 ;;
  4416                           
  4417                           
  4418                           ;psect for function _initPins
  4419  0AC7                     _initPins:	
  4420                           
  4421                           ;powerspy.c: 51: PORTA = 0b00000000;
  4422                           
  4423                           ;incstack = 0
  4424                           ; Regs used in _initPins: [wreg+status,2]
  4425  0AC7  0020               	movlb	0	; select bank0
  4426  0AC8  018C               	clrf	12	;volatile
  4427                           
  4428                           ;powerspy.c: 52: ANSELA = 0b00000111;
  4429  0AC9  3007               	movlw	7
  4430  0ACA  0023               	movlb	3	; select bank3
  4431  0ACB  008C               	movwf	12	;volatile
  4432                           
  4433                           ;powerspy.c: 53: TRISA = 0b00000111;
  4434  0ACC  3007               	movlw	7
  4435  0ACD  0021               	movlb	1	; select bank1
  4436  0ACE  008C               	movwf	12	;volatile
  4437                           
  4438                           ;powerspy.c: 55: PORTB = 0b00000000;
  4439  0ACF  0020               	movlb	0	; select bank0
  4440  0AD0  018D               	clrf	13	;volatile
  4441                           
  4442                           ;powerspy.c: 56: ANSELB = 0b00110000;
  4443  0AD1  3030               	movlw	48
  4444  0AD2  0023               	movlb	3	; select bank3
  4445  0AD3  008D               	movwf	13	;volatile
  4446                           
  4447                           ;powerspy.c: 57: TRISB = 0b00111010;
  4448  0AD4  303A               	movlw	58
  4449  0AD5  0021               	movlb	1	; select bank1
  4450  0AD6  008D               	movwf	13	;volatile
  4451                           
  4452                           ;powerspy.c: 59: nWPUEN = 0;
  4453  0AD7  1395               	bcf	21,7	;volatile
  4454                           
  4455                           ;powerspy.c: 60: WPUB = 0b00001000;
  4456  0AD8  3008               	movlw	8
  4457  0AD9  0024               	movlb	4	; select bank4
  4458  0ADA  008D               	movwf	13	;volatile
  4459                           
  4460                           ;powerspy.c: 64: SCS0 = 0;
  4461  0ADB  0021               	movlb	1	; select bank1
  4462  0ADC  1019               	bcf	25,0	;volatile
  4463                           
  4464                           ;powerspy.c: 65: SCS1 = 0;
  4465  0ADD  1099               	bcf	25,1	;volatile
  4466                           
  4467                           ;powerspy.c: 67: IRCF0 = 0;
  4468  0ADE  1199               	bcf	25,3	;volatile
  4469                           
  4470                           ;powerspy.c: 68: IRCF1 = 1;
  4471  0ADF  1619               	bsf	25,4	;volatile
  4472                           
  4473                           ;powerspy.c: 69: IRCF2 = 1;
  4474  0AE0  1699               	bsf	25,5	;volatile
  4475                           
  4476                           ;powerspy.c: 70: IRCF3 = 1;
  4477  0AE1  1719               	bsf	25,6	;volatile
  4478                           
  4479                           ;powerspy.c: 72: SPLLEN = 1;
  4480  0AE2  1799               	bsf	25,7	;volatile
  4481                           
  4482                           ;powerspy.c: 75: IOCBN5 = 1;
  4483  0AE3  0027               	movlb	7	; select bank7
  4484  0AE4  1695               	bsf	21,5	;volatile
  4485                           
  4486                           ;powerspy.c: 76: IOCIE = 1;
  4487  0AE5  158B               	bsf	11,3	;volatile
  4488  0AE6  0008               	return
  4489  0AE7                     __end_of_initPins:	
  4490                           
  4491                           	psect	text18
  4492  0AE7                     __ptext18:	
  4493 ;; *************** function _initPWMTMR4 *****************
  4494 ;; Defined at:
  4495 ;;		line 208 in file "powerspy.c"
  4496 ;; Parameters:    Size  Location     Type
  4497 ;;		None
  4498 ;; Auto vars:     Size  Location     Type
  4499 ;;		None
  4500 ;; Return value:  Size  Location     Type
  4501 ;;                  1    wreg      void 
  4502 ;; Registers used:
  4503 ;;		wreg, status,2, status,0
  4504 ;; Tracked objects:
  4505 ;;		On entry : 0/0
  4506 ;;		On exit  : 0/0
  4507 ;;		Unchanged: 0/0
  4508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4509 ;;      Params:         0       0       0       0       0       0
  4510 ;;      Locals:         0       0       0       0       0       0
  4511 ;;      Temps:          0       1       0       0       0       0
  4512 ;;      Totals:         0       1       0       0       0       0
  4513 ;;Total ram usage:        1 bytes
  4514 ;; Hardware stack levels used:    1
  4515 ;; Hardware stack levels required when called:    3
  4516 ;; This function calls:
  4517 ;;		Nothing
  4518 ;; This function is called by:
  4519 ;;		_main
  4520 ;; This function uses a non-reentrant model
  4521 ;;
  4522                           
  4523                           
  4524                           ;psect for function _initPWMTMR4
  4525  0AE7                     _initPWMTMR4:	
  4526                           
  4527                           ;powerspy.c: 212: CCP1SEL = 1;
  4528                           
  4529                           ;incstack = 0
  4530                           ; Regs used in _initPWMTMR4: [wreg+status,2+status,0]
  4531  0AE7  0022               	movlb	2	; select bank2
  4532  0AE8  141D               	bsf	29,0	;volatile
  4533                           
  4534                           ;powerspy.c: 215: TRISBbits.TRISB0 = 1;
  4535  0AE9  0021               	movlb	1	; select bank1
  4536  0AEA  140D               	bsf	13,0	;volatile
  4537                           
  4538                           ;powerspy.c: 218: PR2 = 0xff;
  4539  0AEB  30FF               	movlw	255
  4540  0AEC  0020               	movlb	0	; select bank0
  4541  0AED  009B               	movwf	27	;volatile
  4542                           
  4543                           ;powerspy.c: 219: CCP1CON = 0b00110000;
  4544  0AEE  3030               	movlw	48
  4545  0AEF  0025               	movlb	5	; select bank5
  4546  0AF0  0093               	movwf	19	;volatile
  4547                           
  4548                           ;powerspy.c: 222: CCP1CON |= 0b00001100;
  4549  0AF1  300C               	movlw	12
  4550  0AF2  0020               	movlb	0	; select bank0
  4551  0AF3  00A0               	movwf	??_initPWMTMR4
  4552  0AF4  0820               	movf	??_initPWMTMR4,w
  4553  0AF5  0025               	movlb	5	; select bank5
  4554  0AF6  0493               	iorwf	19,f	;volatile
  4555                           
  4556                           ;powerspy.c: 228: CCPR1L = 0x7f;
  4557  0AF7  307F               	movlw	127
  4558  0AF8  0091               	movwf	17	;volatile
  4559                           
  4560                           ;powerspy.c: 231: DC1B0 = 1;
  4561  0AF9  1613               	bsf	19,4	;volatile
  4562                           
  4563                           ;powerspy.c: 232: DC1B1 = 1;
  4564  0AFA  1693               	bsf	19,5	;volatile
  4565                           
  4566                           ;powerspy.c: 236: C1TSEL0 = 1;
  4567  0AFB  141E               	bsf	30,0	;volatile
  4568                           
  4569                           ;powerspy.c: 237: C1TSEL1 = 0;
  4570  0AFC  109E               	bcf	30,1	;volatile
  4571                           
  4572                           ;powerspy.c: 238: TMR4IF = 0;
  4573  0AFD  0020               	movlb	0	; select bank0
  4574  0AFE  1093               	bcf	19,1	;volatile
  4575                           
  4576                           ;powerspy.c: 241: T4CKPS0 = 0;
  4577  0AFF  0028               	movlb	8	; select bank8
  4578  0B00  1017               	bcf	23,0	;volatile
  4579                           
  4580                           ;powerspy.c: 242: T4CKPS1 = 0;
  4581  0B01  1097               	bcf	23,1	;volatile
  4582                           
  4583                           ;powerspy.c: 244: TMR4ON = 1;
  4584  0B02  1517               	bsf	23,2	;volatile
  4585                           
  4586                           ;powerspy.c: 248: TMR4IF = 0;
  4587  0B03  0020               	movlb	0	; select bank0
  4588  0B04  1093               	bcf	19,1	;volatile
  4589                           
  4590                           ;powerspy.c: 250: TRISBbits.TRISB0 = 0;
  4591  0B05  0021               	movlb	1	; select bank1
  4592  0B06  100D               	bcf	13,0	;volatile
  4593  0B07  0008               	return
  4594  0B08                     __end_of_initPWMTMR4:	
  4595                           
  4596                           	psect	text19
  4597  099F                     __ptext19:	
  4598 ;; *************** function _initMessaging *****************
  4599 ;; Defined at:
  4600 ;;		line 16 in file "message.c"
  4601 ;; Parameters:    Size  Location     Type
  4602 ;;		None
  4603 ;; Auto vars:     Size  Location     Type
  4604 ;;		None
  4605 ;; Return value:  Size  Location     Type
  4606 ;;                  1    wreg      void 
  4607 ;; Registers used:
  4608 ;;		status,2
  4609 ;; Tracked objects:
  4610 ;;		On entry : 0/0
  4611 ;;		On exit  : 0/0
  4612 ;;		Unchanged: 0/0
  4613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4614 ;;      Params:         0       0       0       0       0       0
  4615 ;;      Locals:         0       0       0       0       0       0
  4616 ;;      Temps:          0       0       0       0       0       0
  4617 ;;      Totals:         0       0       0       0       0       0
  4618 ;;Total ram usage:        0 bytes
  4619 ;; Hardware stack levels used:    1
  4620 ;; Hardware stack levels required when called:    3
  4621 ;; This function calls:
  4622 ;;		Nothing
  4623 ;; This function is called by:
  4624 ;;		_main
  4625 ;; This function uses a non-reentrant model
  4626 ;;
  4627                           
  4628                           
  4629                           ;psect for function _initMessaging
  4630  099F                     _initMessaging:	
  4631                           
  4632                           ;message.c: 18: buffpos = -1;
  4633                           
  4634                           ;incstack = 0
  4635                           ; Regs used in _initMessaging: [status,2]
  4636  099F  0021               	movlb	1	; select bank1
  4637  09A0  01D3               	clrf	_buffpos^(0+128)
  4638  09A1  03D3               	decf	_buffpos^(0+128),f
  4639                           
  4640                           ;message.c: 19: readpos = 0;
  4641  09A2  01D5               	clrf	_readpos^(0+128)
  4642                           
  4643                           ;message.c: 20: reading = 0;
  4644  09A3  01D4               	clrf	_reading^(0+128)
  4645  09A4  0008               	return
  4646  09A5                     __end_of_initMessaging:	
  4647                           
  4648                           	psect	text20
  4649  09C8                     __ptext20:	
  4650 ;; *************** function _initFVR *****************
  4651 ;; Defined at:
  4652 ;;		line 182 in file "powerspy.c"
  4653 ;; Parameters:    Size  Location     Type
  4654 ;;		None
  4655 ;; Auto vars:     Size  Location     Type
  4656 ;;		None
  4657 ;; Return value:  Size  Location     Type
  4658 ;;                  1    wreg      void 
  4659 ;; Registers used:
  4660 ;;		None
  4661 ;; Tracked objects:
  4662 ;;		On entry : 0/0
  4663 ;;		On exit  : 0/0
  4664 ;;		Unchanged: 0/0
  4665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4666 ;;      Params:         0       0       0       0       0       0
  4667 ;;      Locals:         0       0       0       0       0       0
  4668 ;;      Temps:          0       0       0       0       0       0
  4669 ;;      Totals:         0       0       0       0       0       0
  4670 ;;Total ram usage:        0 bytes
  4671 ;; Hardware stack levels used:    1
  4672 ;; Hardware stack levels required when called:    3
  4673 ;; This function calls:
  4674 ;;		Nothing
  4675 ;; This function is called by:
  4676 ;;		_main
  4677 ;; This function uses a non-reentrant model
  4678 ;;
  4679                           
  4680                           
  4681                           ;psect for function _initFVR
  4682  09C8                     _initFVR:	
  4683                           
  4684                           ;powerspy.c: 194: ADFVR0 = 1;
  4685                           
  4686                           ;incstack = 0
  4687                           ; Regs used in _initFVR: []
  4688  09C8  0022               	movlb	2	; select bank2
  4689  09C9  1417               	bsf	23,0	;volatile
  4690                           
  4691                           ;powerspy.c: 195: ADFVR1 = 0;
  4692  09CA  1097               	bcf	23,1	;volatile
  4693                           
  4694                           ;powerspy.c: 197: CDAFVR0 = 0;
  4695  09CB  1117               	bcf	23,2	;volatile
  4696                           
  4697                           ;powerspy.c: 198: CDAFVR1 = 0;
  4698  09CC  1197               	bcf	23,3	;volatile
  4699                           
  4700                           ;powerspy.c: 199: FVREN = 1;
  4701  09CD  1797               	bsf	23,7	;volatile
  4702  09CE                     l255:	
  4703                           ;powerspy.c: 200: while (!FVRRDY);
  4704                           
  4705  09CE  1B17               	btfsc	23,6	;volatile
  4706  09CF  0008               	return
  4707  09D0  29CE               	goto	l255
  4708  09D1                     __end_of_initFVR:	
  4709                           
  4710                           	psect	text21
  4711  09F3                     __ptext21:	
  4712 ;; *************** function _initCOMP2 *****************
  4713 ;; Defined at:
  4714 ;;		line 302 in file "powerspy.c"
  4715 ;; Parameters:    Size  Location     Type
  4716 ;;		None
  4717 ;; Auto vars:     Size  Location     Type
  4718 ;;		None
  4719 ;; Return value:  Size  Location     Type
  4720 ;;                  1    wreg      void 
  4721 ;; Registers used:
  4722 ;;		None
  4723 ;; Tracked objects:
  4724 ;;		On entry : 0/0
  4725 ;;		On exit  : 0/0
  4726 ;;		Unchanged: 0/0
  4727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4728 ;;      Params:         0       0       0       0       0       0
  4729 ;;      Locals:         0       0       0       0       0       0
  4730 ;;      Temps:          0       0       0       0       0       0
  4731 ;;      Totals:         0       0       0       0       0       0
  4732 ;;Total ram usage:        0 bytes
  4733 ;; Hardware stack levels used:    1
  4734 ;; Hardware stack levels required when called:    3
  4735 ;; This function calls:
  4736 ;;		Nothing
  4737 ;; This function is called by:
  4738 ;;		_main
  4739 ;; This function uses a non-reentrant model
  4740 ;;
  4741                           
  4742                           
  4743                           ;psect for function _initCOMP2
  4744  09F3                     _initCOMP2:	
  4745                           
  4746                           ;powerspy.c: 307: C2NCH0 = 0;
  4747                           
  4748                           ;incstack = 0
  4749                           ; Regs used in _initCOMP2: []
  4750  09F3  0022               	movlb	2	; select bank2
  4751  09F4  1014               	bcf	20,0	;volatile
  4752                           
  4753                           ;powerspy.c: 308: C2NCH1 = 0;
  4754  09F5  1094               	bcf	20,1	;volatile
  4755                           
  4756                           ;powerspy.c: 321: C2PCH0 = 0;
  4757  09F6  1214               	bcf	20,4	;volatile
  4758                           
  4759                           ;powerspy.c: 322: C2PCH1 = 0;
  4760  09F7  1294               	bcf	20,5	;volatile
  4761                           
  4762                           ;powerspy.c: 325: C2INTP = 1;
  4763  09F8  1794               	bsf	20,7	;volatile
  4764                           
  4765                           ;powerspy.c: 326: C2IE = 1;
  4766  09F9  0021               	movlb	1	; select bank1
  4767  09FA  1712               	bsf	18,6	;volatile
  4768                           
  4769                           ;powerspy.c: 327: C2IF = 0;
  4770  09FB  0020               	movlb	0	; select bank0
  4771  09FC  1312               	bcf	18,6	;volatile
  4772                           
  4773                           ;powerspy.c: 328: C2ON = 1;
  4774  09FD  0022               	movlb	2	; select bank2
  4775  09FE  1793               	bsf	19,7	;volatile
  4776  09FF  0008               	return
  4777  0A00                     __end_of_initCOMP2:	
  4778                           
  4779                           	psect	text22
  4780  09E6                     __ptext22:	
  4781 ;; *************** function _initCOMP1 *****************
  4782 ;; Defined at:
  4783 ;;		line 268 in file "powerspy.c"
  4784 ;; Parameters:    Size  Location     Type
  4785 ;;		None
  4786 ;; Auto vars:     Size  Location     Type
  4787 ;;		None
  4788 ;; Return value:  Size  Location     Type
  4789 ;;                  1    wreg      void 
  4790 ;; Registers used:
  4791 ;;		None
  4792 ;; Tracked objects:
  4793 ;;		On entry : 0/0
  4794 ;;		On exit  : 0/0
  4795 ;;		Unchanged: 0/0
  4796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4797 ;;      Params:         0       0       0       0       0       0
  4798 ;;      Locals:         0       0       0       0       0       0
  4799 ;;      Temps:          0       0       0       0       0       0
  4800 ;;      Totals:         0       0       0       0       0       0
  4801 ;;Total ram usage:        0 bytes
  4802 ;; Hardware stack levels used:    1
  4803 ;; Hardware stack levels required when called:    3
  4804 ;; This function calls:
  4805 ;;		Nothing
  4806 ;; This function is called by:
  4807 ;;		_main
  4808 ;; This function uses a non-reentrant model
  4809 ;;
  4810                           
  4811                           
  4812                           ;psect for function _initCOMP1
  4813  09E6                     _initCOMP1:	
  4814                           
  4815                           ;powerspy.c: 273: C1NCH0 = 1;
  4816                           
  4817                           ;incstack = 0
  4818                           ; Regs used in _initCOMP1: []
  4819  09E6  0022               	movlb	2	; select bank2
  4820  09E7  1412               	bsf	18,0	;volatile
  4821                           
  4822                           ;powerspy.c: 274: C1NCH1 = 0;
  4823  09E8  1092               	bcf	18,1	;volatile
  4824                           
  4825                           ;powerspy.c: 288: C1PCH0 = 0;
  4826  09E9  1212               	bcf	18,4	;volatile
  4827                           
  4828                           ;powerspy.c: 289: C1PCH1 = 1;
  4829  09EA  1692               	bsf	18,5	;volatile
  4830                           
  4831                           ;powerspy.c: 292: C1INTP = 1;
  4832  09EB  1792               	bsf	18,7	;volatile
  4833                           
  4834                           ;powerspy.c: 293: C1IE = 1;
  4835  09EC  0021               	movlb	1	; select bank1
  4836  09ED  1692               	bsf	18,5	;volatile
  4837                           
  4838                           ;powerspy.c: 294: C1IF = 0;
  4839  09EE  0020               	movlb	0	; select bank0
  4840  09EF  1292               	bcf	18,5	;volatile
  4841                           
  4842                           ;powerspy.c: 295: C1ON = 1;
  4843  09F0  0022               	movlb	2	; select bank2
  4844  09F1  1791               	bsf	17,7	;volatile
  4845  09F2  0008               	return
  4846  09F3                     __end_of_initCOMP1:	
  4847                           
  4848                           	psect	text23
  4849  0A5A                     __ptext23:	
  4850 ;; *************** function _initBT *****************
  4851 ;; Defined at:
  4852 ;;		line 335 in file "powerspy.c"
  4853 ;; Parameters:    Size  Location     Type
  4854 ;;		None
  4855 ;; Auto vars:     Size  Location     Type
  4856 ;;		None
  4857 ;; Return value:  Size  Location     Type
  4858 ;;                  1    wreg      void 
  4859 ;; Registers used:
  4860 ;;		wreg
  4861 ;; Tracked objects:
  4862 ;;		On entry : 0/0
  4863 ;;		On exit  : 0/0
  4864 ;;		Unchanged: 0/0
  4865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4866 ;;      Params:         0       0       0       0       0       0
  4867 ;;      Locals:         0       0       0       0       0       0
  4868 ;;      Temps:          0       0       0       0       0       0
  4869 ;;      Totals:         0       0       0       0       0       0
  4870 ;;Total ram usage:        0 bytes
  4871 ;; Hardware stack levels used:    1
  4872 ;; Hardware stack levels required when called:    3
  4873 ;; This function calls:
  4874 ;;		Nothing
  4875 ;; This function is called by:
  4876 ;;		_main
  4877 ;; This function uses a non-reentrant model
  4878 ;;
  4879                           
  4880                           
  4881                           ;psect for function _initBT
  4882  0A5A                     _initBT:	
  4883                           
  4884                           ;powerspy.c: 339: RXDTSEL = 0;
  4885                           
  4886                           ;incstack = 0
  4887                           ; Regs used in _initBT: [wreg]
  4888  0A5A  0022               	movlb	2	; select bank2
  4889  0A5B  139D               	bcf	29,7	;volatile
  4890                           
  4891                           ;powerspy.c: 340: TXCKSEL = 0;
  4892  0A5C  101E               	bcf	30,0	;volatile
  4893                           
  4894                           ;powerspy.c: 343: TXEN = 1;
  4895  0A5D  0023               	movlb	3	; select bank3
  4896  0A5E  169E               	bsf	30,5	;volatile
  4897                           
  4898                           ;powerspy.c: 344: SYNC = 0;
  4899  0A5F  121E               	bcf	30,4	;volatile
  4900                           
  4901                           ;powerspy.c: 345: SPEN = 1;
  4902  0A60  179D               	bsf	29,7	;volatile
  4903                           
  4904                           ;powerspy.c: 348: CREN = 1;
  4905  0A61  161D               	bsf	29,4	;volatile
  4906                           
  4907                           ;powerspy.c: 349: SYNC = 0;
  4908  0A62  121E               	bcf	30,4	;volatile
  4909                           
  4910                           ;powerspy.c: 350: SPEN = 1;
  4911  0A63  179D               	bsf	29,7	;volatile
  4912                           
  4913                           ;powerspy.c: 353: BRGH = 0;
  4914  0A64  111E               	bcf	30,2	;volatile
  4915                           
  4916                           ;powerspy.c: 354: BRG16 = 0;
  4917  0A65  119F               	bcf	31,3	;volatile
  4918                           
  4919                           ;powerspy.c: 355: SPBRG = 51;
  4920  0A66  3033               	movlw	51
  4921  0A67  009B               	movwf	27	;volatile
  4922  0A68                     l2685:	
  4923                           ;powerspy.c: 357: while (RCIF) {
  4924                           
  4925  0A68  0020               	movlb	0	; select bank0
  4926  0A69  1E91               	btfss	17,5	;volatile
  4927  0A6A  2A6E               	goto	l272
  4928                           
  4929                           ;powerspy.c: 358: RCREG;
  4930  0A6B  0023               	movlb	3	; select bank3
  4931  0A6C  0819               	movf	25,w	;volatile
  4932  0A6D  2A68               	goto	l2685
  4933  0A6E                     l272:	
  4934                           
  4935                           ;powerspy.c: 359: }
  4936                           ;powerspy.c: 361: RCIE = 1;
  4937  0A6E  0021               	movlb	1	; select bank1
  4938  0A6F  1691               	bsf	17,5	;volatile
  4939  0A70  0008               	return
  4940  0A71                     __end_of_initBT:	
  4941                           
  4942                           	psect	text24
  4943  09D1                     __ptext24:	
  4944 ;; *************** function _initADC *****************
  4945 ;; Defined at:
  4946 ;;		line 83 in file "powerspy.c"
  4947 ;; Parameters:    Size  Location     Type
  4948 ;;		None
  4949 ;; Auto vars:     Size  Location     Type
  4950 ;;		None
  4951 ;; Return value:  Size  Location     Type
  4952 ;;                  1    wreg      void 
  4953 ;; Registers used:
  4954 ;;		None
  4955 ;; Tracked objects:
  4956 ;;		On entry : 0/0
  4957 ;;		On exit  : 0/0
  4958 ;;		Unchanged: 0/0
  4959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4960 ;;      Params:         0       0       0       0       0       0
  4961 ;;      Locals:         0       0       0       0       0       0
  4962 ;;      Temps:          0       0       0       0       0       0
  4963 ;;      Totals:         0       0       0       0       0       0
  4964 ;;Total ram usage:        0 bytes
  4965 ;; Hardware stack levels used:    1
  4966 ;; Hardware stack levels required when called:    3
  4967 ;; This function calls:
  4968 ;;		Nothing
  4969 ;; This function is called by:
  4970 ;;		_main
  4971 ;; This function uses a non-reentrant model
  4972 ;;
  4973                           
  4974                           
  4975                           ;psect for function _initADC
  4976  09D1                     _initADC:	
  4977                           
  4978                           ;powerspy.c: 87: ADFM = 0;
  4979                           
  4980                           ;incstack = 0
  4981                           ; Regs used in _initADC: []
  4982  09D1  0021               	movlb	1	; select bank1
  4983  09D2  139E               	bcf	30,7	;volatile
  4984                           
  4985                           ;powerspy.c: 91: ADCS0 = 0;
  4986  09D3  121E               	bcf	30,4	;volatile
  4987                           
  4988                           ;powerspy.c: 92: ADCS1 = 1;
  4989  09D4  169E               	bsf	30,5	;volatile
  4990                           
  4991                           ;powerspy.c: 93: ADCS2 = 1;
  4992  09D5  171E               	bsf	30,6	;volatile
  4993                           
  4994                           ;powerspy.c: 97: ADPREF0 = 0;
  4995  09D6  101E               	bcf	30,0	;volatile
  4996                           
  4997                           ;powerspy.c: 98: ADPREF1 = 0;
  4998  09D7  109E               	bcf	30,1	;volatile
  4999                           
  5000                           ;powerspy.c: 99: ADNREF = 0;
  5001  09D8  111E               	bcf	30,2	;volatile
  5002                           
  5003                           ;powerspy.c: 101: ADON = 1;
  5004  09D9  141D               	bsf	29,0	;volatile
  5005  09DA  0008               	return
  5006  09DB                     __end_of_initADC:	
  5007                           
  5008                           	psect	text25
  5009  0A0E                     __ptext25:	
  5010 ;; *************** function _icos *****************
  5011 ;; Defined at:
  5012 ;;		line 33 in file "intmath.c"
  5013 ;; Parameters:    Size  Location     Type
  5014 ;;  z               2   27[BANK0 ] short 
  5015 ;; Auto vars:     Size  Location     Type
  5016 ;;		None
  5017 ;; Return value:  Size  Location     Type
  5018 ;;                  2   27[BANK0 ] short 
  5019 ;; Registers used:
  5020 ;;		wreg, status,2, status,0, pclath, cstack
  5021 ;; Tracked objects:
  5022 ;;		On entry : 0/0
  5023 ;;		On exit  : 0/0
  5024 ;;		Unchanged: 0/0
  5025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5026 ;;      Params:         0       2       0       0       0       0
  5027 ;;      Locals:         0       0       0       0       0       0
  5028 ;;      Temps:          0       0       0       0       0       0
  5029 ;;      Totals:         0       2       0       0       0       0
  5030 ;;Total ram usage:        2 bytes
  5031 ;; Hardware stack levels used:    1
  5032 ;; Hardware stack levels required when called:    6
  5033 ;; This function calls:
  5034 ;;		_isin
  5035 ;; This function is called by:
  5036 ;;		_main
  5037 ;; This function uses a non-reentrant model
  5038 ;;
  5039                           
  5040                           
  5041                           ;psect for function _icos
  5042  0A0E                     _icos:	
  5043                           
  5044                           ;intmath.c: 34: return isin((0xff) + z);
  5045                           
  5046                           ;incstack = 0
  5047                           ; Regs used in _icos: [wreg+status,2+status,0+pclath+cstack]
  5048  0A0E  0020               	movlb	0	; select bank0
  5049  0A0F  083B               	movf	icos@z,w
  5050  0A10  3EFF               	addlw	255
  5051  0A11  00B5               	movwf	isin@z
  5052  0A12  3000               	movlw	0
  5053  0A13  3D3C               	addwfc	icos@z+1,w
  5054  0A14  00B6               	movwf	isin@z+1
  5055  0A15  318F  2774         	fcall	_isin
  5056  0A17  0020               	movlb	0	; select bank0
  5057  0A18  0836               	movf	?_isin+1,w
  5058  0A19  00BC               	movwf	?_icos+1
  5059  0A1A  0835               	movf	?_isin,w
  5060  0A1B  00BB               	movwf	?_icos
  5061  0A1C  0008               	return
  5062  0A1D                     __end_of_icos:	
  5063                           
  5064                           	psect	text26
  5065  0F74                     __ptext26:	
  5066 ;; *************** function _isin *****************
  5067 ;; Defined at:
  5068 ;;		line 16 in file "intmath.c"
  5069 ;; Parameters:    Size  Location     Type
  5070 ;;  z               2   21[BANK0 ] short 
  5071 ;; Auto vars:     Size  Location     Type
  5072 ;;		None
  5073 ;; Return value:  Size  Location     Type
  5074 ;;                  2   21[BANK0 ] short 
  5075 ;; Registers used:
  5076 ;;		wreg, status,2, status,0, pclath, cstack
  5077 ;; Tracked objects:
  5078 ;;		On entry : 0/0
  5079 ;;		On exit  : 0/0
  5080 ;;		Unchanged: 0/0
  5081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5082 ;;      Params:         0       2       0       0       0       0
  5083 ;;      Locals:         0       0       0       0       0       0
  5084 ;;      Temps:          0       4       0       0       0       0
  5085 ;;      Totals:         0       6       0       0       0       0
  5086 ;;Total ram usage:        6 bytes
  5087 ;; Hardware stack levels used:    1
  5088 ;; Hardware stack levels required when called:    5
  5089 ;; This function calls:
  5090 ;;		_isin_
  5091 ;; This function is called by:
  5092 ;;		_main
  5093 ;;		_icos
  5094 ;; This function uses a non-reentrant model
  5095 ;;
  5096                           
  5097                           
  5098                           ;psect for function _isin
  5099  0F74                     _isin:	
  5100  0F74                     l498:	
  5101                           ;intmath.c: 17: while (z > (0xff) << 2)
  5102                           
  5103                           ;incstack = 0
  5104                           ; Regs used in _isin: [wreg+status,2+status,0+pclath+cstack]
  5105                           
  5106  0F74  0020               	movlb	0	; select bank0
  5107  0F75  0836               	movf	isin@z+1,w
  5108  0F76  3A80               	xorlw	128
  5109  0F77  00B7               	movwf	??_isin
  5110  0F78  3083               	movlw	131
  5111  0F79  0237               	subwf	??_isin,w
  5112  0F7A  1D03               	skipz
  5113  0F7B  2F7E               	goto	u2605
  5114  0F7C  30FD               	movlw	253
  5115  0F7D  0235               	subwf	isin@z,w
  5116  0F7E                     u2605:	
  5117  0F7E  1C03               	btfss	3,0
  5118  0F7F  2F86               	goto	l2333
  5119                           
  5120                           ;intmath.c: 18: z -= (0xff)<<2;
  5121  0F80  3004               	movlw	4
  5122  0F81  0020               	movlb	0	; select bank0
  5123  0F82  07B5               	addwf	isin@z,f
  5124  0F83  30FC               	movlw	252
  5125  0F84  3DB6               	addwfc	isin@z+1,f
  5126  0F85  2F74               	goto	l498
  5127  0F86                     l2333:	
  5128                           
  5129                           ;intmath.c: 20: if (z > ((0xff) << 1) + (0xff))
  5130  0F86  0020               	movlb	0	; select bank0
  5131  0F87  0836               	movf	isin@z+1,w
  5132  0F88  3A80               	xorlw	128
  5133  0F89  00B7               	movwf	??_isin
  5134  0F8A  3082               	movlw	130
  5135  0F8B  0237               	subwf	??_isin,w
  5136  0F8C  1D03               	skipz
  5137  0F8D  2F90               	goto	u2615
  5138  0F8E  30FE               	movlw	254
  5139  0F8F  0235               	subwf	isin@z,w
  5140  0F90                     u2615:	
  5141  0F90  1C03               	skipc
  5142  0F91  2FAF               	goto	l2339
  5143                           
  5144                           ;intmath.c: 21: return -isin_(((0xff) << 2) - z);
  5145  0F92  0020               	movlb	0	; select bank0
  5146  0F93  0935               	comf	isin@z,w
  5147  0F94  00B7               	movwf	??_isin
  5148  0F95  0936               	comf	isin@z+1,w
  5149  0F96  00B8               	movwf	??_isin+1
  5150  0F97  0AB7               	incf	??_isin,f
  5151  0F98  1903               	skipnz
  5152  0F99  0AB8               	incf	??_isin+1,f
  5153  0F9A  0837               	movf	??_isin,w
  5154  0F9B  3EFC               	addlw	252
  5155  0F9C  00AF               	movwf	isin_@z
  5156  0F9D  3003               	movlw	3
  5157  0F9E  3D38               	addwfc	??_isin+1,w
  5158  0F9F  00B0               	movwf	isin_@z+1
  5159  0FA0  318D  2508         	fcall	_isin_
  5160  0FA2  0020               	movlb	0	; select bank0
  5161  0FA3  092F               	comf	?_isin_,w
  5162  0FA4  00B9               	movwf	??_isin+2
  5163  0FA5  0930               	comf	?_isin_+1,w
  5164  0FA6  00BA               	movwf	??_isin+3
  5165  0FA7  0AB9               	incf	??_isin+2,f
  5166  0FA8  1903               	skipnz
  5167  0FA9  0ABA               	incf	??_isin+3,f
  5168  0FAA  0839               	movf	??_isin+2,w
  5169  0FAB  00B5               	movwf	?_isin
  5170  0FAC  083A               	movf	??_isin+3,w
  5171  0FAD  00B6               	movwf	?_isin+1
  5172  0FAE  0008               	return
  5173  0FAF                     l2339:	
  5174                           
  5175                           ;intmath.c: 23: if (z > (0xff) << 1)
  5176  0FAF  0020               	movlb	0	; select bank0
  5177  0FB0  0836               	movf	isin@z+1,w
  5178  0FB1  3A80               	xorlw	128
  5179  0FB2  00B7               	movwf	??_isin
  5180  0FB3  3081               	movlw	129
  5181  0FB4  0237               	subwf	??_isin,w
  5182  0FB5  1D03               	skipz
  5183  0FB6  2FB9               	goto	u2625
  5184  0FB7  30FF               	movlw	255
  5185  0FB8  0235               	subwf	isin@z,w
  5186  0FB9                     u2625:	
  5187  0FB9  1C03               	skipc
  5188  0FBA  2FD1               	goto	l2345
  5189                           
  5190                           ;intmath.c: 24: return -isin_((z - ((0xff) << 1)));
  5191  0FBB  0020               	movlb	0	; select bank0
  5192  0FBC  0835               	movf	isin@z,w
  5193  0FBD  3E02               	addlw	2
  5194  0FBE  00AF               	movwf	isin_@z
  5195  0FBF  30FE               	movlw	254
  5196  0FC0  3D36               	addwfc	isin@z+1,w
  5197  0FC1  00B0               	movwf	isin_@z+1
  5198  0FC2  318D  2508         	fcall	_isin_
  5199  0FC4  0020               	movlb	0	; select bank0
  5200  0FC5  092F               	comf	?_isin_,w
  5201  0FC6  00B7               	movwf	??_isin
  5202  0FC7  0930               	comf	?_isin_+1,w
  5203  0FC8  00B8               	movwf	??_isin+1
  5204  0FC9  0AB7               	incf	??_isin,f
  5205  0FCA  1903               	skipnz
  5206  0FCB  0AB8               	incf	??_isin+1,f
  5207  0FCC  0837               	movf	??_isin,w
  5208  0FCD  00B5               	movwf	?_isin
  5209  0FCE  0838               	movf	??_isin+1,w
  5210  0FCF  00B6               	movwf	?_isin+1
  5211  0FD0  0008               	return
  5212  0FD1                     l2345:	
  5213                           
  5214                           ;intmath.c: 26: if (z > (0xff))
  5215  0FD1  0020               	movlb	0	; select bank0
  5216  0FD2  0836               	movf	isin@z+1,w
  5217  0FD3  3A80               	xorlw	128
  5218  0FD4  00B7               	movwf	??_isin
  5219  0FD5  3081               	movlw	129
  5220  0FD6  0237               	subwf	??_isin,w
  5221  0FD7  1D03               	skipz
  5222  0FD8  2FDB               	goto	u2635
  5223  0FD9  3000               	movlw	0
  5224  0FDA  0235               	subwf	isin@z,w
  5225  0FDB                     u2635:	
  5226  0FDB  1C03               	skipc
  5227  0FDC  2FF3               	goto	l2351
  5228                           
  5229                           ;intmath.c: 27: return isin_((((0xff) << 1) - z));
  5230  0FDD  0020               	movlb	0	; select bank0
  5231  0FDE  0935               	comf	isin@z,w
  5232  0FDF  00B7               	movwf	??_isin
  5233  0FE0  0936               	comf	isin@z+1,w
  5234  0FE1  00B8               	movwf	??_isin+1
  5235  0FE2  0AB7               	incf	??_isin,f
  5236  0FE3  1903               	skipnz
  5237  0FE4  0AB8               	incf	??_isin+1,f
  5238  0FE5  0837               	movf	??_isin,w
  5239  0FE6  3EFE               	addlw	254
  5240  0FE7  00AF               	movwf	isin_@z
  5241  0FE8  3001               	movlw	1
  5242  0FE9  3D38               	addwfc	??_isin+1,w
  5243  0FEA  00B0               	movwf	isin_@z+1
  5244  0FEB  318D  2508         	fcall	_isin_
  5245  0FED  0020               	movlb	0	; select bank0
  5246  0FEE  0830               	movf	?_isin_+1,w
  5247  0FEF  00B6               	movwf	?_isin+1
  5248  0FF0  082F               	movf	?_isin_,w
  5249  0FF1  00B5               	movwf	?_isin
  5250  0FF2  0008               	return
  5251  0FF3                     l2351:	
  5252                           
  5253                           ;intmath.c: 30: return isin_(z);
  5254  0FF3  0020               	movlb	0	; select bank0
  5255  0FF4  0836               	movf	isin@z+1,w
  5256  0FF5  00B0               	movwf	isin_@z+1
  5257  0FF6  0835               	movf	isin@z,w
  5258  0FF7  00AF               	movwf	isin_@z
  5259  0FF8  318D  2508         	fcall	_isin_
  5260  0FFA  0020               	movlb	0	; select bank0
  5261  0FFB  0830               	movf	?_isin_+1,w
  5262  0FFC  00B6               	movwf	?_isin+1
  5263  0FFD  082F               	movf	?_isin_,w
  5264  0FFE  00B5               	movwf	?_isin
  5265  0FFF  0008               	return
  5266  1000                     __end_of_isin:	
  5267                           
  5268                           	psect	text27
  5269  0D08                     __ptext27:	
  5270 ;; *************** function _isin_ *****************
  5271 ;; Defined at:
  5272 ;;		line 12 in file "intmath.c"
  5273 ;; Parameters:    Size  Location     Type
  5274 ;;  z               2   15[BANK0 ] short 
  5275 ;; Auto vars:     Size  Location     Type
  5276 ;;		None
  5277 ;; Return value:  Size  Location     Type
  5278 ;;                  2   15[BANK0 ] short 
  5279 ;; Registers used:
  5280 ;;		wreg, status,2, status,0, pclath, cstack
  5281 ;; Tracked objects:
  5282 ;;		On entry : 0/0
  5283 ;;		On exit  : 0/0
  5284 ;;		Unchanged: 0/0
  5285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5286 ;;      Params:         0       2       0       0       0       0
  5287 ;;      Locals:         0       2       0       0       0       0
  5288 ;;      Temps:          0       2       0       0       0       0
  5289 ;;      Totals:         0       6       0       0       0       0
  5290 ;;Total ram usage:        6 bytes
  5291 ;; Hardware stack levels used:    1
  5292 ;; Hardware stack levels required when called:    4
  5293 ;; This function calls:
  5294 ;;		___awdiv
  5295 ;;		___wmul
  5296 ;; This function is called by:
  5297 ;;		_isin
  5298 ;; This function uses a non-reentrant model
  5299 ;;
  5300                           
  5301                           
  5302                           ;psect for function _isin_
  5303  0D08                     _isin_:	
  5304                           
  5305                           ;intmath.c: 13: return (3 * z) / 2 - (z * z * z) / ((0xff) * (0xff) << 1);
  5306                           
  5307                           ;incstack = 0
  5308                           ; Regs used in _isin_: [wreg+status,2+status,0+pclath+cstack]
  5309  0D08  0020               	movlb	0	; select bank0
  5310  0D09  0830               	movf	isin_@z+1,w
  5311  0D0A  00A1               	movwf	___wmul@multiplier+1
  5312  0D0B  082F               	movf	isin_@z,w
  5313  0D0C  00A0               	movwf	___wmul@multiplier
  5314  0D0D  0830               	movf	isin_@z+1,w
  5315  0D0E  00A3               	movwf	___wmul@multiplicand+1
  5316  0D0F  082F               	movf	isin_@z,w
  5317  0D10  00A2               	movwf	___wmul@multiplicand
  5318  0D11  318A  228C  318D   	fcall	___wmul
  5319  0D14  0020               	movlb	0	; select bank0
  5320  0D15  0821               	movf	?___wmul+1,w
  5321  0D16  00B4               	movwf	_isin_$801+1
  5322  0D17  0820               	movf	?___wmul,w
  5323  0D18  00B3               	movwf	_isin_$801
  5324                           
  5325                           ;intmath.c: 13: return (3 * z) / 2 - (z * z * z) / ((0xff) * (0xff) << 1);
  5326  0D19  3002               	movlw	2
  5327  0D1A  00A6               	movwf	___awdiv@divisor
  5328  0D1B  30FC               	movlw	252
  5329  0D1C  00A7               	movwf	___awdiv@divisor+1
  5330  0D1D  0834               	movf	_isin_$801+1,w
  5331  0D1E  00A1               	movwf	___wmul@multiplier+1
  5332  0D1F  0833               	movf	_isin_$801,w
  5333  0D20  00A0               	movwf	___wmul@multiplier
  5334  0D21  0830               	movf	isin_@z+1,w
  5335  0D22  00A3               	movwf	___wmul@multiplicand+1
  5336  0D23  082F               	movf	isin_@z,w
  5337  0D24  00A2               	movwf	___wmul@multiplicand
  5338  0D25  318A  228C  318D   	fcall	___wmul
  5339  0D28  0020               	movlb	0	; select bank0
  5340  0D29  0821               	movf	?___wmul+1,w
  5341  0D2A  00A9               	movwf	___awdiv@dividend+1
  5342  0D2B  0820               	movf	?___wmul,w
  5343  0D2C  00A8               	movwf	___awdiv@dividend
  5344  0D2D  318D  2556  318D   	fcall	___awdiv
  5345  0D30  0020               	movlb	0	; select bank0
  5346  0D31  0926               	comf	?___awdiv,w
  5347  0D32  00B1               	movwf	??_isin_
  5348  0D33  0927               	comf	?___awdiv+1,w
  5349  0D34  00B2               	movwf	??_isin_+1
  5350  0D35  0AB1               	incf	??_isin_,f
  5351  0D36  1903               	skipnz
  5352  0D37  0AB2               	incf	??_isin_+1,f
  5353  0D38  3002               	movlw	2
  5354  0D39  00A6               	movwf	___awdiv@divisor
  5355  0D3A  3000               	movlw	0
  5356  0D3B  00A7               	movwf	___awdiv@divisor+1
  5357  0D3C  0830               	movf	isin_@z+1,w
  5358  0D3D  00A1               	movwf	___wmul@multiplier+1
  5359  0D3E  082F               	movf	isin_@z,w
  5360  0D3F  00A0               	movwf	___wmul@multiplier
  5361  0D40  3003               	movlw	3
  5362  0D41  00A2               	movwf	___wmul@multiplicand
  5363  0D42  3000               	movlw	0
  5364  0D43  00A3               	movwf	___wmul@multiplicand+1
  5365  0D44  318A  228C  318D   	fcall	___wmul
  5366  0D47  0020               	movlb	0	; select bank0
  5367  0D48  0821               	movf	?___wmul+1,w
  5368  0D49  00A9               	movwf	___awdiv@dividend+1
  5369  0D4A  0820               	movf	?___wmul,w
  5370  0D4B  00A8               	movwf	___awdiv@dividend
  5371  0D4C  318D  2556         	fcall	___awdiv
  5372  0D4E  0020               	movlb	0	; select bank0
  5373  0D4F  0831               	movf	??_isin_,w
  5374  0D50  0726               	addwf	?___awdiv,w
  5375  0D51  00AF               	movwf	?_isin_
  5376  0D52  0832               	movf	??_isin_+1,w
  5377  0D53  3D27               	addwfc	?___awdiv+1,w
  5378  0D54  00B0               	movwf	?_isin_+1
  5379  0D55  0008               	return
  5380  0D56                     __end_of_isin_:	
  5381                           
  5382                           	psect	text28
  5383  0A8C                     __ptext28:	
  5384 ;; *************** function ___wmul *****************
  5385 ;; Defined at:
  5386 ;;		line 15 in file "/Applications/microchip/xc8/v1.36/sources/common/Umul16.c"
  5387 ;; Parameters:    Size  Location     Type
  5388 ;;  multiplier      2    0[BANK0 ] unsigned int 
  5389 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  5390 ;; Auto vars:     Size  Location     Type
  5391 ;;  product         2    4[BANK0 ] unsigned int 
  5392 ;; Return value:  Size  Location     Type
  5393 ;;                  2    0[BANK0 ] unsigned int 
  5394 ;; Registers used:
  5395 ;;		wreg, status,2, status,0
  5396 ;; Tracked objects:
  5397 ;;		On entry : 0/0
  5398 ;;		On exit  : 0/0
  5399 ;;		Unchanged: 0/0
  5400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5401 ;;      Params:         0       4       0       0       0       0
  5402 ;;      Locals:         0       2       0       0       0       0
  5403 ;;      Temps:          0       0       0       0       0       0
  5404 ;;      Totals:         0       6       0       0       0       0
  5405 ;;Total ram usage:        6 bytes
  5406 ;; Hardware stack levels used:    1
  5407 ;; Hardware stack levels required when called:    3
  5408 ;; This function calls:
  5409 ;;		Nothing
  5410 ;; This function is called by:
  5411 ;;		_isin_
  5412 ;; This function uses a non-reentrant model
  5413 ;;
  5414                           
  5415                           
  5416                           ;psect for function ___wmul
  5417  0A8C                     ___wmul:	
  5418                           
  5419                           ;incstack = 0
  5420                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5421  0A8C  0020               	movlb	0	; select bank0
  5422  0A8D  01A4               	clrf	___wmul@product
  5423  0A8E  01A5               	clrf	___wmul@product+1
  5424  0A8F                     l2137:	
  5425  0A8F  1C20               	btfss	___wmul@multiplier,0
  5426  0A90  2A95               	goto	l591
  5427  0A91  0822               	movf	___wmul@multiplicand,w
  5428  0A92  07A4               	addwf	___wmul@product,f
  5429  0A93  0823               	movf	___wmul@multiplicand+1,w
  5430  0A94  3DA5               	addwfc	___wmul@product+1,f
  5431  0A95                     l591:	
  5432  0A95  3001               	movlw	1
  5433  0A96                     u2065:	
  5434  0A96  35A2               	lslf	___wmul@multiplicand,f
  5435  0A97  0DA3               	rlf	___wmul@multiplicand+1,f
  5436  0A98  0B89               	decfsz	9,f
  5437  0A99  2A96               	goto	u2065
  5438  0A9A  3001               	movlw	1
  5439  0A9B                     u2075:	
  5440  0A9B  36A1               	lsrf	___wmul@multiplier+1,f
  5441  0A9C  0CA0               	rrf	___wmul@multiplier,f
  5442  0A9D  0B89               	decfsz	9,f
  5443  0A9E  2A9B               	goto	u2075
  5444  0A9F  0820               	movf	___wmul@multiplier,w
  5445  0AA0  0421               	iorwf	___wmul@multiplier+1,w
  5446  0AA1  1D03               	btfss	3,2
  5447  0AA2  2A8F               	goto	l2137
  5448  0AA3  0825               	movf	___wmul@product+1,w
  5449  0AA4  00A1               	movwf	?___wmul+1
  5450  0AA5  0824               	movf	___wmul@product,w
  5451  0AA6  00A0               	movwf	?___wmul
  5452  0AA7  0008               	return
  5453  0AA8                     __end_of___wmul:	
  5454                           
  5455                           	psect	text29
  5456  0D56                     __ptext29:	
  5457 ;; *************** function ___awdiv *****************
  5458 ;; Defined at:
  5459 ;;		line 6 in file "/Applications/microchip/xc8/v1.36/sources/common/awdiv.c"
  5460 ;; Parameters:    Size  Location     Type
  5461 ;;  divisor         2    6[BANK0 ] int 
  5462 ;;  dividend        2    8[BANK0 ] int 
  5463 ;; Auto vars:     Size  Location     Type
  5464 ;;  quotient        2   13[BANK0 ] int 
  5465 ;;  sign            1   12[BANK0 ] unsigned char 
  5466 ;;  counter         1   11[BANK0 ] unsigned char 
  5467 ;; Return value:  Size  Location     Type
  5468 ;;                  2    6[BANK0 ] int 
  5469 ;; Registers used:
  5470 ;;		wreg, status,2, status,0
  5471 ;; Tracked objects:
  5472 ;;		On entry : 0/0
  5473 ;;		On exit  : 0/0
  5474 ;;		Unchanged: 0/0
  5475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5476 ;;      Params:         0       4       0       0       0       0
  5477 ;;      Locals:         0       4       0       0       0       0
  5478 ;;      Temps:          0       1       0       0       0       0
  5479 ;;      Totals:         0       9       0       0       0       0
  5480 ;;Total ram usage:        9 bytes
  5481 ;; Hardware stack levels used:    1
  5482 ;; Hardware stack levels required when called:    3
  5483 ;; This function calls:
  5484 ;;		Nothing
  5485 ;; This function is called by:
  5486 ;;		_isin_
  5487 ;; This function uses a non-reentrant model
  5488 ;;
  5489                           
  5490                           
  5491                           ;psect for function ___awdiv
  5492  0D56                     ___awdiv:	
  5493                           
  5494                           ;incstack = 0
  5495                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5496  0D56  0020               	movlb	0	; select bank0
  5497  0D57  01AC               	clrf	___awdiv@sign
  5498  0D58  1FA7               	btfss	___awdiv@divisor+1,7
  5499  0D59  2D61               	goto	l2157
  5500  0D5A  09A6               	comf	___awdiv@divisor,f
  5501  0D5B  09A7               	comf	___awdiv@divisor+1,f
  5502  0D5C  0AA6               	incf	___awdiv@divisor,f
  5503  0D5D  1903               	skipnz
  5504  0D5E  0AA7               	incf	___awdiv@divisor+1,f
  5505  0D5F  01AC               	clrf	___awdiv@sign
  5506  0D60  0AAC               	incf	___awdiv@sign,f
  5507  0D61                     l2157:	
  5508  0D61  1FA9               	btfss	___awdiv@dividend+1,7
  5509  0D62  2D6C               	goto	l2163
  5510  0D63  09A8               	comf	___awdiv@dividend,f
  5511  0D64  09A9               	comf	___awdiv@dividend+1,f
  5512  0D65  0AA8               	incf	___awdiv@dividend,f
  5513  0D66  1903               	skipnz
  5514  0D67  0AA9               	incf	___awdiv@dividend+1,f
  5515  0D68  3001               	movlw	1
  5516  0D69  00AA               	movwf	??___awdiv
  5517  0D6A  082A               	movf	??___awdiv,w
  5518  0D6B  06AC               	xorwf	___awdiv@sign,f
  5519  0D6C                     l2163:	
  5520  0D6C  01AD               	clrf	___awdiv@quotient
  5521  0D6D  01AE               	clrf	___awdiv@quotient+1
  5522  0D6E  0826               	movf	___awdiv@divisor,w
  5523  0D6F  0427               	iorwf	___awdiv@divisor+1,w
  5524  0D70  1903               	btfsc	3,2
  5525  0D71  2D9B               	goto	l2185
  5526  0D72  01AB               	clrf	___awdiv@counter
  5527  0D73  0AAB               	incf	___awdiv@counter,f
  5528  0D74                     l2173:	
  5529  0D74  1BA7               	btfsc	___awdiv@divisor+1,7
  5530  0D75  2D80               	goto	l2175
  5531  0D76  3001               	movlw	1
  5532  0D77                     u2125:	
  5533  0D77  35A6               	lslf	___awdiv@divisor,f
  5534  0D78  0DA7               	rlf	___awdiv@divisor+1,f
  5535  0D79  0B89               	decfsz	9,f
  5536  0D7A  2D77               	goto	u2125
  5537  0D7B  3001               	movlw	1
  5538  0D7C  00AA               	movwf	??___awdiv
  5539  0D7D  082A               	movf	??___awdiv,w
  5540  0D7E  07AB               	addwf	___awdiv@counter,f
  5541  0D7F  2D74               	goto	l2173
  5542  0D80                     l2175:	
  5543  0D80  3001               	movlw	1
  5544  0D81                     u2145:	
  5545  0D81  35AD               	lslf	___awdiv@quotient,f
  5546  0D82  0DAE               	rlf	___awdiv@quotient+1,f
  5547  0D83  0B89               	decfsz	9,f
  5548  0D84  2D81               	goto	u2145
  5549  0D85  0827               	movf	___awdiv@divisor+1,w
  5550  0D86  0229               	subwf	___awdiv@dividend+1,w
  5551  0D87  1D03               	skipz
  5552  0D88  2D8B               	goto	u2155
  5553  0D89  0826               	movf	___awdiv@divisor,w
  5554  0D8A  0228               	subwf	___awdiv@dividend,w
  5555  0D8B                     u2155:	
  5556  0D8B  1C03               	skipc
  5557  0D8C  2D92               	goto	l2181
  5558  0D8D  0826               	movf	___awdiv@divisor,w
  5559  0D8E  02A8               	subwf	___awdiv@dividend,f
  5560  0D8F  0827               	movf	___awdiv@divisor+1,w
  5561  0D90  3BA9               	subwfb	___awdiv@dividend+1,f
  5562  0D91  142D               	bsf	___awdiv@quotient,0
  5563  0D92                     l2181:	
  5564  0D92  3001               	movlw	1
  5565  0D93                     u2165:	
  5566  0D93  36A7               	lsrf	___awdiv@divisor+1,f
  5567  0D94  0CA6               	rrf	___awdiv@divisor,f
  5568  0D95  0B89               	decfsz	9,f
  5569  0D96  2D93               	goto	u2165
  5570  0D97  3001               	movlw	1
  5571  0D98  02AB               	subwf	___awdiv@counter,f
  5572  0D99  1D03               	btfss	3,2
  5573  0D9A  2D80               	goto	l2175
  5574  0D9B                     l2185:	
  5575  0D9B  082C               	movf	___awdiv@sign,w
  5576  0D9C  1903               	btfsc	3,2
  5577  0D9D  2DA3               	goto	l2189
  5578  0D9E  09AD               	comf	___awdiv@quotient,f
  5579  0D9F  09AE               	comf	___awdiv@quotient+1,f
  5580  0DA0  0AAD               	incf	___awdiv@quotient,f
  5581  0DA1  1903               	skipnz
  5582  0DA2  0AAE               	incf	___awdiv@quotient+1,f
  5583  0DA3                     l2189:	
  5584  0DA3  082E               	movf	___awdiv@quotient+1,w
  5585  0DA4  00A7               	movwf	?___awdiv+1
  5586  0DA5  082D               	movf	___awdiv@quotient,w
  5587  0DA6  00A6               	movwf	?___awdiv
  5588  0DA7  0008               	return
  5589  0DA8                     __end_of___awdiv:	
  5590                           
  5591                           	psect	text30
  5592  0B51                     __ptext30:	
  5593 ;; *************** function _deltaT *****************
  5594 ;; Defined at:
  5595 ;;		line 545 in file "powerspy.c"
  5596 ;; Parameters:    Size  Location     Type
  5597 ;;  tm_low          2    0[BANK0 ] unsigned short 
  5598 ;;  tm_high         2    2[BANK0 ] unsigned short 
  5599 ;; Auto vars:     Size  Location     Type
  5600 ;;		None
  5601 ;; Return value:  Size  Location     Type
  5602 ;;                  2    0[BANK0 ] unsigned short 
  5603 ;; Registers used:
  5604 ;;		wreg, status,2, status,0
  5605 ;; Tracked objects:
  5606 ;;		On entry : 0/0
  5607 ;;		On exit  : 0/0
  5608 ;;		Unchanged: 0/0
  5609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5610 ;;      Params:         0       4       0       0       0       0
  5611 ;;      Locals:         0       0       0       0       0       0
  5612 ;;      Temps:          0       4       0       0       0       0
  5613 ;;      Totals:         0       8       0       0       0       0
  5614 ;;Total ram usage:        8 bytes
  5615 ;; Hardware stack levels used:    1
  5616 ;; Hardware stack levels required when called:    3
  5617 ;; This function calls:
  5618 ;;		Nothing
  5619 ;; This function is called by:
  5620 ;;		_main
  5621 ;; This function uses a non-reentrant model
  5622 ;;
  5623                           
  5624                           
  5625                           ;psect for function _deltaT
  5626  0B51                     _deltaT:	
  5627                           
  5628                           ;powerspy.c: 547: if (tm_low < tm_high)
  5629                           
  5630                           ;incstack = 0
  5631                           ; Regs used in _deltaT: [wreg+status,2+status,0]
  5632  0B51  0020               	movlb	0	; select bank0
  5633  0B52  0823               	movf	deltaT@tm_high+1,w
  5634  0B53  0221               	subwf	deltaT@tm_low+1,w
  5635  0B54  1D03               	skipz
  5636  0B55  2B58               	goto	u3315
  5637  0B56  0822               	movf	deltaT@tm_high,w
  5638  0B57  0220               	subwf	deltaT@tm_low,w
  5639  0B58                     u3315:	
  5640  0B58  1803               	skipnc
  5641  0B59  2B68               	goto	l2735
  5642                           
  5643                           ;powerspy.c: 548: return tm_high - tm_low;
  5644  0B5A  0920               	comf	deltaT@tm_low,w
  5645  0B5B  00A4               	movwf	??_deltaT
  5646  0B5C  0921               	comf	deltaT@tm_low+1,w
  5647  0B5D  00A5               	movwf	??_deltaT+1
  5648  0B5E  0AA4               	incf	??_deltaT,f
  5649  0B5F  1903               	skipnz
  5650  0B60  0AA5               	incf	??_deltaT+1,f
  5651  0B61  0822               	movf	deltaT@tm_high,w
  5652  0B62  0724               	addwf	??_deltaT,w
  5653  0B63  00A0               	movwf	?_deltaT
  5654  0B64  0823               	movf	deltaT@tm_high+1,w
  5655  0B65  3D25               	addwfc	??_deltaT+1,w
  5656  0B66  00A1               	movwf	?_deltaT+1
  5657  0B67  0008               	return
  5658  0B68                     l2735:	
  5659                           
  5660                           ;powerspy.c: 549: else
  5661                           ;powerspy.c: 550: return 0xffff - tm_low + tm_high;
  5662  0B68  0920               	comf	deltaT@tm_low,w
  5663  0B69  00A4               	movwf	??_deltaT
  5664  0B6A  0921               	comf	deltaT@tm_low+1,w
  5665  0B6B  00A5               	movwf	??_deltaT+1
  5666  0B6C  0AA4               	incf	??_deltaT,f
  5667  0B6D  1903               	skipnz
  5668  0B6E  0AA5               	incf	??_deltaT+1,f
  5669  0B6F  0822               	movf	deltaT@tm_high,w
  5670  0B70  0724               	addwf	??_deltaT,w
  5671  0B71  00A6               	movwf	??_deltaT+2
  5672  0B72  0823               	movf	deltaT@tm_high+1,w
  5673  0B73  3D25               	addwfc	??_deltaT+1,w
  5674  0B74  00A7               	movwf	??_deltaT+3
  5675  0B75  0826               	movf	??_deltaT+2,w
  5676  0B76  3EFF               	addlw	255
  5677  0B77  00A0               	movwf	?_deltaT
  5678  0B78  30FF               	movlw	255
  5679  0B79  3D27               	addwfc	??_deltaT+3,w
  5680  0B7A  00A1               	movwf	?_deltaT+1
  5681  0B7B  0008               	return
  5682  0B7C                     __end_of_deltaT:	
  5683                           
  5684                           	psect	text31
  5685  0A00                     __ptext31:	
  5686 ;; *************** function _clearDisplay *****************
  5687 ;; Defined at:
  5688 ;;		line 489 in file "powerspy.c"
  5689 ;; Parameters:    Size  Location     Type
  5690 ;;  leng            1    wreg     char 
  5691 ;; Auto vars:     Size  Location     Type
  5692 ;;  leng            1    4[BANK0 ] char 
  5693 ;; Return value:  Size  Location     Type
  5694 ;;                  1    wreg      void 
  5695 ;; Registers used:
  5696 ;;		wreg, status,2, status,0, pclath, cstack
  5697 ;; Tracked objects:
  5698 ;;		On entry : 0/0
  5699 ;;		On exit  : 0/0
  5700 ;;		Unchanged: 0/0
  5701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5702 ;;      Params:         0       0       0       0       0       0
  5703 ;;      Locals:         0       1       0       0       0       0
  5704 ;;      Temps:          0       1       0       0       0       0
  5705 ;;      Totals:         0       2       0       0       0       0
  5706 ;;Total ram usage:        2 bytes
  5707 ;; Hardware stack levels used:    1
  5708 ;; Hardware stack levels required when called:    4
  5709 ;; This function calls:
  5710 ;;		_so
  5711 ;; This function is called by:
  5712 ;;		_main
  5713 ;; This function uses a non-reentrant model
  5714 ;;
  5715                           
  5716                           
  5717                           ;psect for function _clearDisplay
  5718  0A00                     _clearDisplay:	
  5719                           
  5720                           ;incstack = 0
  5721                           ; Regs used in _clearDisplay: [wreg+status,2+status,0+pclath+cstack]
  5722                           ;clearDisplay@leng stored from wreg
  5723  0A00  0020               	movlb	0	; select bank0
  5724  0A01  00A4               	movwf	clearDisplay@leng
  5725  0A02                     L13:	
  5726                           
  5727                           ;powerspy.c: 491: for (; leng >= 0; leng--)
  5728  0A02  1BA4               	btfsc	clearDisplay@leng,7
  5729  0A03  0008               	return
  5730                           
  5731                           ;powerspy.c: 492: so(0xff);
  5732  0A04  30FF               	movlw	255
  5733  0A05  318B  23A9  318A   	fcall	_so
  5734  0A08  30FF               	movlw	255
  5735  0A09  0020               	movlb	0	; select bank0
  5736  0A0A  00A3               	movwf	??_clearDisplay
  5737  0A0B  0823               	movf	??_clearDisplay,w
  5738  0A0C  07A4               	addwf	clearDisplay@leng,f
  5739  0A0D  2A02               	goto	L13
  5740  0A0E                     __end_of_clearDisplay:	
  5741                           
  5742                           	psect	text32
  5743  0BA9                     __ptext32:	
  5744 ;; *************** function _so *****************
  5745 ;; Defined at:
  5746 ;;		line 456 in file "powerspy.c"
  5747 ;; Parameters:    Size  Location     Type
  5748 ;;  data            1    wreg     const unsigned char 
  5749 ;; Auto vars:     Size  Location     Type
  5750 ;;  data            1    1[BANK0 ] const unsigned char 
  5751 ;;  c               1    2[BANK0 ] unsigned char 
  5752 ;; Return value:  Size  Location     Type
  5753 ;;                  1    wreg      void 
  5754 ;; Registers used:
  5755 ;;		wreg, status,2, status,0
  5756 ;; Tracked objects:
  5757 ;;		On entry : 0/0
  5758 ;;		On exit  : 0/0
  5759 ;;		Unchanged: 0/0
  5760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5761 ;;      Params:         0       0       0       0       0       0
  5762 ;;      Locals:         0       2       0       0       0       0
  5763 ;;      Temps:          0       1       0       0       0       0
  5764 ;;      Totals:         0       3       0       0       0       0
  5765 ;;Total ram usage:        3 bytes
  5766 ;; Hardware stack levels used:    1
  5767 ;; Hardware stack levels required when called:    3
  5768 ;; This function calls:
  5769 ;;		Nothing
  5770 ;; This function is called by:
  5771 ;;		_clearDisplay
  5772 ;;		_setNr
  5773 ;;		_main
  5774 ;; This function uses a non-reentrant model
  5775 ;;
  5776                           
  5777                           
  5778                           ;psect for function _so
  5779  0BA9                     _so:	
  5780                           
  5781                           ;incstack = 0
  5782                           ; Regs used in _so: [wreg+status,2+status,0]
  5783                           ;so@data stored from wreg
  5784  0BA9  0020               	movlb	0	; select bank0
  5785  0BAA  00A1               	movwf	so@data
  5786                           
  5787                           ;powerspy.c: 458: uint8_t c;
  5788                           ;powerspy.c: 459: for (c = 0; c < 8; c++) {
  5789  0BAB  01A2               	clrf	so@c
  5790  0BAC                     L14:	
  5791  0BAC  3008               	movlw	8
  5792  0BAD  0222               	subwf	so@c,w
  5793  0BAE  1803               	btfsc	3,0
  5794  0BAF  0008               	return
  5795                           
  5796                           ;powerspy.c: 460: RA7 = (data >> c) & 0x01;
  5797  0BB0  0821               	movf	so@data,w
  5798  0BB1  00A0               	movwf	??_so
  5799  0BB2  0A22               	incf	so@c,w
  5800  0BB3  2BB5               	goto	u2484
  5801  0BB4                     u2485:	
  5802  0BB4  36A0               	lsrf	??_so,f
  5803  0BB5                     u2484:	
  5804  0BB5  0B89               	decfsz	9,f
  5805  0BB6  2BB4               	goto	u2485
  5806  0BB7  1C20               	btfss	??_so,0
  5807  0BB8  2BBC               	goto	u2490
  5808  0BB9  0020               	movlb	0	; select bank0
  5809  0BBA  178C               	bsf	12,7	;volatile
  5810  0BBB  2BBE               	goto	l2251
  5811  0BBC                     u2490:	
  5812  0BBC  0020               	movlb	0	; select bank0
  5813  0BBD  138C               	bcf	12,7	;volatile
  5814  0BBE                     l2251:	
  5815                           
  5816                           ;powerspy.c: 461: __nop();
  5817  0BBE  0000               	nop
  5818                           
  5819                           ;powerspy.c: 462: __nop();
  5820  0BBF  0000               	nop
  5821                           
  5822                           ;powerspy.c: 463: __nop();
  5823  0BC0  0000               	nop
  5824                           
  5825                           ;powerspy.c: 464: __nop();
  5826  0BC1  0000               	nop
  5827                           
  5828                           ;powerspy.c: 465: __nop();
  5829  0BC2  0000               	nop
  5830                           
  5831                           ;powerspy.c: 466: __nop();
  5832  0BC3  0000               	nop
  5833                           
  5834                           ;powerspy.c: 467: __nop();
  5835  0BC4  0000               	nop
  5836                           
  5837                           ;powerspy.c: 468: __nop();
  5838  0BC5  0000               	nop
  5839                           
  5840                           ;powerspy.c: 469: __nop();
  5841  0BC6  0000               	nop
  5842                           
  5843                           ;powerspy.c: 470: __nop();
  5844  0BC7  0000               	nop
  5845                           
  5846                           ;powerspy.c: 471: RA4 = 1;
  5847  0BC8  0020               	movlb	0	; select bank0
  5848  0BC9  160C               	bsf	12,4	;volatile
  5849                           
  5850                           ;powerspy.c: 472: __nop();
  5851  0BCA  0000               	nop
  5852                           
  5853                           ;powerspy.c: 473: __nop();
  5854  0BCB  0000               	nop
  5855                           
  5856                           ;powerspy.c: 474: __nop();
  5857  0BCC  0000               	nop
  5858                           
  5859                           ;powerspy.c: 475: __nop();
  5860  0BCD  0000               	nop
  5861                           
  5862                           ;powerspy.c: 476: __nop();
  5863  0BCE  0000               	nop
  5864                           
  5865                           ;powerspy.c: 477: __nop();
  5866  0BCF  0000               	nop
  5867                           
  5868                           ;powerspy.c: 478: __nop();
  5869  0BD0  0000               	nop
  5870                           
  5871                           ;powerspy.c: 479: __nop();
  5872  0BD1  0000               	nop
  5873                           
  5874                           ;powerspy.c: 480: __nop();
  5875  0BD2  0000               	nop
  5876                           
  5877                           ;powerspy.c: 481: __nop();
  5878  0BD3  0000               	nop
  5879                           
  5880                           ;powerspy.c: 482: RA4 = 0;
  5881  0BD4  0020               	movlb	0	; select bank0
  5882  0BD5  120C               	bcf	12,4	;volatile
  5883  0BD6  3001               	movlw	1
  5884  0BD7  00A0               	movwf	??_so
  5885  0BD8  0820               	movf	??_so,w
  5886  0BD9  07A2               	addwf	so@c,f
  5887  0BDA  2BAC               	goto	L14
  5888  0BDB                     __end_of_so:	
  5889                           
  5890                           	psect	text33
  5891  0B2A                     __ptext33:	
  5892 ;; *************** function ___tmul *****************
  5893 ;; Defined at:
  5894 ;;		line 15 in file "/Applications/microchip/xc8/v1.36/sources/common/Umul24.c"
  5895 ;; Parameters:    Size  Location     Type
  5896 ;;  multiplier      3    0[BANK0 ] unsigned um
  5897 ;;  multiplicand    3    3[BANK0 ] unsigned um
  5898 ;; Auto vars:     Size  Location     Type
  5899 ;;  product         3    6[BANK0 ] unsigned um
  5900 ;; Return value:  Size  Location     Type
  5901 ;;                  3    0[BANK0 ] unsigned um
  5902 ;; Registers used:
  5903 ;;		wreg, status,2, status,0
  5904 ;; Tracked objects:
  5905 ;;		On entry : 0/0
  5906 ;;		On exit  : 0/0
  5907 ;;		Unchanged: 0/0
  5908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5909 ;;      Params:         0       6       0       0       0       0
  5910 ;;      Locals:         0       3       0       0       0       0
  5911 ;;      Temps:          0       0       0       0       0       0
  5912 ;;      Totals:         0       9       0       0       0       0
  5913 ;;Total ram usage:        9 bytes
  5914 ;; Hardware stack levels used:    1
  5915 ;; Hardware stack levels required when called:    3
  5916 ;; This function calls:
  5917 ;;		Nothing
  5918 ;; This function is called by:
  5919 ;;		_main
  5920 ;; This function uses a non-reentrant model
  5921 ;;
  5922                           
  5923                           
  5924                           ;psect for function ___tmul
  5925  0B2A                     ___tmul:	
  5926                           
  5927                           ;incstack = 0
  5928                           ; Regs used in ___tmul: [wreg+status,2+status,0]
  5929  0B2A  3000               	movlw	0
  5930  0B2B  0020               	movlb	0	; select bank0
  5931  0B2C  00A6               	movwf	___tmul@product
  5932  0B2D  3000               	movlw	0
  5933  0B2E  00A7               	movwf	___tmul@product+1
  5934  0B2F  3000               	movlw	0
  5935  0B30  00A8               	movwf	___tmul@product+2
  5936  0B31                     l2805:	
  5937  0B31  1C20               	btfss	___tmul@multiplier,0
  5938  0B32  2B39               	goto	l2809
  5939  0B33  0823               	movf	___tmul@multiplicand,w
  5940  0B34  07A6               	addwf	___tmul@product,f
  5941  0B35  0824               	movf	___tmul@multiplicand+1,w
  5942  0B36  3DA7               	addwfc	___tmul@product+1,f
  5943  0B37  0825               	movf	___tmul@multiplicand+2,w
  5944  0B38  3DA8               	addwfc	___tmul@product+2,f
  5945  0B39                     l2809:	
  5946  0B39  3001               	movlw	1
  5947  0B3A                     u3385:	
  5948  0B3A  35A3               	lslf	___tmul@multiplicand,f
  5949  0B3B  0DA4               	rlf	___tmul@multiplicand+1,f
  5950  0B3C  0DA5               	rlf	___tmul@multiplicand+2,f
  5951  0B3D  0B89               	decfsz	9,f
  5952  0B3E  2B3A               	goto	u3385
  5953  0B3F  3001               	movlw	1
  5954  0B40                     u3395:	
  5955  0B40  36A2               	lsrf	___tmul@multiplier+2,f
  5956  0B41  0CA1               	rrf	___tmul@multiplier+1,f
  5957  0B42  0CA0               	rrf	___tmul@multiplier,f
  5958  0B43  0B89               	decfsz	9,f
  5959  0B44  2B40               	goto	u3395
  5960  0B45  0822               	movf	___tmul@multiplier+2,w
  5961  0B46  0421               	iorwf	___tmul@multiplier+1,w
  5962  0B47  0420               	iorwf	___tmul@multiplier,w
  5963  0B48  1D03               	skipz
  5964  0B49  2B31               	goto	l2805
  5965  0B4A  0826               	movf	___tmul@product,w
  5966  0B4B  00A0               	movwf	?___tmul
  5967  0B4C  0827               	movf	___tmul@product+1,w
  5968  0B4D  00A1               	movwf	?___tmul+1
  5969  0B4E  0828               	movf	___tmul@product+2,w
  5970  0B4F  00A2               	movwf	?___tmul+2
  5971  0B50  0008               	return
  5972  0B51                     __end_of___tmul:	
  5973                           
  5974                           	psect	text34
  5975  0CC3                     __ptext34:	
  5976 ;; *************** function ___ltdiv *****************
  5977 ;; Defined at:
  5978 ;;		line 6 in file "/Applications/microchip/xc8/v1.36/sources/common/ltdiv.c"
  5979 ;; Parameters:    Size  Location     Type
  5980 ;;  divisor         3    0[BANK0 ] unsigned um
  5981 ;;  dividend        3    3[BANK0 ] unsigned um
  5982 ;; Auto vars:     Size  Location     Type
  5983 ;;  quotient        3    7[BANK0 ] unsigned um
  5984 ;;  counter         1   10[BANK0 ] unsigned char 
  5985 ;; Return value:  Size  Location     Type
  5986 ;;                  3    0[BANK0 ] unsigned um
  5987 ;; Registers used:
  5988 ;;		wreg, status,2, status,0
  5989 ;; Tracked objects:
  5990 ;;		On entry : 0/0
  5991 ;;		On exit  : 0/0
  5992 ;;		Unchanged: 0/0
  5993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5994 ;;      Params:         0       6       0       0       0       0
  5995 ;;      Locals:         0       4       0       0       0       0
  5996 ;;      Temps:          0       1       0       0       0       0
  5997 ;;      Totals:         0      11       0       0       0       0
  5998 ;;Total ram usage:       11 bytes
  5999 ;; Hardware stack levels used:    1
  6000 ;; Hardware stack levels required when called:    3
  6001 ;; This function calls:
  6002 ;;		Nothing
  6003 ;; This function is called by:
  6004 ;;		_main
  6005 ;; This function uses a non-reentrant model
  6006 ;;
  6007                           
  6008                           
  6009                           ;psect for function ___ltdiv
  6010  0CC3                     ___ltdiv:	
  6011                           
  6012                           ;incstack = 0
  6013                           ; Regs used in ___ltdiv: [wreg+status,2+status,0]
  6014  0CC3  3000               	movlw	0
  6015  0CC4  0020               	movlb	0	; select bank0
  6016  0CC5  00A7               	movwf	___ltdiv@quotient
  6017  0CC6  3000               	movlw	0
  6018  0CC7  00A8               	movwf	___ltdiv@quotient+1
  6019  0CC8  3000               	movlw	0
  6020  0CC9  00A9               	movwf	___ltdiv@quotient+2
  6021  0CCA  0822               	movf	___ltdiv@divisor+2,w
  6022  0CCB  0421               	iorwf	___ltdiv@divisor+1,w
  6023  0CCC  0420               	iorwf	___ltdiv@divisor,w
  6024  0CCD  1903               	skipnz
  6025  0CCE  2D01               	goto	l2939
  6026  0CCF  01AA               	clrf	___ltdiv@counter
  6027  0CD0  0AAA               	incf	___ltdiv@counter,f
  6028  0CD1                     l2925:	
  6029  0CD1  1BA2               	btfsc	___ltdiv@divisor+2,7
  6030  0CD2  2CDE               	goto	l2927
  6031  0CD3  3001               	movlw	1
  6032  0CD4                     u3605:	
  6033  0CD4  35A0               	lslf	___ltdiv@divisor,f
  6034  0CD5  0DA1               	rlf	___ltdiv@divisor+1,f
  6035  0CD6  0DA2               	rlf	___ltdiv@divisor+2,f
  6036  0CD7  0B89               	decfsz	9,f
  6037  0CD8  2CD4               	goto	u3605
  6038  0CD9  3001               	movlw	1
  6039  0CDA  00A6               	movwf	??___ltdiv
  6040  0CDB  0826               	movf	??___ltdiv,w
  6041  0CDC  07AA               	addwf	___ltdiv@counter,f
  6042  0CDD  2CD1               	goto	l2925
  6043  0CDE                     l2927:	
  6044  0CDE  3001               	movlw	1
  6045  0CDF                     u3625:	
  6046  0CDF  35A7               	lslf	___ltdiv@quotient,f
  6047  0CE0  0DA8               	rlf	___ltdiv@quotient+1,f
  6048  0CE1  0DA9               	rlf	___ltdiv@quotient+2,f
  6049  0CE2  0B89               	decfsz	9,f
  6050  0CE3  2CDF               	goto	u3625
  6051  0CE4  0822               	movf	___ltdiv@divisor+2,w
  6052  0CE5  0225               	subwf	___ltdiv@dividend+2,w
  6053  0CE6  1D03               	skipz
  6054  0CE7  2CEE               	goto	u3635
  6055  0CE8  0821               	movf	___ltdiv@divisor+1,w
  6056  0CE9  0224               	subwf	___ltdiv@dividend+1,w
  6057  0CEA  1D03               	skipz
  6058  0CEB  2CEE               	goto	u3635
  6059  0CEC  0820               	movf	___ltdiv@divisor,w
  6060  0CED  0223               	subwf	___ltdiv@dividend,w
  6061  0CEE                     u3635:	
  6062  0CEE  1C03               	skipc
  6063  0CEF  2CF7               	goto	l2935
  6064  0CF0  0820               	movf	___ltdiv@divisor,w
  6065  0CF1  02A3               	subwf	___ltdiv@dividend,f
  6066  0CF2  0821               	movf	___ltdiv@divisor+1,w
  6067  0CF3  3BA4               	subwfb	___ltdiv@dividend+1,f
  6068  0CF4  0822               	movf	___ltdiv@divisor+2,w
  6069  0CF5  3BA5               	subwfb	___ltdiv@dividend+2,f
  6070  0CF6  1427               	bsf	___ltdiv@quotient,0
  6071  0CF7                     l2935:	
  6072  0CF7  3001               	movlw	1
  6073  0CF8                     u3645:	
  6074  0CF8  36A2               	lsrf	___ltdiv@divisor+2,f
  6075  0CF9  0CA1               	rrf	___ltdiv@divisor+1,f
  6076  0CFA  0CA0               	rrf	___ltdiv@divisor,f
  6077  0CFB  0B89               	decfsz	9,f
  6078  0CFC  2CF8               	goto	u3645
  6079  0CFD  3001               	movlw	1
  6080  0CFE  02AA               	subwf	___ltdiv@counter,f
  6081  0CFF  1D03               	btfss	3,2
  6082  0D00  2CDE               	goto	l2927
  6083  0D01                     l2939:	
  6084  0D01  0827               	movf	___ltdiv@quotient,w
  6085  0D02  00A0               	movwf	?___ltdiv
  6086  0D03  0828               	movf	___ltdiv@quotient+1,w
  6087  0D04  00A1               	movwf	?___ltdiv+1
  6088  0D05  0829               	movf	___ltdiv@quotient+2,w
  6089  0D06  00A2               	movwf	?___ltdiv+2
  6090  0D07  0008               	return
  6091  0D08                     __end_of___ltdiv:	
  6092                           
  6093                           	psect	text35
  6094  0A71                     __ptext35:	
  6095 ;; *************** function ___lbtoft *****************
  6096 ;; Defined at:
  6097 ;;		line 27 in file "/Applications/microchip/xc8/v1.36/sources/common/lbtoft.c"
  6098 ;; Parameters:    Size  Location     Type
  6099 ;;  c               1    wreg     unsigned char 
  6100 ;; Auto vars:     Size  Location     Type
  6101 ;;  c               1   15[BANK0 ] unsigned char 
  6102 ;; Return value:  Size  Location     Type
  6103 ;;                  3    8[BANK0 ] float 
  6104 ;; Registers used:
  6105 ;;		wreg, status,2, status,0, pclath, cstack
  6106 ;; Tracked objects:
  6107 ;;		On entry : 0/0
  6108 ;;		On exit  : 0/0
  6109 ;;		Unchanged: 0/0
  6110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6111 ;;      Params:         0       3       0       0       0       0
  6112 ;;      Locals:         0       1       0       0       0       0
  6113 ;;      Temps:          0       4       0       0       0       0
  6114 ;;      Totals:         0       8       0       0       0       0
  6115 ;;Total ram usage:        8 bytes
  6116 ;; Hardware stack levels used:    1
  6117 ;; Hardware stack levels required when called:    4
  6118 ;; This function calls:
  6119 ;;		___ftpack
  6120 ;; This function is called by:
  6121 ;;		_main
  6122 ;; This function uses a non-reentrant model
  6123 ;;
  6124                           
  6125                           
  6126                           ;psect for function ___lbtoft
  6127  0A71                     ___lbtoft:	
  6128                           
  6129                           ;incstack = 0
  6130                           ; Regs used in ___lbtoft: [wreg+status,2+status,0+pclath+cstack]
  6131                           ;___lbtoft@c stored from wreg
  6132  0A71  0020               	movlb	0	; select bank0
  6133  0A72  00AF               	movwf	___lbtoft@c
  6134  0A73  082F               	movf	___lbtoft@c,w
  6135  0A74  00AB               	movwf	??___lbtoft
  6136  0A75  01AC               	clrf	??___lbtoft+1
  6137  0A76  01AD               	clrf	??___lbtoft+2
  6138  0A77  082B               	movf	??___lbtoft,w
  6139  0A78  00A0               	movwf	___ftpack@arg
  6140  0A79  082C               	movf	??___lbtoft+1,w
  6141  0A7A  00A1               	movwf	___ftpack@arg+1
  6142  0A7B  082D               	movf	??___lbtoft+2,w
  6143  0A7C  00A2               	movwf	___ftpack@arg+2
  6144  0A7D  308E               	movlw	142
  6145  0A7E  00AE               	movwf	??___lbtoft+3
  6146  0A7F  082E               	movf	??___lbtoft+3,w
  6147  0A80  00A3               	movwf	___ftpack@exp
  6148  0A81  01A4               	clrf	___ftpack@sign
  6149  0A82  318D  25FF         	fcall	___ftpack
  6150  0A84  0020               	movlb	0	; select bank0
  6151  0A85  0820               	movf	?___ftpack,w
  6152  0A86  00A8               	movwf	?___lbtoft
  6153  0A87  0821               	movf	?___ftpack+1,w
  6154  0A88  00A9               	movwf	?___lbtoft+1
  6155  0A89  0822               	movf	?___ftpack+2,w
  6156  0A8A  00AA               	movwf	?___lbtoft+2
  6157  0A8B  0008               	return
  6158  0A8C                     __end_of___lbtoft:	
  6159                           
  6160                           	psect	text36
  6161  0E64                     __ptext36:	
  6162 ;; *************** function ___fttol *****************
  6163 ;; Defined at:
  6164 ;;		line 44 in file "/Applications/microchip/xc8/v1.36/sources/common/fttol.c"
  6165 ;; Parameters:    Size  Location     Type
  6166 ;;  f1              3    0[BANK0 ] float 
  6167 ;; Auto vars:     Size  Location     Type
  6168 ;;  lval            4    9[BANK0 ] unsigned long 
  6169 ;;  exp1            1   13[BANK0 ] unsigned char 
  6170 ;;  sign1           1    8[BANK0 ] unsigned char 
  6171 ;; Return value:  Size  Location     Type
  6172 ;;                  4    0[BANK0 ] long 
  6173 ;; Registers used:
  6174 ;;		wreg, status,2, status,0
  6175 ;; Tracked objects:
  6176 ;;		On entry : 0/0
  6177 ;;		On exit  : 0/0
  6178 ;;		Unchanged: 0/0
  6179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6180 ;;      Params:         0       4       0       0       0       0
  6181 ;;      Locals:         0       6       0       0       0       0
  6182 ;;      Temps:          0       4       0       0       0       0
  6183 ;;      Totals:         0      14       0       0       0       0
  6184 ;;Total ram usage:       14 bytes
  6185 ;; Hardware stack levels used:    1
  6186 ;; Hardware stack levels required when called:    3
  6187 ;; This function calls:
  6188 ;;		Nothing
  6189 ;; This function is called by:
  6190 ;;		_main
  6191 ;; This function uses a non-reentrant model
  6192 ;;
  6193                           
  6194                           
  6195                           ;psect for function ___fttol
  6196  0E64                     ___fttol:	
  6197                           
  6198                           ;incstack = 0
  6199                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  6200  0E64  0020               	movlb	0	; select bank0
  6201  0E65  0820               	movf	___fttol@f1,w
  6202  0E66  00A4               	movwf	??___fttol
  6203  0E67  0821               	movf	___fttol@f1+1,w
  6204  0E68  00A5               	movwf	??___fttol+1
  6205  0E69  0822               	movf	___fttol@f1+2,w
  6206  0E6A  00A6               	movwf	??___fttol+2
  6207  0E6B  1003               	clrc
  6208  0E6C  0D25               	rlf	??___fttol+1,w
  6209  0E6D  0D26               	rlf	??___fttol+2,w
  6210  0E6E  00A7               	movwf	??___fttol+3
  6211  0E6F  0827               	movf	??___fttol+3,w
  6212  0E70  00AD               	movwf	___fttol@exp1
  6213  0E71  082D               	movf	___fttol@exp1,w
  6214  0E72  1D03               	btfss	3,2
  6215  0E73  2E7D               	goto	l2863
  6216  0E74  3000               	movlw	0
  6217  0E75  00A3               	movwf	?___fttol+3
  6218  0E76  3000               	movlw	0
  6219  0E77  00A2               	movwf	?___fttol+2
  6220  0E78  3000               	movlw	0
  6221  0E79  00A1               	movwf	?___fttol+1
  6222  0E7A  3000               	movlw	0
  6223  0E7B  00A0               	movwf	?___fttol
  6224  0E7C  0008               	return
  6225  0E7D                     l2863:	
  6226  0E7D  0820               	movf	___fttol@f1,w
  6227  0E7E  00A4               	movwf	??___fttol
  6228  0E7F  0821               	movf	___fttol@f1+1,w
  6229  0E80  00A5               	movwf	??___fttol+1
  6230  0E81  0822               	movf	___fttol@f1+2,w
  6231  0E82  00A6               	movwf	??___fttol+2
  6232  0E83  3017               	movlw	23
  6233  0E84                     u3475:	
  6234  0E84  36A6               	lsrf	??___fttol+2,f
  6235  0E85  0CA5               	rrf	??___fttol+1,f
  6236  0E86  0CA4               	rrf	??___fttol,f
  6237  0E87  0B89               	decfsz	9,f
  6238  0E88  2E84               	goto	u3475
  6239  0E89  0824               	movf	??___fttol,w
  6240  0E8A  00A7               	movwf	??___fttol+3
  6241  0E8B  0827               	movf	??___fttol+3,w
  6242  0E8C  00A8               	movwf	___fttol@sign1
  6243  0E8D  17A1               	bsf	___fttol@f1+1,7
  6244  0E8E  30FF               	movlw	255
  6245  0E8F  05A0               	andwf	___fttol@f1,f
  6246  0E90  30FF               	movlw	255
  6247  0E91  05A1               	andwf	___fttol@f1+1,f
  6248  0E92  3000               	movlw	0
  6249  0E93  05A2               	andwf	___fttol@f1+2,f
  6250  0E94  0820               	movf	___fttol@f1,w
  6251  0E95  00A9               	movwf	___fttol@lval
  6252  0E96  0821               	movf	___fttol@f1+1,w
  6253  0E97  00AA               	movwf	___fttol@lval+1
  6254  0E98  0822               	movf	___fttol@f1+2,w
  6255  0E99  00AB               	movwf	___fttol@lval+2
  6256  0E9A  01AC               	clrf	___fttol@lval+3
  6257  0E9B  308E               	movlw	142
  6258  0E9C  02AD               	subwf	___fttol@exp1,f
  6259  0E9D  1FAD               	btfss	___fttol@exp1,7
  6260  0E9E  2EBB               	goto	l2883
  6261  0E9F  082D               	movf	___fttol@exp1,w
  6262  0EA0  3A80               	xorlw	128
  6263  0EA1  3E8F               	addlw	143
  6264  0EA2  1803               	skipnc
  6265  0EA3  2EAD               	goto	l2881
  6266  0EA4  3000               	movlw	0
  6267  0EA5  00A3               	movwf	?___fttol+3
  6268  0EA6  3000               	movlw	0
  6269  0EA7  00A2               	movwf	?___fttol+2
  6270  0EA8  3000               	movlw	0
  6271  0EA9  00A1               	movwf	?___fttol+1
  6272  0EAA  3000               	movlw	0
  6273  0EAB  00A0               	movwf	?___fttol
  6274  0EAC  0008               	return
  6275  0EAD                     l2881:	
  6276  0EAD  3001               	movlw	1
  6277  0EAE                     u3505:	
  6278  0EAE  36AC               	lsrf	___fttol@lval+3,f
  6279  0EAF  0CAB               	rrf	___fttol@lval+2,f
  6280  0EB0  0CAA               	rrf	___fttol@lval+1,f
  6281  0EB1  0CA9               	rrf	___fttol@lval,f
  6282  0EB2  0B89               	decfsz	9,f
  6283  0EB3  2EAE               	goto	u3505
  6284  0EB4  3001               	movlw	1
  6285  0EB5  00A4               	movwf	??___fttol
  6286  0EB6  0824               	movf	??___fttol,w
  6287  0EB7  07AD               	addwf	___fttol@exp1,f
  6288  0EB8  1903               	btfsc	3,2
  6289  0EB9  2ED4               	goto	l2891
  6290  0EBA  2EAD               	goto	l2881
  6291  0EBB                     l2883:	
  6292  0EBB  3018               	movlw	24
  6293  0EBC  022D               	subwf	___fttol@exp1,w
  6294  0EBD  1C03               	skipc
  6295  0EBE  2ED1               	goto	l843
  6296  0EBF  3000               	movlw	0
  6297  0EC0  00A3               	movwf	?___fttol+3
  6298  0EC1  3000               	movlw	0
  6299  0EC2  00A2               	movwf	?___fttol+2
  6300  0EC3  3000               	movlw	0
  6301  0EC4  00A1               	movwf	?___fttol+1
  6302  0EC5  3000               	movlw	0
  6303  0EC6  00A0               	movwf	?___fttol
  6304  0EC7  0008               	return
  6305  0EC8                     l2889:	
  6306  0EC8  3001               	movlw	1
  6307  0EC9                     u3535:	
  6308  0EC9  35A9               	lslf	___fttol@lval,f
  6309  0ECA  0DAA               	rlf	___fttol@lval+1,f
  6310  0ECB  0DAB               	rlf	___fttol@lval+2,f
  6311  0ECC  0DAC               	rlf	___fttol@lval+3,f
  6312  0ECD  0B89               	decfsz	9,f
  6313  0ECE  2EC9               	goto	u3535
  6314  0ECF  3001               	movlw	1
  6315  0ED0  02AD               	subwf	___fttol@exp1,f
  6316  0ED1                     l843:	
  6317  0ED1  082D               	movf	___fttol@exp1,w
  6318  0ED2  1D03               	btfss	3,2
  6319  0ED3  2EC8               	goto	l2889
  6320  0ED4                     l2891:	
  6321  0ED4  0828               	movf	___fttol@sign1,w
  6322  0ED5  1903               	btfsc	3,2
  6323  0ED6  2EE2               	goto	l2895
  6324  0ED7  09A9               	comf	___fttol@lval,f
  6325  0ED8  09AA               	comf	___fttol@lval+1,f
  6326  0ED9  09AB               	comf	___fttol@lval+2,f
  6327  0EDA  09AC               	comf	___fttol@lval+3,f
  6328  0EDB  0AA9               	incf	___fttol@lval,f
  6329  0EDC  1903               	skipnz
  6330  0EDD  0AAA               	incf	___fttol@lval+1,f
  6331  0EDE  1903               	skipnz
  6332  0EDF  0AAB               	incf	___fttol@lval+2,f
  6333  0EE0  1903               	skipnz
  6334  0EE1  0AAC               	incf	___fttol@lval+3,f
  6335  0EE2                     l2895:	
  6336  0EE2  082C               	movf	___fttol@lval+3,w
  6337  0EE3  00A3               	movwf	?___fttol+3
  6338  0EE4  082B               	movf	___fttol@lval+2,w
  6339  0EE5  00A2               	movwf	?___fttol+2
  6340  0EE6  082A               	movf	___fttol@lval+1,w
  6341  0EE7  00A1               	movwf	?___fttol+1
  6342  0EE8  0829               	movf	___fttol@lval,w
  6343  0EE9  00A0               	movwf	?___fttol
  6344  0EEA  0008               	return
  6345  0EEB                     __end_of___fttol:	
  6346                           
  6347                           	psect	text37
  6348  09BF                     __ptext37:	
  6349 ;; *************** function ___ftneg *****************
  6350 ;; Defined at:
  6351 ;;		line 15 in file "/Applications/microchip/xc8/v1.36/sources/common/ftneg.c"
  6352 ;; Parameters:    Size  Location     Type
  6353 ;;  f1              3   70[BANK0 ] float 
  6354 ;; Auto vars:     Size  Location     Type
  6355 ;;		None
  6356 ;; Return value:  Size  Location     Type
  6357 ;;                  3   70[BANK0 ] float 
  6358 ;; Registers used:
  6359 ;;		wreg
  6360 ;; Tracked objects:
  6361 ;;		On entry : 0/0
  6362 ;;		On exit  : 0/0
  6363 ;;		Unchanged: 0/0
  6364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6365 ;;      Params:         0       3       0       0       0       0
  6366 ;;      Locals:         0       0       0       0       0       0
  6367 ;;      Temps:          0       0       0       0       0       0
  6368 ;;      Totals:         0       3       0       0       0       0
  6369 ;;Total ram usage:        3 bytes
  6370 ;; Hardware stack levels used:    1
  6371 ;; Hardware stack levels required when called:    3
  6372 ;; This function calls:
  6373 ;;		Nothing
  6374 ;; This function is called by:
  6375 ;;		_main
  6376 ;; This function uses a non-reentrant model
  6377 ;;
  6378                           
  6379                           
  6380                           ;psect for function ___ftneg
  6381  09BF                     ___ftneg:	
  6382                           
  6383                           ;incstack = 0
  6384                           ; Regs used in ___ftneg: [wreg]
  6385  09BF  0020               	movlb	0	; select bank0
  6386  09C0  0868               	movf	___ftneg@f1+2,w
  6387  09C1  0467               	iorwf	___ftneg@f1+1,w
  6388  09C2  0466               	iorwf	___ftneg@f1,w
  6389  09C3  1903               	skipnz
  6390  09C4  0008               	return
  6391  09C5  3080               	movlw	128
  6392  09C6  06E8               	xorwf	___ftneg@f1+2,f
  6393  09C7  0008               	return
  6394  09C8                     __end_of___ftneg:	
  6395                           
  6396                           	psect	text38
  6397  0C46                     __ptext38:	
  6398 ;; *************** function ___ftge *****************
  6399 ;; Defined at:
  6400 ;;		line 4 in file "/Applications/microchip/xc8/v1.36/sources/common/ftge.c"
  6401 ;; Parameters:    Size  Location     Type
  6402 ;;  ff1             3    0[BANK0 ] float 
  6403 ;;  ff2             3    3[BANK0 ] float 
  6404 ;; Auto vars:     Size  Location     Type
  6405 ;;		None
  6406 ;; Return value:  Size  Location     Type
  6407 ;;		None               void
  6408 ;; Registers used:
  6409 ;;		wreg, status,2, status,0
  6410 ;; Tracked objects:
  6411 ;;		On entry : 0/0
  6412 ;;		On exit  : 0/0
  6413 ;;		Unchanged: 0/0
  6414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6415 ;;      Params:         0       6       0       0       0       0
  6416 ;;      Locals:         0       0       0       0       0       0
  6417 ;;      Temps:          0       3       0       0       0       0
  6418 ;;      Totals:         0       9       0       0       0       0
  6419 ;;Total ram usage:        9 bytes
  6420 ;; Hardware stack levels used:    1
  6421 ;; Hardware stack levels required when called:    3
  6422 ;; This function calls:
  6423 ;;		Nothing
  6424 ;; This function is called by:
  6425 ;;		_main
  6426 ;; This function uses a non-reentrant model
  6427 ;;
  6428                           
  6429                           
  6430                           ;psect for function ___ftge
  6431  0C46                     ___ftge:	
  6432                           
  6433                           ;incstack = 0
  6434                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  6435  0C46  0020               	movlb	0	; select bank0
  6436  0C47  1FA2               	btfss	___ftge@ff1+2,7
  6437  0C48  2C5D               	goto	l2833
  6438  0C49  0920               	comf	___ftge@ff1,w
  6439  0C4A  00A6               	movwf	??___ftge
  6440  0C4B  0921               	comf	___ftge@ff1+1,w
  6441  0C4C  00A7               	movwf	??___ftge+1
  6442  0C4D  0922               	comf	___ftge@ff1+2,w
  6443  0C4E  00A8               	movwf	??___ftge+2
  6444  0C4F  0AA6               	incf	??___ftge,f
  6445  0C50  1903               	skipnz
  6446  0C51  0AA7               	incf	??___ftge+1,f
  6447  0C52  1903               	skipnz
  6448  0C53  0AA8               	incf	??___ftge+2,f
  6449  0C54  3000               	movlw	0
  6450  0C55  0726               	addwf	??___ftge,w
  6451  0C56  00A0               	movwf	___ftge@ff1
  6452  0C57  3000               	movlw	0
  6453  0C58  3D27               	addwfc	??___ftge+1,w
  6454  0C59  00A1               	movwf	___ftge@ff1+1
  6455  0C5A  3080               	movlw	128
  6456  0C5B  3D28               	addwfc	??___ftge+2,w
  6457  0C5C  00A2               	movwf	___ftge@ff1+2
  6458  0C5D                     l2833:	
  6459  0C5D  1FA5               	btfss	___ftge@ff2+2,7
  6460  0C5E  2C73               	goto	l2837
  6461  0C5F  0923               	comf	___ftge@ff2,w
  6462  0C60  00A6               	movwf	??___ftge
  6463  0C61  0924               	comf	___ftge@ff2+1,w
  6464  0C62  00A7               	movwf	??___ftge+1
  6465  0C63  0925               	comf	___ftge@ff2+2,w
  6466  0C64  00A8               	movwf	??___ftge+2
  6467  0C65  0AA6               	incf	??___ftge,f
  6468  0C66  1903               	skipnz
  6469  0C67  0AA7               	incf	??___ftge+1,f
  6470  0C68  1903               	skipnz
  6471  0C69  0AA8               	incf	??___ftge+2,f
  6472  0C6A  3000               	movlw	0
  6473  0C6B  0726               	addwf	??___ftge,w
  6474  0C6C  00A3               	movwf	___ftge@ff2
  6475  0C6D  3000               	movlw	0
  6476  0C6E  3D27               	addwfc	??___ftge+1,w
  6477  0C6F  00A4               	movwf	___ftge@ff2+1
  6478  0C70  3080               	movlw	128
  6479  0C71  3D28               	addwfc	??___ftge+2,w
  6480  0C72  00A5               	movwf	___ftge@ff2+2
  6481  0C73                     l2837:	
  6482  0C73  3080               	movlw	128
  6483  0C74  06A2               	xorwf	___ftge@ff1+2,f
  6484  0C75  3080               	movlw	128
  6485  0C76  06A5               	xorwf	___ftge@ff2+2,f
  6486  0C77  0825               	movf	___ftge@ff2+2,w
  6487  0C78  0222               	subwf	___ftge@ff1+2,w
  6488  0C79  1D03               	skipz
  6489  0C7A  0008               	return
  6490  0C7B  0824               	movf	___ftge@ff2+1,w
  6491  0C7C  0221               	subwf	___ftge@ff1+1,w
  6492  0C7D  1D03               	skipz
  6493  0C7E  0008               	return
  6494  0C7F  0823               	movf	___ftge@ff2,w
  6495  0C80  0220               	subwf	___ftge@ff1,w
  6496  0C81  0008               	return
  6497  0C82                     __end_of___ftge:	
  6498                           
  6499                           	psect	text39
  6500  0B08                     __ptext39:	
  6501 ;; *************** function ___awtoft *****************
  6502 ;; Defined at:
  6503 ;;		line 32 in file "/Applications/microchip/xc8/v1.36/sources/common/awtoft.c"
  6504 ;; Parameters:    Size  Location     Type
  6505 ;;  c               2   29[BANK0 ] int 
  6506 ;; Auto vars:     Size  Location     Type
  6507 ;;  sign            1   34[BANK0 ] unsigned char 
  6508 ;; Return value:  Size  Location     Type
  6509 ;;                  3   29[BANK0 ] float 
  6510 ;; Registers used:
  6511 ;;		wreg, status,2, status,0, pclath, cstack
  6512 ;; Tracked objects:
  6513 ;;		On entry : 0/0
  6514 ;;		On exit  : 0/0
  6515 ;;		Unchanged: 0/0
  6516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6517 ;;      Params:         0       3       0       0       0       0
  6518 ;;      Locals:         0       1       0       0       0       0
  6519 ;;      Temps:          0       2       0       0       0       0
  6520 ;;      Totals:         0       6       0       0       0       0
  6521 ;;Total ram usage:        6 bytes
  6522 ;; Hardware stack levels used:    1
  6523 ;; Hardware stack levels required when called:    4
  6524 ;; This function calls:
  6525 ;;		___ftpack
  6526 ;; This function is called by:
  6527 ;;		_main
  6528 ;; This function uses a non-reentrant model
  6529 ;;
  6530                           
  6531                           
  6532                           ;psect for function ___awtoft
  6533  0B08                     ___awtoft:	
  6534                           
  6535                           ;incstack = 0
  6536                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  6537  0B08  0020               	movlb	0	; select bank0
  6538  0B09  01C2               	clrf	___awtoft@sign
  6539  0B0A  1FBE               	btfss	___awtoft@c+1,7
  6540  0B0B  2B13               	goto	l2825
  6541  0B0C  09BD               	comf	___awtoft@c,f
  6542  0B0D  09BE               	comf	___awtoft@c+1,f
  6543  0B0E  0ABD               	incf	___awtoft@c,f
  6544  0B0F  1903               	skipnz
  6545  0B10  0ABE               	incf	___awtoft@c+1,f
  6546  0B11  01C2               	clrf	___awtoft@sign
  6547  0B12  0AC2               	incf	___awtoft@sign,f
  6548  0B13                     l2825:	
  6549  0B13  083D               	movf	___awtoft@c,w
  6550  0B14  00A0               	movwf	___ftpack@arg
  6551  0B15  083E               	movf	___awtoft@c+1,w
  6552  0B16  00A1               	movwf	___ftpack@arg+1
  6553  0B17  01A2               	clrf	___ftpack@arg+2
  6554  0B18  308E               	movlw	142
  6555  0B19  00C0               	movwf	??___awtoft
  6556  0B1A  0840               	movf	??___awtoft,w
  6557  0B1B  00A3               	movwf	___ftpack@exp
  6558  0B1C  0842               	movf	___awtoft@sign,w
  6559  0B1D  00C1               	movwf	??___awtoft+1
  6560  0B1E  0841               	movf	??___awtoft+1,w
  6561  0B1F  00A4               	movwf	___ftpack@sign
  6562  0B20  318D  25FF         	fcall	___ftpack
  6563  0B22  0020               	movlb	0	; select bank0
  6564  0B23  0820               	movf	?___ftpack,w
  6565  0B24  00BD               	movwf	?___awtoft
  6566  0B25  0821               	movf	?___ftpack+1,w
  6567  0B26  00BE               	movwf	?___awtoft+1
  6568  0B27  0822               	movf	?___ftpack+2,w
  6569  0B28  00BF               	movwf	?___awtoft+2
  6570  0B29  0008               	return
  6571  0B2A                     __end_of___awtoft:	
  6572                           
  6573                           	psect	text40
  6574  0DFF                     __ptext40:	
  6575 ;; *************** function ___ftpack *****************
  6576 ;; Defined at:
  6577 ;;		line 62 in file "/Applications/microchip/xc8/v1.36/sources/common/float.c"
  6578 ;; Parameters:    Size  Location     Type
  6579 ;;  arg             3    0[BANK0 ] unsigned um
  6580 ;;  exp             1    3[BANK0 ] unsigned char 
  6581 ;;  sign            1    4[BANK0 ] unsigned char 
  6582 ;; Auto vars:     Size  Location     Type
  6583 ;;		None
  6584 ;; Return value:  Size  Location     Type
  6585 ;;                  3    0[BANK0 ] float 
  6586 ;; Registers used:
  6587 ;;		wreg, status,2, status,0
  6588 ;; Tracked objects:
  6589 ;;		On entry : 0/0
  6590 ;;		On exit  : 0/0
  6591 ;;		Unchanged: 0/0
  6592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6593 ;;      Params:         0       5       0       0       0       0
  6594 ;;      Locals:         0       0       0       0       0       0
  6595 ;;      Temps:          0       3       0       0       0       0
  6596 ;;      Totals:         0       8       0       0       0       0
  6597 ;;Total ram usage:        8 bytes
  6598 ;; Hardware stack levels used:    1
  6599 ;; Hardware stack levels required when called:    3
  6600 ;; This function calls:
  6601 ;;		Nothing
  6602 ;; This function is called by:
  6603 ;;		___awtoft
  6604 ;;		___ftadd
  6605 ;;		___ftdiv
  6606 ;;		___ftmul
  6607 ;;		___lbtoft
  6608 ;;		___lwtoft
  6609 ;; This function uses a non-reentrant model
  6610 ;;
  6611                           
  6612                           
  6613                           ;psect for function ___ftpack
  6614  0DFF                     ___ftpack:	
  6615                           
  6616                           ;incstack = 0
  6617                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  6618  0DFF  0020               	movlb	0	; select bank0
  6619  0E00  0823               	movf	___ftpack@exp,w
  6620  0E01  1903               	btfsc	3,2
  6621  0E02  2E08               	goto	l2203
  6622  0E03  0822               	movf	___ftpack@arg+2,w
  6623  0E04  0421               	iorwf	___ftpack@arg+1,w
  6624  0E05  0420               	iorwf	___ftpack@arg,w
  6625  0E06  1D03               	skipz
  6626  0E07  2E19               	goto	l2209
  6627  0E08                     l2203:	
  6628  0E08  3000               	movlw	0
  6629  0E09  00A0               	movwf	?___ftpack
  6630  0E0A  3000               	movlw	0
  6631  0E0B  00A1               	movwf	?___ftpack+1
  6632  0E0C  3000               	movlw	0
  6633  0E0D  00A2               	movwf	?___ftpack+2
  6634  0E0E  0008               	return
  6635  0E0F                     l2207:	
  6636  0E0F  3001               	movlw	1
  6637  0E10  00A5               	movwf	??___ftpack
  6638  0E11  0825               	movf	??___ftpack,w
  6639  0E12  07A3               	addwf	___ftpack@exp,f
  6640  0E13  3001               	movlw	1
  6641  0E14                     u2225:	
  6642  0E14  36A2               	lsrf	___ftpack@arg+2,f
  6643  0E15  0CA1               	rrf	___ftpack@arg+1,f
  6644  0E16  0CA0               	rrf	___ftpack@arg,f
  6645  0E17  0B89               	decfsz	9,f
  6646  0E18  2E14               	goto	u2225
  6647  0E19                     l2209:	
  6648  0E19  30FE               	movlw	254
  6649  0E1A  0522               	andwf	___ftpack@arg+2,w
  6650  0E1B  1903               	btfsc	3,2
  6651  0E1C  2E32               	goto	l752
  6652  0E1D  2E0F               	goto	l2207
  6653  0E1E                     l2211:	
  6654  0E1E  3001               	movlw	1
  6655  0E1F  00A5               	movwf	??___ftpack
  6656  0E20  0825               	movf	??___ftpack,w
  6657  0E21  07A3               	addwf	___ftpack@exp,f
  6658  0E22  3001               	movlw	1
  6659  0E23  07A0               	addwf	___ftpack@arg,f
  6660  0E24  3000               	movlw	0
  6661  0E25  1803               	skipnc
  6662  0E26  3001               	movlw	1
  6663  0E27  07A1               	addwf	___ftpack@arg+1,f
  6664  0E28  3000               	movlw	0
  6665  0E29  1803               	skipnc
  6666  0E2A  3001               	movlw	1
  6667  0E2B  07A2               	addwf	___ftpack@arg+2,f
  6668  0E2C  3001               	movlw	1
  6669  0E2D                     u2245:	
  6670  0E2D  36A2               	lsrf	___ftpack@arg+2,f
  6671  0E2E  0CA1               	rrf	___ftpack@arg+1,f
  6672  0E2F  0CA0               	rrf	___ftpack@arg,f
  6673  0E30  0B89               	decfsz	9,f
  6674  0E31  2E2D               	goto	u2245
  6675  0E32                     l752:	
  6676  0E32  30FF               	movlw	255
  6677  0E33  0522               	andwf	___ftpack@arg+2,w
  6678  0E34  1903               	btfsc	3,2
  6679  0E35  2E3F               	goto	l2219
  6680  0E36  2E1E               	goto	l2211
  6681  0E37                     l2217:	
  6682  0E37  3001               	movlw	1
  6683  0E38  02A3               	subwf	___ftpack@exp,f
  6684  0E39  3001               	movlw	1
  6685  0E3A                     u2265:	
  6686  0E3A  35A0               	lslf	___ftpack@arg,f
  6687  0E3B  0DA1               	rlf	___ftpack@arg+1,f
  6688  0E3C  0DA2               	rlf	___ftpack@arg+2,f
  6689  0E3D  0B89               	decfsz	9,f
  6690  0E3E  2E3A               	goto	u2265
  6691  0E3F                     l2219:	
  6692  0E3F  1BA1               	btfsc	___ftpack@arg+1,7
  6693  0E40  2E45               	goto	l759
  6694  0E41  3002               	movlw	2
  6695  0E42  0223               	subwf	___ftpack@exp,w
  6696  0E43  1803               	skipnc
  6697  0E44  2E37               	goto	l2217
  6698  0E45                     l759:	
  6699  0E45  1823               	btfsc	___ftpack@exp,0
  6700  0E46  2E4D               	goto	l760
  6701  0E47  30FF               	movlw	255
  6702  0E48  05A0               	andwf	___ftpack@arg,f
  6703  0E49  307F               	movlw	127
  6704  0E4A  05A1               	andwf	___ftpack@arg+1,f
  6705  0E4B  30FF               	movlw	255
  6706  0E4C  05A2               	andwf	___ftpack@arg+2,f
  6707  0E4D                     l760:	
  6708  0E4D  1003               	clrc
  6709  0E4E  0CA3               	rrf	___ftpack@exp,f
  6710  0E4F  0823               	movf	___ftpack@exp,w
  6711  0E50  00A5               	movwf	??___ftpack
  6712  0E51  01A6               	clrf	??___ftpack+1
  6713  0E52  01A7               	clrf	??___ftpack+2
  6714  0E53  3010               	movlw	16
  6715  0E54                     u2305:	
  6716  0E54  35A5               	lslf	??___ftpack,f
  6717  0E55  0DA6               	rlf	??___ftpack+1,f
  6718  0E56  0DA7               	rlf	??___ftpack+2,f
  6719  0E57  0B89               	decfsz	9,f
  6720  0E58  2E54               	goto	u2305
  6721  0E59  0825               	movf	??___ftpack,w
  6722  0E5A  04A0               	iorwf	___ftpack@arg,f
  6723  0E5B  0826               	movf	??___ftpack+1,w
  6724  0E5C  04A1               	iorwf	___ftpack@arg+1,f
  6725  0E5D  0827               	movf	??___ftpack+2,w
  6726  0E5E  04A2               	iorwf	___ftpack@arg+2,f
  6727  0E5F  0824               	movf	___ftpack@sign,w
  6728  0E60  1903               	btfsc	3,2
  6729  0E61  0008               	return
  6730  0E62  17A2               	bsf	___ftpack@arg+2,7
  6731  0E63  0008               	return
  6732  0E64                     __end_of___ftpack:	
  6733                           
  6734                           	psect	intentry
  6735  0004                     __pintentry:	
  6736 ;; *************** function _ISR *****************
  6737 ;; Defined at:
  6738 ;;		line 577 in file "powerspy.c"
  6739 ;; Parameters:    Size  Location     Type
  6740 ;;		None
  6741 ;; Auto vars:     Size  Location     Type
  6742 ;;		None
  6743 ;; Return value:  Size  Location     Type
  6744 ;;                  1    wreg      void 
  6745 ;; Registers used:
  6746 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6747 ;; Tracked objects:
  6748 ;;		On entry : 0/0
  6749 ;;		On exit  : 0/0
  6750 ;;		Unchanged: 0/0
  6751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6752 ;;      Params:         0       0       0       0       0       0
  6753 ;;      Locals:         0       0       0       0       0       0
  6754 ;;      Temps:          6       0       0       0       0       0
  6755 ;;      Totals:         6       0       0       0       0       0
  6756 ;;Total ram usage:        6 bytes
  6757 ;; Hardware stack levels used:    1
  6758 ;; Hardware stack levels required when called:    2
  6759 ;; This function calls:
  6760 ;;		___lbmod
  6761 ;;		_setLED
  6762 ;; This function is called by:
  6763 ;;		Interrupt level 1
  6764 ;; This function uses a non-reentrant model
  6765 ;;
  6766                           
  6767  0004                     _ISR:	
  6768                           
  6769                           ;incstack = 0
  6770                           ; Regs used in _ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6771  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  6772  0005  3180               	pagesel	$
  6773  0006  0020               	movlb	0	; select bank0
  6774  0007  087F               	movf	127,w
  6775  0008  00FB               	movwf	??_ISR+5
  6776                           
  6777                           ;powerspy.c: 580: if (RCIE && RCIF) {
  6778  0009  0021               	movlb	1	; select bank1
  6779  000A  1E91               	btfss	17,5	;volatile
  6780  000B  2824               	goto	i1l2971
  6781  000C  0020               	movlb	0	; select bank0
  6782  000D  1E91               	btfss	17,5	;volatile
  6783  000E  2824               	goto	i1l2971
  6784                           
  6785                           ;powerspy.c: 581: receive_buff[buffpos] = RCREG;
  6786  000F  0023               	movlb	3	; select bank3
  6787  0010  0819               	movf	25,w	;volatile
  6788  0011  00F6               	movwf	??_ISR
  6789  0012  0021               	movlb	1	; select bank1
  6790  0013  0853               	movf	_buffpos^(0+128),w
  6791  0014  3E20               	addlw	(low (_receive_buff| (0+256)))& (0+255)
  6792  0015  0086               	movwf	6
  6793  0016  3001               	movlw	1	; select bank2/3
  6794  0017  0087               	movwf	7
  6795  0018  0876               	movf	??_ISR,w
  6796  0019  0081               	movwf	1
  6797                           
  6798                           ;powerspy.c: 582: buffpos++;
  6799  001A  3001               	movlw	1
  6800  001B  00F6               	movwf	??_ISR
  6801  001C  0876               	movf	??_ISR,w
  6802  001D  07D3               	addwf	_buffpos^(0+128),f
  6803                           
  6804                           ;powerspy.c: 583: buffpos %= 32;
  6805  001E  301F               	movlw	31
  6806  001F  00F6               	movwf	??_ISR
  6807  0020  0876               	movf	??_ISR,w
  6808  0021  05D3               	andwf	_buffpos^(0+128),f
  6809                           
  6810                           ;powerspy.c: 584: RCIF = 0;
  6811  0022  0020               	movlb	0	; select bank0
  6812  0023  1291               	bcf	17,5	;volatile
  6813  0024                     i1l2971:	
  6814                           
  6815                           ;powerspy.c: 585: }
  6816                           ;powerspy.c: 588: if (TMR1IE && TMR1IF) {
  6817  0024  0021               	movlb	1	; select bank1
  6818  0025  1C11               	btfss	17,0	;volatile
  6819  0026  282B               	goto	i1l345
  6820  0027  0020               	movlb	0	; select bank0
  6821  0028  1C11               	btfss	17,0	;volatile
  6822  0029  282B               	goto	i1l345
  6823                           
  6824                           ;powerspy.c: 589: TMR1IF = 0;
  6825  002A  1011               	bcf	17,0	;volatile
  6826  002B                     i1l345:	
  6827                           
  6828                           ;powerspy.c: 590: }
  6829                           ;powerspy.c: 593: if (C1IE && C1IF) {
  6830  002B  0021               	movlb	1	; select bank1
  6831  002C  1E92               	btfss	18,5	;volatile
  6832  002D  283F               	goto	i1l346
  6833  002E  0020               	movlb	0	; select bank0
  6834  002F  1E92               	btfss	18,5	;volatile
  6835  0030  283F               	goto	i1l346
  6836                           
  6837                           ;powerspy.c: 594: if (!(flag & 0x01)) {
  6838  0031  187C               	btfsc	_flag,0	;volatile
  6839  0032  283D               	goto	i1l347
  6840                           
  6841                           ;powerspy.c: 595: volt_time = TMR1;
  6842  0033  0817               	movf	23,w	;volatile
  6843  0034  0021               	movlb	1	; select bank1
  6844  0035  00D2               	movwf	(_volt_time+1)^(0+128)
  6845  0036  0020               	movlb	0	; select bank0
  6846  0037  0816               	movf	22,w	;volatile
  6847  0038  0021               	movlb	1	; select bank1
  6848  0039  00D1               	movwf	_volt_time^(0+128)
  6849                           
  6850                           ;powerspy.c: 596: if (flag & 0x02)
  6851  003A  18FC               	btfsc	_flag,1	;volatile
  6852                           
  6853                           ;powerspy.c: 597: flag |= 0x08;
  6854  003B  15FC               	bsf	_flag,3	;volatile
  6855                           
  6856                           ;powerspy.c: 598: flag |= 0x01;
  6857  003C  147C               	bsf	_flag,0	;volatile
  6858  003D                     i1l347:	
  6859                           
  6860                           ;powerspy.c: 599: }
  6861                           ;powerspy.c: 601: C1IF = 0;
  6862  003D  0020               	movlb	0	; select bank0
  6863  003E  1292               	bcf	18,5	;volatile
  6864  003F                     i1l346:	
  6865                           
  6866                           ;powerspy.c: 602: }
  6867                           ;powerspy.c: 605: if (C2IE && C2IF) {
  6868  003F  0021               	movlb	1	; select bank1
  6869  0040  1F12               	btfss	18,6	;volatile
  6870  0041  2853               	goto	i1l349
  6871  0042  0020               	movlb	0	; select bank0
  6872  0043  1F12               	btfss	18,6	;volatile
  6873  0044  2853               	goto	i1l349
  6874                           
  6875                           ;powerspy.c: 606: if (!(flag & 0x02)) {
  6876  0045  18FC               	btfsc	_flag,1	;volatile
  6877  0046  2851               	goto	i1l350
  6878                           
  6879                           ;powerspy.c: 607: curr_time = TMR1;
  6880  0047  0817               	movf	23,w	;volatile
  6881  0048  0021               	movlb	1	; select bank1
  6882  0049  00CE               	movwf	(_curr_time+1)^(0+128)
  6883  004A  0020               	movlb	0	; select bank0
  6884  004B  0816               	movf	22,w	;volatile
  6885  004C  0021               	movlb	1	; select bank1
  6886  004D  00CD               	movwf	_curr_time^(0+128)
  6887                           
  6888                           ;powerspy.c: 608: if (flag & 0x01)
  6889  004E  187C               	btfsc	_flag,0	;volatile
  6890                           
  6891                           ;powerspy.c: 609: flag |= 0x04;
  6892  004F  157C               	bsf	_flag,2	;volatile
  6893                           
  6894                           ;powerspy.c: 610: flag |= 0x02;
  6895  0050  14FC               	bsf	_flag,1	;volatile
  6896  0051                     i1l350:	
  6897                           
  6898                           ;powerspy.c: 611: }
  6899                           ;powerspy.c: 613: C2IF = 0;
  6900  0051  0020               	movlb	0	; select bank0
  6901  0052  1312               	bcf	18,6	;volatile
  6902  0053                     i1l349:	
  6903                           
  6904                           ;powerspy.c: 614: }
  6905                           ;powerspy.c: 616: if (TMR2IE && TMR2IF) {
  6906  0053  0021               	movlb	1	; select bank1
  6907  0054  1C91               	btfss	17,1	;volatile
  6908  0055  285A               	goto	i1l352
  6909  0056  0020               	movlb	0	; select bank0
  6910  0057  1C91               	btfss	17,1	;volatile
  6911  0058  285A               	goto	i1l352
  6912                           
  6913                           ;powerspy.c: 617: TMR2IF = 0;
  6914  0059  1091               	bcf	17,1	;volatile
  6915  005A                     i1l352:	
  6916                           
  6917                           ;powerspy.c: 618: }
  6918                           ;powerspy.c: 620: if (IOCBN5 && IOCBF5) {
  6919  005A  0027               	movlb	7	; select bank7
  6920  005B  1A95               	btfsc	21,5	;volatile
  6921  005C  1E96               	btfss	22,5	;volatile
  6922  005D  2892               	goto	i1l354
  6923                           
  6924                           ;powerspy.c: 621: mode++;
  6925  005E  3001               	movlw	1
  6926  005F  00F6               	movwf	??_ISR
  6927  0060  0876               	movf	??_ISR,w
  6928  0061  07FD               	addwf	_mode,f	;volatile
  6929                           
  6930                           ;powerspy.c: 622: mode %= 6;
  6931  0062  3006               	movlw	6
  6932  0063  00F6               	movwf	??_ISR
  6933  0064  0876               	movf	??_ISR,w
  6934  0065  00F0               	movwf	___lbmod@divisor
  6935  0066  087D               	movf	_mode,w	;volatile
  6936  0067  318A  22A8  3180   	fcall	___lbmod
  6937  006A  00F7               	movwf	??_ISR+1
  6938  006B  0877               	movf	??_ISR+1,w
  6939  006C  00FD               	movwf	_mode	;volatile
  6940                           
  6941                           ;powerspy.c: 624: setLED((mode & 0x01) << 3, (mode & 0x02) << 3, (mode & 0x04) << 2);
  6942  006D  087D               	movf	_mode,w	;volatile
  6943  006E  3902               	andlw	2
  6944  006F  00F6               	movwf	??_ISR
  6945  0070  3002               	movlw	2
  6946  0071                     u384_25:	
  6947  0071  35F6               	lslf	??_ISR,f
  6948  0072  3EFF               	addlw	-1
  6949  0073  1D03               	skipz
  6950  0074  2871               	goto	u384_25
  6951  0075  3576               	lslf	??_ISR,w
  6952  0076  00F7               	movwf	??_ISR+1
  6953  0077  0877               	movf	??_ISR+1,w
  6954  0078  00F1               	movwf	setLED@r
  6955  0079  087D               	movf	_mode,w	;volatile
  6956  007A  3904               	andlw	4
  6957  007B  00F8               	movwf	??_ISR+2
  6958  007C  3001               	movlw	1
  6959  007D                     u385_25:	
  6960  007D  35F8               	lslf	??_ISR+2,f
  6961  007E  3EFF               	addlw	-1
  6962  007F  1D03               	skipz
  6963  0080  287D               	goto	u385_25
  6964  0081  3578               	lslf	??_ISR+2,w
  6965  0082  00F9               	movwf	??_ISR+3
  6966  0083  0879               	movf	??_ISR+3,w
  6967  0084  00F2               	movwf	setLED@b
  6968  0085  087D               	movf	_mode,w	;volatile
  6969  0086  3901               	andlw	1
  6970  0087  00FA               	movwf	??_ISR+4
  6971  0088  3002               	movlw	2
  6972  0089                     u386_25:	
  6973  0089  35FA               	lslf	??_ISR+4,f
  6974  008A  3EFF               	addlw	-1
  6975  008B  1D03               	skipz
  6976  008C  2889               	goto	u386_25
  6977  008D  357A               	lslf	??_ISR+4,w
  6978  008E  318A  2230         	fcall	_setLED
  6979                           
  6980                           ;powerspy.c: 625: IOCBF5 = 0;
  6981  0090  0027               	movlb	7	; select bank7
  6982  0091  1296               	bcf	22,5	;volatile
  6983  0092                     i1l354:	
  6984  0092  087B               	movf	??_ISR+5,w
  6985  0093  0020               	movlb	0	; select bank0
  6986  0094  00FF               	movwf	127
  6987  0095  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  6988  0096  0009               	retfie
  6989  0097                     __end_of_ISR:	
  6990                           
  6991                           	psect	text42
  6992  0A30                     __ptext42:	
  6993 ;; *************** function _setLED *****************
  6994 ;; Defined at:
  6995 ;;		line 569 in file "powerspy.c"
  6996 ;; Parameters:    Size  Location     Type
  6997 ;;  g               1    wreg     unsigned char 
  6998 ;;  r               1    1[COMMON] unsigned char 
  6999 ;;  b               1    2[COMMON] unsigned char 
  7000 ;; Auto vars:     Size  Location     Type
  7001 ;;  g               1    3[COMMON] unsigned char 
  7002 ;; Return value:  Size  Location     Type
  7003 ;;                  1    wreg      void 
  7004 ;; Registers used:
  7005 ;;		wreg, status,2, status,0, pclath, cstack
  7006 ;; Tracked objects:
  7007 ;;		On entry : 0/0
  7008 ;;		On exit  : 0/0
  7009 ;;		Unchanged: 0/0
  7010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7011 ;;      Params:         2       0       0       0       0       0
  7012 ;;      Locals:         1       0       0       0       0       0
  7013 ;;      Temps:          0       0       0       0       0       0
  7014 ;;      Totals:         3       0       0       0       0       0
  7015 ;;Total ram usage:        3 bytes
  7016 ;; Hardware stack levels used:    1
  7017 ;; Hardware stack levels required when called:    1
  7018 ;; This function calls:
  7019 ;;		_sendColour
  7020 ;; This function is called by:
  7021 ;;		_ISR
  7022 ;; This function uses a non-reentrant model
  7023 ;;
  7024                           
  7025                           
  7026                           ;psect for function _setLED
  7027  0A30                     _setLED:	
  7028                           
  7029                           ;incstack = 0
  7030                           ; Regs used in _setLED: [wreg+status,2+status,0+pclath+cstack]
  7031                           ;setLED@g stored from wreg
  7032  0A30  00F3               	movwf	setLED@g
  7033                           
  7034                           ;powerspy.c: 571: sendColour(g);
  7035  0A31  0873               	movf	setLED@g,w
  7036  0A32  3187  2723  318A   	fcall	_sendColour
  7037                           
  7038                           ;powerspy.c: 572: sendColour(r);
  7039  0A35  0871               	movf	setLED@r,w
  7040  0A36  3187  2723  318A   	fcall	_sendColour
  7041                           
  7042                           ;powerspy.c: 573: sendColour(b);
  7043  0A39  0872               	movf	setLED@b,w
  7044  0A3A  3187  2723         	fcall	_sendColour
  7045                           
  7046                           ;powerspy.c: 574: led_rest = TMR1;
  7047  0A3C  0020               	movlb	0	; select bank0
  7048  0A3D  0817               	movf	23,w	;volatile
  7049  0A3E  0021               	movlb	1	; select bank1
  7050  0A3F  00D0               	movwf	(_led_rest+1)^(0+128)
  7051  0A40  0020               	movlb	0	; select bank0
  7052  0A41  0816               	movf	22,w	;volatile
  7053  0A42  0021               	movlb	1	; select bank1
  7054  0A43  00CF               	movwf	_led_rest^(0+128)
  7055  0A44  0008               	return
  7056  0A45                     __end_of_setLED:	
  7057                           
  7058                           	psect	text43
  7059  0723                     __ptext43:	
  7060 ;; *************** function _sendColour *****************
  7061 ;; Defined at:
  7062 ;;		line 510 in file "powerspy.c"
  7063 ;; Parameters:    Size  Location     Type
  7064 ;;  c               1    wreg     unsigned char 
  7065 ;; Auto vars:     Size  Location     Type
  7066 ;;  c               1    0[COMMON] unsigned char 
  7067 ;; Return value:  Size  Location     Type
  7068 ;;                  1    wreg      void 
  7069 ;; Registers used:
  7070 ;;		wreg
  7071 ;; Tracked objects:
  7072 ;;		On entry : 0/0
  7073 ;;		On exit  : 0/0
  7074 ;;		Unchanged: 0/0
  7075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7076 ;;      Params:         0       0       0       0       0       0
  7077 ;;      Locals:         1       0       0       0       0       0
  7078 ;;      Temps:          0       0       0       0       0       0
  7079 ;;      Totals:         1       0       0       0       0       0
  7080 ;;Total ram usage:        1 bytes
  7081 ;; Hardware stack levels used:    1
  7082 ;; This function calls:
  7083 ;;		Nothing
  7084 ;; This function is called by:
  7085 ;;		_setLED
  7086 ;; This function uses a non-reentrant model
  7087 ;;
  7088                           
  7089                           
  7090                           ;psect for function _sendColour
  7091  0723                     _sendColour:	
  7092                           
  7093                           ;incstack = 0
  7094                           ; Regs used in _sendColour: [wreg]
  7095                           ;sendColour@c stored from wreg
  7096  0723  00F0               	movwf	sendColour@c
  7097                           
  7098                           ;powerspy.c: 512: if (c & 0b10000000) { RA6=1; __nop(); __nop(); __nop(); __nop(); RA6=0
      +                          ; __nop(); }
  7099  0724  1FF0               	btfss	sendColour@c,7
  7100  0725  2F30               	goto	i1l307
  7101  0726  0020               	movlb	0	; select bank0
  7102  0727  170C               	bsf	12,6	;volatile
  7103  0728  0000               	nop
  7104  0729  0000               	nop
  7105  072A  0000               	nop
  7106  072B  0000               	nop
  7107  072C  0020               	movlb	0	; select bank0
  7108  072D  130C               	bcf	12,6	;volatile
  7109  072E  0000               	nop
  7110  072F  2F38               	goto	i1l2301
  7111  0730                     i1l307:	
  7112                           
  7113                           ;powerspy.c: 513: else { RA6=1; __nop(); RA6=0; __nop(); __nop(); __nop(); };
  7114  0730  0020               	movlb	0	; select bank0
  7115  0731  170C               	bsf	12,6	;volatile
  7116  0732  0000               	nop
  7117  0733  0020               	movlb	0	; select bank0
  7118  0734  130C               	bcf	12,6	;volatile
  7119  0735  0000               	nop
  7120  0736  0000               	nop
  7121  0737  0000               	nop
  7122  0738                     i1l2301:	
  7123                           
  7124                           ;powerspy.c: 515: if (c & 0b01000000) { RA6=1; __nop(); __nop(); __nop(); __nop(); RA6=0
      +                          ; __nop(); }
  7125  0738  1F70               	btfss	sendColour@c,6
  7126  0739  2F44               	goto	i1l309
  7127  073A  0020               	movlb	0	; select bank0
  7128  073B  170C               	bsf	12,6	;volatile
  7129  073C  0000               	nop
  7130  073D  0000               	nop
  7131  073E  0000               	nop
  7132  073F  0000               	nop
  7133  0740  0020               	movlb	0	; select bank0
  7134  0741  130C               	bcf	12,6	;volatile
  7135  0742  0000               	nop
  7136  0743  2F4C               	goto	i1l2305
  7137  0744                     i1l309:	
  7138                           
  7139                           ;powerspy.c: 516: else { RA6=1; __nop(); RA6=0; __nop(); __nop(); __nop(); };
  7140  0744  0020               	movlb	0	; select bank0
  7141  0745  170C               	bsf	12,6	;volatile
  7142  0746  0000               	nop
  7143  0747  0020               	movlb	0	; select bank0
  7144  0748  130C               	bcf	12,6	;volatile
  7145  0749  0000               	nop
  7146  074A  0000               	nop
  7147  074B  0000               	nop
  7148  074C                     i1l2305:	
  7149                           
  7150                           ;powerspy.c: 518: if (c & 0b00100000) { RA6=1; __nop(); __nop(); __nop(); __nop(); RA6=0
      +                          ; __nop(); }
  7151  074C  1EF0               	btfss	sendColour@c,5
  7152  074D  2F58               	goto	i1l311
  7153  074E  0020               	movlb	0	; select bank0
  7154  074F  170C               	bsf	12,6	;volatile
  7155  0750  0000               	nop
  7156  0751  0000               	nop
  7157  0752  0000               	nop
  7158  0753  0000               	nop
  7159  0754  0020               	movlb	0	; select bank0
  7160  0755  130C               	bcf	12,6	;volatile
  7161  0756  0000               	nop
  7162  0757  2F60               	goto	i1l2309
  7163  0758                     i1l311:	
  7164                           
  7165                           ;powerspy.c: 519: else { RA6=1; __nop(); RA6=0; __nop(); __nop(); __nop(); };
  7166  0758  0020               	movlb	0	; select bank0
  7167  0759  170C               	bsf	12,6	;volatile
  7168  075A  0000               	nop
  7169  075B  0020               	movlb	0	; select bank0
  7170  075C  130C               	bcf	12,6	;volatile
  7171  075D  0000               	nop
  7172  075E  0000               	nop
  7173  075F  0000               	nop
  7174  0760                     i1l2309:	
  7175                           
  7176                           ;powerspy.c: 521: if (c & 0b00010000) { RA6=1; __nop(); __nop(); __nop(); __nop(); RA6=0
      +                          ; __nop(); }
  7177  0760  1E70               	btfss	sendColour@c,4
  7178  0761  2F6C               	goto	i1l313
  7179  0762  0020               	movlb	0	; select bank0
  7180  0763  170C               	bsf	12,6	;volatile
  7181  0764  0000               	nop
  7182  0765  0000               	nop
  7183  0766  0000               	nop
  7184  0767  0000               	nop
  7185  0768  0020               	movlb	0	; select bank0
  7186  0769  130C               	bcf	12,6	;volatile
  7187  076A  0000               	nop
  7188  076B  2F74               	goto	i1l2313
  7189  076C                     i1l313:	
  7190                           
  7191                           ;powerspy.c: 522: else { RA6=1; __nop(); RA6=0; __nop(); __nop(); __nop(); };
  7192  076C  0020               	movlb	0	; select bank0
  7193  076D  170C               	bsf	12,6	;volatile
  7194  076E  0000               	nop
  7195  076F  0020               	movlb	0	; select bank0
  7196  0770  130C               	bcf	12,6	;volatile
  7197  0771  0000               	nop
  7198  0772  0000               	nop
  7199  0773  0000               	nop
  7200  0774                     i1l2313:	
  7201                           
  7202                           ;powerspy.c: 524: if (c & 0b00001000) { RA6=1; __nop(); __nop(); __nop(); __nop(); RA6=0
      +                          ; __nop(); }
  7203  0774  1DF0               	btfss	sendColour@c,3
  7204  0775  2F80               	goto	i1l315
  7205  0776  0020               	movlb	0	; select bank0
  7206  0777  170C               	bsf	12,6	;volatile
  7207  0778  0000               	nop
  7208  0779  0000               	nop
  7209  077A  0000               	nop
  7210  077B  0000               	nop
  7211  077C  0020               	movlb	0	; select bank0
  7212  077D  130C               	bcf	12,6	;volatile
  7213  077E  0000               	nop
  7214  077F  2F88               	goto	i1l2317
  7215  0780                     i1l315:	
  7216                           
  7217                           ;powerspy.c: 525: else { RA6=1; __nop(); RA6=0; __nop(); __nop(); __nop(); };
  7218  0780  0020               	movlb	0	; select bank0
  7219  0781  170C               	bsf	12,6	;volatile
  7220  0782  0000               	nop
  7221  0783  0020               	movlb	0	; select bank0
  7222  0784  130C               	bcf	12,6	;volatile
  7223  0785  0000               	nop
  7224  0786  0000               	nop
  7225  0787  0000               	nop
  7226  0788                     i1l2317:	
  7227                           
  7228                           ;powerspy.c: 527: if (c & 0b00000100) { RA6=1; __nop(); __nop(); __nop(); __nop(); RA6=0
      +                          ; __nop(); }
  7229  0788  1D70               	btfss	sendColour@c,2
  7230  0789  2F94               	goto	i1l317
  7231  078A  0020               	movlb	0	; select bank0
  7232  078B  170C               	bsf	12,6	;volatile
  7233  078C  0000               	nop
  7234  078D  0000               	nop
  7235  078E  0000               	nop
  7236  078F  0000               	nop
  7237  0790  0020               	movlb	0	; select bank0
  7238  0791  130C               	bcf	12,6	;volatile
  7239  0792  0000               	nop
  7240  0793  2F9C               	goto	i1l2321
  7241  0794                     i1l317:	
  7242                           
  7243                           ;powerspy.c: 528: else { RA6=1; __nop(); RA6=0; __nop(); __nop(); __nop(); };
  7244  0794  0020               	movlb	0	; select bank0
  7245  0795  170C               	bsf	12,6	;volatile
  7246  0796  0000               	nop
  7247  0797  0020               	movlb	0	; select bank0
  7248  0798  130C               	bcf	12,6	;volatile
  7249  0799  0000               	nop
  7250  079A  0000               	nop
  7251  079B  0000               	nop
  7252  079C                     i1l2321:	
  7253                           
  7254                           ;powerspy.c: 530: if (c & 0b00000010) { RA6=1; __nop(); __nop(); __nop(); __nop(); RA6=0
      +                          ; __nop(); }
  7255  079C  1CF0               	btfss	sendColour@c,1
  7256  079D  2FA8               	goto	i1l319
  7257  079E  0020               	movlb	0	; select bank0
  7258  079F  170C               	bsf	12,6	;volatile
  7259  07A0  0000               	nop
  7260  07A1  0000               	nop
  7261  07A2  0000               	nop
  7262  07A3  0000               	nop
  7263  07A4  0020               	movlb	0	; select bank0
  7264  07A5  130C               	bcf	12,6	;volatile
  7265  07A6  0000               	nop
  7266  07A7  2FB0               	goto	i1l2325
  7267  07A8                     i1l319:	
  7268                           
  7269                           ;powerspy.c: 531: else { RA6=1; __nop(); RA6=0; __nop(); __nop(); __nop(); };
  7270  07A8  0020               	movlb	0	; select bank0
  7271  07A9  170C               	bsf	12,6	;volatile
  7272  07AA  0000               	nop
  7273  07AB  0020               	movlb	0	; select bank0
  7274  07AC  130C               	bcf	12,6	;volatile
  7275  07AD  0000               	nop
  7276  07AE  0000               	nop
  7277  07AF  0000               	nop
  7278  07B0                     i1l2325:	
  7279                           
  7280                           ;powerspy.c: 533: if (c & 0b00000001) { RA6=1; __nop(); __nop(); __nop(); __nop(); RA6=0
      +                          ; __nop(); }
  7281  07B0  1C70               	btfss	sendColour@c,0
  7282  07B1  2FBC               	goto	i1l321
  7283  07B2  0020               	movlb	0	; select bank0
  7284  07B3  170C               	bsf	12,6	;volatile
  7285  07B4  0000               	nop
  7286  07B5  0000               	nop
  7287  07B6  0000               	nop
  7288  07B7  0000               	nop
  7289  07B8  0020               	movlb	0	; select bank0
  7290  07B9  130C               	bcf	12,6	;volatile
  7291  07BA  0000               	nop
  7292  07BB  0008               	return
  7293  07BC                     i1l321:	
  7294                           
  7295                           ;powerspy.c: 534: else { RA6=1; __nop(); RA6=0; __nop(); __nop(); __nop(); };
  7296  07BC  0020               	movlb	0	; select bank0
  7297  07BD  170C               	bsf	12,6	;volatile
  7298  07BE  0000               	nop
  7299  07BF  0020               	movlb	0	; select bank0
  7300  07C0  130C               	bcf	12,6	;volatile
  7301  07C1  0000               	nop
  7302  07C2  0000               	nop
  7303  07C3  0000               	nop
  7304  07C4  0008               	return
  7305  07C5                     __end_of_sendColour:	
  7306                           
  7307                           	psect	text44
  7308  0AA8                     __ptext44:	
  7309 ;; *************** function ___lbmod *****************
  7310 ;; Defined at:
  7311 ;;		line 4 in file "/Applications/microchip/xc8/v1.36/sources/common/lbmod.c"
  7312 ;; Parameters:    Size  Location     Type
  7313 ;;  dividend        1    wreg     unsigned char 
  7314 ;;  divisor         1    0[COMMON] unsigned char 
  7315 ;; Auto vars:     Size  Location     Type
  7316 ;;  dividend        1    3[COMMON] unsigned char 
  7317 ;;  rem             1    5[COMMON] unsigned char 
  7318 ;;  counter         1    4[COMMON] unsigned char 
  7319 ;; Return value:  Size  Location     Type
  7320 ;;                  1    wreg      unsigned char 
  7321 ;; Registers used:
  7322 ;;		wreg, status,2, status,0
  7323 ;; Tracked objects:
  7324 ;;		On entry : 0/0
  7325 ;;		On exit  : 0/0
  7326 ;;		Unchanged: 0/0
  7327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7328 ;;      Params:         1       0       0       0       0       0
  7329 ;;      Locals:         3       0       0       0       0       0
  7330 ;;      Temps:          2       0       0       0       0       0
  7331 ;;      Totals:         6       0       0       0       0       0
  7332 ;;Total ram usage:        6 bytes
  7333 ;; Hardware stack levels used:    1
  7334 ;; This function calls:
  7335 ;;		Nothing
  7336 ;; This function is called by:
  7337 ;;		_ISR
  7338 ;; This function uses a non-reentrant model
  7339 ;;
  7340                           
  7341                           
  7342                           ;psect for function ___lbmod
  7343  0AA8                     ___lbmod:	
  7344                           
  7345                           ;incstack = 0
  7346                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
  7347                           ;___lbmod@dividend stored from wreg
  7348  0AA8  00F3               	movwf	___lbmod@dividend
  7349  0AA9  3008               	movlw	8
  7350  0AAA  00F1               	movwf	??___lbmod
  7351  0AAB  0871               	movf	??___lbmod,w
  7352  0AAC  00F4               	movwf	___lbmod@counter
  7353  0AAD  01F5               	clrf	___lbmod@rem
  7354  0AAE                     i1l2903:	
  7355  0AAE  0873               	movf	___lbmod@dividend,w
  7356  0AAF  00F1               	movwf	??___lbmod
  7357  0AB0  3007               	movlw	7
  7358  0AB1                     u356_25:	
  7359  0AB1  36F1               	lsrf	??___lbmod,f
  7360  0AB2  0B89               	decfsz	9,f
  7361  0AB3  2AB1               	goto	u356_25
  7362  0AB4  3575               	lslf	___lbmod@rem,w
  7363  0AB5  0471               	iorwf	??___lbmod,w
  7364  0AB6  00F2               	movwf	??___lbmod+1
  7365  0AB7  0872               	movf	??___lbmod+1,w
  7366  0AB8  00F5               	movwf	___lbmod@rem
  7367  0AB9  1003               	clrc
  7368  0ABA  0DF3               	rlf	___lbmod@dividend,f
  7369  0ABB  0870               	movf	___lbmod@divisor,w
  7370  0ABC  0275               	subwf	___lbmod@rem,w
  7371  0ABD  1C03               	skipc
  7372  0ABE  2AC1               	goto	i1l860
  7373  0ABF  0870               	movf	___lbmod@divisor,w
  7374  0AC0  02F5               	subwf	___lbmod@rem,f
  7375  0AC1                     i1l860:	
  7376  0AC1  3001               	movlw	1
  7377  0AC2  02F4               	subwf	___lbmod@counter,f
  7378  0AC3  1D03               	btfss	3,2
  7379  0AC4  2AAE               	goto	i1l2903
  7380  0AC5  0875               	movf	___lbmod@rem,w
  7381  0AC6  0008               	return
  7382  0AC7                     __end_of___lbmod:	
  7383  007E                     btemp	set	126	;btemp
  7384  007E                     int$flags	set	126
  7385  007E                     wtemp	set	126
  7386  007E                     wtemp0	set	126
  7387  0080                     wtemp1	set	128
  7388  0082                     wtemp2	set	130
  7389  0084                     wtemp3	set	132
  7390  0086                     wtemp4	set	134
  7391  0088                     wtemp5	set	136
  7392  007F                     wtemp6	set	127
  7393  007E                     ttemp	set	126
  7394  007E                     ttemp0	set	126
  7395  0081                     ttemp1	set	129
  7396  0084                     ttemp2	set	132
  7397  0087                     ttemp3	set	135
  7398  007F                     ttemp4	set	127
  7399  007E                     ltemp	set	126
  7400  007E                     ltemp0	set	126
  7401  0082                     ltemp1	set	130
  7402  0086                     ltemp2	set	134
  7403  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    10
    Data        6
    BSS         43
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     80      80
    BANK1            80     45      60
    BANK2            80      0      32
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    sendFloat@ptr	PTR unsigned um size(1) Largest target is 3
		 -> sendFloat@f(BANK0[3]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->___lbmod
    _setLED->_sendColour

Critical Paths under _main in BANK0

    _setNr->___fttol
    _sendFloat->__sendchar_
    _sendChar->_sendInt8
    _sendInt8->__sendchar_
    _readVdd->___ftdiv
    _readCurrent->___ftadd
    ___lwtoft->___ftpack
    ___ftmul->___awtoft
    ___ftdiv->___ftmul
    ___ftadd->___ftdiv
    _icos->_isin
    _isin->_isin_
    _isin_->___awdiv
    ___awdiv->___wmul
    _clearDisplay->_so
    ___lbtoft->___ftpack
    ___ftneg->_readVdd
    ___awtoft->_icos

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_readCurrent

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                39    39      0   35214
                                              6 BANK1     39    39      0
                           ___awtoft
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lbtoft
                            ___ltdiv
                             ___tmul
                       _clearDisplay
                             _deltaT
                               _icos
                            _initADC
                             _initBT
                          _initCOMP1
                          _initCOMP2
                            _initFVR
                      _initMessaging
                        _initPWMTMR4
                           _initPins
                           _initTMR1
                               _isin
                        _readCurrent
                            _readVdd
                        _readVoltage
                           _sendChar
                          _sendFloat
                              _setNr
                                 _so
 ---------------------------------------------------------------------------------
 (1) _setNr                                                4     2      2     979
                                             14 BANK0      4     2      2
                            ___fttol (ARG)
                            ___lwdiv
                            ___lwmod
                                 _so
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     265
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     268
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _sendFloat                                            7     4      3     326
                                              1 BANK0      7     4      3
                         __sendchar_
 ---------------------------------------------------------------------------------
 (1) _sendChar                                             1     1      0      66
                                              2 BANK0      1     1      0
                           _sendInt8
 ---------------------------------------------------------------------------------
 (2) _sendInt8                                             1     1      0      44
                                              1 BANK0      1     1      0
                         __sendchar_
 ---------------------------------------------------------------------------------
 (2) __sendchar_                                           1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _readVoltage                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _readVdd                                              3     0      3    7471
                                             67 BANK0      3     0      3
                            ___ftdiv
                            ___ftmul
                           ___lwtoft
                                _adc
 ---------------------------------------------------------------------------------
 (1) _readCurrent                                          6     3      3   10411
                                              0 BANK1      6     3      3
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                           ___lwtoft
                                _adc
 ---------------------------------------------------------------------------------
 (2) _adc                                                  2     2      0     110
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             4     1      3    1913
                                              8 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    2853
                                             35 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                               _icos (ARG)
                               _isin (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2595
                                             51 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                               _icos (ARG)
                               _isin (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             13     7      6    2917
                                             67 BANK0     13     7      6
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) _initTMR1                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initPins                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initPWMTMR4                                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _initMessaging                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initFVR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initCOMP2                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initCOMP1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initBT                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _icos                                                 2     0      2    1603
                                             27 BANK0      2     0      2
                               _isin
 ---------------------------------------------------------------------------------
 (1) _isin                                                 6     4      2    1528
                                             21 BANK0      6     4      2
                              _isin_
 ---------------------------------------------------------------------------------
 (2) _isin_                                                6     4      2    1245
                                             15 BANK0      6     4      2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     410
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     512
                                              6 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _deltaT                                               8     4      4     344
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _clearDisplay                                         2     2      0     135
                                              3 BANK0      2     2      0
                                 _so
 ---------------------------------------------------------------------------------
 (1) _so                                                   3     3      0      90
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) ___tmul                                               9     3      6     198
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (1) ___ltdiv                                             11     5      6     374
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (1) ___lbtoft                                             8     5      3    1807
                                              8 BANK0      8     5      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             14    10      4     517
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (1) ___ftneg                                              3     0      3     310
                                             70 BANK0      3     0      3
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                            _readVdd (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftge                                               9     3      6     560
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             6     3      3    1982
                                             29 BANK0      6     3      3
                           ___ftpack
                               _icos (ARG)
                               _isin (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    1785
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  6     6      0     560
                                              6 COMMON     6     6      0
                            ___lbmod
                             _setLED
 ---------------------------------------------------------------------------------
 (6) _setLED                                               3     1      2     348
                                              1 COMMON     3     1      2
                         _sendColour
 ---------------------------------------------------------------------------------
 (7) _sendColour                                           1     1      0     176
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) ___lbmod                                              6     5      1     212
                                              0 COMMON     6     5      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awtoft
     ___ftpack
     _icos (ARG)
       _isin
         _isin_
           ___awdiv
             ___wmul (ARG)
           ___wmul
     _isin (ARG)
       _isin_
         ___awdiv
           ___wmul (ARG)
         ___wmul
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
       _icos (ARG)
         _isin
           _isin_
             ___awdiv
               ___wmul (ARG)
             ___wmul
       _isin (ARG)
         _isin_
           ___awdiv
             ___wmul (ARG)
           ___wmul
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
         _icos (ARG)
           _isin
             _isin_
               ___awdiv
                 ___wmul (ARG)
               ___wmul
         _isin (ARG)
           _isin_
             ___awdiv
               ___wmul (ARG)
             ___wmul
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
       _icos (ARG)
         _isin
           _isin_
             ___awdiv
               ___wmul (ARG)
             ___wmul
       _isin (ARG)
         _isin_
           ___awdiv
             ___wmul (ARG)
           ___wmul
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
     _icos (ARG)
       _isin
         _isin_
           ___awdiv
             ___wmul (ARG)
           ___wmul
     _isin (ARG)
       _isin_
         ___awdiv
           ___wmul (ARG)
         ___wmul
   ___ftge
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
       _icos (ARG)
         _isin
           _isin_
             ___awdiv
               ___wmul (ARG)
             ___wmul
       _isin (ARG)
         _isin_
           ___awdiv
             ___wmul (ARG)
           ___wmul
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
     _icos (ARG)
       _isin
         _isin_
           ___awdiv
             ___wmul (ARG)
           ___wmul
     _isin (ARG)
       _isin_
         ___awdiv
           ___wmul (ARG)
         ___wmul
   ___ftneg
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
         _icos (ARG)
           _isin
             _isin_
               ___awdiv
                 ___wmul (ARG)
               ___wmul
         _isin (ARG)
           _isin_
             ___awdiv
               ___wmul (ARG)
             ___wmul
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
           _icos (ARG)
             _isin
               _isin_
                 ___awdiv
                   ___wmul (ARG)
                 ___wmul
           _isin (ARG)
             _isin_
               ___awdiv
                 ___wmul (ARG)
               ___wmul
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _icos (ARG)
           _isin
             _isin_
               ___awdiv
                 ___wmul (ARG)
               ___wmul
         _isin (ARG)
           _isin_
             ___awdiv
               ___wmul (ARG)
             ___wmul
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
       _icos (ARG)
         _isin
           _isin_
             ___awdiv
               ___wmul (ARG)
             ___wmul
       _isin (ARG)
         _isin_
           ___awdiv
             ___wmul (ARG)
           ___wmul
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
         _icos (ARG)
           _isin
             _isin_
               ___awdiv
                 ___wmul (ARG)
               ___wmul
         _isin (ARG)
           _isin_
             ___awdiv
               ___wmul (ARG)
             ___wmul
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
       _icos (ARG)
         _isin
           _isin_
             ___awdiv
               ___wmul (ARG)
             ___wmul
       _isin (ARG)
         _isin_
           ___awdiv
             ___wmul (ARG)
           ___wmul
     _readVdd (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
           _icos (ARG)
             _isin
               _isin_
                 ___awdiv
                   ___wmul (ARG)
                 ___wmul
           _isin (ARG)
             _isin_
               ___awdiv
                 ___wmul (ARG)
               ___wmul
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
             _icos (ARG)
               _isin
                 _isin_
                   ___awdiv
                     ___wmul (ARG)
                   ___wmul
             _isin (ARG)
               _isin_
                 ___awdiv
                   ___wmul (ARG)
                 ___wmul
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _icos (ARG)
             _isin
               _isin_
                 ___awdiv
                   ___wmul (ARG)
                 ___wmul
           _isin (ARG)
             _isin_
               ___awdiv
                 ___wmul (ARG)
               ___wmul
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _icos (ARG)
           _isin
             _isin_
               ___awdiv
                 ___wmul (ARG)
               ___wmul
         _isin (ARG)
           _isin_
             ___awdiv
               ___wmul (ARG)
             ___wmul
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
           _icos (ARG)
             _isin
               _isin_
                 ___awdiv
                   ___wmul (ARG)
                 ___wmul
           _isin (ARG)
             _isin_
               ___awdiv
                 ___wmul (ARG)
               ___wmul
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _icos (ARG)
           _isin
             _isin_
               ___awdiv
                 ___wmul (ARG)
               ___wmul
         _isin (ARG)
           _isin_
             ___awdiv
               ___wmul (ARG)
             ___wmul
       ___lwtoft
         ___ftpack
       _adc
   ___fttol
   ___lbtoft
     ___ftpack
   ___ltdiv
   ___tmul
   _clearDisplay
     _so
   _deltaT
   _icos
     _isin
       _isin_
         ___awdiv
           ___wmul (ARG)
         ___wmul
   _initADC
   _initBT
   _initCOMP1
   _initCOMP2
   _initFVR
   _initMessaging
   _initPWMTMR4
   _initPins
   _initTMR1
   _isin
     _isin_
       ___awdiv
         ___wmul (ARG)
       ___wmul
   _readCurrent
     ___ftadd
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
           _icos (ARG)
             _isin
               _isin_
                 ___awdiv
                   ___wmul (ARG)
                 ___wmul
           _isin (ARG)
             _isin_
               ___awdiv
                 ___wmul (ARG)
               ___wmul
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
             _icos (ARG)
               _isin
                 _isin_
                   ___awdiv
                     ___wmul (ARG)
                   ___wmul
             _isin (ARG)
               _isin_
                 ___awdiv
                   ___wmul (ARG)
                 ___wmul
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _icos (ARG)
             _isin
               _isin_
                 ___awdiv
                   ___wmul (ARG)
                 ___wmul
           _isin (ARG)
             _isin_
               ___awdiv
                 ___wmul (ARG)
               ___wmul
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _icos (ARG)
           _isin
             _isin_
               ___awdiv
                 ___wmul (ARG)
               ___wmul
         _isin (ARG)
           _isin_
             ___awdiv
               ___wmul (ARG)
             ___wmul
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
           _icos (ARG)
             _isin
               _isin_
                 ___awdiv
                   ___wmul (ARG)
                 ___wmul
           _isin (ARG)
             _isin_
               ___awdiv
                 ___wmul (ARG)
               ___wmul
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _icos (ARG)
           _isin
             _isin_
               ___awdiv
                 ___wmul (ARG)
               ___wmul
         _isin (ARG)
           _isin_
             ___awdiv
               ___wmul (ARG)
             ___wmul
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
         _icos (ARG)
           _isin
             _isin_
               ___awdiv
                 ___wmul (ARG)
               ___wmul
         _isin (ARG)
           _isin_
             ___awdiv
               ___wmul (ARG)
             ___wmul
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
           _icos (ARG)
             _isin
               _isin_
                 ___awdiv
                   ___wmul (ARG)
                 ___wmul
           _isin (ARG)
             _isin_
               ___awdiv
                 ___wmul (ARG)
               ___wmul
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _icos (ARG)
           _isin
             _isin_
               ___awdiv
                 ___wmul (ARG)
               ___wmul
         _isin (ARG)
           _isin_
             ___awdiv
               ___wmul (ARG)
             ___wmul
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
       _icos (ARG)
         _isin
           _isin_
             ___awdiv
               ___wmul (ARG)
             ___wmul
       _isin (ARG)
         _isin_
           ___awdiv
             ___wmul (ARG)
           ___wmul
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
         _icos (ARG)
           _isin
             _isin_
               ___awdiv
                 ___wmul (ARG)
               ___wmul
         _isin (ARG)
           _isin_
             ___awdiv
               ___wmul (ARG)
             ___wmul
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
       _icos (ARG)
         _isin
           _isin_
             ___awdiv
               ___wmul (ARG)
             ___wmul
       _isin (ARG)
         _isin_
           ___awdiv
             ___wmul (ARG)
           ___wmul
     ___lwtoft
       ___ftpack
     _adc
   _readVdd
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
         _icos (ARG)
           _isin
             _isin_
               ___awdiv
                 ___wmul (ARG)
               ___wmul
         _isin (ARG)
           _isin_
             ___awdiv
               ___wmul (ARG)
             ___wmul
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
           _icos (ARG)
             _isin
               _isin_
                 ___awdiv
                   ___wmul (ARG)
                 ___wmul
           _isin (ARG)
             _isin_
               ___awdiv
                 ___wmul (ARG)
               ___wmul
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _icos (ARG)
           _isin
             _isin_
               ___awdiv
                 ___wmul (ARG)
               ___wmul
         _isin (ARG)
           _isin_
             ___awdiv
               ___wmul (ARG)
             ___wmul
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
       _icos (ARG)
         _isin
           _isin_
             ___awdiv
               ___wmul (ARG)
             ___wmul
       _isin (ARG)
         _isin_
           ___awdiv
             ___wmul (ARG)
           ___wmul
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
         _icos (ARG)
           _isin
             _isin_
               ___awdiv
                 ___wmul (ARG)
               ___wmul
         _isin (ARG)
           _isin_
             ___awdiv
               ___wmul (ARG)
             ___wmul
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
       _icos (ARG)
         _isin
           _isin_
             ___awdiv
               ___wmul (ARG)
             ___wmul
       _isin (ARG)
         _isin_
           ___awdiv
             ___wmul (ARG)
           ___wmul
     ___lwtoft
       ___ftpack
     _adc
   _readVoltage
   _sendChar
     _sendInt8
       __sendchar_
   _sendFloat
     __sendchar_
   _setNr
     ___fttol (ARG)
     ___lwdiv (ARG)
     ___lwmod (ARG)
     _so (ARG)
   _so

 _ISR (ROOT)
   ___lbmod
   _setLED
     _sendColour

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      BA       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     50      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     2D      3C       8       75.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      20      10       40.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      BA      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Thu May 12 20:01:03 2016

            __CFG_CP$OFF 0000             ___awdiv@sign 002C                       _so 0BA9  
    ___wmul@multiplicand 0022             ___ftadd@exp1 006F             ___ftadd@exp2 006E  
           ___ftadd@sign 006D                      l255 09CE                      l272 0A6E  
                    ?_so 0070                      l276 0DFC                      l372 0393  
                    l359 00F2                      l465 09BC                      l591 0A95  
                    l760 0E4D                      l752 0E32                      l498 0F74  
                    l843 0ED1                      l759 0E45                      l783 056F  
                    _GIE 005F                      _RA3 0063                      _RA4 0064  
                    _RA6 0066                      _RA7 0067                      _PR2 001B  
           __CFG_CPD$OFF 0000                      _ISR 0004          _readCurrent$799 00A3  
                    _adc 0DA8                      so@c 0022             __CFG_BORV$LO 0000  
                    wreg 0009                     ??_so 0020             __CFG_LVP$OFF 0000  
                   ?_ISR 0070             ___ftdiv@cntr 005D             ___ftdiv@sign 0062  
                   ?_adc 0070                     _C1IE 0495                     _C1IF 0095  
                   _C2IE 0496                     _C2IF 0096                     l2211 0E1E  
                   l2203 0E08                     l2207 0E0F                     l2217 0E37  
                   l2209 0E19                     l2137 0A8F                     l2401 04F8  
                   l2233 0DB1                     l3105 030B                     l3041 0118  
                   l2219 0E3F                     l2251 0BBE                     l2163 0D6C  
                   l2411 050E                     l2235 0DC2                     l3131 0363  
                   l2181 0D92                     l2173 0D74                     l2157 0D61  
                   l2333 0F86                     l2405 04FF                     l2237 0DD3  
                   l3117 032D                     l2175 0D80                     l2351 0FF3  
                   l2431 0545                     l2423 0528                     l2239 0DE4  
                   l3143 03B7                     _C1ON 088F                     l2185 0D9B  
                   l2345 0FD1                     l2441 0561                     l2433 054A  
                   l2513 05DD                     l2601 0BA4                     l3153 0402  
                   l3081 02C7                     l3137 0377                     l3065 029B  
                   l2339 0FAF                     l2451 0593                     l2443 056B  
                   l2435 054E                     l2531 062E                     l3163 044D  
                   _C2ON 089F                     l2189 0DA3                     l2461 05AE  
                   l2429 053B                     l3173 0498                     l3093 02E9  
                   l3069 02A5                     l2447 0581                     l2471 0691  
                   l2543 064A                     l2535 0636                     l2519 05F3  
                   l2721 0C12                     l3177 04C1                     l2491 06E8  
                   l2547 0652                     l2723 0C44                     l2805 0B31  
                   l2477 06A7                     l2735 0B68                     l2575 0C02  
                   l2567 0BE4                     l2591 0B83                     l2825 0B13  
                   l2833 0C5D                     l2809 0B39                     l2569 0BF0  
                   l2593 0B8F                     l2499 0701                     l2579 0C0B  
                   l2837 0C73                     l2925 0CD1                     l2685 0A68  
                   l2597 0B9B                     l2863 0E7D                     l2935 0CF7  
                   l2927 0CDE                     l2881 0EAD                     l2891 0ED4  
                   l2883 0EBB                     l2939 0D01                     l2895 0EE2  
                   l2889 0EC8                     _ADFM 04F7                     _ADON 04E8  
                   _CHS0 04EA                     _CHS1 04EB                     _CHS2 04EC  
                   _CHS3 04ED                     _CHS4 04EE                     _BRGH 0CF2  
                   _CREN 0CEC                     u2125 0D77                     u2320 0DAF  
                   u2305 0E54                     u2225 0E14                     u2145 0D81  
                   u2065 0A96                     u3105 0653                     u2410 0DE2  
                   u2155 0D8B                     u2075 0A9B                     u3115 0659  
                   u3035 05FF                     u2245 0E2D                     u2165 0D93  
                   u3045 060F                     u2405 0DD7                     u2350 0DC0  
                   u3215 0B86                     u2440 0DF3                     u2265 0E3A  
                   u3065 0637                     u2345 0DB5                     u3145 0BE7  
                   u3315 0B58                     u3075 063D                     u4107 0DF8  
                   u2435 0DE8                     u3235 0B95                     u2380 0DD1  
                   u2605 0F7E                     u3325 0C9A                     u3165 0BF1  
                   u3245 0B9C                     u2454 0DF5                     u2615 0F90  
                   u2375 0DC6                     u3335 0CAE                     u3175 0BFB  
                   u3505 0EAE                     u2625 0FB9                     u3185 0C03  
                   u2490 0BBC                     u2635 0FDB                     u2484 0BB5  
                   u3605 0CD4                     u2485 0BB4                     u3535 0EC9  
                   u3625 0CDF                     u3385 0B3A                     u2825 053C  
                   u4097 04C9                     u3475 0E84                     u3635 0CEE  
                   u3395 0B40                     _PEIE 005E                     u3645 0CF8  
                   u2855 054F                     u2795 0529                     u2955 06B9  
                   _RCIE 048D                     _RCIF 008D                     u2885 0562  
                   u2965 06C9                     u2975 06E9                     u2985 06F8  
                   _SCS0 04C8                     u2995 0702                     _SCS1 04C9  
                   _TMR1 0016                     _SPEN 0CEF                     _TRMT 0CF1  
                   _TXEN 0CF5                     _SYNC 0CF4                     _WPUB 020D  
            main@current 00C2             __CFG_WRT$OFF 0000                     _flag 007C  
           ?_initPWMTMR4 0070                     _icos 0A0E                     _main 00BF  
           ___ftpack@arg 0020                     _mode 007D                     _isin 0F74  
           ___ftpack@exp 0023                     fsr0h 0005                     fsr1h 0007  
            main@so_buff 00CB                     fsr0l 0004                     indf0 0000  
                   indf1 0001                     fsr1l 0006                     btemp 007E  
                   ltemp 007E                     start 0097                     ttemp 007E  
                   wtemp 007E            __CFG_IESO$OFF 0000              main@voltage 00B9  
          __CFG_MCLRE$ON 0000             ___ftmul@cntr 0051             ___ftmul@sign 0052  
   __end_of_clearDisplay 0A0E                    ??_ISR 0076             ___fttol@exp1 002D  
                  ??_adc 0020             ___fttol@lval 0029            __CFG_PLLEN$ON 0000  
           ?_readCurrent 00A0             main@apparent 00C8                    _DC1B0 149C  
                  _DC1B1 149D                    _ADCS0 04F4                    _ADCS1 04F5  
                  _ADCS2 04F6                    ?_icos 003B                    ?_main 0070  
                  ?_isin 0035          __end_of___awdiv 0DA8                    _ADRES 009B  
        __end_of___ftadd 05C6                    _BRG16 0CFB            __CFG_WDTE$OFF 0000  
        __end_of___lbmod 0AC7          __end_of___ftdiv 0723          __end_of___ftneg 09C8  
        __end_of___ftmul 067A          ___awdiv@divisor 0026          __end_of___fttol 0EEB  
        __end_of___ltdiv 0D08                    _IRCF0 04CB                    _IRCF1 04CC  
                  _IRCF2 04CD                    _IRCF3 04CE                    _IOCIE 005B  
        __end_of___lwdiv 0C10                    i1l311 0758                    i1l321 07BC  
                  i1l313 076C                    i1l315 0780                    i1l307 0730  
                  i1l317 0794                    i1l309 0744                    i1l350 0051  
                  i1l319 07A8                    i1l352 005A                    i1l345 002B  
        __end_of___lwmod 0BA9                    i1l354 0092                    i1l346 003F  
                  i1l347 003D                    i1l349 0053                    i1l860 0AC1  
                  _FVREN 08BF          ___awdiv@counter 002B                    _RCREG 0199  
                  _SPBRG 019B                    _PORTA 000C                    _PORTB 000D  
                  _TRISA 008C                    _TRISB 008D                    _TXREG 019A  
           ?_readVoltage 0070             main@reactive 00BF           __CFG_FCMEN$OFF 0000  
        __end_of_initADC 09DB            ___awtoft@sign 0042          __end_of_initFVR 09D1  
        __end_of_readVdd 07FE                    _isin_ 0D08                    _setNr 0C10  
          ___ftpack@sign 0024                    icos@z 003B           __CFG_BOREN$OFF 0000  
                  isin@z 0035                    ltemp0 007E                    ltemp1 0082  
                  ltemp2 0086                    ltemp3 0080                    ttemp0 007E  
                  ttemp1 0081                    ttemp2 0084                    ttemp3 0087  
                  ttemp4 007F                    status 0003                    wtemp0 007E  
                  wtemp1 0080                    wtemp2 0082                    wtemp3 0084  
                  wtemp4 0086                    wtemp5 0088                    wtemp6 007F  
        __initialization 0099   __size_of_initMessaging 0006             __end_of_icos 0A1D  
           __end_of_main 04D0             __end_of_isin 1000                   ??_icos 003D  
                 ??_main 00A6            ___fttol@sign1 0028                   ??_isin 0037  
                 _C1NCH0 0890                   _C1NCH1 0891                   _C2NCH0 08A0  
                 _C1PCH0 0894                   _C2NCH1 08A1                   _C1PCH1 0895  
                 _C2PCH0 08A4                   _C2PCH1 08A5                   _C1INTP 0897  
                 _C2INTP 08A7                   _ADFVR0 08B8                   _ADFVR1 08B9  
                 ?_isin_ 002F                   _ADNREF 04F2                   _CCPR1L 0291  
                 ?_setNr 002E         ___awdiv@dividend 0028         __end_of___awtoft 0B2A  
                 _ANSELA 018C                   _ANSELB 018D         __end_of___ftpack 0E64  
       __end_of___lbtoft 0A8C                   _IOCBF5 1CB5                   _IOCBN5 1CAD  
                 i1l2301 0738                   i1l2321 079C                   i1l2313 0774  
                 i1l2305 074C                   i1l2325 07B0                   i1l2317 0788  
                 i1l2309 0760                   i1l2903 0AAE                   i1l2971 0024  
                 _FVRRDY 08BE         __end_of___lwtoft 0A5A                   u356_25 0AB1  
                 u384_25 0071                   u385_25 007D                   u386_25 0089  
                 _TMR1IE 0488                   _TMR1IF 0088                   _TMR2IE 0489  
                 _TMR2IF 0089                   _TMR4IF 0099                   _TMR1ON 00C0  
                 _TMR2ON 00E2                   _TMR4ON 20BA                   _SPLLEN 04CF  
         __CFG_PWRTE$OFF 0000                   _nWPUEN 04AF                   ___ftge 0C46  
                 adc@src 0021                   ___tmul 0B2A                   ___wmul 0A8C  
              ??___awdiv 002A                ??___ftadd 0069                ??___lbmod 0071  
              ??___ftdiv 0059                ??___ftneg 0069                   _deltaT 0B51  
              ??___ftmul 0049         __end_of_initTMR1 09E6                ??___fttol 0024  
              ??___ltdiv 0026                ??___lwdiv 0024                ??___lwmod 0024  
       __end_of_initPins 0AE7                   _initBT 0A5A                   _setLED 0A30  
       ___awdiv@quotient 002D         __end_of_sendChar 09AB         __end_of_sendInt8 0A30  
              ??_initADC 0020    ___ftmul@f3_as_product 004E                ??_initFVR 0020  
                 so@data 0021                ??_readVdd 0066                   isin_@z 002F  
          _initMessaging 099F          ___lbmod@divisor 0070  __end_of__initialization 00BB  
        ___lbmod@counter 0074               ___ftadd@f1 0063               ___ftadd@f2 0066  
             ___ftge@ff1 0020               ___ftge@ff2 0023    __size_of_clearDisplay 000E  
             ___ftdiv@f1 0056               ___ftdiv@f2 0053               ___ftdiv@f3 005E  
             ___ftneg@f1 0066     __size_of_initPWMTMR4 0021               ___awtoft@c 003D  
             ___lbtoft@c 002F               ___ftmul@f1 0043               ___ftmul@f2 0046  
             ___fttol@f1 0020           __pcstackCOMMON 0070             __pidataBANK1 09B1  
          __end_of_isin_ 0D56            __end_of_setNr 0C46               __end_of_so 0BDB  
             ___lwtoft@c 0028     __size_of_readCurrent 0089           ?_initMessaging 0070  
   __size_of_readVoltage 0002             _clearDisplay 0A00                  ??_isin_ 0031  
                ??_setNr 0030       __size_of_initCOMP1 000D       __size_of_initCOMP2 000D  
             __pbssBANK1 00CD               __pbssBANK2 0120              sendColour@c 0070  
             __pmaintext 00BF               __sendchar_ 09B7                  ?___ftge 0020  
                ?___tmul 0020                  ?___wmul 0020       __size_of_sendFloat 0041  
           __sendchar_@c 0020                  _C1TSEL0 14F0                  _C1TSEL1 14F1  
                ?_deltaT 0020               __pintentry 0004                  _CCP1CON 0293  
                _CDAFVR0 08BA                  _CDAFVR1 08BB                  ?_initBT 0070  
                _CCP1SEL 08E8                  ?_setLED 0071                  _ADPREF0 04F0  
                _ADPREF1 04F1                ?___awtoft 003D                ?___ftpack 0020  
              ?___lbtoft 0028                  _T1CKPS0 00C4                  _T1CKPS1 00C5  
                _T2CKPS0 00E0                  _T2CKPS1 00E1                ?___lwtoft 0028  
                _T4CKPS0 20B8                  _T4CKPS1 20B9                  _TMR1CS0 00C6  
                _TMR1CS1 00C7                  _RXDTSEL 08EF                  _TXCKSEL 08F0  
              ?_initTMR1 0070                ?_initPins 0070                ?_sendChar 0070  
              ?_sendInt8 0070          __size_of___ftge 003C                  ___awdiv 0D56  
                ___ftadd 04D0                  ___lbmod 0AA8                  ___ftdiv 067A  
                ___ftneg 09BF          __size_of___tmul 0027          __size_of___wmul 001C  
                ___ftmul 05C6                  ___fttol 0E64                  ___ltdiv 0CC3  
                ___lwdiv 0BDB                  ___lwmod 0B7C          __size_of_deltaT 002B  
      __end_of_initCOMP1 09F3        __end_of_initCOMP2 0A00          __CFG_STVREN$OFF 0000  
        __size_of_initBT 0017               ??___awtoft 0040               ??___ftpack 0025  
        __size_of_setLED 0015               ??___lbtoft 002B                  __ptext1 0C10  
                __ptext2 0B7C                  __ptext3 0BDB                  __ptext4 0C82  
                __ptext5 09A5                  __ptext6 0A1D                  __ptext7 09B7  
                __ptext8 0002                  __ptext9 07C5               ??___lwtoft 002B  
                _buffpos 00D3          ??_initMessaging 0020                  _initADC 09D1  
           __size_of_ISR 0093                  _initFVR 09C8             __size_of_adc 0057  
                _readVdd 07C5                  _reading 00D4                  _readpos 00D5  
                clrloop0 09AC        __end_of_sendFloat 0CC3               _sendColour 0723  
   end_of_initialization 00BB               ??_initTMR1 0020                  setLED@b 0072  
                setLED@g 0073                  setLED@r 0071               ??_initPins 0020  
                setNr@it 0031                  setNr@nr 002E               ??_sendChar 0022  
             ??_sendInt8 0021         ___ltdiv@dividend 0023              ?__sendchar_ 0070  
           __pstringtext 07FE         __CFG_FOSC$INTOSC 0000         ___lbmod@dividend 0073  
              _TRISBbits 008D         ___ltdiv@quotient 0027              ___lbmod@rem 0075  
            ___ftdiv@exp 0061              ___ftmul@exp 004D           __end_of___ftge 0C82  
          deltaT@tm_high 0022           __end_of___tmul 0B51           __end_of___wmul 0AA8  
         __end_of_deltaT 0B7C           __end_of_initBT 0A71           __end_of_setLED 0A45  
    start_initialization 0099              __end_of_ISR 0097              __end_of_adc 0DFF  
    __size_of__sendchar_ 0008              ?_sendColour 0070            ??_initPWMTMR4 0020  
               ??___ftge 0026                 ??___tmul 0026                 ??___wmul 0024  
               ??_deltaT 0024              __pdataBANK1 00D6                 ??_initBT 0020  
          ??_readCurrent 0070                 ??_setLED 0073           ___tmul@product 0026  
      __size_of___awtoft 0022        __size_of___ftpack 0065        __size_of___lbtoft 001B  
          ??_readVoltage 0020              __pbssCOMMON 007C                ___latbits 0001  
      __size_of___lwtoft 0015            __pcstackBANK0 0020            __pcstackBANK1 00A0  
      __size_of_initTMR1 000B        __size_of_initPins 0020             sendFloat@ptr 0027  
       ___lwdiv@dividend 0022               sendFloat@f 0021        __size_of_sendChar 0006  
    __end_of_initPWMTMR4 0B08        __size_of_sendInt8 0013                 ?___awdiv 0026  
               ?___ftadd 0063                 ?___lbmod 0070                 ?___ftdiv 0053  
               ?___ftneg 0066                 ?___ftmul 0043                 ?___fttol 0020  
               ?___ltdiv 0020                 ?___lwdiv 0020                 ?___lwmod 0020  
    __size_of_sendColour 00A2           _i_u_diode_offs 00D6                 ?_initADC 0070  
               ?_initFVR 0070                _initCOMP1 09E6                _initCOMP2 09F3  
               ?_readVdd 0063      __end_of_readCurrent 0F74                _isin_$801 0033  
       ___lwdiv@quotient 0025                _curr_time 00CD           __size_of_isin_ 004E  
         __size_of_setNr 0036      __end_of_readVoltage 0004              __size_of_so 0032  
               _T2OUTPS0 00E3                 _T2OUTPS1 00E4                 _T2OUTPS2 00E5  
               _T2OUTPS3 00E6           ___wmul@product 0024             _receive_buff 0120  
              _sendFloat 0C82                clear_ram0 09AB          ___ltdiv@divisor 0020  
           ??__sendchar_ 0020          ___ltdiv@counter 002A                 _GO_nDONE 04E9  
      ___wmul@multiplier 0020               ?_initCOMP1 0070               ?_initCOMP2 0070  
              main@angle 00C5    __end_of_initMessaging 09A5      ___tmul@multiplicand 0023  
              _volt_time 00D1             deltaT@tm_low 0020       __end_of__sendchar_ 09BF  
            _initPWMTMR4 0AE7               ?_sendFloat 0021         __size_of___awdiv 0052  
       __size_of___ftadd 00F6         __size_of___lbmod 001F         __size_of___ftdiv 00A9  
       __size_of___ftneg 0009         __size_of___ftmul 00B4         __size_of___fttol 0087  
       __size_of___ltdiv 0045         __size_of___lwdiv 0035              _readCurrent 0EEB  
       __size_of___lwmod 002D                 ___awtoft 0B08                 ___ftpack 0DFF  
               ___lbtoft 0A71                 ___lwtoft 0A45         __size_of_initADC 000A  
              sendChar@i 0022         __size_of_initFVR 0009              _readVoltage 0002  
       __size_of_readVdd 0039                sendInt8@i 0021                 _main$254 00AD  
               _main$255 00B0                 _main$256 00B3                 _main$257 00B6  
               _main$800 00AA          ___lwdiv@divisor 0020          ___lwdiv@counter 0027  
          ?_clearDisplay 0070                 __ptext10 0EEB                 __ptext11 0DA8  
               __ptext20 09C8                 __ptext12 0A45                 __ptext21 09F3  
               __ptext13 05C6                 __ptext30 0B51                 __ptext22 09E6  
               __ptext14 067A                 __ptext31 0A00                 __ptext23 0A5A  
               __ptext15 04D0                 __ptext40 0DFF                 __ptext32 0BA9  
               __ptext24 09D1                 __ptext16 09DB                 __ptext33 0B2A  
               __ptext25 0A0E                 __ptext17 0AC7                 __ptext42 0A30  
               __ptext34 0CC3                 __ptext26 0F74                 __ptext18 0AE7  
               __ptext43 0723                 __ptext35 0A71                 __ptext27 0D08  
               __ptext19 099F                 __ptext44 0AA8                 __ptext36 0E64  
               __ptext28 0A8C                 __ptext37 09BF                 __ptext29 0D56  
               __ptext38 0C46                 __ptext39 0B08             ??_sendColour 0070  
               _i_u_offs 00D9                 _led_rest 00CF                 _initTMR1 09DB  
               _initPins 0AC7            __size_of_icos 000F            __size_of_main 0411  
          __size_of_isin 008C                 _sendChar 09A5                 _sendInt8 0A1D  
               int$flags 007E                 main@real 00BC       __end_of_sendColour 07C5  
            ??_initCOMP1 0020              ??_initCOMP2 0020           ??_clearDisplay 0023  
         _get_shift_byte 07FE                 intlevel1 0000         ___lwmod@dividend 0022  
            ??_sendFloat 0024        __CFG_CLKOUTEN$OFF 0000         clearDisplay@leng 0024  
      ___tmul@multiplier 0020          ___lwmod@divisor 0020          ___lwmod@counter 0025  
 __end_of_get_shift_byte 0808  
