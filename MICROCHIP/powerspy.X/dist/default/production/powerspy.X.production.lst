

Microchip Technology PIC LITE Macro Assembler V1.37 build -260352376 
                                                                                               Sat May 21 11:26:54 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	eeprom_data,global,class=EEDATA,space=3,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	stringtext,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	intentry,global,class=CODE,delta=2
    47                           	dabs	1,0x7E,2
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  0011                     	;# 
    63  0012                     	;# 
    64  0013                     	;# 
    65  0014                     	;# 
    66  0015                     	;# 
    67  0016                     	;# 
    68  0016                     	;# 
    69  0017                     	;# 
    70  0018                     	;# 
    71  0019                     	;# 
    72  001A                     	;# 
    73  001B                     	;# 
    74  001C                     	;# 
    75  001E                     	;# 
    76  001F                     	;# 
    77  008C                     	;# 
    78  008D                     	;# 
    79  0091                     	;# 
    80  0092                     	;# 
    81  0093                     	;# 
    82  0094                     	;# 
    83  0095                     	;# 
    84  0096                     	;# 
    85  0097                     	;# 
    86  0098                     	;# 
    87  0099                     	;# 
    88  009A                     	;# 
    89  009B                     	;# 
    90  009B                     	;# 
    91  009C                     	;# 
    92  009D                     	;# 
    93  009E                     	;# 
    94  010C                     	;# 
    95  010D                     	;# 
    96  0111                     	;# 
    97  0112                     	;# 
    98  0113                     	;# 
    99  0114                     	;# 
   100  0115                     	;# 
   101  0116                     	;# 
   102  0117                     	;# 
   103  0118                     	;# 
   104  0119                     	;# 
   105  011A                     	;# 
   106  011B                     	;# 
   107  011D                     	;# 
   108  011E                     	;# 
   109  018C                     	;# 
   110  018D                     	;# 
   111  0191                     	;# 
   112  0191                     	;# 
   113  0192                     	;# 
   114  0193                     	;# 
   115  0193                     	;# 
   116  0193                     	;# 
   117  0194                     	;# 
   118  0195                     	;# 
   119  0196                     	;# 
   120  0199                     	;# 
   121  019A                     	;# 
   122  019B                     	;# 
   123  019B                     	;# 
   124  019B                     	;# 
   125  019B                     	;# 
   126  019C                     	;# 
   127  019C                     	;# 
   128  019D                     	;# 
   129  019E                     	;# 
   130  019F                     	;# 
   131  020C                     	;# 
   132  020D                     	;# 
   133  0211                     	;# 
   134  0211                     	;# 
   135  0212                     	;# 
   136  0212                     	;# 
   137  0213                     	;# 
   138  0213                     	;# 
   139  0214                     	;# 
   140  0214                     	;# 
   141  0215                     	;# 
   142  0215                     	;# 
   143  0215                     	;# 
   144  0216                     	;# 
   145  0216                     	;# 
   146  0217                     	;# 
   147  0217                     	;# 
   148  0219                     	;# 
   149  021A                     	;# 
   150  021B                     	;# 
   151  021C                     	;# 
   152  021D                     	;# 
   153  021E                     	;# 
   154  021F                     	;# 
   155  0291                     	;# 
   156  0291                     	;# 
   157  0292                     	;# 
   158  0293                     	;# 
   159  0294                     	;# 
   160  0295                     	;# 
   161  0295                     	;# 
   162  0296                     	;# 
   163  0298                     	;# 
   164  0298                     	;# 
   165  0299                     	;# 
   166  029A                     	;# 
   167  029B                     	;# 
   168  029C                     	;# 
   169  029C                     	;# 
   170  029D                     	;# 
   171  029E                     	;# 
   172  029E                     	;# 
   173  0311                     	;# 
   174  0311                     	;# 
   175  0312                     	;# 
   176  0313                     	;# 
   177  0318                     	;# 
   178  0318                     	;# 
   179  0319                     	;# 
   180  031A                     	;# 
   181  0394                     	;# 
   182  0395                     	;# 
   183  0396                     	;# 
   184  039A                     	;# 
   185  039C                     	;# 
   186  039D                     	;# 
   187  039E                     	;# 
   188  039F                     	;# 
   189  0415                     	;# 
   190  0416                     	;# 
   191  0417                     	;# 
   192  041C                     	;# 
   193  041D                     	;# 
   194  041E                     	;# 
   195  0FE4                     	;# 
   196  0FE5                     	;# 
   197  0FE6                     	;# 
   198  0FE7                     	;# 
   199  0FE8                     	;# 
   200  0FE9                     	;# 
   201  0FEA                     	;# 
   202  0FEB                     	;# 
   203  0FED                     	;# 
   204  0FEE                     	;# 
   205  0FEF                     	;# 
   206                           
   207                           	psect	eeprom_data
   208  0000  0000 0002 0003 0005 0006 0008 0009 000B 	db	0,2,3,5,6,8,9,11	;# 
   209  0008  000D 000E 0010 0011 0013 0014 0016 0017 	db	13,14,16,17,19,20,22,23	;# 
   210  0010  0019 001A 001C 001D 001F 0020 0022 0023 	db	25,26,28,29,31,32,34,35	;# 
   211  0018  0025 0026 0028 0029 002B 002C 002D 002F 	db	37,38,40,41,43,44,45,47	;# 
   212  0020  0030 0032 0033 0034 0036 0037 0038 003A 	db	48,50,51,52,54,55,56,58	;# 
   213  0028  003B 003C 003D 003F 0040 0041 0042 0043 	db	59,60,61,63,64,65,66,67	;# 
   214  0030  0044 0046 0047 0048 0049 004A 004B 004C 	db	68,70,71,72,73,74,75,76	;# 
   215  0038  004D 004E 004F 0050 0051 0052 0053 0054 	db	77,78,79,80,81,82,83,84	;# 
   216  0040  0054 0055 0056 0057 0058 0058 0059 005A 	db	84,85,86,87,88,88,89,90	;# 
   217  0048  005A 005B 005C 005C 005D 005E 005E 005F 	db	90,91,92,92,93,94,94,95	;# 
   218  0050  005F 0060 0060 0060 0061 0061 0062 0062 	db	95,96,96,96,97,97,98,98	;# 
   219  0058  0062 0063 0063 0063 0063 0063 0064 0064 	db	98,99,99,99,99,99,100,100	;# 
   220  0060  0064 0064 0064 0064 0064 0000 0000 0000 	db	100,100,100,100,100,0,0,0	;# 
   221  0000                     	;# 
   222  0001                     	;# 
   223  0002                     	;# 
   224  0003                     	;# 
   225  0004                     	;# 
   226  0005                     	;# 
   227  0006                     	;# 
   228  0007                     	;# 
   229  0008                     	;# 
   230  0009                     	;# 
   231  000A                     	;# 
   232  000B                     	;# 
   233  000C                     	;# 
   234  000D                     	;# 
   235  0011                     	;# 
   236  0012                     	;# 
   237  0013                     	;# 
   238  0014                     	;# 
   239  0015                     	;# 
   240  0016                     	;# 
   241  0016                     	;# 
   242  0017                     	;# 
   243  0018                     	;# 
   244  0019                     	;# 
   245  001A                     	;# 
   246  001B                     	;# 
   247  001C                     	;# 
   248  001E                     	;# 
   249  001F                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  0091                     	;# 
   253  0092                     	;# 
   254  0093                     	;# 
   255  0094                     	;# 
   256  0095                     	;# 
   257  0096                     	;# 
   258  0097                     	;# 
   259  0098                     	;# 
   260  0099                     	;# 
   261  009A                     	;# 
   262  009B                     	;# 
   263  009B                     	;# 
   264  009C                     	;# 
   265  009D                     	;# 
   266  009E                     	;# 
   267  010C                     	;# 
   268  010D                     	;# 
   269  0111                     	;# 
   270  0112                     	;# 
   271  0113                     	;# 
   272  0114                     	;# 
   273  0115                     	;# 
   274  0116                     	;# 
   275  0117                     	;# 
   276  0118                     	;# 
   277  0119                     	;# 
   278  011A                     	;# 
   279  011B                     	;# 
   280  011D                     	;# 
   281  011E                     	;# 
   282  018C                     	;# 
   283  018D                     	;# 
   284  0191                     	;# 
   285  0191                     	;# 
   286  0192                     	;# 
   287  0193                     	;# 
   288  0193                     	;# 
   289  0193                     	;# 
   290  0194                     	;# 
   291  0195                     	;# 
   292  0196                     	;# 
   293  0199                     	;# 
   294  019A                     	;# 
   295  019B                     	;# 
   296  019B                     	;# 
   297  019B                     	;# 
   298  019B                     	;# 
   299  019C                     	;# 
   300  019C                     	;# 
   301  019D                     	;# 
   302  019E                     	;# 
   303  019F                     	;# 
   304  020C                     	;# 
   305  020D                     	;# 
   306  0211                     	;# 
   307  0211                     	;# 
   308  0212                     	;# 
   309  0212                     	;# 
   310  0213                     	;# 
   311  0213                     	;# 
   312  0214                     	;# 
   313  0214                     	;# 
   314  0215                     	;# 
   315  0215                     	;# 
   316  0215                     	;# 
   317  0216                     	;# 
   318  0216                     	;# 
   319  0217                     	;# 
   320  0217                     	;# 
   321  0219                     	;# 
   322  021A                     	;# 
   323  021B                     	;# 
   324  021C                     	;# 
   325  021D                     	;# 
   326  021E                     	;# 
   327  021F                     	;# 
   328  0291                     	;# 
   329  0291                     	;# 
   330  0292                     	;# 
   331  0293                     	;# 
   332  0294                     	;# 
   333  0295                     	;# 
   334  0295                     	;# 
   335  0296                     	;# 
   336  0298                     	;# 
   337  0298                     	;# 
   338  0299                     	;# 
   339  029A                     	;# 
   340  029B                     	;# 
   341  029C                     	;# 
   342  029C                     	;# 
   343  029D                     	;# 
   344  029E                     	;# 
   345  029E                     	;# 
   346  0311                     	;# 
   347  0311                     	;# 
   348  0312                     	;# 
   349  0313                     	;# 
   350  0318                     	;# 
   351  0318                     	;# 
   352  0319                     	;# 
   353  031A                     	;# 
   354  0394                     	;# 
   355  0395                     	;# 
   356  0396                     	;# 
   357  039A                     	;# 
   358  039C                     	;# 
   359  039D                     	;# 
   360  039E                     	;# 
   361  039F                     	;# 
   362  0415                     	;# 
   363  0416                     	;# 
   364  0417                     	;# 
   365  041C                     	;# 
   366  041D                     	;# 
   367  041E                     	;# 
   368  0FE4                     	;# 
   369  0FE5                     	;# 
   370  0FE6                     	;# 
   371  0FE7                     	;# 
   372  0FE8                     	;# 
   373  0FE9                     	;# 
   374  0FEA                     	;# 
   375  0FEB                     	;# 
   376  0FED                     	;# 
   377  0FEE                     	;# 
   378  0FEF                     	;# 
   379                           
   380                           	psect	idataBANK0
   381  0FD3                     __pidataBANK0:	
   382                           
   383                           ;initializer for _i_u_offs
   384  0FD3  342C               	retlw	44
   385  0FD4  34CF               	retlw	207
   386  0FD5  34FF               	retlw	255
   387                           
   388                           ;initializer for _i_u_diode_offs
   389  0FD6  3407               	retlw	7
   390                           
   391                           	psect	stringtext
   392  07F1                     __pstringtext:	
   393  07F1                     _get_shift_byte:	
   394  07F1  3481               	retlw	129
   395  07F2  34BD               	retlw	189
   396  07F3  3413               	retlw	19
   397  07F4  3419               	retlw	25
   398  07F5  342D               	retlw	45
   399  07F6  3449               	retlw	73
   400  07F7  3441               	retlw	65
   401  07F8  349D               	retlw	157
   402  07F9  3401               	retlw	1
   403  07FA  3409               	retlw	9
   404  07FB                     __end_of_get_shift_byte:	
   405  0016                     _TMR1	set	22
   406  000C                     _PORTA	set	12
   407  000D                     _PORTB	set	13
   408  001B                     _PR2	set	27
   409  0095                     _C1IF	set	149
   410  0096                     _C2IF	set	150
   411  005F                     _GIE	set	95
   412  005B                     _IOCIE	set	91
   413  005E                     _PEIE	set	94
   414  0063                     _RA3	set	99
   415  0064                     _RA4	set	100
   416  0066                     _RA6	set	102
   417  0067                     _RA7	set	103
   418  006B                     _RB3	set	107
   419  008D                     _RCIF	set	141
   420  00C4                     _T1CKPS0	set	196
   421  00C5                     _T1CKPS1	set	197
   422  00E0                     _T2CKPS0	set	224
   423  00E1                     _T2CKPS1	set	225
   424  00E3                     _T2OUTPS0	set	227
   425  00E4                     _T2OUTPS1	set	228
   426  00E5                     _T2OUTPS2	set	229
   427  00E6                     _T2OUTPS3	set	230
   428  00C6                     _TMR1CS0	set	198
   429  00C7                     _TMR1CS1	set	199
   430  0088                     _TMR1IF	set	136
   431  00C0                     _TMR1ON	set	192
   432  0089                     _TMR2IF	set	137
   433  00E2                     _TMR2ON	set	226
   434  0099                     _TMR4IF	set	153
   435  009B                     _ADRES	set	155
   436  008C                     _TRISA	set	140
   437  008D                     _TRISB	set	141
   438  008D                     _TRISBbits	set	141
   439  04F4                     _ADCS0	set	1268
   440  04F5                     _ADCS1	set	1269
   441  04F6                     _ADCS2	set	1270
   442  04F7                     _ADFM	set	1271
   443  04F2                     _ADNREF	set	1266
   444  04E8                     _ADON	set	1256
   445  04F0                     _ADPREF0	set	1264
   446  04F1                     _ADPREF1	set	1265
   447  0495                     _C1IE	set	1173
   448  0496                     _C2IE	set	1174
   449  04EA                     _CHS0	set	1258
   450  04EB                     _CHS1	set	1259
   451  04EC                     _CHS2	set	1260
   452  04ED                     _CHS3	set	1261
   453  04EE                     _CHS4	set	1262
   454  04E9                     _GO_nDONE	set	1257
   455  04CB                     _IRCF0	set	1227
   456  04CC                     _IRCF1	set	1228
   457  04CD                     _IRCF2	set	1229
   458  04CE                     _IRCF3	set	1230
   459  048D                     _RCIE	set	1165
   460  04C8                     _SCS0	set	1224
   461  04C9                     _SCS1	set	1225
   462  04CF                     _SPLLEN	set	1231
   463  0488                     _TMR1IE	set	1160
   464  0489                     _TMR2IE	set	1161
   465  04AF                     _nWPUEN	set	1199
   466  08B8                     _ADFVR0	set	2232
   467  08B9                     _ADFVR1	set	2233
   468  0897                     _C1INTP	set	2199
   469  0890                     _C1NCH0	set	2192
   470  0891                     _C1NCH1	set	2193
   471  088F                     _C1ON	set	2191
   472  0894                     _C1PCH0	set	2196
   473  0895                     _C1PCH1	set	2197
   474  08A7                     _C2INTP	set	2215
   475  08A0                     _C2NCH0	set	2208
   476  08A1                     _C2NCH1	set	2209
   477  089F                     _C2ON	set	2207
   478  08A4                     _C2PCH0	set	2212
   479  08A5                     _C2PCH1	set	2213
   480  08E8                     _CCP1SEL	set	2280
   481  08BA                     _CDAFVR0	set	2234
   482  08BB                     _CDAFVR1	set	2235
   483  08BF                     _FVREN	set	2239
   484  08BE                     _FVRRDY	set	2238
   485  08EF                     _RXDTSEL	set	2287
   486  08F0                     _TXCKSEL	set	2288
   487  0191                     _EEADR	set	401
   488  018C                     _ANSELA	set	396
   489  018D                     _ANSELB	set	397
   490  0195                     _EECON1	set	405
   491  0193                     _EEDATA	set	403
   492  0199                     _RCREG	set	409
   493  019B                     _SPBRG	set	411
   494  019A                     _TXREG	set	410
   495  0CFB                     _BRG16	set	3323
   496  0CF2                     _BRGH	set	3314
   497  0CEC                     _CREN	set	3308
   498  0CA8                     _RD	set	3240
   499  0CEF                     _SPEN	set	3311
   500  0CF4                     _SYNC	set	3316
   501  0CF1                     _TRMT	set	3313
   502  0CF5                     _TXEN	set	3317
   503  0CA9                     _WR	set	3241
   504  020D                     _WPUB	set	525
   505  0293                     _CCP1CON	set	659
   506  0291                     _CCPR1L	set	657
   507  14F0                     _C1TSEL0	set	5360
   508  14F1                     _C1TSEL1	set	5361
   509  149C                     _DC1B0	set	5276
   510  149D                     _DC1B1	set	5277
   511  1CAD                     _IOCBN5	set	7341
   512  20B8                     _T4CKPS0	set	8376
   513  20B9                     _T4CKPS1	set	8377
   514  20BA                     _TMR4ON	set	8378
   515                           
   516                           ; #config settings
   517  0000                     
   518                           	psect	cinit
   519  0057                     start_initialization:	
   520  0057                     __initialization:	
   521                           
   522                           ; Clear objects allocated to COMMON
   523  0057  01FA               	clrf	__pbssCOMMON& (0+127)
   524  0058  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   525                           
   526                           ; Clear objects allocated to BANK0
   527  0059  3059               	movlw	low __pbssBANK0
   528  005A  0084               	movwf	4
   529  005B  3000               	movlw	high __pbssBANK0
   530  005C  0085               	movwf	5
   531  005D  3011               	movlw	17
   532  005E  318F  27DD  3180   	fcall	clear_ram0
   533                           
   534                           ; Initialize objects allocated to BANK0
   535  0061  318F  27D3  3180   	fcall	__pidataBANK0	;fetch initializer
   536  0064  00EA               	movwf	__pdataBANK0& (0+127)
   537  0065  318F  27D4  3180   	fcall	__pidataBANK0+1	;fetch initializer
   538  0068  00EB               	movwf	(__pdataBANK0+1)& (0+127)
   539  0069  318F  27D5  3180   	fcall	__pidataBANK0+2	;fetch initializer
   540  006C  00EC               	movwf	(__pdataBANK0+2)& (0+127)
   541  006D  318F  27D6         	fcall	__pidataBANK0+3	;fetch initializer
   542  006F  00ED               	movwf	(__pdataBANK0+3)& (0+127)
   543  0070                     end_of_initialization:	
   544                           ;End of C runtime variable initialization code
   545                           
   546  0070                     __end_of__initialization:	
   547  0070  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   548  0071  0020               	movlb	0
   549  0072  3180  2874         	ljmp	_main	;jump to C main() function
   550                           
   551                           	psect	bssCOMMON
   552  007A                     __pbssCOMMON:	
   553  007A                     _buffpos:	
   554  007A                     	ds	1
   555  007B                     _readpos:	
   556  007B                     	ds	1
   557                           
   558                           	psect	bssBANK0
   559  0059                     __pbssBANK0:	
   560  0059                     _receive_buff:	
   561  0059                     	ds	8
   562  0061                     _curr_time:	
   563  0061                     	ds	2
   564  0063                     _led_rest:	
   565  0063                     	ds	2
   566  0065                     _volt_time:	
   567  0065                     	ds	2
   568  0067                     _flag:	
   569  0067                     	ds	1
   570  0068                     _mode:	
   571  0068                     	ds	1
   572  0069                     _reading:	
   573  0069                     	ds	1
   574                           
   575                           	psect	dataBANK0
   576  006A                     __pdataBANK0:	
   577  006A                     _i_u_offs:	
   578  006A                     	ds	3
   579  006D                     _i_u_diode_offs:	
   580  006D                     	ds	1
   581                           
   582                           	psect	clrtext
   583  0FDD                     clear_ram0:	
   584                           ;	Called with FSR0 containing the base address, and
   585                           ;	WREG with the size to clear
   586                           
   587  0FDD  0064               	clrwdt	;clear the watchdog before getting into this loop
   588  0FDE                     clrloop0:	
   589  0FDE  0180               	clrf	0	;clear RAM location pointed to by FSR
   590  0FDF  3101               	addfsr 0,1
   591  0FE0  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   592  0FE1  2FDE               	goto	clrloop0	;have we reached the end yet?
   593  0FE2  3400               	retlw	0	;all done for this memory range, return
   594                           
   595                           	psect	cstackCOMMON
   596  0070                     __pcstackCOMMON:	
   597  0070                     ?_eeprom_read:	
   598  0070                     ?_initMessaging:	
   599                           ; 1 bytes @ 0x0
   600                           
   601  0070                     ?_sendUInt8:	
   602                           ; 1 bytes @ 0x0
   603                           
   604  0070                     ?_initPins:	
   605                           ; 1 bytes @ 0x0
   606                           
   607  0070                     ?_initADC:	
   608                           ; 1 bytes @ 0x0
   609                           
   610  0070                     ?_initTMR1:	
   611                           ; 1 bytes @ 0x0
   612                           
   613  0070                     ?_initFVR:	
   614                           ; 1 bytes @ 0x0
   615                           
   616  0070                     ?_initPWMTMR4:	
   617                           ; 1 bytes @ 0x0
   618                           
   619  0070                     ?_initCOMP1:	
   620                           ; 1 bytes @ 0x0
   621                           
   622  0070                     ?_initCOMP2:	
   623                           ; 1 bytes @ 0x0
   624                           
   625  0070                     ?_initBT:	
   626                           ; 1 bytes @ 0x0
   627                           
   628  0070                     ?_adc:	
   629                           ; 1 bytes @ 0x0
   630                           
   631  0070                     ?_readVoltage:	
   632                           ; 1 bytes @ 0x0
   633                           
   634  0070                     ?_so:	
   635                           ; 1 bytes @ 0x0
   636                           
   637  0070                     ?_sendColour:	
   638                           ; 1 bytes @ 0x0
   639                           
   640  0070                     ?_sin_:	
   641                           ; 1 bytes @ 0x0
   642                           
   643  0070                     ?_ISR:	
   644                           ; 1 bytes @ 0x0
   645                           
   646  0070                     ??_ISR:	
   647                           ; 1 bytes @ 0x0
   648                           
   649  0070                     ?_main:	
   650                           ; 1 bytes @ 0x0
   651                           
   652  0070                     ?__sendchar_:	
   653                           ; 1 bytes @ 0x0
   654                           
   655                           
   656                           ; 1 bytes @ 0x0
   657  0070                     	ds	2
   658  0072                     ??_eeprom_read:	
   659  0072                     ??_initMessaging:	
   660                           ; 1 bytes @ 0x2
   661                           
   662  0072                     ??_initPins:	
   663                           ; 1 bytes @ 0x2
   664                           
   665  0072                     ??_initADC:	
   666                           ; 1 bytes @ 0x2
   667                           
   668  0072                     ??_initTMR1:	
   669                           ; 1 bytes @ 0x2
   670                           
   671  0072                     ??_initFVR:	
   672                           ; 1 bytes @ 0x2
   673                           
   674  0072                     ??_initPWMTMR4:	
   675                           ; 1 bytes @ 0x2
   676                           
   677  0072                     ??_initCOMP1:	
   678                           ; 1 bytes @ 0x2
   679                           
   680  0072                     ??_initCOMP2:	
   681                           ; 1 bytes @ 0x2
   682                           
   683  0072                     ??_initBT:	
   684                           ; 1 bytes @ 0x2
   685                           
   686  0072                     ??_adc:	
   687                           ; 1 bytes @ 0x2
   688                           
   689  0072                     ??_readVoltage:	
   690                           ; 1 bytes @ 0x2
   691                           
   692  0072                     ??_so:	
   693                           ; 1 bytes @ 0x2
   694                           
   695  0072                     ??_sendColour:	
   696                           ; 1 bytes @ 0x2
   697                           
   698  0072                     ??__sendchar_:	
   699                           ; 1 bytes @ 0x2
   700                           
   701  0072                     ?_deltaT:	
   702                           ; 1 bytes @ 0x2
   703                           
   704  0072                     ?___awdiv:	
   705                           ; 2 bytes @ 0x2
   706                           
   707  0072                     ?___awmod:	
   708                           ; 2 bytes @ 0x2
   709                           
   710  0072                     sendColour@c:	
   711                           ; 2 bytes @ 0x2
   712                           
   713  0072                     deltaT@tm_low:	
   714                           ; 1 bytes @ 0x2
   715                           
   716  0072                     ___awdiv@divisor:	
   717                           ; 2 bytes @ 0x2
   718                           
   719  0072                     ___awmod@divisor:	
   720                           ; 2 bytes @ 0x2
   721                           
   722                           
   723                           ; 2 bytes @ 0x2
   724  0072                     	ds	1
   725  0073                     ?_setLED:	
   726  0073                     adc@src:	
   727                           ; 1 bytes @ 0x3
   728                           
   729  0073                     so@data:	
   730                           ; 1 bytes @ 0x3
   731                           
   732  0073                     setLED@r:	
   733                           ; 1 bytes @ 0x3
   734                           
   735                           
   736                           ; 1 bytes @ 0x3
   737  0073                     	ds	1
   738  0074                     ?_readVdd:	
   739  0074                     so@c:	
   740                           ; 2 bytes @ 0x4
   741                           
   742  0074                     setLED@b:	
   743                           ; 1 bytes @ 0x4
   744                           
   745  0074                     __sendchar_@c:	
   746                           ; 1 bytes @ 0x4
   747                           
   748  0074                     deltaT@tm_high:	
   749                           ; 1 bytes @ 0x4
   750                           
   751  0074                     ___awdiv@dividend:	
   752                           ; 2 bytes @ 0x4
   753                           
   754  0074                     ___awmod@dividend:	
   755                           ; 2 bytes @ 0x4
   756                           
   757                           
   758                           ; 2 bytes @ 0x4
   759  0074                     	ds	1
   760  0075                     ??_sendUInt8:	
   761  0075                     ?_sendInt24:	
   762                           ; 1 bytes @ 0x5
   763                           
   764  0075                     ??_setLED:	
   765                           ; 1 bytes @ 0x5
   766                           
   767  0075                     ?_setUnit:	
   768                           ; 1 bytes @ 0x5
   769                           
   770  0075                     setLED@g:	
   771                           ; 1 bytes @ 0x5
   772                           
   773  0075                     sendUInt8@i:	
   774                           ; 1 bytes @ 0x5
   775                           
   776  0075                     eeprom_read@addr:	
   777                           ; 1 bytes @ 0x5
   778                           
   779  0075                     setUnit@u:	
   780                           ; 1 bytes @ 0x5
   781                           
   782  0075                     sendInt24@i:	
   783                           ; 3 bytes @ 0x5
   784                           
   785                           
   786                           ; 3 bytes @ 0x5
   787  0075                     	ds	1
   788  0076                     ??_readVdd:	
   789  0076                     ??_deltaT:	
   790                           ; 1 bytes @ 0x6
   791                           
   792  0076                     ??_sin_:	
   793                           ; 1 bytes @ 0x6
   794                           
   795  0076                     ??___awdiv:	
   796                           ; 1 bytes @ 0x6
   797                           
   798  0076                     ??___awmod:	
   799                           ; 1 bytes @ 0x6
   800                           
   801  0076                     sin_@z:	
   802                           ; 1 bytes @ 0x6
   803                           
   804                           
   805                           ; 1 bytes @ 0x6
   806  0076                     	ds	1
   807  0077                     ?_sin:	
   808  0077                     ___awmod@counter:	
   809                           ; 1 bytes @ 0x7
   810                           
   811  0077                     sin@z:	
   812                           ; 1 bytes @ 0x7
   813                           
   814                           
   815                           ; 2 bytes @ 0x7
   816  0077                     	ds	1
   817  0078                     ??___wmul:	
   818  0078                     ___awmod@sign:	
   819                           ; 1 bytes @ 0x8
   820                           
   821  0078                     ___wmul@product:	
   822                           ; 1 bytes @ 0x8
   823                           
   824                           
   825                           ; 2 bytes @ 0x8
   826  0078                     	ds	1
   827  0079                     ??_sin:	
   828                           
   829                           ; 1 bytes @ 0x9
   830  0079                     	ds	1
   831  007A                     ??_cos:	
   832  007A                     ??___tmul:	
   833                           ; 1 bytes @ 0xA
   834                           
   835                           
   836                           	psect	cstackBANK0
   837  0020                     __pcstackBANK0:	
   838                           ; 1 bytes @ 0xA
   839                           
   840  0020                     ??_sendInt24:	
   841  0020                     ??_setUnit:	
   842                           ; 1 bytes @ 0x0
   843                           
   844  0020                     ?___wmul:	
   845                           ; 1 bytes @ 0x0
   846                           
   847  0020                     ___awdiv@counter:	
   848                           ; 2 bytes @ 0x0
   849                           
   850  0020                     sin@buff:	
   851                           ; 1 bytes @ 0x0
   852                           
   853  0020                     ___wmul@multiplier:	
   854                           ; 2 bytes @ 0x0
   855                           
   856                           
   857                           ; 2 bytes @ 0x0
   858  0020                     	ds	1
   859  0021                     ___awdiv@sign:	
   860                           
   861                           ; 1 bytes @ 0x1
   862  0021                     	ds	1
   863  0022                     ?_cos:	
   864  0022                     cos@us:	
   865                           ; 1 bytes @ 0x2
   866                           
   867  0022                     ___wmul@multiplicand:	
   868                           ; 2 bytes @ 0x2
   869                           
   870  0022                     ___awdiv@quotient:	
   871                           ; 2 bytes @ 0x2
   872                           
   873                           
   874                           ; 2 bytes @ 0x2
   875  0022                     	ds	2
   876  0024                     ?___tmul:	
   877  0024                     ___tmul@multiplier:	
   878                           ; 3 bytes @ 0x4
   879                           
   880                           
   881                           ; 3 bytes @ 0x4
   882  0024                     	ds	3
   883  0027                     ___tmul@multiplicand:	
   884                           
   885                           ; 3 bytes @ 0x7
   886  0027                     	ds	3
   887  002A                     ___tmul@product:	
   888                           
   889                           ; 3 bytes @ 0xA
   890  002A                     	ds	3
   891  002D                     ?___atdiv:	
   892  002D                     ___atdiv@divisor:	
   893                           ; 3 bytes @ 0xD
   894                           
   895                           
   896                           ; 3 bytes @ 0xD
   897  002D                     	ds	3
   898  0030                     ___atdiv@dividend:	
   899                           
   900                           ; 3 bytes @ 0x10
   901  0030                     	ds	3
   902  0033                     ??___atdiv:	
   903                           
   904                           ; 1 bytes @ 0x13
   905  0033                     	ds	1
   906  0034                     ___atdiv@counter:	
   907                           
   908                           ; 1 bytes @ 0x14
   909  0034                     	ds	1
   910  0035                     ___atdiv@sign:	
   911                           
   912                           ; 1 bytes @ 0x15
   913  0035                     	ds	1
   914  0036                     ___atdiv@quotient:	
   915                           
   916                           ; 3 bytes @ 0x16
   917  0036                     	ds	3
   918  0039                     ?_setVal:	
   919  0039                     ?_readCurrent:	
   920                           ; 1 bytes @ 0x19
   921                           
   922  0039                     setVal@v:	
   923                           ; 3 bytes @ 0x19
   924                           
   925                           
   926                           ; 2 bytes @ 0x19
   927  0039                     	ds	2
   928  003B                     ??_setVal:	
   929                           
   930                           ; 1 bytes @ 0x1B
   931  003B                     	ds	1
   932  003C                     ??_readCurrent:	
   933  003C                     setVal@i:	
   934                           ; 1 bytes @ 0x1C
   935                           
   936                           
   937                           ; 1 bytes @ 0x1C
   938  003C                     	ds	6
   939  0042                     ??_main:	
   940                           
   941                           ; 1 bytes @ 0x22
   942  0042                     	ds	3
   943  0045                     main@voltage:	
   944                           
   945                           ; 3 bytes @ 0x25
   946  0045                     	ds	3
   947  0048                     main@real:	
   948                           
   949                           ; 3 bytes @ 0x28
   950  0048                     	ds	3
   951  004B                     main@reactive:	
   952                           
   953                           ; 3 bytes @ 0x2B
   954  004B                     	ds	3
   955  004E                     main@angle:	
   956                           
   957                           ; 3 bytes @ 0x2E
   958  004E                     	ds	3
   959  0051                     main@bmode:	
   960                           
   961                           ; 2 bytes @ 0x31
   962  0051                     	ds	2
   963  0053                     main@current:	
   964                           
   965                           ; 3 bytes @ 0x33
   966  0053                     	ds	3
   967  0056                     main@apparent:	
   968                           
   969                           ; 3 bytes @ 0x36
   970  0056                     	ds	3
   971                           
   972                           	psect	maintext
   973  0074                     __pmaintext:	
   974 ;;
   975 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   976 ;;
   977 ;; *************** function _main *****************
   978 ;; Defined at:
   979 ;;		line 688 in file "powerspy.c"
   980 ;; Parameters:    Size  Location     Type
   981 ;;		None
   982 ;; Auto vars:     Size  Location     Type
   983 ;;  apparent        3   54[BANK0 ] m
   984 ;;  current         3   51[BANK0 ] m
   985 ;;  angle           3   46[BANK0 ] m
   986 ;;  reactive        3   43[BANK0 ] m
   987 ;;  real            3   40[BANK0 ] m
   988 ;;  voltage         3   37[BANK0 ] m
   989 ;;  bmode           2   49[BANK0 ] int 
   990 ;;  i               1    0        char 
   991 ;; Return value:  Size  Location     Type
   992 ;;                  1    wreg      void 
   993 ;; Registers used:
   994 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   995 ;; Tracked objects:
   996 ;;		On entry : B1F/0
   997 ;;		On exit  : 0/0
   998 ;;		Unchanged: 0/0
   999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1000 ;;      Params:         0       0       0       0       0       0
  1001 ;;      Locals:         0      20       0       0       0       0
  1002 ;;      Temps:          0       3       0       0       0       0
  1003 ;;      Totals:         0      23       0       0       0       0
  1004 ;;Total ram usage:       23 bytes
  1005 ;; Hardware stack levels required when called:    5
  1006 ;; This function calls:
  1007 ;;		___atdiv
  1008 ;;		___awmod
  1009 ;;		___tmul
  1010 ;;		___wmul
  1011 ;;		_cos
  1012 ;;		_deltaT
  1013 ;;		_initADC
  1014 ;;		_initBT
  1015 ;;		_initCOMP1
  1016 ;;		_initCOMP2
  1017 ;;		_initFVR
  1018 ;;		_initMessaging
  1019 ;;		_initPWMTMR4
  1020 ;;		_initPins
  1021 ;;		_initTMR1
  1022 ;;		_readCurrent
  1023 ;;		_readVdd
  1024 ;;		_readVoltage
  1025 ;;		_sendInt24
  1026 ;;		_sendUInt8
  1027 ;;		_setLED
  1028 ;;		_setUnit
  1029 ;;		_setVal
  1030 ;;		_sin
  1031 ;; This function is called by:
  1032 ;;		Startup code after reset
  1033 ;; This function uses a non-reentrant model
  1034 ;;
  1035                           
  1036                           
  1037                           ;psect for function _main
  1038  0074                     _main:	
  1039                           
  1040                           ;powerspy.c: 690: int bmode = 0;
  1041                           
  1042                           ;incstack = 0
  1043                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1044  0074  0020               	movlb	0	; select bank0
  1045  0075  01D1               	clrf	main@bmode
  1046  0076  01D2               	clrf	main@bmode+1
  1047                           
  1048                           ;powerspy.c: 691: int24_t angle;
  1049                           ;powerspy.c: 692: int24_t current;
  1050                           ;powerspy.c: 693: int24_t voltage;
  1051                           ;powerspy.c: 694: int24_t apparent;
  1052                           ;powerspy.c: 695: int24_t real;
  1053                           ;powerspy.c: 696: int24_t reactive;
  1054                           ;powerspy.c: 697: int8_t i;
  1055                           ;powerspy.c: 699: PEIE = 0;
  1056  0077  130B               	bcf	11,6	;volatile
  1057                           
  1058                           ;powerspy.c: 700: GIE = 0;
  1059  0078  138B               	bcf	11,7	;volatile
  1060                           
  1061                           ;powerspy.c: 702: initPins();
  1062  0079  3187  2700  3180   	fcall	_initPins
  1063                           
  1064                           ;powerspy.c: 703: initFVR();
  1065  007C  318F  27E3  3180   	fcall	_initFVR
  1066                           
  1067                           ;powerspy.c: 704: initADC();
  1068  007F  318F  27F6  3180   	fcall	_initADC
  1069                           
  1070                           ;powerspy.c: 705: initTMR1();
  1071  0082  3187  27E6  3180   	fcall	_initTMR1
  1072                           
  1073                           ;powerspy.c: 706: initPWMTMR4();
  1074  0085  3187  2720  3180   	fcall	_initPWMTMR4
  1075                           
  1076                           ;powerspy.c: 707: initCOMP1();
  1077  0088  3187  27D9  3180   	fcall	_initCOMP1
  1078                           
  1079                           ;powerspy.c: 708: initCOMP2();
  1080  008B  3187  27CC  3180   	fcall	_initCOMP2
  1081                           
  1082                           ;powerspy.c: 709: initBT();
  1083  008E  3187  2773  3180   	fcall	_initBT
  1084                           
  1085                           ;powerspy.c: 710: initMessaging();
  1086  0091  318F  27D7  3180   	fcall	_initMessaging
  1087                           
  1088                           ;powerspy.c: 711: PEIE = 1;
  1089  0094  170B               	bsf	11,6	;volatile
  1090  0095                     l3144:	
  1091                           ;powerspy.c: 714: while (1) {
  1092                           
  1093                           
  1094                           ;powerspy.c: 716: GIE = 1;
  1095  0095  178B               	bsf	11,7	;volatile
  1096                           
  1097                           ;powerspy.c: 717: _delay((unsigned long)((50)*(32000000/4000.0)));
  1098  0096  3003               	movlw	3
  1099  0097  0020               	movlb	0	; select bank0
  1100  0098  00C4               	movwf	??_main+2
  1101  0099  3008               	movlw	8
  1102  009A  00C3               	movwf	??_main+1
  1103  009B  3078               	movlw	120
  1104  009C  00C2               	movwf	??_main
  1105  009D                     u3117:	
  1106  009D  0BC2               	decfsz	??_main,f
  1107  009E  289D               	goto	u3117
  1108  009F  0BC3               	decfsz	??_main+1,f
  1109  00A0  289D               	goto	u3117
  1110  00A1  0BC4               	decfsz	??_main+2,f
  1111  00A2  289D               	goto	u3117
  1112                           
  1113                           ;powerspy.c: 718: GIE = 0;
  1114  00A3  138B               	bcf	11,7	;volatile
  1115                           
  1116                           ;powerspy.c: 722: if ((flag & 0x02) && (flag & 0x01)) {
  1117  00A4  0020               	movlb	0	; select bank0
  1118  00A5  18E7               	btfsc	_flag,1	;volatile
  1119  00A6  1C67               	btfss	_flag,0	;volatile
  1120  00A7  2AE8               	goto	l378
  1121                           
  1122                           ;powerspy.c: 723: if (flag & 0x04)
  1123  00A8  1D67               	btfss	_flag,2	;volatile
  1124  00A9  28B2               	goto	l379
  1125                           
  1126                           ;powerspy.c: 724: angle = (deltaT(volt_time, curr_time) >> 2);
  1127  00AA  0866               	movf	_volt_time+1,w
  1128  00AB  00F3               	movwf	deltaT@tm_low+1
  1129  00AC  0865               	movf	_volt_time,w
  1130  00AD  00F2               	movwf	deltaT@tm_low
  1131  00AE  0862               	movf	_curr_time+1,w
  1132  00AF  00F5               	movwf	deltaT@tm_high+1
  1133  00B0  0861               	movf	_curr_time,w
  1134  00B1  28BB               	goto	L2
  1135  00B2                     l379:	
  1136                           
  1137                           ;powerspy.c: 725: else if (flag & 0x08)
  1138  00B2  1DE7               	btfss	_flag,3	;volatile
  1139  00B3  28CD               	goto	l3160
  1140                           
  1141                           ;powerspy.c: 726: angle = (deltaT(curr_time, volt_time) >> 2);
  1142  00B4  0862               	movf	_curr_time+1,w
  1143  00B5  00F3               	movwf	deltaT@tm_low+1
  1144  00B6  0861               	movf	_curr_time,w
  1145  00B7  00F2               	movwf	deltaT@tm_low
  1146  00B8  0866               	movf	_volt_time+1,w
  1147  00B9  00F5               	movwf	deltaT@tm_high+1
  1148  00BA  0865               	movf	_volt_time,w
  1149  00BB                     L2:	
  1150  00BB  00F4               	movwf	deltaT@tm_high
  1151  00BC  3186  2689  3180   	fcall	_deltaT
  1152  00BF  0872               	movf	?_deltaT,w
  1153  00C0  0020               	movlb	0	; select bank0
  1154  00C1  00C2               	movwf	??_main
  1155  00C2  0873               	movf	?_deltaT+1,w
  1156  00C3  00C3               	movwf	??_main+1
  1157  00C4  36C3               	lsrf	??_main+1,f
  1158  00C5  0CC2               	rrf	??_main,f
  1159  00C6  36C3               	lsrf	??_main+1,f
  1160  00C7  0CC2               	rrf	??_main,f
  1161  00C8  0842               	movf	??_main,w
  1162  00C9  00CE               	movwf	main@angle
  1163  00CA  0843               	movf	??_main+1,w
  1164  00CB  00CF               	movwf	main@angle+1
  1165  00CC  01D0               	clrf	main@angle+2
  1166  00CD                     l3160:	
  1167                           
  1168                           ;powerspy.c: 728: flag &= 0xf0;
  1169  00CD  30F0               	movlw	240
  1170  00CE  00C2               	movwf	??_main
  1171  00CF  0842               	movf	??_main,w
  1172  00D0  05E7               	andwf	_flag,f	;volatile
  1173                           
  1174                           ;powerspy.c: 733: i_u_offs = readVdd() * 5;
  1175  00D1  3187  278A  3180   	fcall	_readVdd
  1176  00D4  0875               	movf	?_readVdd+1,w
  1177  00D5  0020               	movlb	0	; select bank0
  1178  00D6  00A1               	movwf	___wmul@multiplier+1
  1179  00D7  0874               	movf	?_readVdd,w
  1180  00D8  00A0               	movwf	___wmul@multiplier
  1181  00D9  3005               	movlw	5
  1182  00DA  00A2               	movwf	___wmul@multiplicand
  1183  00DB  3000               	movlw	0
  1184  00DC  00A3               	movwf	___wmul@multiplicand+1
  1185  00DD  3187  273F  3180   	fcall	___wmul
  1186  00E0  0020               	movlb	0	; select bank0
  1187  00E1  0820               	movf	?___wmul,w
  1188  00E2  00EA               	movwf	_i_u_offs
  1189  00E3  0821               	movf	?___wmul+1,w
  1190  00E4  00EB               	movwf	_i_u_offs+1
  1191  00E5  01EC               	clrf	_i_u_offs+2
  1192                           
  1193                           ;powerspy.c: 734: i_u_offs >>= 1;
  1194  00E6  3001               	movlw	1
  1195  00E7  00C2               	movwf	??_main
  1196  00E8                     u3085:	
  1197  00E8  37EC               	asrf	_i_u_offs+2,f
  1198  00E9  0CEB               	rrf	_i_u_offs+1,f
  1199  00EA  0CEA               	rrf	_i_u_offs,f
  1200  00EB  0BC2               	decfsz	??_main,f
  1201  00EC  28E8               	goto	u3085
  1202                           
  1203                           ;powerspy.c: 735: i_u_offs = -i_u_offs;
  1204  00ED  09EA               	comf	_i_u_offs,f
  1205  00EE  09EB               	comf	_i_u_offs+1,f
  1206  00EF  09EC               	comf	_i_u_offs+2,f
  1207  00F0  0AEA               	incf	_i_u_offs,f
  1208  00F1  1903               	skipnz
  1209  00F2  0AEB               	incf	_i_u_offs+1,f
  1210  00F3  1903               	skipnz
  1211  00F4  0AEC               	incf	_i_u_offs+2,f
  1212                           
  1213                           ;powerspy.c: 737: sendUInt8('s');
  1214  00F5  3073               	movlw	115
  1215  00F6  3187  27BF  3180   	fcall	_sendUInt8
  1216                           
  1217                           ;powerspy.c: 738: sendInt24(ADRES);
  1218  00F9  0021               	movlb	1	; select bank1
  1219  00FA  081B               	movf	27,w	;volatile
  1220  00FB  00F5               	movwf	sendInt24@i
  1221  00FC  081C               	movf	28,w	;volatile
  1222  00FD  00F6               	movwf	sendInt24@i+1
  1223  00FE  01F7               	clrf	sendInt24@i+2
  1224  00FF  3186  2657  3180   	fcall	_sendInt24
  1225                           
  1226                           ;powerspy.c: 740: current = readCurrent();
  1227  0102  3185  253C  3180   	fcall	_readCurrent
  1228  0105  0020               	movlb	0	; select bank0
  1229  0106  0839               	movf	?_readCurrent,w
  1230  0107  00D3               	movwf	main@current
  1231  0108  083A               	movf	?_readCurrent+1,w
  1232  0109  00D4               	movwf	main@current+1
  1233  010A  083B               	movf	?_readCurrent+2,w
  1234  010B  00D5               	movwf	main@current+2
  1235                           
  1236                           ;powerspy.c: 741: voltage = readVoltage();
  1237  010C  3180  2002  3180   	fcall	_readVoltage
  1238  010F  0020               	movlb	0	; select bank0
  1239  0110  00C2               	movwf	??_main
  1240  0111  01C3               	clrf	??_main+1
  1241  0112  01C4               	clrf	??_main+2
  1242  0113  0842               	movf	??_main,w
  1243  0114  00C5               	movwf	main@voltage
  1244  0115  0843               	movf	??_main+1,w
  1245  0116  00C6               	movwf	main@voltage+1
  1246  0117  0844               	movf	??_main+2,w
  1247  0118  00C7               	movwf	main@voltage+2
  1248                           
  1249                           ;powerspy.c: 742: apparent = voltage * current;
  1250  0119  0845               	movf	main@voltage,w
  1251  011A  00A4               	movwf	___tmul@multiplier
  1252  011B  0846               	movf	main@voltage+1,w
  1253  011C  00A5               	movwf	___tmul@multiplier+1
  1254  011D  0847               	movf	main@voltage+2,w
  1255  011E  00A6               	movwf	___tmul@multiplier+2
  1256  011F  0853               	movf	main@current,w
  1257  0120  00A7               	movwf	___tmul@multiplicand
  1258  0121  0854               	movf	main@current+1,w
  1259  0122  00A8               	movwf	___tmul@multiplicand+1
  1260  0123  0855               	movf	main@current+2,w
  1261  0124  00A9               	movwf	___tmul@multiplicand+2
  1262  0125  3186  26B3  3180   	fcall	___tmul
  1263  0128  0020               	movlb	0	; select bank0
  1264  0129  0824               	movf	?___tmul,w
  1265  012A  00D6               	movwf	main@apparent
  1266  012B  0825               	movf	?___tmul+1,w
  1267  012C  00D7               	movwf	main@apparent+1
  1268  012D  0826               	movf	?___tmul+2,w
  1269  012E  00D8               	movwf	main@apparent+2
  1270                           
  1271                           ;powerspy.c: 743: real = (apparent * cos(angle)) / (100);
  1272  012F  3064               	movlw	100
  1273  0130  00AD               	movwf	___atdiv@divisor
  1274  0131  3000               	movlw	0
  1275  0132  00AE               	movwf	___atdiv@divisor+1
  1276  0133  3000               	movlw	0
  1277  0134  00AF               	movwf	___atdiv@divisor+2
  1278  0135  084F               	movf	main@angle+1,w
  1279  0136  00A3               	movwf	cos@us+1
  1280  0137  084E               	movf	main@angle,w
  1281  0138  00A2               	movwf	cos@us
  1282  0139  318F  27EC  3180   	fcall	_cos
  1283  013C  0020               	movlb	0	; select bank0
  1284  013D  00C2               	movwf	??_main
  1285  013E  3000               	movlw	0
  1286  013F  1BC2               	btfsc	??_main,7
  1287  0140  30FF               	movlw	255
  1288  0141  00C3               	movwf	??_main+1
  1289  0142  00C4               	movwf	??_main+2
  1290  0143  0842               	movf	??_main,w
  1291  0144  00A4               	movwf	___tmul@multiplier
  1292  0145  0843               	movf	??_main+1,w
  1293  0146  00A5               	movwf	___tmul@multiplier+1
  1294  0147  0844               	movf	??_main+2,w
  1295  0148  00A6               	movwf	___tmul@multiplier+2
  1296  0149  0856               	movf	main@apparent,w
  1297  014A  00A7               	movwf	___tmul@multiplicand
  1298  014B  0857               	movf	main@apparent+1,w
  1299  014C  00A8               	movwf	___tmul@multiplicand+1
  1300  014D  0858               	movf	main@apparent+2,w
  1301  014E  00A9               	movwf	___tmul@multiplicand+2
  1302  014F  3186  26B3  3180   	fcall	___tmul
  1303  0152  0020               	movlb	0	; select bank0
  1304  0153  0824               	movf	?___tmul,w
  1305  0154  00B0               	movwf	___atdiv@dividend
  1306  0155  0825               	movf	?___tmul+1,w
  1307  0156  00B1               	movwf	___atdiv@dividend+1
  1308  0157  0826               	movf	?___tmul+2,w
  1309  0158  00B2               	movwf	___atdiv@dividend+2
  1310  0159  3184  241F  3180   	fcall	___atdiv
  1311  015C  0020               	movlb	0	; select bank0
  1312  015D  082D               	movf	?___atdiv,w
  1313  015E  00C8               	movwf	main@real
  1314  015F  082E               	movf	?___atdiv+1,w
  1315  0160  00C9               	movwf	main@real+1
  1316  0161  082F               	movf	?___atdiv+2,w
  1317  0162  00CA               	movwf	main@real+2
  1318                           
  1319                           ;powerspy.c: 744: reactive = (apparent * sin(angle)) / (100);
  1320  0163  3064               	movlw	100
  1321  0164  00AD               	movwf	___atdiv@divisor
  1322  0165  3000               	movlw	0
  1323  0166  00AE               	movwf	___atdiv@divisor+1
  1324  0167  3000               	movlw	0
  1325  0168  00AF               	movwf	___atdiv@divisor+2
  1326  0169  084F               	movf	main@angle+1,w
  1327  016A  00F8               	movwf	sin@z+1
  1328  016B  084E               	movf	main@angle,w
  1329  016C  00F7               	movwf	sin@z
  1330  016D  3184  248A  3180   	fcall	_sin
  1331  0170  0020               	movlb	0	; select bank0
  1332  0171  00C2               	movwf	??_main
  1333  0172  3000               	movlw	0
  1334  0173  1BC2               	btfsc	??_main,7
  1335  0174  30FF               	movlw	255
  1336  0175  00C3               	movwf	??_main+1
  1337  0176  00C4               	movwf	??_main+2
  1338  0177  0842               	movf	??_main,w
  1339  0178  00A4               	movwf	___tmul@multiplier
  1340  0179  0843               	movf	??_main+1,w
  1341  017A  00A5               	movwf	___tmul@multiplier+1
  1342  017B  0844               	movf	??_main+2,w
  1343  017C  00A6               	movwf	___tmul@multiplier+2
  1344  017D  0856               	movf	main@apparent,w
  1345  017E  00A7               	movwf	___tmul@multiplicand
  1346  017F  0857               	movf	main@apparent+1,w
  1347  0180  00A8               	movwf	___tmul@multiplicand+1
  1348  0181  0858               	movf	main@apparent+2,w
  1349  0182  00A9               	movwf	___tmul@multiplicand+2
  1350  0183  3186  26B3  3180   	fcall	___tmul
  1351  0186  0020               	movlb	0	; select bank0
  1352  0187  0824               	movf	?___tmul,w
  1353  0188  00B0               	movwf	___atdiv@dividend
  1354  0189  0825               	movf	?___tmul+1,w
  1355  018A  00B1               	movwf	___atdiv@dividend+1
  1356  018B  0826               	movf	?___tmul+2,w
  1357  018C  00B2               	movwf	___atdiv@dividend+2
  1358  018D  3184  241F  3180   	fcall	___atdiv
  1359  0190  0020               	movlb	0	; select bank0
  1360  0191  082D               	movf	?___atdiv,w
  1361  0192  00CB               	movwf	main@reactive
  1362  0193  082E               	movf	?___atdiv+1,w
  1363  0194  00CC               	movwf	main@reactive+1
  1364  0195  082F               	movf	?___atdiv+2,w
  1365  0196  00CD               	movwf	main@reactive+2
  1366                           
  1367                           ;powerspy.c: 747: sendUInt8('C');
  1368  0197  3043               	movlw	67
  1369  0198  3187  27BF  3180   	fcall	_sendUInt8
  1370                           
  1371                           ;powerspy.c: 748: sendInt24(ADRES);
  1372  019B  0021               	movlb	1	; select bank1
  1373  019C  081B               	movf	27,w	;volatile
  1374  019D  00F5               	movwf	sendInt24@i
  1375  019E  081C               	movf	28,w	;volatile
  1376  019F  00F6               	movwf	sendInt24@i+1
  1377  01A0  01F7               	clrf	sendInt24@i+2
  1378  01A1  3186  2657  3180   	fcall	_sendInt24
  1379                           
  1380                           ;powerspy.c: 749: sendUInt8('o');
  1381  01A4  306F               	movlw	111
  1382  01A5  3187  27BF  3180   	fcall	_sendUInt8
  1383                           
  1384                           ;powerspy.c: 750: sendInt24(i_u_offs);
  1385  01A8  0020               	movlb	0	; select bank0
  1386  01A9  086A               	movf	_i_u_offs,w
  1387  01AA  00F5               	movwf	sendInt24@i
  1388  01AB  086B               	movf	_i_u_offs+1,w
  1389  01AC  00F6               	movwf	sendInt24@i+1
  1390  01AD  086C               	movf	_i_u_offs+2,w
  1391  01AE  00F7               	movwf	sendInt24@i+2
  1392  01AF  3186  2657  3180   	fcall	_sendInt24
  1393                           
  1394                           ;powerspy.c: 751: sendUInt8('c');
  1395  01B2  3063               	movlw	99
  1396  01B3  3187  27BF  3180   	fcall	_sendUInt8
  1397                           
  1398                           ;powerspy.c: 752: sendInt24(current);
  1399  01B6  0020               	movlb	0	; select bank0
  1400  01B7  0853               	movf	main@current,w
  1401  01B8  00F5               	movwf	sendInt24@i
  1402  01B9  0854               	movf	main@current+1,w
  1403  01BA  00F6               	movwf	sendInt24@i+1
  1404  01BB  0855               	movf	main@current+2,w
  1405  01BC  00F7               	movwf	sendInt24@i+2
  1406  01BD  3186  2657  3180   	fcall	_sendInt24
  1407                           
  1408                           ;powerspy.c: 753: sendUInt8('A');
  1409  01C0  3041               	movlw	65
  1410  01C1  3187  27BF  3180   	fcall	_sendUInt8
  1411                           
  1412                           ;powerspy.c: 754: sendInt24(apparent);
  1413  01C4  0020               	movlb	0	; select bank0
  1414  01C5  0856               	movf	main@apparent,w
  1415  01C6  00F5               	movwf	sendInt24@i
  1416  01C7  0857               	movf	main@apparent+1,w
  1417  01C8  00F6               	movwf	sendInt24@i+1
  1418  01C9  0858               	movf	main@apparent+2,w
  1419  01CA  00F7               	movwf	sendInt24@i+2
  1420  01CB  3186  2657  3180   	fcall	_sendInt24
  1421                           
  1422                           ;powerspy.c: 755: sendUInt8('r');
  1423  01CE  3072               	movlw	114
  1424  01CF  3187  27BF  3180   	fcall	_sendUInt8
  1425                           
  1426                           ;powerspy.c: 756: sendInt24(real);
  1427  01D2  0020               	movlb	0	; select bank0
  1428  01D3  0848               	movf	main@real,w
  1429  01D4  00F5               	movwf	sendInt24@i
  1430  01D5  0849               	movf	main@real+1,w
  1431  01D6  00F6               	movwf	sendInt24@i+1
  1432  01D7  084A               	movf	main@real+2,w
  1433  01D8  00F7               	movwf	sendInt24@i+2
  1434  01D9  3186  2657  3180   	fcall	_sendInt24
  1435                           
  1436                           ;powerspy.c: 757: sendUInt8('R');
  1437  01DC  3052               	movlw	82
  1438  01DD  3187  27BF  3180   	fcall	_sendUInt8
  1439                           
  1440                           ;powerspy.c: 758: sendInt24(reactive);
  1441  01E0  0020               	movlb	0	; select bank0
  1442  01E1  084B               	movf	main@reactive,w
  1443  01E2  00F5               	movwf	sendInt24@i
  1444  01E3  084C               	movf	main@reactive+1,w
  1445  01E4  00F6               	movwf	sendInt24@i+1
  1446  01E5  084D               	movf	main@reactive+2,w
  1447  01E6  00F7               	movwf	sendInt24@i+2
  1448  01E7  3186  2657  3180   	fcall	_sendInt24
  1449                           
  1450                           ;powerspy.c: 760: RA3 = 0;
  1451  01EA  0020               	movlb	0	; select bank0
  1452  01EB  118C               	bcf	12,3	;volatile
  1453                           
  1454                           ;powerspy.c: 761: switch (bmode) {
  1455  01EC  2ACC               	goto	l3244
  1456  01ED                     l3206:	
  1457                           ;powerspy.c: 763: default:
  1458                           
  1459                           ;powerspy.c: 762: case 0:
  1460                           
  1461                           
  1462                           ;powerspy.c: 764: setUnit(0xffffff);
  1463  01ED  30FF               	movlw	255
  1464  01EE  00F5               	movwf	setUnit@u
  1465  01EF  30FF               	movlw	255
  1466  01F0  00F6               	movwf	setUnit@u+1
  1467  01F1  30FF               	movlw	255
  1468  01F2  00F7               	movwf	setUnit@u+2
  1469  01F3  3186  26DA  3180   	fcall	_setUnit
  1470                           
  1471                           ;powerspy.c: 765: setVal(0);
  1472  01F6  3000               	movlw	0
  1473  01F7  0020               	movlb	0	; select bank0
  1474  01F8  00B9               	movwf	setVal@v
  1475  01F9  00BA               	movwf	setVal@v+1
  1476  01FA  3186  2623  3180   	fcall	_setVal
  1477                           
  1478                           ;powerspy.c: 766: setLED(0x00, 0x00, 0x00);
  1479  01FD  01F3               	clrf	setLED@r
  1480  01FE  01F4               	clrf	setLED@b
  1481  01FF  3000               	movlw	0
  1482  0200  3187  279D  3180   	fcall	_setLED
  1483                           
  1484                           ;powerspy.c: 767: break;
  1485  0203  2AE6               	goto	l385
  1486  0204                     l3212:	
  1487                           ;powerspy.c: 768: case 1:
  1488                           
  1489                           
  1490                           ;powerspy.c: 769: setUnit(0b111001110101111001011111);
  1491  0204  305F               	movlw	95
  1492  0205  00F5               	movwf	setUnit@u
  1493  0206  305E               	movlw	94
  1494  0207  00F6               	movwf	setUnit@u+1
  1495  0208  30E7               	movlw	231
  1496  0209  00F7               	movwf	setUnit@u+2
  1497  020A  3186  26DA  3180   	fcall	_setUnit
  1498                           
  1499                           ;powerspy.c: 770: setVal(current / 1000);
  1500  020D  30E8               	movlw	232
  1501  020E  0020               	movlb	0	; select bank0
  1502  020F  00AD               	movwf	___atdiv@divisor
  1503  0210  3003               	movlw	3
  1504  0211  00AE               	movwf	___atdiv@divisor+1
  1505  0212  3000               	movlw	0
  1506  0213  00AF               	movwf	___atdiv@divisor+2
  1507  0214  0853               	movf	main@current,w
  1508  0215  00B0               	movwf	___atdiv@dividend
  1509  0216  0854               	movf	main@current+1,w
  1510  0217  00B1               	movwf	___atdiv@dividend+1
  1511  0218  0855               	movf	main@current+2,w
  1512  0219  00B2               	movwf	___atdiv@dividend+2
  1513  021A  3184  241F  3180   	fcall	___atdiv
  1514  021D  0020               	movlb	0	; select bank0
  1515  021E  082E               	movf	?___atdiv+1,w
  1516  021F  00BA               	movwf	setVal@v+1
  1517  0220  082D               	movf	?___atdiv,w
  1518  0221  00B9               	movwf	setVal@v
  1519  0222  3186  2623  3180   	fcall	_setVal
  1520                           
  1521                           ;powerspy.c: 771: setLED(0x00, (0xff>>3), 0x00);
  1522  0225  301F               	movlw	31
  1523  0226  0020               	movlb	0	; select bank0
  1524  0227  00C2               	movwf	??_main
  1525  0228  0842               	movf	??_main,w
  1526  0229  00F3               	movwf	setLED@r
  1527  022A  01F4               	clrf	setLED@b
  1528  022B  3000               	movlw	0
  1529  022C  3187  279D  3180   	fcall	_setLED
  1530                           
  1531                           ;powerspy.c: 772: break;
  1532  022F  2AE6               	goto	l385
  1533  0230                     l3218:	
  1534                           ;powerspy.c: 773: case 5:
  1535                           
  1536                           
  1537                           ;powerspy.c: 774: setUnit(0b111011110101010101111111);
  1538  0230  307F               	movlw	127
  1539  0231  00F5               	movwf	setUnit@u
  1540  0232  3055               	movlw	85
  1541  0233  00F6               	movwf	setUnit@u+1
  1542  0234  30EF               	movlw	239
  1543  0235  00F7               	movwf	setUnit@u+2
  1544  0236  3186  26DA  3180   	fcall	_setUnit
  1545                           
  1546                           ;powerspy.c: 775: setVal(real / 1000);
  1547  0239  30E8               	movlw	232
  1548  023A  0020               	movlb	0	; select bank0
  1549  023B  00AD               	movwf	___atdiv@divisor
  1550  023C  3003               	movlw	3
  1551  023D  00AE               	movwf	___atdiv@divisor+1
  1552  023E  3000               	movlw	0
  1553  023F  00AF               	movwf	___atdiv@divisor+2
  1554  0240  0848               	movf	main@real,w
  1555  0241  00B0               	movwf	___atdiv@dividend
  1556  0242  0849               	movf	main@real+1,w
  1557  0243  00B1               	movwf	___atdiv@dividend+1
  1558  0244  084A               	movf	main@real+2,w
  1559  0245  00B2               	movwf	___atdiv@dividend+2
  1560  0246  3184  241F  3180   	fcall	___atdiv
  1561  0249  0020               	movlb	0	; select bank0
  1562  024A  082E               	movf	?___atdiv+1,w
  1563  024B  00BA               	movwf	setVal@v+1
  1564  024C  082D               	movf	?___atdiv,w
  1565  024D  00B9               	movwf	setVal@v
  1566  024E  3186  2623  3180   	fcall	_setVal
  1567                           
  1568                           ;powerspy.c: 776: setLED((0xff>>3), 0x00, 0x00);
  1569  0251  01F3               	clrf	setLED@r
  1570  0252  01F4               	clrf	setLED@b
  1571  0253  301F               	movlw	31
  1572  0254  3187  279D  3180   	fcall	_setLED
  1573                           
  1574                           ;powerspy.c: 777: break;
  1575  0257  2AE6               	goto	l385
  1576  0258                     l3224:	
  1577                           ;powerspy.c: 778: case 4:
  1578                           
  1579                           
  1580                           ;powerspy.c: 779: setUnit((0b111111111101110101101111&0b111110101111111111111111));
  1581  0258  306F               	movlw	111
  1582  0259  00F5               	movwf	setUnit@u
  1583  025A  30DD               	movlw	221
  1584  025B  00F6               	movwf	setUnit@u+1
  1585  025C  30FA               	movlw	250
  1586  025D  00F7               	movwf	setUnit@u+2
  1587  025E  3186  26DA  3180   	fcall	_setUnit
  1588                           
  1589                           ;powerspy.c: 780: setVal(apparent / 1000);
  1590  0261  30E8               	movlw	232
  1591  0262  0020               	movlb	0	; select bank0
  1592  0263  00AD               	movwf	___atdiv@divisor
  1593  0264  3003               	movlw	3
  1594  0265  00AE               	movwf	___atdiv@divisor+1
  1595  0266  3000               	movlw	0
  1596  0267  00AF               	movwf	___atdiv@divisor+2
  1597  0268  0856               	movf	main@apparent,w
  1598  0269  00B0               	movwf	___atdiv@dividend
  1599  026A  0857               	movf	main@apparent+1,w
  1600  026B  00B1               	movwf	___atdiv@dividend+1
  1601  026C  0858               	movf	main@apparent+2,w
  1602  026D  00B2               	movwf	___atdiv@dividend+2
  1603  026E  3184  241F  3180   	fcall	___atdiv
  1604  0271  0020               	movlb	0	; select bank0
  1605  0272  082E               	movf	?___atdiv+1,w
  1606  0273  00BA               	movwf	setVal@v+1
  1607  0274  082D               	movf	?___atdiv,w
  1608  0275  00B9               	movwf	setVal@v
  1609  0276  3186  2623  3180   	fcall	_setVal
  1610                           
  1611                           ;powerspy.c: 781: setLED(0x00, 0x00, (0xff>>3));
  1612  0279  01F3               	clrf	setLED@r
  1613  027A  301F               	movlw	31
  1614  027B  0020               	movlb	0	; select bank0
  1615  027C  00C2               	movwf	??_main
  1616  027D  0842               	movf	??_main,w
  1617  027E  00F4               	movwf	setLED@b
  1618  027F  3000               	movlw	0
  1619  0280  3187  279D  3180   	fcall	_setLED
  1620                           
  1621                           ;powerspy.c: 782: break;
  1622  0283  2AE6               	goto	l385
  1623  0284                     l3230:	
  1624                           ;powerspy.c: 783: case 6:
  1625                           
  1626                           
  1627                           ;powerspy.c: 784: setUnit((0b111111111101110101101111&0b111110101111111111111111));
  1628  0284  306F               	movlw	111
  1629  0285  00F5               	movwf	setUnit@u
  1630  0286  30DD               	movlw	221
  1631  0287  00F6               	movwf	setUnit@u+1
  1632  0288  30FA               	movlw	250
  1633  0289  00F7               	movwf	setUnit@u+2
  1634  028A  3186  26DA  3180   	fcall	_setUnit
  1635                           
  1636                           ;powerspy.c: 785: setVal(reactive / 1000);
  1637  028D  30E8               	movlw	232
  1638  028E  0020               	movlb	0	; select bank0
  1639  028F  00AD               	movwf	___atdiv@divisor
  1640  0290  3003               	movlw	3
  1641  0291  00AE               	movwf	___atdiv@divisor+1
  1642  0292  3000               	movlw	0
  1643  0293  00AF               	movwf	___atdiv@divisor+2
  1644  0294  084B               	movf	main@reactive,w
  1645  0295  00B0               	movwf	___atdiv@dividend
  1646  0296  084C               	movf	main@reactive+1,w
  1647  0297  00B1               	movwf	___atdiv@dividend+1
  1648  0298  084D               	movf	main@reactive+2,w
  1649  0299  00B2               	movwf	___atdiv@dividend+2
  1650  029A  3184  241F  3180   	fcall	___atdiv
  1651  029D  0020               	movlb	0	; select bank0
  1652  029E  082E               	movf	?___atdiv+1,w
  1653  029F  00BA               	movwf	setVal@v+1
  1654  02A0  082D               	movf	?___atdiv,w
  1655  02A1  00B9               	movwf	setVal@v
  1656  02A2  3186  2623  3180   	fcall	_setVal
  1657                           
  1658                           ;powerspy.c: 786: setLED((0xff>>3), 0x00, (0xff>>3));
  1659  02A5  01F3               	clrf	setLED@r
  1660  02A6  301F               	movlw	31
  1661  02A7  0020               	movlb	0	; select bank0
  1662  02A8  00C2               	movwf	??_main
  1663  02A9  0842               	movf	??_main,w
  1664  02AA  00F4               	movwf	setLED@b
  1665  02AB  301F               	movlw	31
  1666  02AC  3187  279D  3180   	fcall	_setLED
  1667                           
  1668                           ;powerspy.c: 787: break;
  1669  02AF  2AE6               	goto	l385
  1670  02B0                     l3236:	
  1671                           ;powerspy.c: 788: case 2:
  1672                           
  1673                           
  1674                           ;powerspy.c: 789: setUnit(0b111111111101110101101111);
  1675  02B0  306F               	movlw	111
  1676  02B1  00F5               	movwf	setUnit@u
  1677  02B2  30DD               	movlw	221
  1678  02B3  00F6               	movwf	setUnit@u+1
  1679  02B4  30FF               	movlw	255
  1680  02B5  00F7               	movwf	setUnit@u+2
  1681  02B6  3186  26DA  3180   	fcall	_setUnit
  1682                           
  1683                           ;powerspy.c: 790: setVal(voltage);
  1684  02B9  0020               	movlb	0	; select bank0
  1685  02BA  0846               	movf	main@voltage+1,w
  1686  02BB  00BA               	movwf	setVal@v+1
  1687  02BC  0845               	movf	main@voltage,w
  1688  02BD  00B9               	movwf	setVal@v
  1689  02BE  3186  2623  3180   	fcall	_setVal
  1690                           
  1691                           ;powerspy.c: 791: setLED((0xff>>3), (0xff>>3), 0x00);
  1692  02C1  301F               	movlw	31
  1693  02C2  0020               	movlb	0	; select bank0
  1694  02C3  00C2               	movwf	??_main
  1695  02C4  0842               	movf	??_main,w
  1696  02C5  00F3               	movwf	setLED@r
  1697  02C6  01F4               	clrf	setLED@b
  1698  02C7  301F               	movlw	31
  1699  02C8  3187  279D  3180   	fcall	_setLED
  1700                           
  1701                           ;powerspy.c: 793: }
  1702                           
  1703                           ;powerspy.c: 792: break;
  1704  02CB  2AE6               	goto	l385
  1705  02CC                     l3244:	
  1706                           
  1707                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1708                           ; Switch size 1, requested type "space"
  1709                           ; Number of cases is 1, Range of values is 0 to 0
  1710                           ; switch strategies available:
  1711                           ; Name         Instructions Cycles
  1712                           ; simple_byte            4     3 (average)
  1713                           ; direct_byte            8     6 (fixed)
  1714                           ; jumptable            260     6 (fixed)
  1715                           ;	Chosen strategy is simple_byte
  1716  02CC  0020               	movlb	0	; select bank0
  1717  02CD  0852               	movf	main@bmode+1,w
  1718  02CE  3A00               	xorlw	0	; case 0
  1719  02CF  1903               	skipnz
  1720  02D0  2AD2               	goto	l3294
  1721  02D1  29ED               	goto	l3206
  1722  02D2                     l3294:	
  1723                           
  1724                           ; Switch size 1, requested type "space"
  1725                           ; Number of cases is 6, Range of values is 0 to 6
  1726                           ; switch strategies available:
  1727                           ; Name         Instructions Cycles
  1728                           ; simple_byte           19    10 (average)
  1729                           ; direct_byte           20     6 (fixed)
  1730                           ; jumptable            260     6 (fixed)
  1731                           ;	Chosen strategy is simple_byte
  1732  02D2  0851               	movf	main@bmode,w
  1733  02D3  3A00               	xorlw	0	; case 0
  1734  02D4  1903               	skipnz
  1735  02D5  29ED               	goto	l3206
  1736  02D6  3A01               	xorlw	1	; case 1
  1737  02D7  1903               	skipnz
  1738  02D8  2A04               	goto	l3212
  1739  02D9  3A03               	xorlw	3	; case 2
  1740  02DA  1903               	skipnz
  1741  02DB  2AB0               	goto	l3236
  1742  02DC  3A06               	xorlw	6	; case 4
  1743  02DD  1903               	skipnz
  1744  02DE  2A58               	goto	l3224
  1745  02DF  3A01               	xorlw	1	; case 5
  1746  02E0  1903               	skipnz
  1747  02E1  2A30               	goto	l3218
  1748  02E2  3A03               	xorlw	3	; case 6
  1749  02E3  1903               	skipnz
  1750  02E4  2A84               	goto	l3230
  1751  02E5  29ED               	goto	l3206
  1752  02E6                     l385:	
  1753                           
  1754                           ;powerspy.c: 794: RA3 = 1;
  1755  02E6  0020               	movlb	0	; select bank0
  1756  02E7  158C               	bsf	12,3	;volatile
  1757  02E8                     l378:	
  1758                           
  1759                           ;powerspy.c: 795: }
  1760                           ;powerspy.c: 798: if (!RB3 && !(flag & 0x10)) {
  1761  02E8  1D8D               	btfss	13,3	;volatile
  1762  02E9  1A67               	btfsc	_flag,4	;volatile
  1763  02EA  2B0A               	goto	l3256
  1764                           
  1765                           ;powerspy.c: 799: bmode++;
  1766  02EB  3001               	movlw	1
  1767  02EC  07D1               	addwf	main@bmode,f
  1768  02ED  3000               	movlw	0
  1769  02EE  3DD2               	addwfc	main@bmode+1,f
  1770                           
  1771                           ;powerspy.c: 800: bmode %= 7;
  1772  02EF  3007               	movlw	7
  1773  02F0  00F2               	movwf	___awmod@divisor
  1774  02F1  3000               	movlw	0
  1775  02F2  00F3               	movwf	___awmod@divisor+1
  1776  02F3  0852               	movf	main@bmode+1,w
  1777  02F4  00F5               	movwf	___awmod@dividend+1
  1778  02F5  0851               	movf	main@bmode,w
  1779  02F6  00F4               	movwf	___awmod@dividend
  1780  02F7  3185  25DE  3180   	fcall	___awmod
  1781  02FA  0873               	movf	?___awmod+1,w
  1782  02FB  0020               	movlb	0	; select bank0
  1783  02FC  00D2               	movwf	main@bmode+1
  1784  02FD  0872               	movf	?___awmod,w
  1785  02FE  00D1               	movwf	main@bmode
  1786                           
  1787                           ;powerspy.c: 802: flag |= 0x10;
  1788  02FF  1667               	bsf	_flag,4	;volatile
  1789                           
  1790                           ;powerspy.c: 803: _delay((unsigned long)((10)*(32000000/4000.0)));
  1791  0300  3068               	movlw	104
  1792  0301  00C3               	movwf	??_main+1
  1793  0302  30E4               	movlw	228
  1794  0303  00C2               	movwf	??_main
  1795  0304                     u3127:	
  1796  0304  0BC2               	decfsz	??_main,f
  1797  0305  2B04               	goto	u3127
  1798  0306  0BC3               	decfsz	??_main+1,f
  1799  0307  2B04               	goto	u3127
  1800  0308  0000               	nop
  1801                           
  1802                           ;powerspy.c: 804: } else {
  1803  0309  2895               	goto	l3144
  1804  030A                     l3256:	
  1805                           
  1806                           ;powerspy.c: 805: flag &= ~0x10;
  1807  030A  30EF               	movlw	239
  1808  030B  0020               	movlb	0	; select bank0
  1809  030C  00C2               	movwf	??_main
  1810  030D  0842               	movf	??_main,w
  1811  030E  05E7               	andwf	_flag,f	;volatile
  1812  030F  2895               	goto	l3144
  1813  0310                     __end_of_main:	
  1814                           
  1815                           	psect	text1
  1816  0623                     __ptext1:	
  1817 ;; *************** function _setVal *****************
  1818 ;; Defined at:
  1819 ;;		line 632 in file "powerspy.c"
  1820 ;; Parameters:    Size  Location     Type
  1821 ;;  v               2   25[BANK0 ] short 
  1822 ;; Auto vars:     Size  Location     Type
  1823 ;;  i               1   28[BANK0 ] char 
  1824 ;; Return value:  Size  Location     Type
  1825 ;;                  1    wreg      void 
  1826 ;; Registers used:
  1827 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1828 ;; Tracked objects:
  1829 ;;		On entry : 0/0
  1830 ;;		On exit  : 0/0
  1831 ;;		Unchanged: 0/0
  1832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1833 ;;      Params:         0       2       0       0       0       0
  1834 ;;      Locals:         0       1       0       0       0       0
  1835 ;;      Temps:          0       1       0       0       0       0
  1836 ;;      Totals:         0       4       0       0       0       0
  1837 ;;Total ram usage:        4 bytes
  1838 ;; Hardware stack levels used:    1
  1839 ;; Hardware stack levels required when called:    2
  1840 ;; This function calls:
  1841 ;;		___awdiv
  1842 ;;		___awmod
  1843 ;;		_so
  1844 ;; This function is called by:
  1845 ;;		_main
  1846 ;; This function uses a non-reentrant model
  1847 ;;
  1848                           
  1849                           
  1850                           ;psect for function _setVal
  1851  0623                     _setVal:	
  1852                           
  1853                           ;powerspy.c: 634: int8_t i;
  1854                           ;powerspy.c: 635: for (i = 0; i < 7 - 3; i++) {
  1855                           
  1856                           ;incstack = 0
  1857                           ; Regs used in _setVal: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1858  0623  0020               	movlb	0	; select bank0
  1859  0624  01BC               	clrf	setVal@i
  1860  0625                     L3:	
  1861  0625  083C               	movf	setVal@i,w
  1862  0626  3A80               	xorlw	128
  1863  0627  3E7C               	addlw	-132
  1864  0628  1803               	btfsc	3,0
  1865  0629  0008               	return
  1866                           
  1867                           ;powerspy.c: 636: so(get_shift_byte[v % 10]);
  1868  062A  300A               	movlw	10
  1869  062B  00F2               	movwf	___awmod@divisor
  1870  062C  3000               	movlw	0
  1871  062D  00F3               	movwf	___awmod@divisor+1
  1872  062E  083A               	movf	setVal@v+1,w
  1873  062F  00F5               	movwf	___awmod@dividend+1
  1874  0630  0839               	movf	setVal@v,w
  1875  0631  00F4               	movwf	___awmod@dividend
  1876  0632  3185  25DE  3186   	fcall	___awmod
  1877  0635  0873               	movf	?___awmod+1,w
  1878  0636  0085               	movwf	5
  1879  0637  0872               	movf	?___awmod,w
  1880  0638  0084               	movwf	4
  1881  0639  30F1               	movlw	low (_get_shift_byte| (0+32768))
  1882  063A  0784               	addwf	4,f
  1883  063B  3087               	movlw	high (_get_shift_byte| (0+32768))
  1884  063C  3D85               	addwfc	5,f
  1885  063D  0800               	movf	0,w	;code access
  1886  063E  3183  23B2  3186   	fcall	_so
  1887                           
  1888                           ;powerspy.c: 637: v /= 10;
  1889  0641  300A               	movlw	10
  1890  0642  00F2               	movwf	___awdiv@divisor
  1891  0643  3000               	movlw	0
  1892  0644  00F3               	movwf	___awdiv@divisor+1
  1893  0645  0020               	movlb	0	; select bank0
  1894  0646  083A               	movf	setVal@v+1,w
  1895  0647  00F5               	movwf	___awdiv@dividend+1
  1896  0648  0839               	movf	setVal@v,w
  1897  0649  00F4               	movwf	___awdiv@dividend
  1898  064A  3184  24EA  3186   	fcall	___awdiv
  1899  064D  0873               	movf	?___awdiv+1,w
  1900  064E  0020               	movlb	0	; select bank0
  1901  064F  00BA               	movwf	setVal@v+1
  1902  0650  0872               	movf	?___awdiv,w
  1903  0651  00B9               	movwf	setVal@v
  1904  0652  3001               	movlw	1
  1905  0653  00BB               	movwf	??_setVal
  1906  0654  083B               	movf	??_setVal,w
  1907  0655  07BC               	addwf	setVal@i,f
  1908  0656  2E25               	goto	L3
  1909  0657                     __end_of_setVal:	
  1910                           
  1911                           	psect	text2
  1912  05DE                     __ptext2:	
  1913 ;; *************** function ___awmod *****************
  1914 ;; Defined at:
  1915 ;;		line 6 in file "/Applications/microchip/xc8/v1.37/sources/common/awmod.c"
  1916 ;; Parameters:    Size  Location     Type
  1917 ;;  divisor         2    2[COMMON] int 
  1918 ;;  dividend        2    4[COMMON] int 
  1919 ;; Auto vars:     Size  Location     Type
  1920 ;;  sign            1    8[COMMON] unsigned char 
  1921 ;;  counter         1    7[COMMON] unsigned char 
  1922 ;; Return value:  Size  Location     Type
  1923 ;;                  2    2[COMMON] int 
  1924 ;; Registers used:
  1925 ;;		wreg, status,2, status,0
  1926 ;; Tracked objects:
  1927 ;;		On entry : 0/0
  1928 ;;		On exit  : 0/0
  1929 ;;		Unchanged: 0/0
  1930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1931 ;;      Params:         4       0       0       0       0       0
  1932 ;;      Locals:         2       0       0       0       0       0
  1933 ;;      Temps:          1       0       0       0       0       0
  1934 ;;      Totals:         7       0       0       0       0       0
  1935 ;;Total ram usage:        7 bytes
  1936 ;; Hardware stack levels used:    1
  1937 ;; Hardware stack levels required when called:    1
  1938 ;; This function calls:
  1939 ;;		Nothing
  1940 ;; This function is called by:
  1941 ;;		_setVal
  1942 ;;		_main
  1943 ;; This function uses a non-reentrant model
  1944 ;;
  1945                           
  1946                           
  1947                           ;psect for function ___awmod
  1948  05DE                     ___awmod:	
  1949                           
  1950                           ;incstack = 0
  1951                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1952  05DE  01F8               	clrf	___awmod@sign
  1953  05DF  1FF5               	btfss	___awmod@dividend+1,7
  1954  05E0  2DE8               	goto	l2414
  1955  05E1  09F4               	comf	___awmod@dividend,f
  1956  05E2  09F5               	comf	___awmod@dividend+1,f
  1957  05E3  0AF4               	incf	___awmod@dividend,f
  1958  05E4  1903               	skipnz
  1959  05E5  0AF5               	incf	___awmod@dividend+1,f
  1960  05E6  01F8               	clrf	___awmod@sign
  1961  05E7  0AF8               	incf	___awmod@sign,f
  1962  05E8                     l2414:	
  1963  05E8  1FF3               	btfss	___awmod@divisor+1,7
  1964  05E9  2DEF               	goto	l2418
  1965  05EA  09F2               	comf	___awmod@divisor,f
  1966  05EB  09F3               	comf	___awmod@divisor+1,f
  1967  05EC  0AF2               	incf	___awmod@divisor,f
  1968  05ED  1903               	skipnz
  1969  05EE  0AF3               	incf	___awmod@divisor+1,f
  1970  05EF                     l2418:	
  1971  05EF  0872               	movf	___awmod@divisor,w
  1972  05F0  0473               	iorwf	___awmod@divisor+1,w
  1973  05F1  1903               	btfsc	3,2
  1974  05F2  2E16               	goto	l2436
  1975  05F3  01F7               	clrf	___awmod@counter
  1976  05F4  0AF7               	incf	___awmod@counter,f
  1977  05F5                     l2426:	
  1978  05F5  1BF3               	btfsc	___awmod@divisor+1,7
  1979  05F6  2E01               	goto	l2428
  1980  05F7  3001               	movlw	1
  1981  05F8                     u2115:	
  1982  05F8  35F2               	lslf	___awmod@divisor,f
  1983  05F9  0DF3               	rlf	___awmod@divisor+1,f
  1984  05FA  0B89               	decfsz	9,f
  1985  05FB  2DF8               	goto	u2115
  1986  05FC  3001               	movlw	1
  1987  05FD  00F6               	movwf	??___awmod
  1988  05FE  0876               	movf	??___awmod,w
  1989  05FF  07F7               	addwf	___awmod@counter,f
  1990  0600  2DF5               	goto	l2426
  1991  0601                     l2428:	
  1992  0601  0873               	movf	___awmod@divisor+1,w
  1993  0602  0275               	subwf	___awmod@dividend+1,w
  1994  0603  1D03               	skipz
  1995  0604  2E07               	goto	u2135
  1996  0605  0872               	movf	___awmod@divisor,w
  1997  0606  0274               	subwf	___awmod@dividend,w
  1998  0607                     u2135:	
  1999  0607  1C03               	skipc
  2000  0608  2E0D               	goto	l2432
  2001  0609  0872               	movf	___awmod@divisor,w
  2002  060A  02F4               	subwf	___awmod@dividend,f
  2003  060B  0873               	movf	___awmod@divisor+1,w
  2004  060C  3BF5               	subwfb	___awmod@dividend+1,f
  2005  060D                     l2432:	
  2006  060D  3001               	movlw	1
  2007  060E                     u2145:	
  2008  060E  36F3               	lsrf	___awmod@divisor+1,f
  2009  060F  0CF2               	rrf	___awmod@divisor,f
  2010  0610  0B89               	decfsz	9,f
  2011  0611  2E0E               	goto	u2145
  2012  0612  3001               	movlw	1
  2013  0613  02F7               	subwf	___awmod@counter,f
  2014  0614  1D03               	btfss	3,2
  2015  0615  2E01               	goto	l2428
  2016  0616                     l2436:	
  2017  0616  0878               	movf	___awmod@sign,w
  2018  0617  1903               	btfsc	3,2
  2019  0618  2E1E               	goto	l2440
  2020  0619  09F4               	comf	___awmod@dividend,f
  2021  061A  09F5               	comf	___awmod@dividend+1,f
  2022  061B  0AF4               	incf	___awmod@dividend,f
  2023  061C  1903               	skipnz
  2024  061D  0AF5               	incf	___awmod@dividend+1,f
  2025  061E                     l2440:	
  2026  061E  0875               	movf	___awmod@dividend+1,w
  2027  061F  00F3               	movwf	?___awmod+1
  2028  0620  0874               	movf	___awmod@dividend,w
  2029  0621  00F2               	movwf	?___awmod
  2030  0622  0008               	return
  2031  0623                     __end_of___awmod:	
  2032                           
  2033                           	psect	text3
  2034  04EA                     __ptext3:	
  2035 ;; *************** function ___awdiv *****************
  2036 ;; Defined at:
  2037 ;;		line 6 in file "/Applications/microchip/xc8/v1.37/sources/common/awdiv.c"
  2038 ;; Parameters:    Size  Location     Type
  2039 ;;  divisor         2    2[COMMON] int 
  2040 ;;  dividend        2    4[COMMON] int 
  2041 ;; Auto vars:     Size  Location     Type
  2042 ;;  quotient        2    2[BANK0 ] int 
  2043 ;;  sign            1    1[BANK0 ] unsigned char 
  2044 ;;  counter         1    0[BANK0 ] unsigned char 
  2045 ;; Return value:  Size  Location     Type
  2046 ;;                  2    2[COMMON] int 
  2047 ;; Registers used:
  2048 ;;		wreg, status,2, status,0
  2049 ;; Tracked objects:
  2050 ;;		On entry : 0/0
  2051 ;;		On exit  : 0/0
  2052 ;;		Unchanged: 0/0
  2053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2054 ;;      Params:         4       0       0       0       0       0
  2055 ;;      Locals:         0       4       0       0       0       0
  2056 ;;      Temps:          1       0       0       0       0       0
  2057 ;;      Totals:         5       4       0       0       0       0
  2058 ;;Total ram usage:        9 bytes
  2059 ;; Hardware stack levels used:    1
  2060 ;; Hardware stack levels required when called:    1
  2061 ;; This function calls:
  2062 ;;		Nothing
  2063 ;; This function is called by:
  2064 ;;		_setVal
  2065 ;; This function uses a non-reentrant model
  2066 ;;
  2067                           
  2068                           
  2069                           ;psect for function ___awdiv
  2070  04EA                     ___awdiv:	
  2071                           
  2072                           ;incstack = 0
  2073                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2074  04EA  0020               	movlb	0	; select bank0
  2075  04EB  01A1               	clrf	___awdiv@sign
  2076  04EC  1FF3               	btfss	___awdiv@divisor+1,7
  2077  04ED  2CF5               	goto	l3054
  2078  04EE  09F2               	comf	___awdiv@divisor,f
  2079  04EF  09F3               	comf	___awdiv@divisor+1,f
  2080  04F0  0AF2               	incf	___awdiv@divisor,f
  2081  04F1  1903               	skipnz
  2082  04F2  0AF3               	incf	___awdiv@divisor+1,f
  2083  04F3  01A1               	clrf	___awdiv@sign
  2084  04F4  0AA1               	incf	___awdiv@sign,f
  2085  04F5                     l3054:	
  2086  04F5  1FF5               	btfss	___awdiv@dividend+1,7
  2087  04F6  2D00               	goto	l3060
  2088  04F7  09F4               	comf	___awdiv@dividend,f
  2089  04F8  09F5               	comf	___awdiv@dividend+1,f
  2090  04F9  0AF4               	incf	___awdiv@dividend,f
  2091  04FA  1903               	skipnz
  2092  04FB  0AF5               	incf	___awdiv@dividend+1,f
  2093  04FC  3001               	movlw	1
  2094  04FD  00F6               	movwf	??___awdiv
  2095  04FE  0876               	movf	??___awdiv,w
  2096  04FF  06A1               	xorwf	___awdiv@sign,f
  2097  0500                     l3060:	
  2098  0500  01A2               	clrf	___awdiv@quotient
  2099  0501  01A3               	clrf	___awdiv@quotient+1
  2100  0502  0872               	movf	___awdiv@divisor,w
  2101  0503  0473               	iorwf	___awdiv@divisor+1,w
  2102  0504  1903               	btfsc	3,2
  2103  0505  2D2F               	goto	l3082
  2104  0506  01A0               	clrf	___awdiv@counter
  2105  0507  0AA0               	incf	___awdiv@counter,f
  2106  0508                     l3070:	
  2107  0508  1BF3               	btfsc	___awdiv@divisor+1,7
  2108  0509  2D14               	goto	l3072
  2109  050A  3001               	movlw	1
  2110  050B                     u2915:	
  2111  050B  35F2               	lslf	___awdiv@divisor,f
  2112  050C  0DF3               	rlf	___awdiv@divisor+1,f
  2113  050D  0B89               	decfsz	9,f
  2114  050E  2D0B               	goto	u2915
  2115  050F  3001               	movlw	1
  2116  0510  00F6               	movwf	??___awdiv
  2117  0511  0876               	movf	??___awdiv,w
  2118  0512  07A0               	addwf	___awdiv@counter,f
  2119  0513  2D08               	goto	l3070
  2120  0514                     l3072:	
  2121  0514  3001               	movlw	1
  2122  0515                     u2935:	
  2123  0515  35A2               	lslf	___awdiv@quotient,f
  2124  0516  0DA3               	rlf	___awdiv@quotient+1,f
  2125  0517  0B89               	decfsz	9,f
  2126  0518  2D15               	goto	u2935
  2127  0519  0873               	movf	___awdiv@divisor+1,w
  2128  051A  0275               	subwf	___awdiv@dividend+1,w
  2129  051B  1D03               	skipz
  2130  051C  2D1F               	goto	u2945
  2131  051D  0872               	movf	___awdiv@divisor,w
  2132  051E  0274               	subwf	___awdiv@dividend,w
  2133  051F                     u2945:	
  2134  051F  1C03               	skipc
  2135  0520  2D26               	goto	l3078
  2136  0521  0872               	movf	___awdiv@divisor,w
  2137  0522  02F4               	subwf	___awdiv@dividend,f
  2138  0523  0873               	movf	___awdiv@divisor+1,w
  2139  0524  3BF5               	subwfb	___awdiv@dividend+1,f
  2140  0525  1422               	bsf	___awdiv@quotient,0
  2141  0526                     l3078:	
  2142  0526  3001               	movlw	1
  2143  0527                     u2955:	
  2144  0527  36F3               	lsrf	___awdiv@divisor+1,f
  2145  0528  0CF2               	rrf	___awdiv@divisor,f
  2146  0529  0B89               	decfsz	9,f
  2147  052A  2D27               	goto	u2955
  2148  052B  3001               	movlw	1
  2149  052C  02A0               	subwf	___awdiv@counter,f
  2150  052D  1D03               	btfss	3,2
  2151  052E  2D14               	goto	l3072
  2152  052F                     l3082:	
  2153  052F  0821               	movf	___awdiv@sign,w
  2154  0530  1903               	btfsc	3,2
  2155  0531  2D37               	goto	l3086
  2156  0532  09A2               	comf	___awdiv@quotient,f
  2157  0533  09A3               	comf	___awdiv@quotient+1,f
  2158  0534  0AA2               	incf	___awdiv@quotient,f
  2159  0535  1903               	skipnz
  2160  0536  0AA3               	incf	___awdiv@quotient+1,f
  2161  0537                     l3086:	
  2162  0537  0823               	movf	___awdiv@quotient+1,w
  2163  0538  00F3               	movwf	?___awdiv+1
  2164  0539  0822               	movf	___awdiv@quotient,w
  2165  053A  00F2               	movwf	?___awdiv
  2166  053B  0008               	return
  2167  053C                     __end_of___awdiv:	
  2168                           
  2169                           	psect	text4
  2170  06DA                     __ptext4:	
  2171 ;; *************** function _setUnit *****************
  2172 ;; Defined at:
  2173 ;;		line 625 in file "powerspy.c"
  2174 ;; Parameters:    Size  Location     Type
  2175 ;;  u               3    5[COMMON] unsigned um
  2176 ;; Auto vars:     Size  Location     Type
  2177 ;;		None
  2178 ;; Return value:  Size  Location     Type
  2179 ;;                  1    wreg      void 
  2180 ;; Registers used:
  2181 ;;		wreg, status,2, status,0, pclath, cstack
  2182 ;; Tracked objects:
  2183 ;;		On entry : 0/0
  2184 ;;		On exit  : 0/0
  2185 ;;		Unchanged: 0/0
  2186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2187 ;;      Params:         3       0       0       0       0       0
  2188 ;;      Locals:         0       0       0       0       0       0
  2189 ;;      Temps:          0       3       0       0       0       0
  2190 ;;      Totals:         3       3       0       0       0       0
  2191 ;;Total ram usage:        6 bytes
  2192 ;; Hardware stack levels used:    1
  2193 ;; Hardware stack levels required when called:    2
  2194 ;; This function calls:
  2195 ;;		_so
  2196 ;; This function is called by:
  2197 ;;		_main
  2198 ;; This function uses a non-reentrant model
  2199 ;;
  2200                           
  2201                           
  2202                           ;psect for function _setUnit
  2203  06DA                     _setUnit:	
  2204                           
  2205                           ;powerspy.c: 627: so(u >> 16 & 0xff);
  2206                           
  2207                           ;incstack = 0
  2208                           ; Regs used in _setUnit: [wreg+status,2+status,0+pclath+cstack]
  2209  06DA  0875               	movf	setUnit@u,w
  2210  06DB  0020               	movlb	0	; select bank0
  2211  06DC  00A0               	movwf	??_setUnit
  2212  06DD  0876               	movf	setUnit@u+1,w
  2213  06DE  00A1               	movwf	??_setUnit+1
  2214  06DF  0877               	movf	setUnit@u+2,w
  2215  06E0  00A2               	movwf	??_setUnit+2
  2216  06E1  3010               	movlw	16
  2217  06E2                     u2985:	
  2218  06E2  36A2               	lsrf	??_setUnit+2,f
  2219  06E3  0CA1               	rrf	??_setUnit+1,f
  2220  06E4  0CA0               	rrf	??_setUnit,f
  2221  06E5  0B89               	decfsz	9,f
  2222  06E6  2EE2               	goto	u2985
  2223  06E7  0820               	movf	??_setUnit,w
  2224  06E8  3183  23B2  3186   	fcall	_so
  2225                           
  2226                           ;powerspy.c: 628: so(u >> 8 & 0xff);
  2227  06EB  0875               	movf	setUnit@u,w
  2228  06EC  0020               	movlb	0	; select bank0
  2229  06ED  00A0               	movwf	??_setUnit
  2230  06EE  0876               	movf	setUnit@u+1,w
  2231  06EF  00A1               	movwf	??_setUnit+1
  2232  06F0  0877               	movf	setUnit@u+2,w
  2233  06F1  00A2               	movwf	??_setUnit+2
  2234  06F2  3008               	movlw	8
  2235  06F3                     u2995:	
  2236  06F3  36A2               	lsrf	??_setUnit+2,f
  2237  06F4  0CA1               	rrf	??_setUnit+1,f
  2238  06F5  0CA0               	rrf	??_setUnit,f
  2239  06F6  0B89               	decfsz	9,f
  2240  06F7  2EF3               	goto	u2995
  2241  06F8  0820               	movf	??_setUnit,w
  2242  06F9  3183  23B2  3186   	fcall	_so
  2243                           
  2244                           ;powerspy.c: 629: so(u & 0xff);
  2245  06FC  0875               	movf	setUnit@u,w
  2246  06FD  3183  23B2         	fcall	_so
  2247  06FF  0008               	return
  2248  0700                     __end_of_setUnit:	
  2249                           
  2250                           	psect	text5
  2251  03B2                     __ptext5:	
  2252 ;; *************** function _so *****************
  2253 ;; Defined at:
  2254 ;;		line 477 in file "powerspy.c"
  2255 ;; Parameters:    Size  Location     Type
  2256 ;;  data            1    wreg     const unsigned char 
  2257 ;; Auto vars:     Size  Location     Type
  2258 ;;  data            1    3[COMMON] const unsigned char 
  2259 ;;  c               1    4[COMMON] unsigned char 
  2260 ;; Return value:  Size  Location     Type
  2261 ;;                  1    wreg      void 
  2262 ;; Registers used:
  2263 ;;		wreg, status,2, status,0
  2264 ;; Tracked objects:
  2265 ;;		On entry : 0/0
  2266 ;;		On exit  : 0/0
  2267 ;;		Unchanged: 0/0
  2268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2269 ;;      Params:         0       0       0       0       0       0
  2270 ;;      Locals:         2       0       0       0       0       0
  2271 ;;      Temps:          1       0       0       0       0       0
  2272 ;;      Totals:         3       0       0       0       0       0
  2273 ;;Total ram usage:        3 bytes
  2274 ;; Hardware stack levels used:    1
  2275 ;; Hardware stack levels required when called:    1
  2276 ;; This function calls:
  2277 ;;		Nothing
  2278 ;; This function is called by:
  2279 ;;		_setUnit
  2280 ;;		_setVal
  2281 ;;		_clearDisplay
  2282 ;;		_setNr
  2283 ;; This function uses a non-reentrant model
  2284 ;;
  2285                           
  2286                           
  2287                           ;psect for function _so
  2288  03B2                     _so:	
  2289                           
  2290                           ;incstack = 0
  2291                           ; Regs used in _so: [wreg+status,2+status,0]
  2292                           ;so@data stored from wreg
  2293  03B2  00F3               	movwf	so@data
  2294                           
  2295                           ;powerspy.c: 479: uint8_t c;
  2296                           ;powerspy.c: 480: for (c = 0; c < 8; c++) {
  2297  03B3  01F4               	clrf	so@c
  2298  03B4                     L4:	
  2299  03B4  3008               	movlw	8
  2300  03B5  0274               	subwf	so@c,w
  2301  03B6  1803               	btfsc	3,0
  2302  03B7  0008               	return
  2303                           
  2304                           ;powerspy.c: 481: RA7 = (data >> c) & 0x01;
  2305  03B8  0873               	movf	so@data,w
  2306  03B9  00F2               	movwf	??_so
  2307  03BA  0A74               	incf	so@c,w
  2308  03BB  2BBD               	goto	u1574
  2309  03BC                     u1575:	
  2310  03BC  36F2               	lsrf	??_so,f
  2311  03BD                     u1574:	
  2312  03BD  0B89               	decfsz	9,f
  2313  03BE  2BBC               	goto	u1575
  2314  03BF  1C72               	btfss	??_so,0
  2315  03C0  2BC4               	goto	u1580
  2316  03C1  0020               	movlb	0	; select bank0
  2317  03C2  178C               	bsf	12,7	;volatile
  2318  03C3  2BC6               	goto	l2022
  2319  03C4                     u1580:	
  2320  03C4  0020               	movlb	0	; select bank0
  2321  03C5  138C               	bcf	12,7	;volatile
  2322  03C6                     l2022:	
  2323                           
  2324                           ;powerspy.c: 482: __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop()
      +                          ; __nop(); __nop();
  2325  03C6  0000               	nop
  2326  03C7  0000               	nop
  2327  03C8  0000               	nop
  2328  03C9  0000               	nop
  2329  03CA  0000               	nop
  2330  03CB  0000               	nop
  2331  03CC  0000               	nop
  2332  03CD  0000               	nop
  2333  03CE  0000               	nop
  2334  03CF  0000               	nop
  2335                           
  2336                           ;powerspy.c: 483: __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop()
      +                          ; __nop(); __nop();
  2337  03D0  0000               	nop
  2338  03D1  0000               	nop
  2339  03D2  0000               	nop
  2340  03D3  0000               	nop
  2341  03D4  0000               	nop
  2342  03D5  0000               	nop
  2343  03D6  0000               	nop
  2344  03D7  0000               	nop
  2345  03D8  0000               	nop
  2346  03D9  0000               	nop
  2347                           
  2348                           ;powerspy.c: 484: __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop()
      +                          ; __nop(); __nop();
  2349  03DA  0000               	nop
  2350  03DB  0000               	nop
  2351  03DC  0000               	nop
  2352  03DD  0000               	nop
  2353  03DE  0000               	nop
  2354  03DF  0000               	nop
  2355  03E0  0000               	nop
  2356  03E1  0000               	nop
  2357  03E2  0000               	nop
  2358  03E3  0000               	nop
  2359                           
  2360                           ;powerspy.c: 485: __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop()
      +                          ; __nop(); __nop();
  2361  03E4  0000               	nop
  2362  03E5  0000               	nop
  2363  03E6  0000               	nop
  2364  03E7  0000               	nop
  2365  03E8  0000               	nop
  2366  03E9  0000               	nop
  2367  03EA  0000               	nop
  2368  03EB  0000               	nop
  2369  03EC  0000               	nop
  2370  03ED  0000               	nop
  2371                           
  2372                           ;powerspy.c: 486: RA4 = 1;
  2373  03EE  0020               	movlb	0	; select bank0
  2374  03EF  160C               	bsf	12,4	;volatile
  2375                           
  2376                           ;powerspy.c: 487: __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop()
      +                          ; __nop(); __nop();
  2377  03F0  0000               	nop
  2378  03F1  0000               	nop
  2379  03F2  0000               	nop
  2380  03F3  0000               	nop
  2381  03F4  0000               	nop
  2382  03F5  0000               	nop
  2383  03F6  0000               	nop
  2384  03F7  0000               	nop
  2385  03F8  0000               	nop
  2386  03F9  0000               	nop
  2387                           
  2388                           ;powerspy.c: 488: __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop()
      +                          ; __nop(); __nop();
  2389  03FA  0000               	nop
  2390  03FB  0000               	nop
  2391  03FC  0000               	nop
  2392  03FD  0000               	nop
  2393  03FE  0000               	nop
  2394  03FF  0000               	nop
  2395  0400  0000               	nop
  2396  0401  0000               	nop
  2397  0402  0000               	nop
  2398  0403  0000               	nop
  2399                           
  2400                           ;powerspy.c: 489: __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop()
      +                          ; __nop(); __nop();
  2401  0404  0000               	nop
  2402  0405  0000               	nop
  2403  0406  0000               	nop
  2404  0407  0000               	nop
  2405  0408  0000               	nop
  2406  0409  0000               	nop
  2407  040A  0000               	nop
  2408  040B  0000               	nop
  2409  040C  0000               	nop
  2410  040D  0000               	nop
  2411                           
  2412                           ;powerspy.c: 490: __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop()
      +                          ; __nop(); __nop();
  2413  040E  0000               	nop
  2414  040F  0000               	nop
  2415  0410  0000               	nop
  2416  0411  0000               	nop
  2417  0412  0000               	nop
  2418  0413  0000               	nop
  2419  0414  0000               	nop
  2420  0415  0000               	nop
  2421  0416  0000               	nop
  2422  0417  0000               	nop
  2423                           
  2424                           ;powerspy.c: 491: RA4 = 0;
  2425  0418  0020               	movlb	0	; select bank0
  2426  0419  120C               	bcf	12,4	;volatile
  2427  041A  3001               	movlw	1
  2428  041B  00F2               	movwf	??_so
  2429  041C  0872               	movf	??_so,w
  2430  041D  07F4               	addwf	so@c,f
  2431  041E  2BB4               	goto	L4
  2432  041F                     __end_of_so:	
  2433                           
  2434                           	psect	text6
  2435  079D                     __ptext6:	
  2436 ;; *************** function _setLED *****************
  2437 ;; Defined at:
  2438 ;;		line 617 in file "powerspy.c"
  2439 ;; Parameters:    Size  Location     Type
  2440 ;;  g               1    wreg     unsigned char 
  2441 ;;  r               1    3[COMMON] unsigned char 
  2442 ;;  b               1    4[COMMON] unsigned char 
  2443 ;; Auto vars:     Size  Location     Type
  2444 ;;  g               1    5[COMMON] unsigned char 
  2445 ;; Return value:  Size  Location     Type
  2446 ;;                  1    wreg      void 
  2447 ;; Registers used:
  2448 ;;		wreg, status,2, status,0, pclath, cstack
  2449 ;; Tracked objects:
  2450 ;;		On entry : 0/0
  2451 ;;		On exit  : 0/0
  2452 ;;		Unchanged: 0/0
  2453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2454 ;;      Params:         2       0       0       0       0       0
  2455 ;;      Locals:         1       0       0       0       0       0
  2456 ;;      Temps:          0       0       0       0       0       0
  2457 ;;      Totals:         3       0       0       0       0       0
  2458 ;;Total ram usage:        3 bytes
  2459 ;; Hardware stack levels used:    1
  2460 ;; Hardware stack levels required when called:    2
  2461 ;; This function calls:
  2462 ;;		_sendColour
  2463 ;; This function is called by:
  2464 ;;		_main
  2465 ;; This function uses a non-reentrant model
  2466 ;;
  2467                           
  2468                           
  2469                           ;psect for function _setLED
  2470  079D                     _setLED:	
  2471                           
  2472                           ;incstack = 0
  2473                           ; Regs used in _setLED: [wreg+status,2+status,0+pclath+cstack]
  2474                           ;setLED@g stored from wreg
  2475  079D  00F5               	movwf	setLED@g
  2476                           
  2477                           ;powerspy.c: 619: sendColour(g);
  2478  079E  0875               	movf	setLED@g,w
  2479  079F  3183  2310  3187   	fcall	_sendColour
  2480                           
  2481                           ;powerspy.c: 620: sendColour(r);
  2482  07A2  0873               	movf	setLED@r,w
  2483  07A3  3183  2310  3187   	fcall	_sendColour
  2484                           
  2485                           ;powerspy.c: 621: sendColour(b);
  2486  07A6  0874               	movf	setLED@b,w
  2487  07A7  3183  2310         	fcall	_sendColour
  2488                           
  2489                           ;powerspy.c: 622: led_rest = TMR1;
  2490  07A9  0020               	movlb	0	; select bank0
  2491  07AA  0817               	movf	23,w	;volatile
  2492  07AB  00E4               	movwf	_led_rest+1
  2493  07AC  0816               	movf	22,w	;volatile
  2494  07AD  00E3               	movwf	_led_rest
  2495  07AE  0008               	return
  2496  07AF                     __end_of_setLED:	
  2497                           
  2498                           	psect	text7
  2499  0310                     __ptext7:	
  2500 ;; *************** function _sendColour *****************
  2501 ;; Defined at:
  2502 ;;		line 519 in file "powerspy.c"
  2503 ;; Parameters:    Size  Location     Type
  2504 ;;  c               1    wreg     unsigned char 
  2505 ;; Auto vars:     Size  Location     Type
  2506 ;;  c               1    2[COMMON] unsigned char 
  2507 ;; Return value:  Size  Location     Type
  2508 ;;                  1    wreg      void 
  2509 ;; Registers used:
  2510 ;;		wreg
  2511 ;; Tracked objects:
  2512 ;;		On entry : 0/0
  2513 ;;		On exit  : 0/0
  2514 ;;		Unchanged: 0/0
  2515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2516 ;;      Params:         0       0       0       0       0       0
  2517 ;;      Locals:         1       0       0       0       0       0
  2518 ;;      Temps:          0       0       0       0       0       0
  2519 ;;      Totals:         1       0       0       0       0       0
  2520 ;;Total ram usage:        1 bytes
  2521 ;; Hardware stack levels used:    1
  2522 ;; Hardware stack levels required when called:    1
  2523 ;; This function calls:
  2524 ;;		Nothing
  2525 ;; This function is called by:
  2526 ;;		_setLED
  2527 ;; This function uses a non-reentrant model
  2528 ;;
  2529                           
  2530                           
  2531                           ;psect for function _sendColour
  2532  0310                     _sendColour:	
  2533                           
  2534                           ;incstack = 0
  2535                           ; Regs used in _sendColour: [wreg]
  2536                           ;sendColour@c stored from wreg
  2537  0310  00F2               	movwf	sendColour@c
  2538                           
  2539                           ;powerspy.c: 521: if (c & 0b10000000) { RA6=1; __nop(); __nop(); __nop(); __nop(); RA6=0
      +                          ; __nop(); }
  2540  0311  1FF2               	btfss	sendColour@c,7
  2541  0312  2B1D               	goto	l305
  2542  0313  0020               	movlb	0	; select bank0
  2543  0314  170C               	bsf	12,6	;volatile
  2544  0315  0000               	nop
  2545  0316  0000               	nop
  2546  0317  0000               	nop
  2547  0318  0000               	nop
  2548  0319  0020               	movlb	0	; select bank0
  2549  031A  130C               	bcf	12,6	;volatile
  2550  031B  0000               	nop
  2551  031C  2B25               	goto	l2192
  2552  031D                     l305:	
  2553                           
  2554                           ;powerspy.c: 522: else { RA6=1; __nop(); RA6=0; __nop(); __nop(); __nop(); };
  2555  031D  0020               	movlb	0	; select bank0
  2556  031E  170C               	bsf	12,6	;volatile
  2557  031F  0000               	nop
  2558  0320  0020               	movlb	0	; select bank0
  2559  0321  130C               	bcf	12,6	;volatile
  2560  0322  0000               	nop
  2561  0323  0000               	nop
  2562  0324  0000               	nop
  2563  0325                     l2192:	
  2564                           
  2565                           ;powerspy.c: 524: if (c & 0b01000000) { RA6=1; __nop(); __nop(); __nop(); __nop(); RA6=0
      +                          ; __nop(); }
  2566  0325  1F72               	btfss	sendColour@c,6
  2567  0326  2B31               	goto	l307
  2568  0327  0020               	movlb	0	; select bank0
  2569  0328  170C               	bsf	12,6	;volatile
  2570  0329  0000               	nop
  2571  032A  0000               	nop
  2572  032B  0000               	nop
  2573  032C  0000               	nop
  2574  032D  0020               	movlb	0	; select bank0
  2575  032E  130C               	bcf	12,6	;volatile
  2576  032F  0000               	nop
  2577  0330  2B39               	goto	l2196
  2578  0331                     l307:	
  2579                           
  2580                           ;powerspy.c: 525: else { RA6=1; __nop(); RA6=0; __nop(); __nop(); __nop(); };
  2581  0331  0020               	movlb	0	; select bank0
  2582  0332  170C               	bsf	12,6	;volatile
  2583  0333  0000               	nop
  2584  0334  0020               	movlb	0	; select bank0
  2585  0335  130C               	bcf	12,6	;volatile
  2586  0336  0000               	nop
  2587  0337  0000               	nop
  2588  0338  0000               	nop
  2589  0339                     l2196:	
  2590                           
  2591                           ;powerspy.c: 527: if (c & 0b00100000) { RA6=1; __nop(); __nop(); __nop(); __nop(); RA6=0
      +                          ; __nop(); }
  2592  0339  1EF2               	btfss	sendColour@c,5
  2593  033A  2B45               	goto	l309
  2594  033B  0020               	movlb	0	; select bank0
  2595  033C  170C               	bsf	12,6	;volatile
  2596  033D  0000               	nop
  2597  033E  0000               	nop
  2598  033F  0000               	nop
  2599  0340  0000               	nop
  2600  0341  0020               	movlb	0	; select bank0
  2601  0342  130C               	bcf	12,6	;volatile
  2602  0343  0000               	nop
  2603  0344  2B4D               	goto	l2200
  2604  0345                     l309:	
  2605                           
  2606                           ;powerspy.c: 528: else { RA6=1; __nop(); RA6=0; __nop(); __nop(); __nop(); };
  2607  0345  0020               	movlb	0	; select bank0
  2608  0346  170C               	bsf	12,6	;volatile
  2609  0347  0000               	nop
  2610  0348  0020               	movlb	0	; select bank0
  2611  0349  130C               	bcf	12,6	;volatile
  2612  034A  0000               	nop
  2613  034B  0000               	nop
  2614  034C  0000               	nop
  2615  034D                     l2200:	
  2616                           
  2617                           ;powerspy.c: 530: if (c & 0b00010000) { RA6=1; __nop(); __nop(); __nop(); __nop(); RA6=0
      +                          ; __nop(); }
  2618  034D  1E72               	btfss	sendColour@c,4
  2619  034E  2B59               	goto	l311
  2620  034F  0020               	movlb	0	; select bank0
  2621  0350  170C               	bsf	12,6	;volatile
  2622  0351  0000               	nop
  2623  0352  0000               	nop
  2624  0353  0000               	nop
  2625  0354  0000               	nop
  2626  0355  0020               	movlb	0	; select bank0
  2627  0356  130C               	bcf	12,6	;volatile
  2628  0357  0000               	nop
  2629  0358  2B61               	goto	l2204
  2630  0359                     l311:	
  2631                           
  2632                           ;powerspy.c: 531: else { RA6=1; __nop(); RA6=0; __nop(); __nop(); __nop(); };
  2633  0359  0020               	movlb	0	; select bank0
  2634  035A  170C               	bsf	12,6	;volatile
  2635  035B  0000               	nop
  2636  035C  0020               	movlb	0	; select bank0
  2637  035D  130C               	bcf	12,6	;volatile
  2638  035E  0000               	nop
  2639  035F  0000               	nop
  2640  0360  0000               	nop
  2641  0361                     l2204:	
  2642                           
  2643                           ;powerspy.c: 533: if (c & 0b00001000) { RA6=1; __nop(); __nop(); __nop(); __nop(); RA6=0
      +                          ; __nop(); }
  2644  0361  1DF2               	btfss	sendColour@c,3
  2645  0362  2B6D               	goto	l313
  2646  0363  0020               	movlb	0	; select bank0
  2647  0364  170C               	bsf	12,6	;volatile
  2648  0365  0000               	nop
  2649  0366  0000               	nop
  2650  0367  0000               	nop
  2651  0368  0000               	nop
  2652  0369  0020               	movlb	0	; select bank0
  2653  036A  130C               	bcf	12,6	;volatile
  2654  036B  0000               	nop
  2655  036C  2B75               	goto	l2208
  2656  036D                     l313:	
  2657                           
  2658                           ;powerspy.c: 534: else { RA6=1; __nop(); RA6=0; __nop(); __nop(); __nop(); };
  2659  036D  0020               	movlb	0	; select bank0
  2660  036E  170C               	bsf	12,6	;volatile
  2661  036F  0000               	nop
  2662  0370  0020               	movlb	0	; select bank0
  2663  0371  130C               	bcf	12,6	;volatile
  2664  0372  0000               	nop
  2665  0373  0000               	nop
  2666  0374  0000               	nop
  2667  0375                     l2208:	
  2668                           
  2669                           ;powerspy.c: 536: if (c & 0b00000100) { RA6=1; __nop(); __nop(); __nop(); __nop(); RA6=0
      +                          ; __nop(); }
  2670  0375  1D72               	btfss	sendColour@c,2
  2671  0376  2B81               	goto	l315
  2672  0377  0020               	movlb	0	; select bank0
  2673  0378  170C               	bsf	12,6	;volatile
  2674  0379  0000               	nop
  2675  037A  0000               	nop
  2676  037B  0000               	nop
  2677  037C  0000               	nop
  2678  037D  0020               	movlb	0	; select bank0
  2679  037E  130C               	bcf	12,6	;volatile
  2680  037F  0000               	nop
  2681  0380  2B89               	goto	l2212
  2682  0381                     l315:	
  2683                           
  2684                           ;powerspy.c: 537: else { RA6=1; __nop(); RA6=0; __nop(); __nop(); __nop(); };
  2685  0381  0020               	movlb	0	; select bank0
  2686  0382  170C               	bsf	12,6	;volatile
  2687  0383  0000               	nop
  2688  0384  0020               	movlb	0	; select bank0
  2689  0385  130C               	bcf	12,6	;volatile
  2690  0386  0000               	nop
  2691  0387  0000               	nop
  2692  0388  0000               	nop
  2693  0389                     l2212:	
  2694                           
  2695                           ;powerspy.c: 539: if (c & 0b00000010) { RA6=1; __nop(); __nop(); __nop(); __nop(); RA6=0
      +                          ; __nop(); }
  2696  0389  1CF2               	btfss	sendColour@c,1
  2697  038A  2B95               	goto	l317
  2698  038B  0020               	movlb	0	; select bank0
  2699  038C  170C               	bsf	12,6	;volatile
  2700  038D  0000               	nop
  2701  038E  0000               	nop
  2702  038F  0000               	nop
  2703  0390  0000               	nop
  2704  0391  0020               	movlb	0	; select bank0
  2705  0392  130C               	bcf	12,6	;volatile
  2706  0393  0000               	nop
  2707  0394  2B9D               	goto	l2216
  2708  0395                     l317:	
  2709                           
  2710                           ;powerspy.c: 540: else { RA6=1; __nop(); RA6=0; __nop(); __nop(); __nop(); };
  2711  0395  0020               	movlb	0	; select bank0
  2712  0396  170C               	bsf	12,6	;volatile
  2713  0397  0000               	nop
  2714  0398  0020               	movlb	0	; select bank0
  2715  0399  130C               	bcf	12,6	;volatile
  2716  039A  0000               	nop
  2717  039B  0000               	nop
  2718  039C  0000               	nop
  2719  039D                     l2216:	
  2720                           
  2721                           ;powerspy.c: 542: if (c & 0b00000001) { RA6=1; __nop(); __nop(); __nop(); __nop(); RA6=0
      +                          ; __nop(); }
  2722  039D  1C72               	btfss	sendColour@c,0
  2723  039E  2BA9               	goto	l319
  2724  039F  0020               	movlb	0	; select bank0
  2725  03A0  170C               	bsf	12,6	;volatile
  2726  03A1  0000               	nop
  2727  03A2  0000               	nop
  2728  03A3  0000               	nop
  2729  03A4  0000               	nop
  2730  03A5  0020               	movlb	0	; select bank0
  2731  03A6  130C               	bcf	12,6	;volatile
  2732  03A7  0000               	nop
  2733  03A8  0008               	return
  2734  03A9                     l319:	
  2735                           
  2736                           ;powerspy.c: 543: else { RA6=1; __nop(); RA6=0; __nop(); __nop(); __nop(); };
  2737  03A9  0020               	movlb	0	; select bank0
  2738  03AA  170C               	bsf	12,6	;volatile
  2739  03AB  0000               	nop
  2740  03AC  0020               	movlb	0	; select bank0
  2741  03AD  130C               	bcf	12,6	;volatile
  2742  03AE  0000               	nop
  2743  03AF  0000               	nop
  2744  03B0  0000               	nop
  2745  03B1  0008               	return
  2746  03B2                     __end_of_sendColour:	
  2747                           
  2748                           	psect	text8
  2749  07BF                     __ptext8:	
  2750 ;; *************** function _sendUInt8 *****************
  2751 ;; Defined at:
  2752 ;;		line 200 in file "message.c"
  2753 ;; Parameters:    Size  Location     Type
  2754 ;;  i               1    wreg     unsigned char 
  2755 ;; Auto vars:     Size  Location     Type
  2756 ;;  i               1    5[COMMON] unsigned char 
  2757 ;; Return value:  Size  Location     Type
  2758 ;;                  1    wreg      void 
  2759 ;; Registers used:
  2760 ;;		wreg, status,2, status,0, pclath, cstack
  2761 ;; Tracked objects:
  2762 ;;		On entry : 0/0
  2763 ;;		On exit  : 0/0
  2764 ;;		Unchanged: 0/0
  2765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2766 ;;      Params:         0       0       0       0       0       0
  2767 ;;      Locals:         1       0       0       0       0       0
  2768 ;;      Temps:          0       0       0       0       0       0
  2769 ;;      Totals:         1       0       0       0       0       0
  2770 ;;Total ram usage:        1 bytes
  2771 ;; Hardware stack levels used:    1
  2772 ;; Hardware stack levels required when called:    2
  2773 ;; This function calls:
  2774 ;;		__sendchar_
  2775 ;; This function is called by:
  2776 ;;		_main
  2777 ;; This function uses a non-reentrant model
  2778 ;;
  2779                           
  2780                           
  2781                           ;psect for function _sendUInt8
  2782  07BF                     _sendUInt8:	
  2783                           
  2784                           ;incstack = 0
  2785                           ; Regs used in _sendUInt8: [wreg+status,2+status,0+pclath+cstack]
  2786                           ;sendUInt8@i stored from wreg
  2787  07BF  00F5               	movwf	sendUInt8@i
  2788                           
  2789                           ;message.c: 202: _sendchar_(2);
  2790  07C0  3002               	movlw	2
  2791  07C1  3187  27AF  3187   	fcall	__sendchar_
  2792                           
  2793                           ;message.c: 203: _sendchar_('6');
  2794  07C4  3036               	movlw	54
  2795  07C5  3187  27AF  3187   	fcall	__sendchar_
  2796                           
  2797                           ;message.c: 204: _sendchar_(i);
  2798  07C8  0875               	movf	sendUInt8@i,w
  2799  07C9  3187  27AF         	fcall	__sendchar_
  2800  07CB  0008               	return
  2801  07CC                     __end_of_sendUInt8:	
  2802                           
  2803                           	psect	text9
  2804  0657                     __ptext9:	
  2805 ;; *************** function _sendInt24 *****************
  2806 ;; Defined at:
  2807 ;;		line 181 in file "message.c"
  2808 ;; Parameters:    Size  Location     Type
  2809 ;;  i               3    5[COMMON] m
  2810 ;; Auto vars:     Size  Location     Type
  2811 ;;		None
  2812 ;; Return value:  Size  Location     Type
  2813 ;;                  1    wreg      void 
  2814 ;; Registers used:
  2815 ;;		wreg, status,2, status,0, pclath, cstack
  2816 ;; Tracked objects:
  2817 ;;		On entry : 0/0
  2818 ;;		On exit  : 0/0
  2819 ;;		Unchanged: 0/0
  2820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2821 ;;      Params:         3       0       0       0       0       0
  2822 ;;      Locals:         0       0       0       0       0       0
  2823 ;;      Temps:          0       4       0       0       0       0
  2824 ;;      Totals:         3       4       0       0       0       0
  2825 ;;Total ram usage:        7 bytes
  2826 ;; Hardware stack levels used:    1
  2827 ;; Hardware stack levels required when called:    2
  2828 ;; This function calls:
  2829 ;;		__sendchar_
  2830 ;; This function is called by:
  2831 ;;		_main
  2832 ;; This function uses a non-reentrant model
  2833 ;;
  2834                           
  2835                           
  2836                           ;psect for function _sendInt24
  2837  0657                     _sendInt24:	
  2838                           
  2839                           ;message.c: 183: _sendchar_(2);
  2840                           
  2841                           ;incstack = 0
  2842                           ; Regs used in _sendInt24: [wreg+status,2+status,0+pclath+cstack]
  2843  0657  3002               	movlw	2
  2844  0658  3187  27AF  3186   	fcall	__sendchar_
  2845                           
  2846                           ;message.c: 184: _sendchar_('4');
  2847  065B  3034               	movlw	52
  2848  065C  3187  27AF  3186   	fcall	__sendchar_
  2849                           
  2850                           ;message.c: 185: _sendchar_((char) (i >> 16 & 0xff));
  2851  065F  0875               	movf	sendInt24@i,w
  2852  0660  0020               	movlb	0	; select bank0
  2853  0661  00A0               	movwf	??_sendInt24
  2854  0662  0876               	movf	sendInt24@i+1,w
  2855  0663  00A1               	movwf	??_sendInt24+1
  2856  0664  0877               	movf	sendInt24@i+2,w
  2857  0665  00A2               	movwf	??_sendInt24+2
  2858  0666  3010               	movlw	16
  2859  0667  00A3               	movwf	??_sendInt24+3
  2860  0668                     u3025:	
  2861  0668  0D22               	rlf	??_sendInt24+2,w
  2862  0669  0CA2               	rrf	??_sendInt24+2,f
  2863  066A  0CA1               	rrf	??_sendInt24+1,f
  2864  066B  0CA0               	rrf	??_sendInt24,f
  2865  066C  0BA3               	decfsz	??_sendInt24+3,f
  2866  066D  2E68               	goto	u3025
  2867  066E  0820               	movf	??_sendInt24,w
  2868  066F  3187  27AF  3186   	fcall	__sendchar_
  2869                           
  2870                           ;message.c: 186: _sendchar_((char) (i >> 8 & 0xff));
  2871  0672  0875               	movf	sendInt24@i,w
  2872  0673  0020               	movlb	0	; select bank0
  2873  0674  00A0               	movwf	??_sendInt24
  2874  0675  0876               	movf	sendInt24@i+1,w
  2875  0676  00A1               	movwf	??_sendInt24+1
  2876  0677  0877               	movf	sendInt24@i+2,w
  2877  0678  00A2               	movwf	??_sendInt24+2
  2878  0679  3008               	movlw	8
  2879  067A  00A3               	movwf	??_sendInt24+3
  2880  067B                     u3035:	
  2881  067B  0D22               	rlf	??_sendInt24+2,w
  2882  067C  0CA2               	rrf	??_sendInt24+2,f
  2883  067D  0CA1               	rrf	??_sendInt24+1,f
  2884  067E  0CA0               	rrf	??_sendInt24,f
  2885  067F  0BA3               	decfsz	??_sendInt24+3,f
  2886  0680  2E7B               	goto	u3035
  2887  0681  0820               	movf	??_sendInt24,w
  2888  0682  3187  27AF  3186   	fcall	__sendchar_
  2889                           
  2890                           ;message.c: 187: _sendchar_((char) (i & 0xff));
  2891  0685  0875               	movf	sendInt24@i,w
  2892  0686  3187  27AF         	fcall	__sendchar_
  2893  0688  0008               	return
  2894  0689                     __end_of_sendInt24:	
  2895                           
  2896                           	psect	text10
  2897  07AF                     __ptext10:	
  2898 ;; *************** function __sendchar_ *****************
  2899 ;; Defined at:
  2900 ;;		line 159 in file "message.c"
  2901 ;; Parameters:    Size  Location     Type
  2902 ;;  c               1    wreg     unsigned char 
  2903 ;; Auto vars:     Size  Location     Type
  2904 ;;  c               1    4[COMMON] unsigned char 
  2905 ;; Return value:  Size  Location     Type
  2906 ;;                  1    wreg      void 
  2907 ;; Registers used:
  2908 ;;		wreg
  2909 ;; Tracked objects:
  2910 ;;		On entry : 0/0
  2911 ;;		On exit  : 0/0
  2912 ;;		Unchanged: 0/0
  2913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2914 ;;      Params:         0       0       0       0       0       0
  2915 ;;      Locals:         1       0       0       0       0       0
  2916 ;;      Temps:          2       0       0       0       0       0
  2917 ;;      Totals:         3       0       0       0       0       0
  2918 ;;Total ram usage:        3 bytes
  2919 ;; Hardware stack levels used:    1
  2920 ;; Hardware stack levels required when called:    1
  2921 ;; This function calls:
  2922 ;;		Nothing
  2923 ;; This function is called by:
  2924 ;;		_sendInt24
  2925 ;;		_sendUInt8
  2926 ;;		_sendInt8
  2927 ;;		_sendInt16
  2928 ;;		_sendInt32
  2929 ;;		_sendUInt16
  2930 ;;		_sendUInt24
  2931 ;;		_sendUInt32
  2932 ;;		_sendFloat
  2933 ;;		_sendString
  2934 ;; This function uses a non-reentrant model
  2935 ;;
  2936                           
  2937                           
  2938                           ;psect for function __sendchar_
  2939  07AF                     __sendchar_:	
  2940                           
  2941                           ;incstack = 0
  2942                           ; Regs used in __sendchar_: [wreg]
  2943                           ;__sendchar_@c stored from wreg
  2944  07AF  00F4               	movwf	__sendchar_@c
  2945                           
  2946                           ;message.c: 161: TXREG = c;
  2947  07B0  0874               	movf	__sendchar_@c,w
  2948  07B1  0023               	movlb	3	; select bank3
  2949  07B2  009A               	movwf	26	;volatile
  2950  07B3                     l471:	
  2951                           ;message.c: 162: while (!TRMT);
  2952                           
  2953  07B3  1C9E               	btfss	30,1	;volatile
  2954  07B4  2FB3               	goto	l471
  2955                           
  2956                           ;message.c: 163: _delay((unsigned long)((1)*(32000000/4000.0)));
  2957  07B5  300B               	movlw	11
  2958  07B6  00F3               	movwf	??__sendchar_+1
  2959  07B7  3062               	movlw	98
  2960  07B8  00F2               	movwf	??__sendchar_
  2961  07B9                     u3137:	
  2962  07B9  0BF2               	decfsz	??__sendchar_,f
  2963  07BA  2FB9               	goto	u3137
  2964  07BB  0BF3               	decfsz	??__sendchar_+1,f
  2965  07BC  2FB9               	goto	u3137
  2966  07BD  0000               	nop
  2967  07BE  0008               	return
  2968  07BF                     __end_of__sendchar_:	
  2969                           
  2970                           	psect	text11
  2971  0002                     __ptext11:	
  2972 ;; *************** function _readVoltage *****************
  2973 ;; Defined at:
  2974 ;;		line 432 in file "powerspy.c"
  2975 ;; Parameters:    Size  Location     Type
  2976 ;;		None
  2977 ;; Auto vars:     Size  Location     Type
  2978 ;;		None
  2979 ;; Return value:  Size  Location     Type
  2980 ;;                  1    wreg      unsigned char 
  2981 ;; Registers used:
  2982 ;;		wreg
  2983 ;; Tracked objects:
  2984 ;;		On entry : 0/0
  2985 ;;		On exit  : 0/0
  2986 ;;		Unchanged: 0/0
  2987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2988 ;;      Params:         0       0       0       0       0       0
  2989 ;;      Locals:         0       0       0       0       0       0
  2990 ;;      Temps:          0       0       0       0       0       0
  2991 ;;      Totals:         0       0       0       0       0       0
  2992 ;;Total ram usage:        0 bytes
  2993 ;; Hardware stack levels used:    1
  2994 ;; Hardware stack levels required when called:    1
  2995 ;; This function calls:
  2996 ;;		Nothing
  2997 ;; This function is called by:
  2998 ;;		_main
  2999 ;; This function uses a non-reentrant model
  3000 ;;
  3001                           
  3002                           
  3003                           ;psect for function _readVoltage
  3004  0002                     _readVoltage:	
  3005                           
  3006                           ;powerspy.c: 434: return 230;
  3007                           
  3008                           ;incstack = 0
  3009                           ; Regs used in _readVoltage: [wreg]
  3010  0002  30E6               	movlw	230
  3011  0003  0008               	return
  3012  0004                     __end_of_readVoltage:	
  3013                           
  3014                           	psect	text12
  3015  078A                     __ptext12:	
  3016 ;; *************** function _readVdd *****************
  3017 ;; Defined at:
  3018 ;;		line 459 in file "powerspy.c"
  3019 ;; Parameters:    Size  Location     Type
  3020 ;;		None
  3021 ;; Auto vars:     Size  Location     Type
  3022 ;;		None
  3023 ;; Return value:  Size  Location     Type
  3024 ;;                  2    4[COMMON] unsigned short 
  3025 ;; Registers used:
  3026 ;;		wreg, status,2, status,0, pclath, cstack
  3027 ;; Tracked objects:
  3028 ;;		On entry : 0/0
  3029 ;;		On exit  : 0/0
  3030 ;;		Unchanged: 0/0
  3031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3032 ;;      Params:         2       0       0       0       0       0
  3033 ;;      Locals:         0       0       0       0       0       0
  3034 ;;      Temps:          2       0       0       0       0       0
  3035 ;;      Totals:         4       0       0       0       0       0
  3036 ;;Total ram usage:        4 bytes
  3037 ;; Hardware stack levels used:    1
  3038 ;; Hardware stack levels required when called:    2
  3039 ;; This function calls:
  3040 ;;		_adc
  3041 ;; This function is called by:
  3042 ;;		_main
  3043 ;; This function uses a non-reentrant model
  3044 ;;
  3045                           
  3046                           
  3047                           ;psect for function _readVdd
  3048  078A                     _readVdd:	
  3049                           
  3050                           ;powerspy.c: 461: ADFM = 1;
  3051                           
  3052                           ;incstack = 0
  3053                           ; Regs used in _readVdd: [wreg+status,2+status,0+pclath+cstack]
  3054  078A  0021               	movlb	1	; select bank1
  3055  078B  179E               	bsf	30,7	;volatile
  3056                           
  3057                           ;powerspy.c: 462: adc(0b00011111);
  3058  078C  301F               	movlw	31
  3059  078D  3185  258D         	fcall	_adc
  3060                           
  3061                           ;powerspy.c: 468: return ADRES<<2;
  3062  078F  0021               	movlb	1	; select bank1
  3063  0790  081C               	movf	28,w	;volatile
  3064  0791  00F7               	movwf	??_readVdd+1
  3065  0792  081B               	movf	27,w	;volatile
  3066  0793  00F6               	movwf	??_readVdd
  3067  0794  35F6               	lslf	??_readVdd,f
  3068  0795  0DF7               	rlf	??_readVdd+1,f
  3069  0796  35F6               	lslf	??_readVdd,f
  3070  0797  0DF7               	rlf	??_readVdd+1,f
  3071  0798  0876               	movf	??_readVdd,w
  3072  0799  00F4               	movwf	?_readVdd
  3073  079A  0877               	movf	??_readVdd+1,w
  3074  079B  00F5               	movwf	?_readVdd+1
  3075  079C  0008               	return
  3076  079D                     __end_of_readVdd:	
  3077                           
  3078                           	psect	text13
  3079  053C                     __ptext13:	
  3080 ;; *************** function _readCurrent *****************
  3081 ;; Defined at:
  3082 ;;		line 442 in file "powerspy.c"
  3083 ;; Parameters:    Size  Location     Type
  3084 ;;		None
  3085 ;; Auto vars:     Size  Location     Type
  3086 ;;		None
  3087 ;; Return value:  Size  Location     Type
  3088 ;;                  3   25[BANK0 ] m
  3089 ;; Registers used:
  3090 ;;		wreg, status,2, status,0, pclath, cstack
  3091 ;; Tracked objects:
  3092 ;;		On entry : 0/0
  3093 ;;		On exit  : 0/0
  3094 ;;		Unchanged: 0/0
  3095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3096 ;;      Params:         0       3       0       0       0       0
  3097 ;;      Locals:         0       0       0       0       0       0
  3098 ;;      Temps:          0       6       0       0       0       0
  3099 ;;      Totals:         0       9       0       0       0       0
  3100 ;;Total ram usage:        9 bytes
  3101 ;; Hardware stack levels used:    1
  3102 ;; Hardware stack levels required when called:    2
  3103 ;; This function calls:
  3104 ;;		___atdiv
  3105 ;;		___tmul
  3106 ;;		___wmul
  3107 ;;		_adc
  3108 ;; This function is called by:
  3109 ;;		_main
  3110 ;; This function uses a non-reentrant model
  3111 ;;
  3112                           
  3113                           
  3114                           ;psect for function _readCurrent
  3115  053C                     _readCurrent:	
  3116                           
  3117                           ;powerspy.c: 450: ADFM = 1;
  3118                           
  3119                           ;incstack = 0
  3120                           ; Regs used in _readCurrent: [wreg+status,2+status,0+pclath+cstack]
  3121  053C  0021               	movlb	1	; select bank1
  3122  053D  179E               	bsf	30,7	;volatile
  3123                           
  3124                           ;powerspy.c: 451: adc(7);
  3125  053E  3007               	movlw	7
  3126  053F  3185  258D  3185   	fcall	_adc
  3127                           
  3128                           ;powerspy.c: 456: return (1000 * (5 * (ADRES + i_u_diode_offs) + i_u_offs)) / 1024;
  3129  0542  3000               	movlw	0
  3130  0543  0020               	movlb	0	; select bank0
  3131  0544  00AD               	movwf	___atdiv@divisor
  3132  0545  3004               	movlw	4
  3133  0546  00AE               	movwf	___atdiv@divisor+1
  3134  0547  3000               	movlw	0
  3135  0548  00AF               	movwf	___atdiv@divisor+2
  3136  0549  086A               	movf	_i_u_offs,w
  3137  054A  00BC               	movwf	??_readCurrent
  3138  054B  086B               	movf	_i_u_offs+1,w
  3139  054C  00BD               	movwf	??_readCurrent+1
  3140  054D  086C               	movf	_i_u_offs+2,w
  3141  054E  00BE               	movwf	??_readCurrent+2
  3142  054F  086D               	movf	_i_u_diode_offs,w
  3143  0550  0021               	movlb	1	; select bank1
  3144  0551  071B               	addwf	27,w	;volatile
  3145  0552  0020               	movlb	0	; select bank0
  3146  0553  00A0               	movwf	___wmul@multiplier
  3147  0554  0021               	movlb	1	; select bank1
  3148  0555  081C               	movf	28,w	;volatile
  3149  0556  1803               	skipnc
  3150  0557  0A1C               	incf	28,w	;volatile
  3151  0558  0020               	movlb	0	; select bank0
  3152  0559  00A1               	movwf	___wmul@multiplier+1
  3153  055A  3005               	movlw	5
  3154  055B  00A2               	movwf	___wmul@multiplicand
  3155  055C  3000               	movlw	0
  3156  055D  00A3               	movwf	___wmul@multiplicand+1
  3157  055E  3187  273F  3185   	fcall	___wmul
  3158  0561  0020               	movlb	0	; select bank0
  3159  0562  0820               	movf	?___wmul,w
  3160  0563  00BF               	movwf	??_readCurrent+3
  3161  0564  0821               	movf	?___wmul+1,w
  3162  0565  00C0               	movwf	??_readCurrent+4
  3163  0566  01C1               	clrf	??_readCurrent+5
  3164  0567  083F               	movf	??_readCurrent+3,w
  3165  0568  07BC               	addwf	??_readCurrent,f
  3166  0569  0840               	movf	??_readCurrent+4,w
  3167  056A  3DBD               	addwfc	??_readCurrent+1,f
  3168  056B  0841               	movf	??_readCurrent+5,w
  3169  056C  3DBE               	addwfc	??_readCurrent+2,f
  3170  056D  083C               	movf	??_readCurrent,w
  3171  056E  00A4               	movwf	___tmul@multiplier
  3172  056F  083D               	movf	??_readCurrent+1,w
  3173  0570  00A5               	movwf	___tmul@multiplier+1
  3174  0571  083E               	movf	??_readCurrent+2,w
  3175  0572  00A6               	movwf	___tmul@multiplier+2
  3176  0573  30E8               	movlw	232
  3177  0574  00A7               	movwf	___tmul@multiplicand
  3178  0575  3003               	movlw	3
  3179  0576  00A8               	movwf	___tmul@multiplicand+1
  3180  0577  3000               	movlw	0
  3181  0578  00A9               	movwf	___tmul@multiplicand+2
  3182  0579  3186  26B3  3185   	fcall	___tmul
  3183  057C  0020               	movlb	0	; select bank0
  3184  057D  0824               	movf	?___tmul,w
  3185  057E  00B0               	movwf	___atdiv@dividend
  3186  057F  0825               	movf	?___tmul+1,w
  3187  0580  00B1               	movwf	___atdiv@dividend+1
  3188  0581  0826               	movf	?___tmul+2,w
  3189  0582  00B2               	movwf	___atdiv@dividend+2
  3190  0583  3184  241F         	fcall	___atdiv
  3191  0585  0020               	movlb	0	; select bank0
  3192  0586  082D               	movf	?___atdiv,w
  3193  0587  00B9               	movwf	?_readCurrent
  3194  0588  082E               	movf	?___atdiv+1,w
  3195  0589  00BA               	movwf	?_readCurrent+1
  3196  058A  082F               	movf	?___atdiv+2,w
  3197  058B  00BB               	movwf	?_readCurrent+2
  3198  058C  0008               	return
  3199  058D                     __end_of_readCurrent:	
  3200                           
  3201                           	psect	text14
  3202  058D                     __ptext14:	
  3203 ;; *************** function _adc *****************
  3204 ;; Defined at:
  3205 ;;		line 388 in file "powerspy.c"
  3206 ;; Parameters:    Size  Location     Type
  3207 ;;  src             1    wreg     const char 
  3208 ;; Auto vars:     Size  Location     Type
  3209 ;;  src             1    3[COMMON] const char 
  3210 ;; Return value:  Size  Location     Type
  3211 ;;                  1    wreg      void 
  3212 ;; Registers used:
  3213 ;;		wreg, status,2, status,0
  3214 ;; Tracked objects:
  3215 ;;		On entry : 0/0
  3216 ;;		On exit  : 0/0
  3217 ;;		Unchanged: 0/0
  3218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3219 ;;      Params:         0       0       0       0       0       0
  3220 ;;      Locals:         1       0       0       0       0       0
  3221 ;;      Temps:          1       0       0       0       0       0
  3222 ;;      Totals:         2       0       0       0       0       0
  3223 ;;Total ram usage:        2 bytes
  3224 ;; Hardware stack levels used:    1
  3225 ;; Hardware stack levels required when called:    1
  3226 ;; This function calls:
  3227 ;;		Nothing
  3228 ;; This function is called by:
  3229 ;;		_readCurrent
  3230 ;;		_readVdd
  3231 ;; This function uses a non-reentrant model
  3232 ;;
  3233                           
  3234                           
  3235                           ;psect for function _adc
  3236  058D                     _adc:	
  3237                           
  3238                           ;incstack = 0
  3239                           ; Regs used in _adc: [wreg+status,2+status,0]
  3240                           ;adc@src stored from wreg
  3241  058D  00F3               	movwf	adc@src
  3242                           
  3243                           ;powerspy.c: 411: CHS0 = (bit) (src >> 0) & 0x01;
  3244  058E  1C73               	btfss	adc@src,0
  3245  058F  2D93               	goto	u1410
  3246  0590  0021               	movlb	1	; select bank1
  3247  0591  151D               	bsf	29,2	;volatile
  3248  0592  2D95               	goto	l2004
  3249  0593                     u1410:	
  3250  0593  0021               	movlb	1	; select bank1
  3251  0594  111D               	bcf	29,2	;volatile
  3252  0595                     l2004:	
  3253                           
  3254                           ;powerspy.c: 412: CHS1 = (bit) (src >> 1) & 0x01;
  3255  0595  0873               	movf	adc@src,w
  3256  0596  00F2               	movwf	??_adc
  3257  0597  3001               	movlw	1
  3258  0598                     u1435:	
  3259  0598  1003               	clrc
  3260  0599  1BF2               	btfsc	??_adc,7
  3261  059A  1403               	setc
  3262  059B  0CF2               	rrf	??_adc,f
  3263  059C  0B89               	decfsz	9,f
  3264  059D  2D98               	goto	u1435
  3265  059E  1C72               	btfss	??_adc,0
  3266  059F  2DA3               	goto	u1440
  3267  05A0  0021               	movlb	1	; select bank1
  3268  05A1  159D               	bsf	29,3	;volatile
  3269  05A2  2DA5               	goto	l2006
  3270  05A3                     u1440:	
  3271  05A3  0021               	movlb	1	; select bank1
  3272  05A4  119D               	bcf	29,3	;volatile
  3273  05A5                     l2006:	
  3274                           
  3275                           ;powerspy.c: 413: CHS2 = (bit) (src >> 2) & 0x01;
  3276  05A5  0873               	movf	adc@src,w
  3277  05A6  00F2               	movwf	??_adc
  3278  05A7  3002               	movlw	2
  3279  05A8                     u1465:	
  3280  05A8  1003               	clrc
  3281  05A9  1BF2               	btfsc	??_adc,7
  3282  05AA  1403               	setc
  3283  05AB  0CF2               	rrf	??_adc,f
  3284  05AC  0B89               	decfsz	9,f
  3285  05AD  2DA8               	goto	u1465
  3286  05AE  1C72               	btfss	??_adc,0
  3287  05AF  2DB3               	goto	u1470
  3288  05B0  0021               	movlb	1	; select bank1
  3289  05B1  161D               	bsf	29,4	;volatile
  3290  05B2  2DB5               	goto	l2008
  3291  05B3                     u1470:	
  3292  05B3  0021               	movlb	1	; select bank1
  3293  05B4  121D               	bcf	29,4	;volatile
  3294  05B5                     l2008:	
  3295                           
  3296                           ;powerspy.c: 414: CHS3 = (bit) (src >> 3) & 0x01;
  3297  05B5  0873               	movf	adc@src,w
  3298  05B6  00F2               	movwf	??_adc
  3299  05B7  3003               	movlw	3
  3300  05B8                     u1495:	
  3301  05B8  1003               	clrc
  3302  05B9  1BF2               	btfsc	??_adc,7
  3303  05BA  1403               	setc
  3304  05BB  0CF2               	rrf	??_adc,f
  3305  05BC  0B89               	decfsz	9,f
  3306  05BD  2DB8               	goto	u1495
  3307  05BE  1C72               	btfss	??_adc,0
  3308  05BF  2DC3               	goto	u1500
  3309  05C0  0021               	movlb	1	; select bank1
  3310  05C1  169D               	bsf	29,5	;volatile
  3311  05C2  2DC5               	goto	l2010
  3312  05C3                     u1500:	
  3313  05C3  0021               	movlb	1	; select bank1
  3314  05C4  129D               	bcf	29,5	;volatile
  3315  05C5                     l2010:	
  3316                           
  3317                           ;powerspy.c: 415: CHS4 = (bit) (src >> 4) & 0x01;
  3318  05C5  0873               	movf	adc@src,w
  3319  05C6  00F2               	movwf	??_adc
  3320  05C7  3004               	movlw	4
  3321  05C8                     u1525:	
  3322  05C8  1003               	clrc
  3323  05C9  1BF2               	btfsc	??_adc,7
  3324  05CA  1403               	setc
  3325  05CB  0CF2               	rrf	??_adc,f
  3326  05CC  0B89               	decfsz	9,f
  3327  05CD  2DC8               	goto	u1525
  3328  05CE  1C72               	btfss	??_adc,0
  3329  05CF  2DD3               	goto	u1530
  3330  05D0  0021               	movlb	1	; select bank1
  3331  05D1  171D               	bsf	29,6	;volatile
  3332  05D2  2DD5               	goto	u1544
  3333  05D3                     u1530:	
  3334  05D3  0021               	movlb	1	; select bank1
  3335  05D4  131D               	bcf	29,6	;volatile
  3336  05D5                     u1544:	
  3337                           
  3338                           ;powerspy.c: 417: _delay((unsigned long)((5)*(32000000/4000000.0)));
  3339  05D5  300D               	movlw	13
  3340  05D6  00F2               	movwf	??_adc
  3341  05D7                     u3147:	
  3342  05D7  0BF2               	decfsz	??_adc,f
  3343  05D8  2DD7               	goto	u3147
  3344                           
  3345                           ;powerspy.c: 420: GO_nDONE = 1;
  3346  05D9  0021               	movlb	1	; select bank1
  3347  05DA  149D               	bsf	29,1	;volatile
  3348  05DB                     l274:	
  3349                           ;powerspy.c: 421: while (GO_nDONE);
  3350                           
  3351  05DB  1C9D               	btfss	29,1	;volatile
  3352  05DC  0008               	return
  3353  05DD  2DDB               	goto	l274
  3354  05DE                     __end_of_adc:	
  3355                           
  3356                           	psect	text15
  3357  073F                     __ptext15:	
  3358 ;; *************** function ___wmul *****************
  3359 ;; Defined at:
  3360 ;;		line 15 in file "/Applications/microchip/xc8/v1.37/sources/common/Umul16.c"
  3361 ;; Parameters:    Size  Location     Type
  3362 ;;  multiplier      2    0[BANK0 ] unsigned int 
  3363 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  3364 ;; Auto vars:     Size  Location     Type
  3365 ;;  product         2    8[COMMON] unsigned int 
  3366 ;; Return value:  Size  Location     Type
  3367 ;;                  2    0[BANK0 ] unsigned int 
  3368 ;; Registers used:
  3369 ;;		wreg, status,2, status,0
  3370 ;; Tracked objects:
  3371 ;;		On entry : 0/0
  3372 ;;		On exit  : 0/0
  3373 ;;		Unchanged: 0/0
  3374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3375 ;;      Params:         0       4       0       0       0       0
  3376 ;;      Locals:         2       0       0       0       0       0
  3377 ;;      Temps:          0       0       0       0       0       0
  3378 ;;      Totals:         2       4       0       0       0       0
  3379 ;;Total ram usage:        6 bytes
  3380 ;; Hardware stack levels used:    1
  3381 ;; Hardware stack levels required when called:    1
  3382 ;; This function calls:
  3383 ;;		Nothing
  3384 ;; This function is called by:
  3385 ;;		_readCurrent
  3386 ;;		_main
  3387 ;; This function uses a non-reentrant model
  3388 ;;
  3389                           
  3390                           
  3391                           ;psect for function ___wmul
  3392  073F                     ___wmul:	
  3393                           
  3394                           ;incstack = 0
  3395                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3396  073F  01F8               	clrf	___wmul@product
  3397  0740  01F9               	clrf	___wmul@product+1
  3398  0741                     l3034:	
  3399  0741  0020               	movlb	0	; select bank0
  3400  0742  1C20               	btfss	___wmul@multiplier,0
  3401  0743  2F48               	goto	l606
  3402  0744  0822               	movf	___wmul@multiplicand,w
  3403  0745  07F8               	addwf	___wmul@product,f
  3404  0746  0823               	movf	___wmul@multiplicand+1,w
  3405  0747  3DF9               	addwfc	___wmul@product+1,f
  3406  0748                     l606:	
  3407  0748  3001               	movlw	1
  3408  0749                     u2855:	
  3409  0749  35A2               	lslf	___wmul@multiplicand,f
  3410  074A  0DA3               	rlf	___wmul@multiplicand+1,f
  3411  074B  0B89               	decfsz	9,f
  3412  074C  2F49               	goto	u2855
  3413  074D  3001               	movlw	1
  3414  074E                     u2865:	
  3415  074E  36A1               	lsrf	___wmul@multiplier+1,f
  3416  074F  0CA0               	rrf	___wmul@multiplier,f
  3417  0750  0B89               	decfsz	9,f
  3418  0751  2F4E               	goto	u2865
  3419  0752  0820               	movf	___wmul@multiplier,w
  3420  0753  0421               	iorwf	___wmul@multiplier+1,w
  3421  0754  1D03               	btfss	3,2
  3422  0755  2F41               	goto	l3034
  3423  0756  0879               	movf	___wmul@product+1,w
  3424  0757  00A1               	movwf	?___wmul+1
  3425  0758  0878               	movf	___wmul@product,w
  3426  0759  00A0               	movwf	?___wmul
  3427  075A  0008               	return
  3428  075B                     __end_of___wmul:	
  3429                           
  3430                           	psect	text16
  3431  06B3                     __ptext16:	
  3432 ;; *************** function ___tmul *****************
  3433 ;; Defined at:
  3434 ;;		line 15 in file "/Applications/microchip/xc8/v1.37/sources/common/Umul24.c"
  3435 ;; Parameters:    Size  Location     Type
  3436 ;;  multiplier      3    4[BANK0 ] unsigned um
  3437 ;;  multiplicand    3    7[BANK0 ] unsigned um
  3438 ;; Auto vars:     Size  Location     Type
  3439 ;;  product         3   10[BANK0 ] unsigned um
  3440 ;; Return value:  Size  Location     Type
  3441 ;;                  3    4[BANK0 ] unsigned um
  3442 ;; Registers used:
  3443 ;;		wreg, status,2, status,0
  3444 ;; Tracked objects:
  3445 ;;		On entry : 0/0
  3446 ;;		On exit  : 0/0
  3447 ;;		Unchanged: 0/0
  3448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3449 ;;      Params:         0       6       0       0       0       0
  3450 ;;      Locals:         0       3       0       0       0       0
  3451 ;;      Temps:          0       0       0       0       0       0
  3452 ;;      Totals:         0       9       0       0       0       0
  3453 ;;Total ram usage:        9 bytes
  3454 ;; Hardware stack levels used:    1
  3455 ;; Hardware stack levels required when called:    1
  3456 ;; This function calls:
  3457 ;;		Nothing
  3458 ;; This function is called by:
  3459 ;;		_readCurrent
  3460 ;;		_main
  3461 ;; This function uses a non-reentrant model
  3462 ;;
  3463                           
  3464                           
  3465                           ;psect for function ___tmul
  3466  06B3                     ___tmul:	
  3467                           
  3468                           ;incstack = 0
  3469                           ; Regs used in ___tmul: [wreg+status,2+status,0]
  3470  06B3  3000               	movlw	0
  3471  06B4  0020               	movlb	0	; select bank0
  3472  06B5  00AA               	movwf	___tmul@product
  3473  06B6  3000               	movlw	0
  3474  06B7  00AB               	movwf	___tmul@product+1
  3475  06B8  3000               	movlw	0
  3476  06B9  00AC               	movwf	___tmul@product+2
  3477  06BA                     l2310:	
  3478  06BA  1C24               	btfss	___tmul@multiplier,0
  3479  06BB  2EC2               	goto	l2314
  3480  06BC  0827               	movf	___tmul@multiplicand,w
  3481  06BD  07AA               	addwf	___tmul@product,f
  3482  06BE  0828               	movf	___tmul@multiplicand+1,w
  3483  06BF  3DAB               	addwfc	___tmul@product+1,f
  3484  06C0  0829               	movf	___tmul@multiplicand+2,w
  3485  06C1  3DAC               	addwfc	___tmul@product+2,f
  3486  06C2                     l2314:	
  3487  06C2  3001               	movlw	1
  3488  06C3                     u1855:	
  3489  06C3  35A7               	lslf	___tmul@multiplicand,f
  3490  06C4  0DA8               	rlf	___tmul@multiplicand+1,f
  3491  06C5  0DA9               	rlf	___tmul@multiplicand+2,f
  3492  06C6  0B89               	decfsz	9,f
  3493  06C7  2EC3               	goto	u1855
  3494  06C8  3001               	movlw	1
  3495  06C9                     u1865:	
  3496  06C9  36A6               	lsrf	___tmul@multiplier+2,f
  3497  06CA  0CA5               	rrf	___tmul@multiplier+1,f
  3498  06CB  0CA4               	rrf	___tmul@multiplier,f
  3499  06CC  0B89               	decfsz	9,f
  3500  06CD  2EC9               	goto	u1865
  3501  06CE  0826               	movf	___tmul@multiplier+2,w
  3502  06CF  0425               	iorwf	___tmul@multiplier+1,w
  3503  06D0  0424               	iorwf	___tmul@multiplier,w
  3504  06D1  1D03               	skipz
  3505  06D2  2EBA               	goto	l2310
  3506  06D3  082A               	movf	___tmul@product,w
  3507  06D4  00A4               	movwf	?___tmul
  3508  06D5  082B               	movf	___tmul@product+1,w
  3509  06D6  00A5               	movwf	?___tmul+1
  3510  06D7  082C               	movf	___tmul@product+2,w
  3511  06D8  00A6               	movwf	?___tmul+2
  3512  06D9  0008               	return
  3513  06DA                     __end_of___tmul:	
  3514                           
  3515                           	psect	text17
  3516  041F                     __ptext17:	
  3517 ;; *************** function ___atdiv *****************
  3518 ;; Defined at:
  3519 ;;		line 6 in file "/Applications/microchip/xc8/v1.37/sources/common/atdiv.c"
  3520 ;; Parameters:    Size  Location     Type
  3521 ;;  divisor         3   13[BANK0 ] m
  3522 ;;  dividend        3   16[BANK0 ] m
  3523 ;; Auto vars:     Size  Location     Type
  3524 ;;  quotient        3   22[BANK0 ] m
  3525 ;;  sign            1   21[BANK0 ] unsigned char 
  3526 ;;  counter         1   20[BANK0 ] unsigned char 
  3527 ;; Return value:  Size  Location     Type
  3528 ;;                  3   13[BANK0 ] m
  3529 ;; Registers used:
  3530 ;;		wreg, status,2, status,0
  3531 ;; Tracked objects:
  3532 ;;		On entry : 0/0
  3533 ;;		On exit  : 0/0
  3534 ;;		Unchanged: 0/0
  3535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3536 ;;      Params:         0       6       0       0       0       0
  3537 ;;      Locals:         0       5       0       0       0       0
  3538 ;;      Temps:          0       1       0       0       0       0
  3539 ;;      Totals:         0      12       0       0       0       0
  3540 ;;Total ram usage:       12 bytes
  3541 ;; Hardware stack levels used:    1
  3542 ;; Hardware stack levels required when called:    1
  3543 ;; This function calls:
  3544 ;;		Nothing
  3545 ;; This function is called by:
  3546 ;;		_readCurrent
  3547 ;;		_main
  3548 ;; This function uses a non-reentrant model
  3549 ;;
  3550                           
  3551                           
  3552                           ;psect for function ___atdiv
  3553  041F                     ___atdiv:	
  3554                           
  3555                           ;incstack = 0
  3556                           ; Regs used in ___atdiv: [wreg+status,2+status,0]
  3557  041F  0020               	movlb	0	; select bank0
  3558  0420  01B5               	clrf	___atdiv@sign
  3559  0421  1FAF               	btfss	___atdiv@divisor+2,7
  3560  0422  2C2D               	goto	l696
  3561  0423  09AD               	comf	___atdiv@divisor,f
  3562  0424  09AE               	comf	___atdiv@divisor+1,f
  3563  0425  09AF               	comf	___atdiv@divisor+2,f
  3564  0426  0AAD               	incf	___atdiv@divisor,f
  3565  0427  1903               	skipnz
  3566  0428  0AAE               	incf	___atdiv@divisor+1,f
  3567  0429  1903               	skipnz
  3568  042A  0AAF               	incf	___atdiv@divisor+2,f
  3569  042B  01B5               	clrf	___atdiv@sign
  3570  042C  0AB5               	incf	___atdiv@sign,f
  3571  042D                     l696:	
  3572  042D  1FB2               	btfss	___atdiv@dividend+2,7
  3573  042E  2C3B               	goto	l2332
  3574  042F  09B0               	comf	___atdiv@dividend,f
  3575  0430  09B1               	comf	___atdiv@dividend+1,f
  3576  0431  09B2               	comf	___atdiv@dividend+2,f
  3577  0432  0AB0               	incf	___atdiv@dividend,f
  3578  0433  1903               	skipnz
  3579  0434  0AB1               	incf	___atdiv@dividend+1,f
  3580  0435  1903               	skipnz
  3581  0436  0AB2               	incf	___atdiv@dividend+2,f
  3582  0437  3001               	movlw	1
  3583  0438  00B3               	movwf	??___atdiv
  3584  0439  0833               	movf	??___atdiv,w
  3585  043A  06B5               	xorwf	___atdiv@sign,f
  3586  043B                     l2332:	
  3587  043B  3000               	movlw	0
  3588  043C  00B6               	movwf	___atdiv@quotient
  3589  043D  3000               	movlw	0
  3590  043E  00B7               	movwf	___atdiv@quotient+1
  3591  043F  3000               	movlw	0
  3592  0440  00B8               	movwf	___atdiv@quotient+2
  3593  0441  082F               	movf	___atdiv@divisor+2,w
  3594  0442  042E               	iorwf	___atdiv@divisor+1,w
  3595  0443  042D               	iorwf	___atdiv@divisor,w
  3596  0444  1903               	skipnz
  3597  0445  2C78               	goto	l2354
  3598  0446  01B4               	clrf	___atdiv@counter
  3599  0447  0AB4               	incf	___atdiv@counter,f
  3600  0448                     l2340:	
  3601  0448  1BAF               	btfsc	___atdiv@divisor+2,7
  3602  0449  2C55               	goto	l2342
  3603  044A  3001               	movlw	1
  3604  044B                     u1915:	
  3605  044B  35AD               	lslf	___atdiv@divisor,f
  3606  044C  0DAE               	rlf	___atdiv@divisor+1,f
  3607  044D  0DAF               	rlf	___atdiv@divisor+2,f
  3608  044E  0B89               	decfsz	9,f
  3609  044F  2C4B               	goto	u1915
  3610  0450  3001               	movlw	1
  3611  0451  00B3               	movwf	??___atdiv
  3612  0452  0833               	movf	??___atdiv,w
  3613  0453  07B4               	addwf	___atdiv@counter,f
  3614  0454  2C48               	goto	l2340
  3615  0455                     l2342:	
  3616  0455  3001               	movlw	1
  3617  0456                     u1935:	
  3618  0456  35B6               	lslf	___atdiv@quotient,f
  3619  0457  0DB7               	rlf	___atdiv@quotient+1,f
  3620  0458  0DB8               	rlf	___atdiv@quotient+2,f
  3621  0459  0B89               	decfsz	9,f
  3622  045A  2C56               	goto	u1935
  3623  045B  082F               	movf	___atdiv@divisor+2,w
  3624  045C  0232               	subwf	___atdiv@dividend+2,w
  3625  045D  1D03               	skipz
  3626  045E  2C65               	goto	u1945
  3627  045F  082E               	movf	___atdiv@divisor+1,w
  3628  0460  0231               	subwf	___atdiv@dividend+1,w
  3629  0461  1D03               	skipz
  3630  0462  2C65               	goto	u1945
  3631  0463  082D               	movf	___atdiv@divisor,w
  3632  0464  0230               	subwf	___atdiv@dividend,w
  3633  0465                     u1945:	
  3634  0465  1C03               	skipc
  3635  0466  2C6E               	goto	l2350
  3636  0467  082D               	movf	___atdiv@divisor,w
  3637  0468  02B0               	subwf	___atdiv@dividend,f
  3638  0469  082E               	movf	___atdiv@divisor+1,w
  3639  046A  3BB1               	subwfb	___atdiv@dividend+1,f
  3640  046B  082F               	movf	___atdiv@divisor+2,w
  3641  046C  3BB2               	subwfb	___atdiv@dividend+2,f
  3642  046D  1436               	bsf	___atdiv@quotient,0
  3643  046E                     l2350:	
  3644  046E  3001               	movlw	1
  3645  046F                     u1955:	
  3646  046F  36AF               	lsrf	___atdiv@divisor+2,f
  3647  0470  0CAE               	rrf	___atdiv@divisor+1,f
  3648  0471  0CAD               	rrf	___atdiv@divisor,f
  3649  0472  0B89               	decfsz	9,f
  3650  0473  2C6F               	goto	u1955
  3651  0474  3001               	movlw	1
  3652  0475  02B4               	subwf	___atdiv@counter,f
  3653  0476  1D03               	btfss	3,2
  3654  0477  2C55               	goto	l2342
  3655  0478                     l2354:	
  3656  0478  0835               	movf	___atdiv@sign,w
  3657  0479  1903               	btfsc	3,2
  3658  047A  2C83               	goto	l2358
  3659  047B  09B6               	comf	___atdiv@quotient,f
  3660  047C  09B7               	comf	___atdiv@quotient+1,f
  3661  047D  09B8               	comf	___atdiv@quotient+2,f
  3662  047E  0AB6               	incf	___atdiv@quotient,f
  3663  047F  1903               	skipnz
  3664  0480  0AB7               	incf	___atdiv@quotient+1,f
  3665  0481  1903               	skipnz
  3666  0482  0AB8               	incf	___atdiv@quotient+2,f
  3667  0483                     l2358:	
  3668  0483  0836               	movf	___atdiv@quotient,w
  3669  0484  00AD               	movwf	?___atdiv
  3670  0485  0837               	movf	___atdiv@quotient+1,w
  3671  0486  00AE               	movwf	?___atdiv+1
  3672  0487  0838               	movf	___atdiv@quotient+2,w
  3673  0488  00AF               	movwf	?___atdiv+2
  3674  0489  0008               	return
  3675  048A                     __end_of___atdiv:	
  3676                           
  3677                           	psect	text18
  3678  07E6                     __ptext18:	
  3679 ;; *************** function _initTMR1 *****************
  3680 ;; Defined at:
  3681 ;;		line 166 in file "powerspy.c"
  3682 ;; Parameters:    Size  Location     Type
  3683 ;;		None
  3684 ;; Auto vars:     Size  Location     Type
  3685 ;;		None
  3686 ;; Return value:  Size  Location     Type
  3687 ;;                  1    wreg      void 
  3688 ;; Registers used:
  3689 ;;		None
  3690 ;; Tracked objects:
  3691 ;;		On entry : 0/0
  3692 ;;		On exit  : 0/0
  3693 ;;		Unchanged: 0/0
  3694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3695 ;;      Params:         0       0       0       0       0       0
  3696 ;;      Locals:         0       0       0       0       0       0
  3697 ;;      Temps:          0       0       0       0       0       0
  3698 ;;      Totals:         0       0       0       0       0       0
  3699 ;;Total ram usage:        0 bytes
  3700 ;; Hardware stack levels used:    1
  3701 ;; Hardware stack levels required when called:    1
  3702 ;; This function calls:
  3703 ;;		Nothing
  3704 ;; This function is called by:
  3705 ;;		_main
  3706 ;; This function uses a non-reentrant model
  3707 ;;
  3708                           
  3709                           
  3710                           ;psect for function _initTMR1
  3711  07E6                     _initTMR1:	
  3712                           
  3713                           ;powerspy.c: 179: TMR1CS0 = 0;
  3714                           
  3715                           ;incstack = 0
  3716                           ; Regs used in _initTMR1: []
  3717  07E6  0020               	movlb	0	; select bank0
  3718  07E7  1318               	bcf	24,6	;volatile
  3719                           
  3720                           ;powerspy.c: 180: TMR1CS1 = 0;
  3721  07E8  1398               	bcf	24,7	;volatile
  3722                           
  3723                           ;powerspy.c: 184: T1CKPS0 = 1;
  3724  07E9  1618               	bsf	24,4	;volatile
  3725                           
  3726                           ;powerspy.c: 185: T1CKPS1 = 0;
  3727  07EA  1298               	bcf	24,5	;volatile
  3728                           
  3729                           ;powerspy.c: 187: TMR1IE = 1;
  3730  07EB  0021               	movlb	1	; select bank1
  3731  07EC  1411               	bsf	17,0	;volatile
  3732                           
  3733                           ;powerspy.c: 188: TMR1IF = 0;
  3734  07ED  0020               	movlb	0	; select bank0
  3735  07EE  1011               	bcf	17,0	;volatile
  3736                           
  3737                           ;powerspy.c: 190: TMR1ON = 1;
  3738  07EF  1418               	bsf	24,0	;volatile
  3739  07F0  0008               	return
  3740  07F1                     __end_of_initTMR1:	
  3741                           
  3742                           	psect	text19
  3743  0700                     __ptext19:	
  3744 ;; *************** function _initPins *****************
  3745 ;; Defined at:
  3746 ;;		line 63 in file "powerspy.c"
  3747 ;; Parameters:    Size  Location     Type
  3748 ;;		None
  3749 ;; Auto vars:     Size  Location     Type
  3750 ;;		None
  3751 ;; Return value:  Size  Location     Type
  3752 ;;                  1    wreg      void 
  3753 ;; Registers used:
  3754 ;;		wreg, status,2
  3755 ;; Tracked objects:
  3756 ;;		On entry : 0/0
  3757 ;;		On exit  : 0/0
  3758 ;;		Unchanged: 0/0
  3759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3760 ;;      Params:         0       0       0       0       0       0
  3761 ;;      Locals:         0       0       0       0       0       0
  3762 ;;      Temps:          0       0       0       0       0       0
  3763 ;;      Totals:         0       0       0       0       0       0
  3764 ;;Total ram usage:        0 bytes
  3765 ;; Hardware stack levels used:    1
  3766 ;; Hardware stack levels required when called:    1
  3767 ;; This function calls:
  3768 ;;		Nothing
  3769 ;; This function is called by:
  3770 ;;		_main
  3771 ;; This function uses a non-reentrant model
  3772 ;;
  3773                           
  3774                           
  3775                           ;psect for function _initPins
  3776  0700                     _initPins:	
  3777                           
  3778                           ;powerspy.c: 65: PORTA = 0b00000000;
  3779                           
  3780                           ;incstack = 0
  3781                           ; Regs used in _initPins: [wreg+status,2]
  3782  0700  0020               	movlb	0	; select bank0
  3783  0701  018C               	clrf	12	;volatile
  3784                           
  3785                           ;powerspy.c: 66: ANSELA = 0b00000111;
  3786  0702  3007               	movlw	7
  3787  0703  0023               	movlb	3	; select bank3
  3788  0704  008C               	movwf	12	;volatile
  3789                           
  3790                           ;powerspy.c: 67: TRISA = 0b00000111;
  3791  0705  3007               	movlw	7
  3792  0706  0021               	movlb	1	; select bank1
  3793  0707  008C               	movwf	12	;volatile
  3794                           
  3795                           ;powerspy.c: 69: PORTB = 0b00000000;
  3796  0708  0020               	movlb	0	; select bank0
  3797  0709  018D               	clrf	13	;volatile
  3798                           
  3799                           ;powerspy.c: 70: ANSELB = 0b00110000;
  3800  070A  3030               	movlw	48
  3801  070B  0023               	movlb	3	; select bank3
  3802  070C  008D               	movwf	13	;volatile
  3803                           
  3804                           ;powerspy.c: 71: TRISB = 0b00111010;
  3805  070D  303A               	movlw	58
  3806  070E  0021               	movlb	1	; select bank1
  3807  070F  008D               	movwf	13	;volatile
  3808                           
  3809                           ;powerspy.c: 73: nWPUEN = 0;
  3810  0710  1395               	bcf	21,7	;volatile
  3811                           
  3812                           ;powerspy.c: 74: WPUB = 0b00001000;
  3813  0711  3008               	movlw	8
  3814  0712  0024               	movlb	4	; select bank4
  3815  0713  008D               	movwf	13	;volatile
  3816                           
  3817                           ;powerspy.c: 78: SCS0 = 0;
  3818  0714  0021               	movlb	1	; select bank1
  3819  0715  1019               	bcf	25,0	;volatile
  3820                           
  3821                           ;powerspy.c: 79: SCS1 = 0;
  3822  0716  1099               	bcf	25,1	;volatile
  3823                           
  3824                           ;powerspy.c: 81: IRCF0 = 0;
  3825  0717  1199               	bcf	25,3	;volatile
  3826                           
  3827                           ;powerspy.c: 82: IRCF1 = 1;
  3828  0718  1619               	bsf	25,4	;volatile
  3829                           
  3830                           ;powerspy.c: 83: IRCF2 = 1;
  3831  0719  1699               	bsf	25,5	;volatile
  3832                           
  3833                           ;powerspy.c: 84: IRCF3 = 1;
  3834  071A  1719               	bsf	25,6	;volatile
  3835                           
  3836                           ;powerspy.c: 86: SPLLEN = 1;
  3837  071B  1799               	bsf	25,7	;volatile
  3838                           
  3839                           ;powerspy.c: 89: IOCBN5 = 1;
  3840  071C  0027               	movlb	7	; select bank7
  3841  071D  1695               	bsf	21,5	;volatile
  3842                           
  3843                           ;powerspy.c: 90: IOCIE = 1;
  3844  071E  158B               	bsf	11,3	;volatile
  3845  071F  0008               	return
  3846  0720                     __end_of_initPins:	
  3847                           
  3848                           	psect	text20
  3849  0720                     __ptext20:	
  3850 ;; *************** function _initPWMTMR4 *****************
  3851 ;; Defined at:
  3852 ;;		line 222 in file "powerspy.c"
  3853 ;; Parameters:    Size  Location     Type
  3854 ;;		None
  3855 ;; Auto vars:     Size  Location     Type
  3856 ;;		None
  3857 ;; Return value:  Size  Location     Type
  3858 ;;                  1    wreg      void 
  3859 ;; Registers used:
  3860 ;;		wreg, status,2, status,0
  3861 ;; Tracked objects:
  3862 ;;		On entry : 0/0
  3863 ;;		On exit  : 0/0
  3864 ;;		Unchanged: 0/0
  3865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3866 ;;      Params:         0       0       0       0       0       0
  3867 ;;      Locals:         0       0       0       0       0       0
  3868 ;;      Temps:          1       0       0       0       0       0
  3869 ;;      Totals:         1       0       0       0       0       0
  3870 ;;Total ram usage:        1 bytes
  3871 ;; Hardware stack levels used:    1
  3872 ;; Hardware stack levels required when called:    1
  3873 ;; This function calls:
  3874 ;;		Nothing
  3875 ;; This function is called by:
  3876 ;;		_main
  3877 ;; This function uses a non-reentrant model
  3878 ;;
  3879                           
  3880                           
  3881                           ;psect for function _initPWMTMR4
  3882  0720                     _initPWMTMR4:	
  3883                           
  3884                           ;powerspy.c: 226: CCP1SEL = 1;
  3885                           
  3886                           ;incstack = 0
  3887                           ; Regs used in _initPWMTMR4: [wreg+status,2+status,0]
  3888  0720  0022               	movlb	2	; select bank2
  3889  0721  141D               	bsf	29,0	;volatile
  3890                           
  3891                           ;powerspy.c: 229: TRISBbits.TRISB0 = 1;
  3892  0722  0021               	movlb	1	; select bank1
  3893  0723  140D               	bsf	13,0	;volatile
  3894                           
  3895                           ;powerspy.c: 232: PR2 = 0xff;
  3896  0724  30FF               	movlw	255
  3897  0725  0020               	movlb	0	; select bank0
  3898  0726  009B               	movwf	27	;volatile
  3899                           
  3900                           ;powerspy.c: 233: CCP1CON = 0b00110000;
  3901  0727  3030               	movlw	48
  3902  0728  0025               	movlb	5	; select bank5
  3903  0729  0093               	movwf	19	;volatile
  3904                           
  3905                           ;powerspy.c: 236: CCP1CON |= 0b00001100;
  3906  072A  300C               	movlw	12
  3907  072B  00F2               	movwf	??_initPWMTMR4
  3908  072C  0872               	movf	??_initPWMTMR4,w
  3909  072D  0493               	iorwf	19,f	;volatile
  3910                           
  3911                           ;powerspy.c: 242: CCPR1L = 0x7f;
  3912  072E  307F               	movlw	127
  3913  072F  0091               	movwf	17	;volatile
  3914                           
  3915                           ;powerspy.c: 245: DC1B0 = 1;
  3916  0730  1613               	bsf	19,4	;volatile
  3917                           
  3918                           ;powerspy.c: 246: DC1B1 = 1;
  3919  0731  1693               	bsf	19,5	;volatile
  3920                           
  3921                           ;powerspy.c: 250: C1TSEL0 = 1;
  3922  0732  141E               	bsf	30,0	;volatile
  3923                           
  3924                           ;powerspy.c: 251: C1TSEL1 = 0;
  3925  0733  109E               	bcf	30,1	;volatile
  3926                           
  3927                           ;powerspy.c: 252: TMR4IF = 0;
  3928  0734  0020               	movlb	0	; select bank0
  3929  0735  1093               	bcf	19,1	;volatile
  3930                           
  3931                           ;powerspy.c: 255: T4CKPS0 = 0;
  3932  0736  0028               	movlb	8	; select bank8
  3933  0737  1017               	bcf	23,0	;volatile
  3934                           
  3935                           ;powerspy.c: 256: T4CKPS1 = 0;
  3936  0738  1097               	bcf	23,1	;volatile
  3937                           
  3938                           ;powerspy.c: 258: TMR4ON = 1;
  3939  0739  1517               	bsf	23,2	;volatile
  3940                           
  3941                           ;powerspy.c: 262: TMR4IF = 0;
  3942  073A  0020               	movlb	0	; select bank0
  3943  073B  1093               	bcf	19,1	;volatile
  3944                           
  3945                           ;powerspy.c: 264: TRISBbits.TRISB0 = 0;
  3946  073C  0021               	movlb	1	; select bank1
  3947  073D  100D               	bcf	13,0	;volatile
  3948  073E  0008               	return
  3949  073F                     __end_of_initPWMTMR4:	
  3950                           
  3951                           	psect	text21
  3952  0FD7                     __ptext21:	
  3953 ;; *************** function _initMessaging *****************
  3954 ;; Defined at:
  3955 ;;		line 16 in file "message.c"
  3956 ;; Parameters:    Size  Location     Type
  3957 ;;		None
  3958 ;; Auto vars:     Size  Location     Type
  3959 ;;		None
  3960 ;; Return value:  Size  Location     Type
  3961 ;;                  1    wreg      void 
  3962 ;; Registers used:
  3963 ;;		status,2
  3964 ;; Tracked objects:
  3965 ;;		On entry : 0/0
  3966 ;;		On exit  : 0/0
  3967 ;;		Unchanged: 0/0
  3968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3969 ;;      Params:         0       0       0       0       0       0
  3970 ;;      Locals:         0       0       0       0       0       0
  3971 ;;      Temps:          0       0       0       0       0       0
  3972 ;;      Totals:         0       0       0       0       0       0
  3973 ;;Total ram usage:        0 bytes
  3974 ;; Hardware stack levels used:    1
  3975 ;; Hardware stack levels required when called:    1
  3976 ;; This function calls:
  3977 ;;		Nothing
  3978 ;; This function is called by:
  3979 ;;		_main
  3980 ;; This function uses a non-reentrant model
  3981 ;;
  3982                           
  3983                           
  3984                           ;psect for function _initMessaging
  3985  0FD7                     _initMessaging:	
  3986                           
  3987                           ;message.c: 18: buffpos = -1;
  3988                           
  3989                           ;incstack = 0
  3990                           ; Regs used in _initMessaging: [status,2]
  3991  0FD7  01FA               	clrf	_buffpos
  3992  0FD8  03FA               	decf	_buffpos,f
  3993                           
  3994                           ;message.c: 19: readpos = 0;
  3995  0FD9  01FB               	clrf	_readpos
  3996                           
  3997                           ;message.c: 20: reading = 0;
  3998  0FDA  0020               	movlb	0	; select bank0
  3999  0FDB  01E9               	clrf	_reading
  4000  0FDC  0008               	return
  4001  0FDD                     __end_of_initMessaging:	
  4002                           
  4003                           	psect	text22
  4004  0FE3                     __ptext22:	
  4005 ;; *************** function _initFVR *****************
  4006 ;; Defined at:
  4007 ;;		line 196 in file "powerspy.c"
  4008 ;; Parameters:    Size  Location     Type
  4009 ;;		None
  4010 ;; Auto vars:     Size  Location     Type
  4011 ;;		None
  4012 ;; Return value:  Size  Location     Type
  4013 ;;                  1    wreg      void 
  4014 ;; Registers used:
  4015 ;;		None
  4016 ;; Tracked objects:
  4017 ;;		On entry : 0/0
  4018 ;;		On exit  : 0/0
  4019 ;;		Unchanged: 0/0
  4020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4021 ;;      Params:         0       0       0       0       0       0
  4022 ;;      Locals:         0       0       0       0       0       0
  4023 ;;      Temps:          0       0       0       0       0       0
  4024 ;;      Totals:         0       0       0       0       0       0
  4025 ;;Total ram usage:        0 bytes
  4026 ;; Hardware stack levels used:    1
  4027 ;; Hardware stack levels required when called:    1
  4028 ;; This function calls:
  4029 ;;		Nothing
  4030 ;; This function is called by:
  4031 ;;		_main
  4032 ;; This function uses a non-reentrant model
  4033 ;;
  4034                           
  4035                           
  4036                           ;psect for function _initFVR
  4037  0FE3                     _initFVR:	
  4038                           
  4039                           ;powerspy.c: 208: ADFVR0 = 1;
  4040                           
  4041                           ;incstack = 0
  4042                           ; Regs used in _initFVR: []
  4043  0FE3  0022               	movlb	2	; select bank2
  4044  0FE4  1417               	bsf	23,0	;volatile
  4045                           
  4046                           ;powerspy.c: 209: ADFVR1 = 0;
  4047  0FE5  1097               	bcf	23,1	;volatile
  4048                           
  4049                           ;powerspy.c: 211: CDAFVR0 = 0;
  4050  0FE6  1117               	bcf	23,2	;volatile
  4051                           
  4052                           ;powerspy.c: 212: CDAFVR1 = 0;
  4053  0FE7  1197               	bcf	23,3	;volatile
  4054                           
  4055                           ;powerspy.c: 213: FVREN = 1;
  4056  0FE8  1797               	bsf	23,7	;volatile
  4057  0FE9                     l253:	
  4058                           ;powerspy.c: 214: while (!FVRRDY);
  4059                           
  4060  0FE9  1B17               	btfsc	23,6	;volatile
  4061  0FEA  0008               	return
  4062  0FEB  2FE9               	goto	l253
  4063  0FEC                     __end_of_initFVR:	
  4064                           
  4065                           	psect	text23
  4066  07CC                     __ptext23:	
  4067 ;; *************** function _initCOMP2 *****************
  4068 ;; Defined at:
  4069 ;;		line 316 in file "powerspy.c"
  4070 ;; Parameters:    Size  Location     Type
  4071 ;;		None
  4072 ;; Auto vars:     Size  Location     Type
  4073 ;;		None
  4074 ;; Return value:  Size  Location     Type
  4075 ;;                  1    wreg      void 
  4076 ;; Registers used:
  4077 ;;		None
  4078 ;; Tracked objects:
  4079 ;;		On entry : 0/0
  4080 ;;		On exit  : 0/0
  4081 ;;		Unchanged: 0/0
  4082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4083 ;;      Params:         0       0       0       0       0       0
  4084 ;;      Locals:         0       0       0       0       0       0
  4085 ;;      Temps:          0       0       0       0       0       0
  4086 ;;      Totals:         0       0       0       0       0       0
  4087 ;;Total ram usage:        0 bytes
  4088 ;; Hardware stack levels used:    1
  4089 ;; Hardware stack levels required when called:    1
  4090 ;; This function calls:
  4091 ;;		Nothing
  4092 ;; This function is called by:
  4093 ;;		_main
  4094 ;; This function uses a non-reentrant model
  4095 ;;
  4096                           
  4097                           
  4098                           ;psect for function _initCOMP2
  4099  07CC                     _initCOMP2:	
  4100                           
  4101                           ;powerspy.c: 321: C2NCH0 = 0;
  4102                           
  4103                           ;incstack = 0
  4104                           ; Regs used in _initCOMP2: []
  4105  07CC  0022               	movlb	2	; select bank2
  4106  07CD  1014               	bcf	20,0	;volatile
  4107                           
  4108                           ;powerspy.c: 322: C2NCH1 = 0;
  4109  07CE  1094               	bcf	20,1	;volatile
  4110                           
  4111                           ;powerspy.c: 335: C2PCH0 = 0;
  4112  07CF  1214               	bcf	20,4	;volatile
  4113                           
  4114                           ;powerspy.c: 336: C2PCH1 = 0;
  4115  07D0  1294               	bcf	20,5	;volatile
  4116                           
  4117                           ;powerspy.c: 339: C2INTP = 1;
  4118  07D1  1794               	bsf	20,7	;volatile
  4119                           
  4120                           ;powerspy.c: 340: C2IE = 1;
  4121  07D2  0021               	movlb	1	; select bank1
  4122  07D3  1712               	bsf	18,6	;volatile
  4123                           
  4124                           ;powerspy.c: 341: C2IF = 0;
  4125  07D4  0020               	movlb	0	; select bank0
  4126  07D5  1312               	bcf	18,6	;volatile
  4127                           
  4128                           ;powerspy.c: 342: C2ON = 1;
  4129  07D6  0022               	movlb	2	; select bank2
  4130  07D7  1793               	bsf	19,7	;volatile
  4131  07D8  0008               	return
  4132  07D9                     __end_of_initCOMP2:	
  4133                           
  4134                           	psect	text24
  4135  07D9                     __ptext24:	
  4136 ;; *************** function _initCOMP1 *****************
  4137 ;; Defined at:
  4138 ;;		line 282 in file "powerspy.c"
  4139 ;; Parameters:    Size  Location     Type
  4140 ;;		None
  4141 ;; Auto vars:     Size  Location     Type
  4142 ;;		None
  4143 ;; Return value:  Size  Location     Type
  4144 ;;                  1    wreg      void 
  4145 ;; Registers used:
  4146 ;;		None
  4147 ;; Tracked objects:
  4148 ;;		On entry : 0/0
  4149 ;;		On exit  : 0/0
  4150 ;;		Unchanged: 0/0
  4151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4152 ;;      Params:         0       0       0       0       0       0
  4153 ;;      Locals:         0       0       0       0       0       0
  4154 ;;      Temps:          0       0       0       0       0       0
  4155 ;;      Totals:         0       0       0       0       0       0
  4156 ;;Total ram usage:        0 bytes
  4157 ;; Hardware stack levels used:    1
  4158 ;; Hardware stack levels required when called:    1
  4159 ;; This function calls:
  4160 ;;		Nothing
  4161 ;; This function is called by:
  4162 ;;		_main
  4163 ;; This function uses a non-reentrant model
  4164 ;;
  4165                           
  4166                           
  4167                           ;psect for function _initCOMP1
  4168  07D9                     _initCOMP1:	
  4169                           
  4170                           ;powerspy.c: 287: C1NCH0 = 1;
  4171                           
  4172                           ;incstack = 0
  4173                           ; Regs used in _initCOMP1: []
  4174  07D9  0022               	movlb	2	; select bank2
  4175  07DA  1412               	bsf	18,0	;volatile
  4176                           
  4177                           ;powerspy.c: 288: C1NCH1 = 0;
  4178  07DB  1092               	bcf	18,1	;volatile
  4179                           
  4180                           ;powerspy.c: 302: C1PCH0 = 0;
  4181  07DC  1212               	bcf	18,4	;volatile
  4182                           
  4183                           ;powerspy.c: 303: C1PCH1 = 1;
  4184  07DD  1692               	bsf	18,5	;volatile
  4185                           
  4186                           ;powerspy.c: 306: C1INTP = 1;
  4187  07DE  1792               	bsf	18,7	;volatile
  4188                           
  4189                           ;powerspy.c: 307: C1IE = 1;
  4190  07DF  0021               	movlb	1	; select bank1
  4191  07E0  1692               	bsf	18,5	;volatile
  4192                           
  4193                           ;powerspy.c: 308: C1IF = 0;
  4194  07E1  0020               	movlb	0	; select bank0
  4195  07E2  1292               	bcf	18,5	;volatile
  4196                           
  4197                           ;powerspy.c: 309: C1ON = 1;
  4198  07E3  0022               	movlb	2	; select bank2
  4199  07E4  1791               	bsf	17,7	;volatile
  4200  07E5  0008               	return
  4201  07E6                     __end_of_initCOMP1:	
  4202                           
  4203                           	psect	text25
  4204  0773                     __ptext25:	
  4205 ;; *************** function _initBT *****************
  4206 ;; Defined at:
  4207 ;;		line 349 in file "powerspy.c"
  4208 ;; Parameters:    Size  Location     Type
  4209 ;;		None
  4210 ;; Auto vars:     Size  Location     Type
  4211 ;;		None
  4212 ;; Return value:  Size  Location     Type
  4213 ;;                  1    wreg      void 
  4214 ;; Registers used:
  4215 ;;		wreg
  4216 ;; Tracked objects:
  4217 ;;		On entry : 0/0
  4218 ;;		On exit  : 0/0
  4219 ;;		Unchanged: 0/0
  4220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4221 ;;      Params:         0       0       0       0       0       0
  4222 ;;      Locals:         0       0       0       0       0       0
  4223 ;;      Temps:          0       0       0       0       0       0
  4224 ;;      Totals:         0       0       0       0       0       0
  4225 ;;Total ram usage:        0 bytes
  4226 ;; Hardware stack levels used:    1
  4227 ;; Hardware stack levels required when called:    1
  4228 ;; This function calls:
  4229 ;;		Nothing
  4230 ;; This function is called by:
  4231 ;;		_main
  4232 ;; This function uses a non-reentrant model
  4233 ;;
  4234                           
  4235                           
  4236                           ;psect for function _initBT
  4237  0773                     _initBT:	
  4238                           
  4239                           ;powerspy.c: 353: RXDTSEL = 0;
  4240                           
  4241                           ;incstack = 0
  4242                           ; Regs used in _initBT: [wreg]
  4243  0773  0022               	movlb	2	; select bank2
  4244  0774  139D               	bcf	29,7	;volatile
  4245                           
  4246                           ;powerspy.c: 354: TXCKSEL = 0;
  4247  0775  101E               	bcf	30,0	;volatile
  4248                           
  4249                           ;powerspy.c: 357: TXEN = 1;
  4250  0776  0023               	movlb	3	; select bank3
  4251  0777  169E               	bsf	30,5	;volatile
  4252                           
  4253                           ;powerspy.c: 358: SYNC = 0;
  4254  0778  121E               	bcf	30,4	;volatile
  4255                           
  4256                           ;powerspy.c: 359: SPEN = 1;
  4257  0779  179D               	bsf	29,7	;volatile
  4258                           
  4259                           ;powerspy.c: 362: CREN = 1;
  4260  077A  161D               	bsf	29,4	;volatile
  4261                           
  4262                           ;powerspy.c: 363: SYNC = 0;
  4263  077B  121E               	bcf	30,4	;volatile
  4264                           
  4265                           ;powerspy.c: 364: SPEN = 1;
  4266  077C  179D               	bsf	29,7	;volatile
  4267                           
  4268                           ;powerspy.c: 367: BRGH = 0;
  4269  077D  111E               	bcf	30,2	;volatile
  4270                           
  4271                           ;powerspy.c: 368: BRG16 = 0;
  4272  077E  119F               	bcf	31,3	;volatile
  4273                           
  4274                           ;powerspy.c: 369: SPBRG = 51;
  4275  077F  3033               	movlw	51
  4276  0780  009B               	movwf	27	;volatile
  4277  0781                     l2520:	
  4278                           ;powerspy.c: 371: while (RCIF) {
  4279                           
  4280  0781  0020               	movlb	0	; select bank0
  4281  0782  1E91               	btfss	17,5	;volatile
  4282  0783  2F87               	goto	l270
  4283                           
  4284                           ;powerspy.c: 372: RCREG;
  4285  0784  0023               	movlb	3	; select bank3
  4286  0785  0819               	movf	25,w	;volatile
  4287  0786  2F81               	goto	l2520
  4288  0787                     l270:	
  4289                           
  4290                           ;powerspy.c: 373: }
  4291                           ;powerspy.c: 375: RCIE = 1;
  4292  0787  0021               	movlb	1	; select bank1
  4293  0788  1691               	bsf	17,5	;volatile
  4294  0789  0008               	return
  4295  078A                     __end_of_initBT:	
  4296                           
  4297                           	psect	text26
  4298  0FF6                     __ptext26:	
  4299 ;; *************** function _initADC *****************
  4300 ;; Defined at:
  4301 ;;		line 97 in file "powerspy.c"
  4302 ;; Parameters:    Size  Location     Type
  4303 ;;		None
  4304 ;; Auto vars:     Size  Location     Type
  4305 ;;		None
  4306 ;; Return value:  Size  Location     Type
  4307 ;;                  1    wreg      void 
  4308 ;; Registers used:
  4309 ;;		None
  4310 ;; Tracked objects:
  4311 ;;		On entry : 0/0
  4312 ;;		On exit  : 0/0
  4313 ;;		Unchanged: 0/0
  4314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4315 ;;      Params:         0       0       0       0       0       0
  4316 ;;      Locals:         0       0       0       0       0       0
  4317 ;;      Temps:          0       0       0       0       0       0
  4318 ;;      Totals:         0       0       0       0       0       0
  4319 ;;Total ram usage:        0 bytes
  4320 ;; Hardware stack levels used:    1
  4321 ;; Hardware stack levels required when called:    1
  4322 ;; This function calls:
  4323 ;;		Nothing
  4324 ;; This function is called by:
  4325 ;;		_main
  4326 ;; This function uses a non-reentrant model
  4327 ;;
  4328                           
  4329                           
  4330                           ;psect for function _initADC
  4331  0FF6                     _initADC:	
  4332                           
  4333                           ;powerspy.c: 101: ADFM = 0;
  4334                           
  4335                           ;incstack = 0
  4336                           ; Regs used in _initADC: []
  4337  0FF6  0021               	movlb	1	; select bank1
  4338  0FF7  139E               	bcf	30,7	;volatile
  4339                           
  4340                           ;powerspy.c: 105: ADCS0 = 0;
  4341  0FF8  121E               	bcf	30,4	;volatile
  4342                           
  4343                           ;powerspy.c: 106: ADCS1 = 1;
  4344  0FF9  169E               	bsf	30,5	;volatile
  4345                           
  4346                           ;powerspy.c: 107: ADCS2 = 1;
  4347  0FFA  171E               	bsf	30,6	;volatile
  4348                           
  4349                           ;powerspy.c: 111: ADPREF0 = 0;
  4350  0FFB  101E               	bcf	30,0	;volatile
  4351                           
  4352                           ;powerspy.c: 112: ADPREF1 = 0;
  4353  0FFC  109E               	bcf	30,1	;volatile
  4354                           
  4355                           ;powerspy.c: 113: ADNREF = 0;
  4356  0FFD  111E               	bcf	30,2	;volatile
  4357                           
  4358                           ;powerspy.c: 115: ADON = 1;
  4359  0FFE  141D               	bsf	29,0	;volatile
  4360  0FFF  0008               	return
  4361  1000                     __end_of_initADC:	
  4362                           
  4363                           	psect	text27
  4364  0689                     __ptext27:	
  4365 ;; *************** function _deltaT *****************
  4366 ;; Defined at:
  4367 ;;		line 554 in file "powerspy.c"
  4368 ;; Parameters:    Size  Location     Type
  4369 ;;  tm_low          2    2[COMMON] unsigned short 
  4370 ;;  tm_high         2    4[COMMON] unsigned short 
  4371 ;; Auto vars:     Size  Location     Type
  4372 ;;		None
  4373 ;; Return value:  Size  Location     Type
  4374 ;;                  2    2[COMMON] unsigned short 
  4375 ;; Registers used:
  4376 ;;		wreg, status,2, status,0
  4377 ;; Tracked objects:
  4378 ;;		On entry : 0/0
  4379 ;;		On exit  : 0/0
  4380 ;;		Unchanged: 0/0
  4381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4382 ;;      Params:         4       0       0       0       0       0
  4383 ;;      Locals:         0       0       0       0       0       0
  4384 ;;      Temps:          4       0       0       0       0       0
  4385 ;;      Totals:         8       0       0       0       0       0
  4386 ;;Total ram usage:        8 bytes
  4387 ;; Hardware stack levels used:    1
  4388 ;; Hardware stack levels required when called:    1
  4389 ;; This function calls:
  4390 ;;		Nothing
  4391 ;; This function is called by:
  4392 ;;		_main
  4393 ;; This function uses a non-reentrant model
  4394 ;;
  4395                           
  4396                           
  4397                           ;psect for function _deltaT
  4398  0689                     _deltaT:	
  4399                           
  4400                           ;powerspy.c: 556: if (tm_low < tm_high)
  4401                           
  4402                           ;incstack = 0
  4403                           ; Regs used in _deltaT: [wreg+status,2+status,0]
  4404  0689  0875               	movf	deltaT@tm_high+1,w
  4405  068A  0273               	subwf	deltaT@tm_low+1,w
  4406  068B  1D03               	skipz
  4407  068C  2E8F               	goto	u2195
  4408  068D  0874               	movf	deltaT@tm_high,w
  4409  068E  0272               	subwf	deltaT@tm_low,w
  4410  068F                     u2195:	
  4411  068F  1803               	skipnc
  4412  0690  2E9F               	goto	l2548
  4413                           
  4414                           ;powerspy.c: 557: return tm_high - tm_low;
  4415  0691  0972               	comf	deltaT@tm_low,w
  4416  0692  00F6               	movwf	??_deltaT
  4417  0693  0973               	comf	deltaT@tm_low+1,w
  4418  0694  00F7               	movwf	??_deltaT+1
  4419  0695  0AF6               	incf	??_deltaT,f
  4420  0696  1903               	skipnz
  4421  0697  0AF7               	incf	??_deltaT+1,f
  4422  0698  0874               	movf	deltaT@tm_high,w
  4423  0699  0776               	addwf	??_deltaT,w
  4424  069A  00F2               	movwf	?_deltaT
  4425  069B  0875               	movf	deltaT@tm_high+1,w
  4426  069C  3D77               	addwfc	??_deltaT+1,w
  4427  069D  00F3               	movwf	?_deltaT+1
  4428  069E  0008               	return
  4429  069F                     l2548:	
  4430                           
  4431                           ;powerspy.c: 558: else
  4432                           ;powerspy.c: 559: return 0xffff - tm_low + tm_high;
  4433  069F  0972               	comf	deltaT@tm_low,w
  4434  06A0  00F6               	movwf	??_deltaT
  4435  06A1  0973               	comf	deltaT@tm_low+1,w
  4436  06A2  00F7               	movwf	??_deltaT+1
  4437  06A3  0AF6               	incf	??_deltaT,f
  4438  06A4  1903               	skipnz
  4439  06A5  0AF7               	incf	??_deltaT+1,f
  4440  06A6  0874               	movf	deltaT@tm_high,w
  4441  06A7  0776               	addwf	??_deltaT,w
  4442  06A8  00F8               	movwf	??_deltaT+2
  4443  06A9  0875               	movf	deltaT@tm_high+1,w
  4444  06AA  3D77               	addwfc	??_deltaT+1,w
  4445  06AB  00F9               	movwf	??_deltaT+3
  4446  06AC  0878               	movf	??_deltaT+2,w
  4447  06AD  3EFF               	addlw	255
  4448  06AE  00F2               	movwf	?_deltaT
  4449  06AF  30FF               	movlw	255
  4450  06B0  3D79               	addwfc	??_deltaT+3,w
  4451  06B1  00F3               	movwf	?_deltaT+1
  4452  06B2  0008               	return
  4453  06B3                     __end_of_deltaT:	
  4454                           
  4455                           	psect	text28
  4456  0FEC                     __ptext28:	
  4457 ;; *************** function _cos *****************
  4458 ;; Defined at:
  4459 ;;		line 596 in file "powerspy.c"
  4460 ;; Parameters:    Size  Location     Type
  4461 ;;  us              2    2[BANK0 ] short 
  4462 ;; Auto vars:     Size  Location     Type
  4463 ;;		None
  4464 ;; Return value:  Size  Location     Type
  4465 ;;                  1    wreg      char 
  4466 ;; Registers used:
  4467 ;;		wreg, status,2, status,0, pclath, cstack
  4468 ;; Tracked objects:
  4469 ;;		On entry : 0/0
  4470 ;;		On exit  : 0/0
  4471 ;;		Unchanged: 0/0
  4472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4473 ;;      Params:         0       2       0       0       0       0
  4474 ;;      Locals:         0       0       0       0       0       0
  4475 ;;      Temps:          0       0       0       0       0       0
  4476 ;;      Totals:         0       2       0       0       0       0
  4477 ;;Total ram usage:        2 bytes
  4478 ;; Hardware stack levels used:    1
  4479 ;; Hardware stack levels required when called:    4
  4480 ;; This function calls:
  4481 ;;		_sin
  4482 ;; This function is called by:
  4483 ;;		_main
  4484 ;; This function uses a non-reentrant model
  4485 ;;
  4486                           
  4487                           
  4488                           ;psect for function _cos
  4489  0FEC                     _cos:	
  4490                           
  4491                           ;powerspy.c: 598: return sin((100) + us);
  4492                           
  4493                           ;incstack = 0
  4494                           ; Regs used in _cos: [wreg+status,2+status,0+pclath+cstack]
  4495  0FEC  0020               	movlb	0	; select bank0
  4496  0FED  0822               	movf	cos@us,w
  4497  0FEE  3E64               	addlw	100
  4498  0FEF  00F7               	movwf	sin@z
  4499  0FF0  3000               	movlw	0
  4500  0FF1  3D23               	addwfc	cos@us+1,w
  4501  0FF2  00F8               	movwf	sin@z+1
  4502  0FF3  3184  248A         	fcall	_sin
  4503  0FF5  0008               	return
  4504  0FF6                     __end_of_cos:	
  4505                           
  4506                           	psect	text29
  4507  048A                     __ptext29:	
  4508 ;; *************** function _sin *****************
  4509 ;; Defined at:
  4510 ;;		line 569 in file "powerspy.c"
  4511 ;; Parameters:    Size  Location     Type
  4512 ;;  z               2    7[COMMON] short 
  4513 ;; Auto vars:     Size  Location     Type
  4514 ;;  buff            2    0[BANK0 ] short 
  4515 ;; Return value:  Size  Location     Type
  4516 ;;                  1    wreg      char 
  4517 ;; Registers used:
  4518 ;;		wreg, status,2, status,0, pclath, cstack
  4519 ;; Tracked objects:
  4520 ;;		On entry : 0/0
  4521 ;;		On exit  : 0/0
  4522 ;;		Unchanged: 0/0
  4523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4524 ;;      Params:         2       0       0       0       0       0
  4525 ;;      Locals:         0       2       0       0       0       0
  4526 ;;      Temps:          1       0       0       0       0       0
  4527 ;;      Totals:         3       2       0       0       0       0
  4528 ;;Total ram usage:        5 bytes
  4529 ;; Hardware stack levels used:    1
  4530 ;; Hardware stack levels required when called:    3
  4531 ;; This function calls:
  4532 ;;		_sin_
  4533 ;; This function is called by:
  4534 ;;		_cos
  4535 ;;		_main
  4536 ;; This function uses a non-reentrant model
  4537 ;;
  4538                           
  4539                           
  4540                           ;psect for function _sin
  4541  048A                     _sin:	
  4542  048A                     l332:	
  4543                           ;powerspy.c: 572: int16_t buff;
  4544                           ;powerspy.c: 573: while (z > ((100)<<2))
  4545                           
  4546                           ;incstack = 0
  4547                           ; Regs used in _sin: [wreg+status,2+status,0+pclath+cstack]
  4548                           
  4549  048A  0878               	movf	sin@z+1,w
  4550  048B  3A80               	xorlw	128
  4551  048C  00F9               	movwf	??_sin
  4552  048D  3081               	movlw	129
  4553  048E  0279               	subwf	??_sin,w
  4554  048F  1D03               	skipz
  4555  0490  2C93               	goto	u2805
  4556  0491  3091               	movlw	145
  4557  0492  0277               	subwf	sin@z,w
  4558  0493                     u2805:	
  4559  0493  1C03               	btfss	3,0
  4560  0494  2C9A               	goto	l3004
  4561                           
  4562                           ;powerspy.c: 574: z -= ((100)<<2);
  4563  0495  3070               	movlw	112
  4564  0496  07F7               	addwf	sin@z,f
  4565  0497  30FE               	movlw	254
  4566  0498  3DF8               	addwfc	sin@z+1,f
  4567  0499  2C8A               	goto	l332
  4568  049A                     l3004:	
  4569                           
  4570                           ;powerspy.c: 576: if (z > (((100)<<1)) + (100)) {
  4571  049A  0878               	movf	sin@z+1,w
  4572  049B  3A80               	xorlw	128
  4573  049C  00F9               	movwf	??_sin
  4574  049D  3081               	movlw	129
  4575  049E  0279               	subwf	??_sin,w
  4576  049F  1D03               	skipz
  4577  04A0  2CA3               	goto	u2815
  4578  04A1  302D               	movlw	45
  4579  04A2  0277               	subwf	sin@z,w
  4580  04A3                     u2815:	
  4581  04A3  1C03               	skipc
  4582  04A4  2CB4               	goto	l3012
  4583                           
  4584                           ;powerspy.c: 577: buff = ((100)<<2);
  4585  04A5  3090               	movlw	144
  4586  04A6  0020               	movlb	0	; select bank0
  4587  04A7  00A0               	movwf	sin@buff
  4588  04A8  3001               	movlw	1
  4589  04A9  00A1               	movwf	sin@buff+1
  4590                           
  4591                           ;powerspy.c: 578: buff -= z;
  4592  04AA  0877               	movf	sin@z,w
  4593  04AB  02A0               	subwf	sin@buff,f
  4594  04AC  0878               	movf	sin@z+1,w
  4595  04AD  3BA1               	subwfb	sin@buff+1,f
  4596                           
  4597                           ;powerspy.c: 579: return -sin_((int8_t) buff);
  4598  04AE  0820               	movf	sin@buff,w
  4599  04AF  3187  27FB         	fcall	_sin_
  4600  04B1  3AFF               	xorlw	255
  4601  04B2  3E01               	addlw	1
  4602  04B3  0008               	return
  4603  04B4                     l3012:	
  4604                           
  4605                           ;powerspy.c: 580: }
  4606                           ;powerspy.c: 581: if (z > ((100)<<1)) {
  4607  04B4  0878               	movf	sin@z+1,w
  4608  04B5  3A80               	xorlw	128
  4609  04B6  00F9               	movwf	??_sin
  4610  04B7  3080               	movlw	128
  4611  04B8  0279               	subwf	??_sin,w
  4612  04B9  1D03               	skipz
  4613  04BA  2CBD               	goto	u2825
  4614  04BB  30C9               	movlw	201
  4615  04BC  0277               	subwf	sin@z,w
  4616  04BD                     u2825:	
  4617  04BD  1C03               	skipc
  4618  04BE  2CCE               	goto	l3020
  4619                           
  4620                           ;powerspy.c: 582: buff = z;
  4621  04BF  0878               	movf	sin@z+1,w
  4622  04C0  0020               	movlb	0	; select bank0
  4623  04C1  00A1               	movwf	sin@buff+1
  4624  04C2  0877               	movf	sin@z,w
  4625  04C3  00A0               	movwf	sin@buff
  4626                           
  4627                           ;powerspy.c: 583: buff -= ((100)<<1);
  4628  04C4  3038               	movlw	56
  4629  04C5  07A0               	addwf	sin@buff,f
  4630  04C6  30FF               	movlw	255
  4631  04C7  3DA1               	addwfc	sin@buff+1,f
  4632                           
  4633                           ;powerspy.c: 584: return -sin_((int8_t) buff);
  4634  04C8  0820               	movf	sin@buff,w
  4635  04C9  3187  27FB         	fcall	_sin_
  4636  04CB  3AFF               	xorlw	255
  4637  04CC  3E01               	addlw	1
  4638  04CD  0008               	return
  4639  04CE                     l3020:	
  4640                           
  4641                           ;powerspy.c: 585: }
  4642                           ;powerspy.c: 586: if (z > (100)) {
  4643  04CE  0878               	movf	sin@z+1,w
  4644  04CF  3A80               	xorlw	128
  4645  04D0  00F9               	movwf	??_sin
  4646  04D1  3080               	movlw	128
  4647  04D2  0279               	subwf	??_sin,w
  4648  04D3  1D03               	skipz
  4649  04D4  2CD7               	goto	u2835
  4650  04D5  3065               	movlw	101
  4651  04D6  0277               	subwf	sin@z,w
  4652  04D7                     u2835:	
  4653  04D7  1C03               	skipc
  4654  04D8  2CE6               	goto	l3028
  4655                           
  4656                           ;powerspy.c: 587: buff = ((100)<<1);
  4657  04D9  30C8               	movlw	200
  4658  04DA  0020               	movlb	0	; select bank0
  4659  04DB  00A0               	movwf	sin@buff
  4660  04DC  3000               	movlw	0
  4661  04DD  00A1               	movwf	sin@buff+1
  4662                           
  4663                           ;powerspy.c: 588: buff -= z;
  4664  04DE  0877               	movf	sin@z,w
  4665  04DF  02A0               	subwf	sin@buff,f
  4666  04E0  0878               	movf	sin@z+1,w
  4667  04E1  3BA1               	subwfb	sin@buff+1,f
  4668                           
  4669                           ;powerspy.c: 589: return sin_((int8_t) buff);
  4670  04E2  0820               	movf	sin@buff,w
  4671  04E3  3187  27FB         	fcall	_sin_
  4672  04E5  0008               	return
  4673  04E6                     l3028:	
  4674                           
  4675                           ;powerspy.c: 590: }
  4676                           ;powerspy.c: 593: return sin_((uint8_t) z);
  4677  04E6  0877               	movf	sin@z,w
  4678  04E7  3187  27FB         	fcall	_sin_
  4679  04E9  0008               	return
  4680  04EA                     __end_of_sin:	
  4681                           
  4682                           	psect	text30
  4683  07FB                     __ptext30:	
  4684 ;; *************** function _sin_ *****************
  4685 ;; Defined at:
  4686 ;;		line 562 in file "powerspy.c"
  4687 ;; Parameters:    Size  Location     Type
  4688 ;;  z               1    wreg     char 
  4689 ;; Auto vars:     Size  Location     Type
  4690 ;;  z               1    6[COMMON] char 
  4691 ;; Return value:  Size  Location     Type
  4692 ;;                  1    wreg      char 
  4693 ;; Registers used:
  4694 ;;		wreg, status,2, status,0, pclath, cstack
  4695 ;; Tracked objects:
  4696 ;;		On entry : 0/0
  4697 ;;		On exit  : 0/0
  4698 ;;		Unchanged: 0/0
  4699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4700 ;;      Params:         0       0       0       0       0       0
  4701 ;;      Locals:         1       0       0       0       0       0
  4702 ;;      Temps:          0       0       0       0       0       0
  4703 ;;      Totals:         1       0       0       0       0       0
  4704 ;;Total ram usage:        1 bytes
  4705 ;; Hardware stack levels used:    1
  4706 ;; Hardware stack levels required when called:    2
  4707 ;; This function calls:
  4708 ;;		_eeprom_read
  4709 ;; This function is called by:
  4710 ;;		_sin
  4711 ;; This function uses a non-reentrant model
  4712 ;;
  4713                           
  4714                           
  4715                           ;psect for function _sin_
  4716  07FB                     _sin_:	
  4717                           
  4718                           ;incstack = 0
  4719                           ; Regs used in _sin_: [wreg+status,2+status,0+pclath+cstack]
  4720                           ;sin_@z stored from wreg
  4721  07FB  00F6               	movwf	sin_@z
  4722                           
  4723                           ;powerspy.c: 564: return eeprom_read(z);
  4724  07FC  0876               	movf	sin_@z,w
  4725  07FD  3187  275B         	fcall	_eeprom_read
  4726  07FF  0008               	return
  4727  0800                     __end_of_sin_:	
  4728                           
  4729                           	psect	text31
  4730  075B                     __ptext31:	
  4731 ;; *************** function _eeprom_read *****************
  4732 ;; Defined at:
  4733 ;;		line 6 in file "/Applications/microchip/xc8/v1.37/sources/pic/eeread.c"
  4734 ;; Parameters:    Size  Location     Type
  4735 ;;  addr            1    wreg     unsigned char 
  4736 ;; Auto vars:     Size  Location     Type
  4737 ;;  addr            1    5[COMMON] unsigned char 
  4738 ;; Return value:  Size  Location     Type
  4739 ;;                  1    wreg      unsigned char 
  4740 ;; Registers used:
  4741 ;;		wreg, status,2, status,0
  4742 ;; Tracked objects:
  4743 ;;		On entry : 0/0
  4744 ;;		On exit  : 0/0
  4745 ;;		Unchanged: 0/0
  4746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4747 ;;      Params:         0       0       0       0       0       0
  4748 ;;      Locals:         1       0       0       0       0       0
  4749 ;;      Temps:          3       0       0       0       0       0
  4750 ;;      Totals:         4       0       0       0       0       0
  4751 ;;Total ram usage:        4 bytes
  4752 ;; Hardware stack levels used:    1
  4753 ;; Hardware stack levels required when called:    1
  4754 ;; This function calls:
  4755 ;;		Nothing
  4756 ;; This function is called by:
  4757 ;;		_sin_
  4758 ;; This function uses a non-reentrant model
  4759 ;;
  4760                           
  4761                           
  4762                           ;psect for function _eeprom_read
  4763  075B                     _eeprom_read:	
  4764                           
  4765                           ;incstack = 0
  4766                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  4767                           ;eeprom_read@addr stored from wreg
  4768  075B  00F5               	movwf	eeprom_read@addr
  4769  075C                     l520:	
  4770  075C  0064               	clrwdt	;# 
  4771  075D  0023               	movlb	3	; select bank3
  4772  075E  1895               	btfsc	21,1	;volsfr
  4773  075F  2F5C               	goto	l520
  4774  0760  0875               	movf	eeprom_read@addr,w
  4775  0761  00F2               	movwf	??_eeprom_read
  4776  0762  01F3               	clrf	??_eeprom_read+1
  4777  0763  0872               	movf	??_eeprom_read,w
  4778  0764  0091               	movwf	17	;volatile
  4779  0765  0873               	movf	??_eeprom_read+1,w
  4780  0766  0092               	movwf	18	;volatile
  4781  0767  303F               	movlw	63
  4782  0768  00F4               	movwf	??_eeprom_read+2
  4783  0769  0874               	movf	??_eeprom_read+2,w
  4784  076A  0595               	andwf	21,f	;volsfr
  4785  076B  1415               	bsf	21,0	;volsfr
  4786  076C  1003               	clrc
  4787  076D  1815               	btfsc	21,0	;volsfr
  4788  076E  1403               	setc
  4789  076F  3000               	movlw	0
  4790  0770  3D09               	addwfc	9,w
  4791  0771  0813               	movf	19,w	;volatile
  4792  0772  0008               	return
  4793  0773                     __end_of_eeprom_read:	
  4794                           
  4795                           	psect	intentry
  4796  0004                     __pintentry:	
  4797 ;; *************** function _ISR *****************
  4798 ;; Defined at:
  4799 ;;		line 641 in file "powerspy.c"
  4800 ;; Parameters:    Size  Location     Type
  4801 ;;		None
  4802 ;; Auto vars:     Size  Location     Type
  4803 ;;		None
  4804 ;; Return value:  Size  Location     Type
  4805 ;;                  1    wreg      void 
  4806 ;; Registers used:
  4807 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4808 ;; Tracked objects:
  4809 ;;		On entry : 0/0
  4810 ;;		On exit  : 0/0
  4811 ;;		Unchanged: 0/0
  4812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4813 ;;      Params:         0       0       0       0       0       0
  4814 ;;      Locals:         0       0       0       0       0       0
  4815 ;;      Temps:          2       0       0       0       0       0
  4816 ;;      Totals:         2       0       0       0       0       0
  4817 ;;Total ram usage:        2 bytes
  4818 ;; Hardware stack levels used:    1
  4819 ;; This function calls:
  4820 ;;		Nothing
  4821 ;; This function is called by:
  4822 ;;		Interrupt level 1
  4823 ;; This function uses a non-reentrant model
  4824 ;;
  4825                           
  4826  0004                     _ISR:	
  4827                           
  4828                           ;incstack = 0
  4829                           ; Regs used in _ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  4830  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  4831  0005  3180               	pagesel	$
  4832  0006  0020               	movlb	0	; select bank0
  4833  0007  087F               	movf	127,w
  4834  0008  00F1               	movwf	??_ISR+1
  4835                           
  4836                           ;powerspy.c: 644: if (RCIE && RCIF) {
  4837  0009  0021               	movlb	1	; select bank1
  4838  000A  1E91               	btfss	17,5	;volatile
  4839  000B  2822               	goto	i1l2670
  4840  000C  0020               	movlb	0	; select bank0
  4841  000D  1E91               	btfss	17,5	;volatile
  4842  000E  2822               	goto	i1l2670
  4843                           
  4844                           ;powerspy.c: 645: receive_buff[buffpos] = RCREG;
  4845  000F  0023               	movlb	3	; select bank3
  4846  0010  0819               	movf	25,w	;volatile
  4847  0011  00F0               	movwf	??_ISR
  4848  0012  087A               	movf	_buffpos,w
  4849  0013  3E59               	addlw	(low (_receive_buff| 0))& (0+255)
  4850  0014  0086               	movwf	6
  4851  0015  0187               	clrf	7
  4852  0016  0870               	movf	??_ISR,w
  4853  0017  0081               	movwf	1
  4854                           
  4855                           ;powerspy.c: 646: buffpos++;
  4856  0018  3001               	movlw	1
  4857  0019  00F0               	movwf	??_ISR
  4858  001A  0870               	movf	??_ISR,w
  4859  001B  07FA               	addwf	_buffpos,f
  4860                           
  4861                           ;powerspy.c: 647: buffpos %= 8;
  4862  001C  3007               	movlw	7
  4863  001D  00F0               	movwf	??_ISR
  4864  001E  0870               	movf	??_ISR,w
  4865  001F  05FA               	andwf	_buffpos,f
  4866                           
  4867                           ;powerspy.c: 648: RCIF = 0;
  4868  0020  0020               	movlb	0	; select bank0
  4869  0021  1291               	bcf	17,5	;volatile
  4870  0022                     i1l2670:	
  4871                           
  4872                           ;powerspy.c: 649: }
  4873                           ;powerspy.c: 652: if (TMR1IE && TMR1IF) {
  4874  0022  0021               	movlb	1	; select bank1
  4875  0023  1C11               	btfss	17,0	;volatile
  4876  0024  2829               	goto	i1l366
  4877  0025  0020               	movlb	0	; select bank0
  4878  0026  1C11               	btfss	17,0	;volatile
  4879  0027  2829               	goto	i1l366
  4880                           
  4881                           ;powerspy.c: 653: TMR1IF = 0;
  4882  0028  1011               	bcf	17,0	;volatile
  4883  0029                     i1l366:	
  4884                           
  4885                           ;powerspy.c: 654: }
  4886                           ;powerspy.c: 657: if (C1IE && C1IF) {
  4887  0029  0021               	movlb	1	; select bank1
  4888  002A  1E92               	btfss	18,5	;volatile
  4889  002B  2839               	goto	i1l367
  4890  002C  0020               	movlb	0	; select bank0
  4891  002D  1E92               	btfss	18,5	;volatile
  4892  002E  2839               	goto	i1l367
  4893                           
  4894                           ;powerspy.c: 658: if (!(flag & 0x01)) {
  4895  002F  1867               	btfsc	_flag,0	;volatile
  4896  0030  2838               	goto	i1l368
  4897                           
  4898                           ;powerspy.c: 659: volt_time = TMR1;
  4899  0031  0817               	movf	23,w	;volatile
  4900  0032  00E6               	movwf	_volt_time+1
  4901  0033  0816               	movf	22,w	;volatile
  4902  0034  00E5               	movwf	_volt_time
  4903                           
  4904                           ;powerspy.c: 660: if (flag & 0x02)
  4905  0035  18E7               	btfsc	_flag,1	;volatile
  4906                           
  4907                           ;powerspy.c: 661: flag |= 0x08;
  4908  0036  15E7               	bsf	_flag,3	;volatile
  4909                           
  4910                           ;powerspy.c: 662: flag |= 0x01;
  4911  0037  1467               	bsf	_flag,0	;volatile
  4912  0038                     i1l368:	
  4913                           
  4914                           ;powerspy.c: 663: }
  4915                           ;powerspy.c: 665: C1IF = 0;
  4916  0038  1292               	bcf	18,5	;volatile
  4917  0039                     i1l367:	
  4918                           
  4919                           ;powerspy.c: 666: }
  4920                           ;powerspy.c: 669: if (C2IE && C2IF) {
  4921  0039  0021               	movlb	1	; select bank1
  4922  003A  1F12               	btfss	18,6	;volatile
  4923  003B  2849               	goto	i1l370
  4924  003C  0020               	movlb	0	; select bank0
  4925  003D  1F12               	btfss	18,6	;volatile
  4926  003E  2849               	goto	i1l370
  4927                           
  4928                           ;powerspy.c: 670: if (!(flag & 0x02)) {
  4929  003F  18E7               	btfsc	_flag,1	;volatile
  4930  0040  2848               	goto	i1l371
  4931                           
  4932                           ;powerspy.c: 671: curr_time = TMR1;
  4933  0041  0817               	movf	23,w	;volatile
  4934  0042  00E2               	movwf	_curr_time+1
  4935  0043  0816               	movf	22,w	;volatile
  4936  0044  00E1               	movwf	_curr_time
  4937                           
  4938                           ;powerspy.c: 672: if (flag & 0x01)
  4939  0045  1867               	btfsc	_flag,0	;volatile
  4940                           
  4941                           ;powerspy.c: 673: flag |= 0x04;
  4942  0046  1567               	bsf	_flag,2	;volatile
  4943                           
  4944                           ;powerspy.c: 674: flag |= 0x02;
  4945  0047  14E7               	bsf	_flag,1	;volatile
  4946  0048                     i1l371:	
  4947                           
  4948                           ;powerspy.c: 675: }
  4949                           ;powerspy.c: 677: C2IF = 0;
  4950  0048  1312               	bcf	18,6	;volatile
  4951  0049                     i1l370:	
  4952                           
  4953                           ;powerspy.c: 678: }
  4954                           ;powerspy.c: 680: if (TMR2IE && TMR2IF) {
  4955  0049  0021               	movlb	1	; select bank1
  4956  004A  1C91               	btfss	17,1	;volatile
  4957  004B  2850               	goto	i1l374
  4958  004C  0020               	movlb	0	; select bank0
  4959  004D  1C91               	btfss	17,1	;volatile
  4960  004E  2850               	goto	i1l374
  4961                           
  4962                           ;powerspy.c: 681: TMR2IF = 0;
  4963  004F  1091               	bcf	17,1	;volatile
  4964  0050                     i1l374:	
  4965  0050  0871               	movf	??_ISR+1,w
  4966  0051  0020               	movlb	0	; select bank0
  4967  0052  00FF               	movwf	127
  4968  0053  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  4969  0054  0009               	retfie
  4970  0055                     __end_of_ISR:	
  4971  007E                     btemp	set	126	;btemp
  4972  007E                     int$flags	set	126
  4973  007E                     wtemp	set	126
  4974  007E                     wtemp0	set	126
  4975  0080                     wtemp1	set	128
  4976  0082                     wtemp2	set	130
  4977  0084                     wtemp3	set	132
  4978  0086                     wtemp4	set	134
  4979  0088                     wtemp5	set	136
  4980  007F                     wtemp6	set	127
  4981  007E                     ttemp	set	126
  4982  007E                     ttemp0	set	126
  4983  0081                     ttemp1	set	129
  4984  0084                     ttemp2	set	132
  4985  0087                     ttemp3	set	135
  4986  007F                     ttemp4	set	127
  4987  007E                     ltemp	set	126
  4988  007E                     ltemp0	set	126
  4989  0082                     ltemp1	set	130
  4990  0086                     ltemp2	set	134
  4991  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    10
    Data        4
    BSS         19
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     57      78
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___wmul
    _main->_deltaT
    _main->_sin
    _setUnit->_so
    _setLED->_sendColour
    _sendUInt8->__sendchar_
    _sendInt24->__sendchar_
    _readVdd->_adc
    _readCurrent->___wmul
    ___wmul->_readVdd
    ___tmul->___wmul
    ___tmul->_sin
    ___atdiv->___wmul
    ___atdiv->_sin
    _cos->_sin
    _sin->_sin_
    _sin_->_eeprom_read

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_readCurrent
    _setVal->___atdiv
    _readCurrent->___atdiv
    ___tmul->___wmul
    ___tmul->_cos
    ___atdiv->___tmul
    _cos->_sin

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                24    24      0   10502
                                             34 BANK0     23    23      0
                            ___atdiv
                            ___awmod
                             ___tmul
                             ___wmul
                                _cos
                             _deltaT
                            _initADC
                             _initBT
                          _initCOMP1
                          _initCOMP2
                            _initFVR
                      _initMessaging
                        _initPWMTMR4
                           _initPins
                           _initTMR1
                        _readCurrent
                            _readVdd
                        _readVoltage
                          _sendInt24
                          _sendUInt8
                             _setLED
                            _setUnit
                             _setVal
                                _sin
 ---------------------------------------------------------------------------------
 (1) _setVal                                               4     2      2    1696
                                             25 BANK0      4     2      2
                            ___atdiv (ARG)
                            ___awdiv
                            ___awmod
                                 _so
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     508
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     575
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _setUnit                                              6     3      3     573
                                              5 COMMON     3     0      3
                                              0 BANK0      3     3      0
                                 _so
 ---------------------------------------------------------------------------------
 (2) _so                                                   3     3      0      90
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _setLED                                               3     1      2     878
                                              3 COMMON     3     1      2
                         _sendColour
 ---------------------------------------------------------------------------------
 (2) _sendColour                                           1     1      0     176
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _sendUInt8                                            1     1      0      44
                                              5 COMMON     1     1      0
                         __sendchar_
 ---------------------------------------------------------------------------------
 (1) _sendInt24                                            7     4      3     570
                                              5 COMMON     3     0      3
                                              0 BANK0      4     4      0
                         __sendchar_
 ---------------------------------------------------------------------------------
 (2) __sendchar_                                           3     3      0      22
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _readVoltage                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _readVdd                                              4     2      2     110
                                              4 COMMON     4     2      2
                                _adc
 ---------------------------------------------------------------------------------
 (1) _readCurrent                                          9     6      3    2064
                                             25 BANK0      9     6      3
                            ___atdiv
                             ___tmul
                             ___wmul
                                _adc
 ---------------------------------------------------------------------------------
 (2) _adc                                                  2     2      0     110
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              8 COMMON     2     2      0
                                              0 BANK0      4     0      4
                            _readVdd (ARG)
 ---------------------------------------------------------------------------------
 (2) ___tmul                                               9     3      6     516
                                              4 BANK0      9     3      6
                             ___wmul (ARG)
                                _cos (ARG)
                                _sin (ARG)
 ---------------------------------------------------------------------------------
 (2) ___atdiv                                             12     6      6    1042
                                             13 BANK0     12     6      6
                             ___tmul (ARG)
                             ___wmul (ARG)
                                _cos (ARG)
                                _sin (ARG)
 ---------------------------------------------------------------------------------
 (1) _initTMR1                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initPins                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initPWMTMR4                                          1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initMessaging                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initFVR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initCOMP2                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initCOMP1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initBT                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _deltaT                                               8     4      4     344
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _cos                                                  2     0      2     650
                                              2 BANK0      2     0      2
                                _sin
 ---------------------------------------------------------------------------------
 (1) _sin                                                  5     3      2     554
                                              7 COMMON     3     1      2
                                              0 BANK0      2     2      0
                               _sin_
 ---------------------------------------------------------------------------------
 (2) _sin_                                                 1     1      0      62
                                              6 COMMON     1     1      0
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (3) _eeprom_read                                          4     4      0      31
                                              2 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___atdiv
     ___tmul (ARG)
       ___wmul (ARG)
         _readVdd (ARG)
           _adc
       _cos (ARG)
         _sin
           _sin_
             _eeprom_read
       _sin (ARG)
         _sin_
           _eeprom_read
     ___wmul (ARG)
       _readVdd (ARG)
         _adc
     _cos (ARG)
       _sin
         _sin_
           _eeprom_read
     _sin (ARG)
       _sin_
         _eeprom_read
   ___awmod
   ___tmul
     ___wmul (ARG)
       _readVdd (ARG)
         _adc
     _cos (ARG)
       _sin
         _sin_
           _eeprom_read
     _sin (ARG)
       _sin_
         _eeprom_read
   ___wmul
     _readVdd (ARG)
       _adc
   _cos
     _sin
       _sin_
         _eeprom_read
   _deltaT
   _initADC
   _initBT
   _initCOMP1
   _initCOMP2
   _initFVR
   _initMessaging
   _initPWMTMR4
   _initPins
   _initTMR1
   _readCurrent
     ___atdiv
       ___tmul (ARG)
         ___wmul (ARG)
           _readVdd (ARG)
             _adc
         _cos (ARG)
           _sin
             _sin_
               _eeprom_read
         _sin (ARG)
           _sin_
             _eeprom_read
       ___wmul (ARG)
         _readVdd (ARG)
           _adc
       _cos (ARG)
         _sin
           _sin_
             _eeprom_read
       _sin (ARG)
         _sin_
           _eeprom_read
     ___tmul
       ___wmul (ARG)
         _readVdd (ARG)
           _adc
       _cos (ARG)
         _sin
           _sin_
             _eeprom_read
       _sin (ARG)
         _sin_
           _eeprom_read
     ___wmul
       _readVdd (ARG)
         _adc
     _adc
   _readVdd
     _adc
   _readVoltage
   _sendInt24
     __sendchar_
   _sendUInt8
     __sendchar_
   _setLED
     _sendColour
   _setUnit
     _so
   _setVal
     ___atdiv (ARG)
       ___tmul (ARG)
         ___wmul (ARG)
           _readVdd (ARG)
             _adc
         _cos (ARG)
           _sin
             _sin_
               _eeprom_read
         _sin (ARG)
           _sin_
             _eeprom_read
       ___wmul (ARG)
         _readVdd (ARG)
           _adc
       _cos (ARG)
         _sin
           _sin_
             _eeprom_read
       _sin (ARG)
         _sin_
           _eeprom_read
     ___awdiv (ARG)
     ___awmod (ARG)
     _so (ARG)
   _sin
     _sin_
       _eeprom_read

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      5A       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     39      4E       6       97.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      5A      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Sat May 21 11:26:54 2016

            __CFG_CP$OFF 0000                       _RD 0CA8         ___atdiv@quotient 0036  
                     _WR 0CA9             ___awdiv@sign 0021                       _so 03B2  
    ___wmul@multiplicand 0022                      l311 0359                      l313 036D  
                    l305 031D                      l315 0381                      l307 0331  
                    l332 048A                      l253 0FE9                      l317 0395  
                    l309 0345                      l270 0787                      l319 03A9  
                    l520 075C                      ?_so 0070                      l274 05DB  
                    l606 0748                      l471 07B3                      l385 02E6  
                    l378 02E8                      l379 00B2                      l696 042D  
                    _GIE 005F                      _RA3 0063                      _RA4 0064  
                    _RB3 006B                      _RA6 0066                      _RA7 0067  
                    _PR2 001B             __CFG_CPD$OFF 0000                      _ISR 0004  
                    _adc 058D                      _cos 0FEC                      _sin 048A  
                    so@c 0074             ___awmod@sign 0078             __CFG_BORV$LO 0000  
                    wreg 0009                     ??_so 0072             __CFG_LVP$OFF 0000  
                   ?_ISR 0070                     ?_adc 0070                     l2010 05C5  
                   _C1IE 0495                     l2004 0595                     _C1IF 0095  
                   l2006 05A5                     l2022 03C6                     _C2IE 0496  
                   l2008 05B5                     l2200 034D                     _C2IF 0096  
                   l3020 04CE                     l3012 04B4                     l3004 049A  
                   l2212 0389                     l2204 0361                     l2310 06BA  
                   l2216 039D                     l2208 0375                     l2314 06C2  
                   l3034 0741                     l3028 04E6                     l2340 0448  
                   l2332 043B                     l3060 0500                     l3212 0204  
                   l2350 046E                     l2342 0455                     l3070 0508  
                   l3054 04F5                     l2414 05E8                     l3230 0284  
                   l3206 01ED                     l2520 0781                     l2192 0325  
                   l3072 0514                     l2440 061E                     l2432 060D  
                   l3224 0258                     l3160 00CD                     l3144 0095  
                   _C1ON 088F                     l2354 0478                     l3082 052F  
                   l2426 05F5                     l2418 05EF                     l3218 0230  
                   l2196 0339                     l2428 0601                     l2436 0616  
                   l3236 02B0                     l3244 02CC                     _C2ON 089F  
                   l2358 0483                     l3086 0537                     l3078 0526  
                   l3256 030A                     l2548 069F                     ?_cos 0022  
                   l3294 02D2                     _ADFM 04F7                     ?_sin 0077  
                   _ADON 04E8                     _CHS0 04EA                     _CHS1 04EB  
                   _CHS2 04EC                     _CHS3 04ED                     _CHS4 04EE  
                   _BRGH 0CF2                     _CREN 0CEC                     u1410 0593  
                   u2115 05F8                     u1500 05C3                     u2135 0607  
                   u1440 05A3                     u3025 0668                     u2145 060E  
                   u1530 05D3                     u1435 0598                     u3035 067B  
                   u1525 05C8                     u3117 009D                     u1470 05B3  
                   u3127 0304                     u1544 05D5                     u1465 05A8  
                   u3137 07B9                     u2195 068F                     u3147 05D7  
                   u1580 03C4                     u3085 00E8                     u1574 03BD  
                   u1495 05B8                     u1575 03BC                     u1915 044B  
                   u2805 0493                     u2815 04A3                     u1935 0456  
                   u1855 06C3                     u2825 04BD                     u1945 0465  
                   u1865 06C9                     u2835 04D7                     u1955 046F  
                   u2915 050B                     _PEIE 005E                     u2855 0749  
                   u2935 0515                     u2865 074E                     u2945 051F  
                   u2955 0527                     _RCIE 048D                     _RCIF 008D  
                   u2985 06E2                     _SCS0 04C8                     u2995 06F3  
                   _SCS1 04C9                     _TMR1 0016                     _SPEN 0CEF  
                   _TRMT 0CF1                     _TXEN 0CF5                     _SYNC 0CF4  
                   _WPUB 020D              main@current 0053             __CFG_WRT$OFF 0000  
                   _flag 0067             ?_initPWMTMR4 0070                     _main 0074  
                   _mode 0068                     _sin_ 07FB                     fsr0h 0005  
                   fsr1h 0007                     fsr0l 0004                     indf0 0000  
                   indf1 0001                     fsr1l 0006                     btemp 007E  
                   sin@z 0077                     ltemp 007E                     start 0055  
                   ttemp 007E                     wtemp 007E            __CFG_IESO$OFF 0000  
            main@voltage 0045            __CFG_MCLRE$ON 0000                    ??_ISR 0070  
                  ??_adc 0072                    ??_cos 007A                    ??_sin 0079  
          __CFG_PLLEN$ON 0000             ?_readCurrent 0039             main@apparent 0056  
                  _DC1B0 149C                    _DC1B1 149D                    _ADCS0 04F4  
                  _ADCS1 04F5                    _ADCS2 04F6                    ?_main 0070  
        __end_of___atdiv 048A          __end_of___awdiv 053C                    _ADRES 009B  
                  _EEADR 0191                    _BRG16 0CFB            __CFG_WDTE$OFF 0000  
                  ?_sin_ 0070          __end_of___awmod 0623          ___awdiv@divisor 0072  
                  _IRCF0 04CB                    _IRCF1 04CC                    _IRCF2 04CD  
                  _IRCF3 04CE                    _IOCIE 005B                    i1l370 0049  
                  i1l371 0048                    i1l374 0050                    i1l366 0029  
                  i1l367 0039                    i1l368 0038                    _FVREN 08BF  
        ___awdiv@counter 0020                    _RCREG 0199                    _SPBRG 019B  
                  _PORTA 000C                    _PORTB 000D                    _TRISA 008C  
                  _TRISB 008D                    _TXREG 019A             ?_readVoltage 0070  
           main@reactive 004B           __CFG_FCMEN$OFF 0000          __end_of_initADC 1000  
        __end_of_initFVR 0FEC          __end_of_readVdd 079D                    cos@us 0022  
        __end_of_setUnit 0700           __CFG_BOREN$OFF 0000                    ltemp0 007E  
                  ltemp1 0082                    ltemp2 0086                    ltemp3 0080  
                  sin_@z 0076                    ttemp0 007E                    ttemp1 0081  
                  ttemp2 0084                    ttemp3 0087                    ttemp4 007F  
                  status 0003                    wtemp0 007E                    wtemp1 0080  
                  wtemp2 0082                    wtemp3 0084                    wtemp4 0086  
                  wtemp5 0088                    wtemp6 007F          __initialization 0057  
 __size_of_initMessaging 0006             __end_of_main 0310             __end_of_sin_ 0800  
                 ??_main 0042                   ??_sin_ 0076                   _C1NCH0 0890  
                 _C1NCH1 0891                   _C2NCH0 08A0                   _C1PCH0 0894  
                 _C2NCH1 08A1                   _C1PCH1 0895                   _C2PCH0 08A4  
                 _C2PCH1 08A5                   _C1INTP 0897                   _C2INTP 08A7  
                 _ADFVR0 08B8                   _ADFVR1 08B9                   _ADNREF 04F2  
                 _EEDATA 0193                   _CCPR1L 0291                   _EECON1 0195  
       ___awdiv@dividend 0074                   _ANSELA 018C                   _ANSELB 018D  
                 _IOCBN5 1CAD                   i1l2670 0022                   _FVRRDY 08BE  
                 _TMR1IE 0488                   _TMR1IF 0088                   _TMR2IE 0489  
                 _TMR2IF 0089                   _TMR4IF 0099                   _TMR1ON 00C0  
                 _TMR2ON 00E2                   _TMR4ON 20BA                   _SPLLEN 04CF  
         __CFG_PWRTE$OFF 0000     __size_of_eeprom_read 0018                   _nWPUEN 04AF  
                 adc@src 0073                   ___tmul 06B3                   ___wmul 073F  
              ??___atdiv 0033                ??___awdiv 0076                ??___awmod 0076  
                 _deltaT 0689         __end_of_initTMR1 07F1         __end_of_initPins 0720  
                 _initBT 0773                   _setLED 079D         ___awdiv@quotient 0022  
                 _setVal 0623          ___awmod@divisor 0072          ___awmod@counter 0077  
              ??_initADC 0072                ??_initFVR 0072                   so@data 0073  
              ??_readVdd 0076                ??_setUnit 0020            _initMessaging 0FD7  
__end_of__initialization 0070          eeprom_read@addr 0075     __size_of_initPWMTMR4 001F  
         __pcstackCOMMON 0070             __pidataBANK0 0FD3               __end_of_so 041F  
   __size_of_readCurrent 0051           ?_initMessaging 0070     __size_of_readVoltage 0002  
     __size_of_initCOMP1 000D       __size_of_initCOMP2 000D               __pbssBANK0 0059  
            sendColour@c 0072               __pmaintext 0074               __sendchar_ 07AF  
     __size_of_sendInt24 0032       __size_of_sendUInt8 000D                  ?___tmul 0024  
                ?___wmul 0020             __sendchar_@c 0074                  _C1TSEL0 14F0  
                _C1TSEL1 14F1                  ?_deltaT 0072               __pintentry 0004  
                _CCP1CON 0293                  _CDAFVR0 08BA                  _CDAFVR1 08BB  
                ?_initBT 0070                  _CCP1SEL 08E8                  ?_setLED 0073  
                _ADPREF0 04F0                  _ADPREF1 04F1                  ?_setVal 0039  
                _T1CKPS0 00C4                  _T1CKPS1 00C5                  _T2CKPS0 00E0  
                _T2CKPS1 00E1                  _T4CKPS0 20B8                  _T4CKPS1 20B9  
                _TMR1CS0 00C6                  _TMR1CS1 00C7                  _RXDTSEL 08EF  
                _TXCKSEL 08F0                ?_initTMR1 0070                ?_initPins 0070  
                ___atdiv 041F                  ___awdiv 04EA                  ___awmod 05DE  
        __size_of___tmul 0027          __size_of___wmul 001C          __size_of_deltaT 002A  
      __end_of_initCOMP1 07E6        __end_of_initCOMP2 07D9          __CFG_STVREN$OFF 0000  
        __size_of_initBT 0017          __size_of_setLED 0012          __size_of_setVal 0034  
                __ptext1 0623                  __ptext2 05DE                  __ptext3 04EA  
                __ptext4 06DA                  __ptext5 03B2                  __ptext6 079D  
                __ptext7 0310                  __ptext8 07BF                  __ptext9 0657  
                _buffpos 007A          ??_initMessaging 0072                  _initADC 0FF6  
           __size_of_ISR 0051                  _initFVR 0FE3             __size_of_adc 0051  
                _readVdd 078A             __size_of_cos 000A             __size_of_sin 0060  
                _reading 0069                  _readpos 007B         ___awmod@dividend 0074  
                _setUnit 06DA        __end_of_sendInt24 0689        __end_of_sendUInt8 07CC  
                clrloop0 0FDE               _sendColour 0310     end_of_initialization 0070  
             ??_initTMR1 0072                  setLED@b 0074                  setLED@g 0075  
                setLED@r 0073               ??_initPins 0072                  sin@buff 0020  
                setVal@i 003C                  setVal@v 0039              ?__sendchar_ 0070  
           __pstringtext 07F1         __CFG_FOSC$INTOSC 0000                _TRISBbits 008D  
          ??_eeprom_read 0072            deltaT@tm_high 0074           __end_of___tmul 06DA  
         __end_of___wmul 075B           __end_of_deltaT 06B3           __end_of_initBT 078A  
         __end_of_setLED 07AF           __end_of_setVal 0657      start_initialization 0057  
            __end_of_ISR 0055              __end_of_adc 05DE              __end_of_cos 0FF6  
            __end_of_sin 04EA      __size_of__sendchar_ 0010              ?_sendColour 0070  
          ??_initPWMTMR4 0072                 ??___tmul 007A                 ??___wmul 0078  
    __end_of_eeprom_read 0773                 ??_deltaT 0076              __pdataBANK0 006A  
               ??_initBT 0072            ??_readCurrent 003C                 ??_setLED 0075  
               ??_setVal 003B           ___tmul@product 002A            ??_readVoltage 0072  
            __pbssCOMMON 007A                ___latbits 0001            __pcstackBANK0 0020  
      __size_of_initTMR1 000B               sendInt24@i 0075               sendUInt8@i 0075  
      __size_of_initPins 0020      __end_of_initPWMTMR4 073F                 ?___atdiv 002D  
               ?___awdiv 0072                 ?___awmod 0072      __size_of_sendColour 00A2  
         _i_u_diode_offs 006D                 ?_initADC 0070                 ?_initFVR 0070  
              _initCOMP1 07D9                _initCOMP2 07CC                 ?_readVdd 0074  
    __end_of_readCurrent 058D                 ?_setUnit 0075                _curr_time 0061  
    __end_of_readVoltage 0004              __size_of_so 006D                 _T2OUTPS0 00E3  
               _T2OUTPS1 00E4                 _T2OUTPS2 00E5                 _T2OUTPS3 00E6  
              _sendInt24 0657                _sendUInt8 07BF           ___wmul@product 0078  
           _receive_buff 0059                clear_ram0 0FDD              _eeprom_read 075B  
           ??__sendchar_ 0072                 _GO_nDONE 04E9        ___wmul@multiplier 0020  
             ?_initCOMP1 0070               ?_initCOMP2 0070                main@angle 004E  
              main@bmode 0051    __end_of_initMessaging 0FDD      ___tmul@multiplicand 0027  
              _volt_time 0065             deltaT@tm_low 0072       __end_of__sendchar_ 07BF  
             ?_sendInt24 0075               ?_sendUInt8 0070              _initPWMTMR4 0720  
       __size_of___atdiv 006B         __size_of___awdiv 0052         __size_of___awmod 0045  
            _readCurrent 053C         __size_of_initADC 000A         __size_of_initFVR 0009  
            _readVoltage 0002         __size_of_readVdd 0013         __size_of_setUnit 0026  
               __ptext10 07AF                 __ptext11 0002                 __ptext20 0720  
               __ptext12 078A                 __ptext21 0FD7                 __ptext13 053C  
               __ptext30 07FB                 __ptext22 0FE3                 __ptext14 058D  
               __ptext31 075B                 __ptext23 07CC                 __ptext15 073F  
               __ptext24 07D9                 __ptext16 06B3                 __ptext25 0773  
               __ptext17 041F                 __ptext26 0FF6                 __ptext18 07E6  
               __ptext27 0689                 __ptext19 0700                 __ptext28 0FEC  
               __ptext29 048A             ??_sendColour 0072                 _i_u_offs 006A  
               _led_rest 0063                 _initTMR1 07E6                 _initPins 0700  
          __size_of_main 029C            __size_of_sin_ 0005                 int$flags 007E  
               main@real 0048       __end_of_sendColour 03B2              ??_initCOMP1 0072  
            ??_initCOMP2 0072           _get_shift_byte 07F1                 intlevel1 0000  
            ??_sendInt24 0020              ??_sendUInt8 0075        __CFG_CLKOUTEN$OFF 0000  
               setUnit@u 0075        ___tmul@multiplier 0024   __end_of_get_shift_byte 07FB  
       ___atdiv@dividend 0030          ___atdiv@divisor 002D          ___atdiv@counter 0034  
           ?_eeprom_read 0070             ___atdiv@sign 0035  
