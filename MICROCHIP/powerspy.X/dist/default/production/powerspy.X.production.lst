

Microchip Technology PIC LITE Macro Assembler V1.37 build -260352376 
                                                                                               Fri Jun 17 10:54:50 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	eeprom_data,global,class=EEDATA,space=3,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	stringtext,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	psect	intentry,global,class=CODE,delta=2
    48                           	dabs	1,0x7E,2
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  0011                     	;# 
    64  0012                     	;# 
    65  0013                     	;# 
    66  0014                     	;# 
    67  0015                     	;# 
    68  0016                     	;# 
    69  0016                     	;# 
    70  0017                     	;# 
    71  0018                     	;# 
    72  0019                     	;# 
    73  001A                     	;# 
    74  001B                     	;# 
    75  001C                     	;# 
    76  001E                     	;# 
    77  001F                     	;# 
    78  008C                     	;# 
    79  008D                     	;# 
    80  0091                     	;# 
    81  0092                     	;# 
    82  0093                     	;# 
    83  0094                     	;# 
    84  0095                     	;# 
    85  0096                     	;# 
    86  0097                     	;# 
    87  0098                     	;# 
    88  0099                     	;# 
    89  009A                     	;# 
    90  009B                     	;# 
    91  009B                     	;# 
    92  009C                     	;# 
    93  009D                     	;# 
    94  009E                     	;# 
    95  010C                     	;# 
    96  010D                     	;# 
    97  0111                     	;# 
    98  0112                     	;# 
    99  0113                     	;# 
   100  0114                     	;# 
   101  0115                     	;# 
   102  0116                     	;# 
   103  0117                     	;# 
   104  0118                     	;# 
   105  0119                     	;# 
   106  011A                     	;# 
   107  011B                     	;# 
   108  011D                     	;# 
   109  011E                     	;# 
   110  018C                     	;# 
   111  018D                     	;# 
   112  0191                     	;# 
   113  0191                     	;# 
   114  0192                     	;# 
   115  0193                     	;# 
   116  0193                     	;# 
   117  0193                     	;# 
   118  0194                     	;# 
   119  0195                     	;# 
   120  0196                     	;# 
   121  0199                     	;# 
   122  019A                     	;# 
   123  019B                     	;# 
   124  019B                     	;# 
   125  019B                     	;# 
   126  019B                     	;# 
   127  019C                     	;# 
   128  019C                     	;# 
   129  019D                     	;# 
   130  019E                     	;# 
   131  019F                     	;# 
   132  020C                     	;# 
   133  020D                     	;# 
   134  0211                     	;# 
   135  0211                     	;# 
   136  0212                     	;# 
   137  0212                     	;# 
   138  0213                     	;# 
   139  0213                     	;# 
   140  0214                     	;# 
   141  0214                     	;# 
   142  0215                     	;# 
   143  0215                     	;# 
   144  0215                     	;# 
   145  0216                     	;# 
   146  0216                     	;# 
   147  0217                     	;# 
   148  0217                     	;# 
   149  0219                     	;# 
   150  021A                     	;# 
   151  021B                     	;# 
   152  021C                     	;# 
   153  021D                     	;# 
   154  021E                     	;# 
   155  021F                     	;# 
   156  0291                     	;# 
   157  0291                     	;# 
   158  0292                     	;# 
   159  0293                     	;# 
   160  0294                     	;# 
   161  0295                     	;# 
   162  0295                     	;# 
   163  0296                     	;# 
   164  0298                     	;# 
   165  0298                     	;# 
   166  0299                     	;# 
   167  029A                     	;# 
   168  029B                     	;# 
   169  029C                     	;# 
   170  029C                     	;# 
   171  029D                     	;# 
   172  029E                     	;# 
   173  029E                     	;# 
   174  0311                     	;# 
   175  0311                     	;# 
   176  0312                     	;# 
   177  0313                     	;# 
   178  0318                     	;# 
   179  0318                     	;# 
   180  0319                     	;# 
   181  031A                     	;# 
   182  0394                     	;# 
   183  0395                     	;# 
   184  0396                     	;# 
   185  039A                     	;# 
   186  039C                     	;# 
   187  039D                     	;# 
   188  039E                     	;# 
   189  039F                     	;# 
   190  0415                     	;# 
   191  0416                     	;# 
   192  0417                     	;# 
   193  041C                     	;# 
   194  041D                     	;# 
   195  041E                     	;# 
   196  0FE4                     	;# 
   197  0FE5                     	;# 
   198  0FE6                     	;# 
   199  0FE7                     	;# 
   200  0FE8                     	;# 
   201  0FE9                     	;# 
   202  0FEA                     	;# 
   203  0FEB                     	;# 
   204  0FED                     	;# 
   205  0FEE                     	;# 
   206  0FEF                     	;# 
   207                           
   208                           	psect	eeprom_data
   209  0000  0000 0002 0003 0005 0006 0008 0009 000B 	db	0,2,3,5,6,8,9,11	;# 
   210  0008  000D 000E 0010 0011 0013 0014 0016 0017 	db	13,14,16,17,19,20,22,23	;# 
   211  0010  0019 001A 001C 001D 001F 0020 0022 0023 	db	25,26,28,29,31,32,34,35	;# 
   212  0018  0025 0026 0028 0029 002B 002C 002D 002F 	db	37,38,40,41,43,44,45,47	;# 
   213  0020  0030 0032 0033 0034 0036 0037 0038 003A 	db	48,50,51,52,54,55,56,58	;# 
   214  0028  003B 003C 003D 003F 0040 0041 0042 0043 	db	59,60,61,63,64,65,66,67	;# 
   215  0030  0044 0046 0047 0048 0049 004A 004B 004C 	db	68,70,71,72,73,74,75,76	;# 
   216  0038  004D 004E 004F 0050 0051 0052 0053 0054 	db	77,78,79,80,81,82,83,84	;# 
   217  0040  0054 0055 0056 0057 0058 0058 0059 005A 	db	84,85,86,87,88,88,89,90	;# 
   218  0048  005A 005B 005C 005C 005D 005E 005E 005F 	db	90,91,92,92,93,94,94,95	;# 
   219  0050  005F 0060 0060 0060 0061 0061 0062 0062 	db	95,96,96,96,97,97,98,98	;# 
   220  0058  0062 0063 0063 0063 0063 0063 0064 0064 	db	98,99,99,99,99,99,100,100	;# 
   221  0060  0064 0064 0064 0064 0064 0000 0000 0000 	db	100,100,100,100,100,0,0,0	;# 
   222  0000                     	;# 
   223  0001                     	;# 
   224  0002                     	;# 
   225  0003                     	;# 
   226  0004                     	;# 
   227  0005                     	;# 
   228  0006                     	;# 
   229  0007                     	;# 
   230  0008                     	;# 
   231  0009                     	;# 
   232  000A                     	;# 
   233  000B                     	;# 
   234  000C                     	;# 
   235  000D                     	;# 
   236  0011                     	;# 
   237  0012                     	;# 
   238  0013                     	;# 
   239  0014                     	;# 
   240  0015                     	;# 
   241  0016                     	;# 
   242  0016                     	;# 
   243  0017                     	;# 
   244  0018                     	;# 
   245  0019                     	;# 
   246  001A                     	;# 
   247  001B                     	;# 
   248  001C                     	;# 
   249  001E                     	;# 
   250  001F                     	;# 
   251  008C                     	;# 
   252  008D                     	;# 
   253  0091                     	;# 
   254  0092                     	;# 
   255  0093                     	;# 
   256  0094                     	;# 
   257  0095                     	;# 
   258  0096                     	;# 
   259  0097                     	;# 
   260  0098                     	;# 
   261  0099                     	;# 
   262  009A                     	;# 
   263  009B                     	;# 
   264  009B                     	;# 
   265  009C                     	;# 
   266  009D                     	;# 
   267  009E                     	;# 
   268  010C                     	;# 
   269  010D                     	;# 
   270  0111                     	;# 
   271  0112                     	;# 
   272  0113                     	;# 
   273  0114                     	;# 
   274  0115                     	;# 
   275  0116                     	;# 
   276  0117                     	;# 
   277  0118                     	;# 
   278  0119                     	;# 
   279  011A                     	;# 
   280  011B                     	;# 
   281  011D                     	;# 
   282  011E                     	;# 
   283  018C                     	;# 
   284  018D                     	;# 
   285  0191                     	;# 
   286  0191                     	;# 
   287  0192                     	;# 
   288  0193                     	;# 
   289  0193                     	;# 
   290  0193                     	;# 
   291  0194                     	;# 
   292  0195                     	;# 
   293  0196                     	;# 
   294  0199                     	;# 
   295  019A                     	;# 
   296  019B                     	;# 
   297  019B                     	;# 
   298  019B                     	;# 
   299  019B                     	;# 
   300  019C                     	;# 
   301  019C                     	;# 
   302  019D                     	;# 
   303  019E                     	;# 
   304  019F                     	;# 
   305  020C                     	;# 
   306  020D                     	;# 
   307  0211                     	;# 
   308  0211                     	;# 
   309  0212                     	;# 
   310  0212                     	;# 
   311  0213                     	;# 
   312  0213                     	;# 
   313  0214                     	;# 
   314  0214                     	;# 
   315  0215                     	;# 
   316  0215                     	;# 
   317  0215                     	;# 
   318  0216                     	;# 
   319  0216                     	;# 
   320  0217                     	;# 
   321  0217                     	;# 
   322  0219                     	;# 
   323  021A                     	;# 
   324  021B                     	;# 
   325  021C                     	;# 
   326  021D                     	;# 
   327  021E                     	;# 
   328  021F                     	;# 
   329  0291                     	;# 
   330  0291                     	;# 
   331  0292                     	;# 
   332  0293                     	;# 
   333  0294                     	;# 
   334  0295                     	;# 
   335  0295                     	;# 
   336  0296                     	;# 
   337  0298                     	;# 
   338  0298                     	;# 
   339  0299                     	;# 
   340  029A                     	;# 
   341  029B                     	;# 
   342  029C                     	;# 
   343  029C                     	;# 
   344  029D                     	;# 
   345  029E                     	;# 
   346  029E                     	;# 
   347  0311                     	;# 
   348  0311                     	;# 
   349  0312                     	;# 
   350  0313                     	;# 
   351  0318                     	;# 
   352  0318                     	;# 
   353  0319                     	;# 
   354  031A                     	;# 
   355  0394                     	;# 
   356  0395                     	;# 
   357  0396                     	;# 
   358  039A                     	;# 
   359  039C                     	;# 
   360  039D                     	;# 
   361  039E                     	;# 
   362  039F                     	;# 
   363  0415                     	;# 
   364  0416                     	;# 
   365  0417                     	;# 
   366  041C                     	;# 
   367  041D                     	;# 
   368  041E                     	;# 
   369  0FE4                     	;# 
   370  0FE5                     	;# 
   371  0FE6                     	;# 
   372  0FE7                     	;# 
   373  0FE8                     	;# 
   374  0FE9                     	;# 
   375  0FEA                     	;# 
   376  0FEB                     	;# 
   377  0FED                     	;# 
   378  0FEE                     	;# 
   379  0FEF                     	;# 
   380                           
   381                           	psect	idataBANK0
   382  0FC3                     __pidataBANK0:	
   383                           
   384                           ;initializer for _i_u_offs
   385  0FC3  342C               	retlw	44
   386  0FC4  34CF               	retlw	207
   387  0FC5  34FF               	retlw	255
   388                           
   389                           ;initializer for _i_u_diode_offs
   390  0FC6  3407               	retlw	7
   391                           
   392                           	psect	stringtext
   393  0800                     __pstringtext:	
   394  0800                     _get_shift_byte:	
   395  0800  3481               	retlw	129
   396  0801  34BD               	retlw	189
   397  0802  3413               	retlw	19
   398  0803  3419               	retlw	25
   399  0804  342D               	retlw	45
   400  0805  3449               	retlw	73
   401  0806  3441               	retlw	65
   402  0807  349D               	retlw	157
   403  0808  3401               	retlw	1
   404  0809  3409               	retlw	9
   405  080A                     __end_of_get_shift_byte:	
   406  0016                     _TMR1	set	22
   407  000C                     _PORTA	set	12
   408  000D                     _PORTB	set	13
   409  001B                     _PR2	set	27
   410  0095                     _C1IF	set	149
   411  0096                     _C2IF	set	150
   412  005F                     _GIE	set	95
   413  005B                     _IOCIE	set	91
   414  005E                     _PEIE	set	94
   415  0063                     _RA3	set	99
   416  0064                     _RA4	set	100
   417  0066                     _RA6	set	102
   418  0067                     _RA7	set	103
   419  006B                     _RB3	set	107
   420  008D                     _RCIF	set	141
   421  00C4                     _T1CKPS0	set	196
   422  00C5                     _T1CKPS1	set	197
   423  00E0                     _T2CKPS0	set	224
   424  00E1                     _T2CKPS1	set	225
   425  00E3                     _T2OUTPS0	set	227
   426  00E4                     _T2OUTPS1	set	228
   427  00E5                     _T2OUTPS2	set	229
   428  00E6                     _T2OUTPS3	set	230
   429  00C6                     _TMR1CS0	set	198
   430  00C7                     _TMR1CS1	set	199
   431  0088                     _TMR1IF	set	136
   432  00C0                     _TMR1ON	set	192
   433  0089                     _TMR2IF	set	137
   434  00E2                     _TMR2ON	set	226
   435  0099                     _TMR4IF	set	153
   436  009B                     _ADRES	set	155
   437  008C                     _TRISA	set	140
   438  008D                     _TRISB	set	141
   439  008D                     _TRISBbits	set	141
   440  04F4                     _ADCS0	set	1268
   441  04F5                     _ADCS1	set	1269
   442  04F6                     _ADCS2	set	1270
   443  04F7                     _ADFM	set	1271
   444  04F2                     _ADNREF	set	1266
   445  04E8                     _ADON	set	1256
   446  04F0                     _ADPREF0	set	1264
   447  04F1                     _ADPREF1	set	1265
   448  0495                     _C1IE	set	1173
   449  0496                     _C2IE	set	1174
   450  04EA                     _CHS0	set	1258
   451  04EB                     _CHS1	set	1259
   452  04EC                     _CHS2	set	1260
   453  04ED                     _CHS3	set	1261
   454  04EE                     _CHS4	set	1262
   455  04E9                     _GO_nDONE	set	1257
   456  04CB                     _IRCF0	set	1227
   457  04CC                     _IRCF1	set	1228
   458  04CD                     _IRCF2	set	1229
   459  04CE                     _IRCF3	set	1230
   460  048D                     _RCIE	set	1165
   461  04C8                     _SCS0	set	1224
   462  04C9                     _SCS1	set	1225
   463  04CF                     _SPLLEN	set	1231
   464  0488                     _TMR1IE	set	1160
   465  0489                     _TMR2IE	set	1161
   466  04AF                     _nWPUEN	set	1199
   467  08B8                     _ADFVR0	set	2232
   468  08B9                     _ADFVR1	set	2233
   469  0897                     _C1INTP	set	2199
   470  0890                     _C1NCH0	set	2192
   471  0891                     _C1NCH1	set	2193
   472  088F                     _C1ON	set	2191
   473  0894                     _C1PCH0	set	2196
   474  0895                     _C1PCH1	set	2197
   475  08A7                     _C2INTP	set	2215
   476  08A0                     _C2NCH0	set	2208
   477  08A1                     _C2NCH1	set	2209
   478  089F                     _C2ON	set	2207
   479  08A4                     _C2PCH0	set	2212
   480  08A5                     _C2PCH1	set	2213
   481  08E8                     _CCP1SEL	set	2280
   482  08BA                     _CDAFVR0	set	2234
   483  08BB                     _CDAFVR1	set	2235
   484  08BF                     _FVREN	set	2239
   485  08BE                     _FVRRDY	set	2238
   486  08EF                     _RXDTSEL	set	2287
   487  08F0                     _TXCKSEL	set	2288
   488  0191                     _EEADR	set	401
   489  018C                     _ANSELA	set	396
   490  018D                     _ANSELB	set	397
   491  0195                     _EECON1	set	405
   492  0193                     _EEDATA	set	403
   493  0199                     _RCREG	set	409
   494  019B                     _SPBRG	set	411
   495  019A                     _TXREG	set	410
   496  0CFB                     _BRG16	set	3323
   497  0CF2                     _BRGH	set	3314
   498  0CEC                     _CREN	set	3308
   499  0CA8                     _RD	set	3240
   500  0CEF                     _SPEN	set	3311
   501  0CF4                     _SYNC	set	3316
   502  0CF1                     _TRMT	set	3313
   503  0CF5                     _TXEN	set	3317
   504  0CA9                     _WR	set	3241
   505  020D                     _WPUB	set	525
   506  0293                     _CCP1CON	set	659
   507  0291                     _CCPR1L	set	657
   508  14F0                     _C1TSEL0	set	5360
   509  14F1                     _C1TSEL1	set	5361
   510  149C                     _DC1B0	set	5276
   511  149D                     _DC1B1	set	5277
   512  1CAD                     _IOCBN5	set	7341
   513  20B8                     _T4CKPS0	set	8376
   514  20B9                     _T4CKPS1	set	8377
   515  20BA                     _TMR4ON	set	8378
   516                           
   517                           ; #config settings
   518  0000                     
   519                           	psect	cinit
   520  0057                     start_initialization:	
   521  0057                     __initialization:	
   522                           
   523                           ; Clear objects allocated to COMMON
   524  0057  01FA               	clrf	__pbssCOMMON& (0+127)
   525  0058  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   526                           
   527                           ; Clear objects allocated to BANK0
   528  0059  3059               	movlw	low __pbssBANK0
   529  005A  0084               	movwf	4
   530  005B  3000               	movlw	high __pbssBANK0
   531  005C  0085               	movwf	5
   532  005D  3011               	movlw	17
   533  005E  318F  27D2  3180   	fcall	clear_ram0
   534                           
   535                           ; Initialize objects allocated to BANK0
   536  0061  318F  27C3  3180   	fcall	__pidataBANK0	;fetch initializer
   537  0064  00EA               	movwf	__pdataBANK0& (0+127)
   538  0065  318F  27C4  3180   	fcall	__pidataBANK0+1	;fetch initializer
   539  0068  00EB               	movwf	(__pdataBANK0+1)& (0+127)
   540  0069  318F  27C5  3180   	fcall	__pidataBANK0+2	;fetch initializer
   541  006C  00EC               	movwf	(__pdataBANK0+2)& (0+127)
   542  006D  318F  27C6         	fcall	__pidataBANK0+3	;fetch initializer
   543  006F  00ED               	movwf	(__pdataBANK0+3)& (0+127)
   544  0070                     end_of_initialization:	
   545                           ;End of C runtime variable initialization code
   546                           
   547  0070                     __end_of__initialization:	
   548  0070  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   549  0071  0020               	movlb	0
   550  0072  3180  2874         	ljmp	_main	;jump to C main() function
   551                           
   552                           	psect	bssCOMMON
   553  007A                     __pbssCOMMON:	
   554  007A                     _buffpos:	
   555  007A                     	ds	1
   556  007B                     _readpos:	
   557  007B                     	ds	1
   558                           
   559                           	psect	bssBANK0
   560  0059                     __pbssBANK0:	
   561  0059                     _receive_buff:	
   562  0059                     	ds	8
   563  0061                     _curr_time:	
   564  0061                     	ds	2
   565  0063                     _led_rest:	
   566  0063                     	ds	2
   567  0065                     _volt_time:	
   568  0065                     	ds	2
   569  0067                     _flag:	
   570  0067                     	ds	1
   571  0068                     _mode:	
   572  0068                     	ds	1
   573  0069                     _reading:	
   574  0069                     	ds	1
   575                           
   576                           	psect	dataBANK0
   577  006A                     __pdataBANK0:	
   578  006A                     _i_u_offs:	
   579  006A                     	ds	3
   580  006D                     _i_u_diode_offs:	
   581  006D                     	ds	1
   582                           
   583                           	psect	clrtext
   584  0FD2                     clear_ram0:	
   585                           ;	Called with FSR0 containing the base address, and
   586                           ;	WREG with the size to clear
   587                           
   588  0FD2  0064               	clrwdt	;clear the watchdog before getting into this loop
   589  0FD3                     clrloop0:	
   590  0FD3  0180               	clrf	0	;clear RAM location pointed to by FSR
   591  0FD4  3101               	addfsr 0,1
   592  0FD5  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   593  0FD6  2FD3               	goto	clrloop0	;have we reached the end yet?
   594  0FD7  3400               	retlw	0	;all done for this memory range, return
   595                           
   596                           	psect	cstackCOMMON
   597  0070                     __pcstackCOMMON:	
   598  0070                     ?_eeprom_read:	
   599  0070                     ?_initMessaging:	
   600                           ; 1 bytes @ 0x0
   601                           
   602  0070                     ?_sendUInt8:	
   603                           ; 1 bytes @ 0x0
   604                           
   605  0070                     ?_initPins:	
   606                           ; 1 bytes @ 0x0
   607                           
   608  0070                     ?_initADC:	
   609                           ; 1 bytes @ 0x0
   610                           
   611  0070                     ?_initTMR1:	
   612                           ; 1 bytes @ 0x0
   613                           
   614  0070                     ?_initFVR:	
   615                           ; 1 bytes @ 0x0
   616                           
   617  0070                     ?_initPWMTMR4:	
   618                           ; 1 bytes @ 0x0
   619                           
   620  0070                     ?_initCOMP1:	
   621                           ; 1 bytes @ 0x0
   622                           
   623  0070                     ?_initCOMP2:	
   624                           ; 1 bytes @ 0x0
   625                           
   626  0070                     ?_initBT:	
   627                           ; 1 bytes @ 0x0
   628                           
   629  0070                     ?_adc:	
   630                           ; 1 bytes @ 0x0
   631                           
   632  0070                     ?_readVoltage:	
   633                           ; 1 bytes @ 0x0
   634                           
   635  0070                     ?_so:	
   636                           ; 1 bytes @ 0x0
   637                           
   638  0070                     ?_clearDisplay:	
   639                           ; 1 bytes @ 0x0
   640                           
   641  0070                     ?_sendColour:	
   642                           ; 1 bytes @ 0x0
   643                           
   644  0070                     ?_sin_:	
   645                           ; 1 bytes @ 0x0
   646                           
   647  0070                     ?_ISR:	
   648                           ; 1 bytes @ 0x0
   649                           
   650  0070                     ??_ISR:	
   651                           ; 1 bytes @ 0x0
   652                           
   653  0070                     ?_main:	
   654                           ; 1 bytes @ 0x0
   655                           
   656  0070                     ?__sendchar_:	
   657                           ; 1 bytes @ 0x0
   658                           
   659                           
   660                           ; 1 bytes @ 0x0
   661  0070                     	ds	2
   662  0072                     ??_eeprom_read:	
   663  0072                     ??_initMessaging:	
   664                           ; 1 bytes @ 0x2
   665                           
   666  0072                     ??_initPins:	
   667                           ; 1 bytes @ 0x2
   668                           
   669  0072                     ??_initADC:	
   670                           ; 1 bytes @ 0x2
   671                           
   672  0072                     ??_initTMR1:	
   673                           ; 1 bytes @ 0x2
   674                           
   675  0072                     ??_initFVR:	
   676                           ; 1 bytes @ 0x2
   677                           
   678  0072                     ??_initPWMTMR4:	
   679                           ; 1 bytes @ 0x2
   680                           
   681  0072                     ??_initCOMP1:	
   682                           ; 1 bytes @ 0x2
   683                           
   684  0072                     ??_initCOMP2:	
   685                           ; 1 bytes @ 0x2
   686                           
   687  0072                     ??_initBT:	
   688                           ; 1 bytes @ 0x2
   689                           
   690  0072                     ??_adc:	
   691                           ; 1 bytes @ 0x2
   692                           
   693  0072                     ??_readVoltage:	
   694                           ; 1 bytes @ 0x2
   695                           
   696  0072                     ??_so:	
   697                           ; 1 bytes @ 0x2
   698                           
   699  0072                     ??_sendColour:	
   700                           ; 1 bytes @ 0x2
   701                           
   702  0072                     ??__sendchar_:	
   703                           ; 1 bytes @ 0x2
   704                           
   705  0072                     ?_deltaT:	
   706                           ; 1 bytes @ 0x2
   707                           
   708  0072                     ?___awdiv:	
   709                           ; 2 bytes @ 0x2
   710                           
   711  0072                     ?___awmod:	
   712                           ; 2 bytes @ 0x2
   713                           
   714  0072                     sendColour@c:	
   715                           ; 2 bytes @ 0x2
   716                           
   717  0072                     deltaT@tm_low:	
   718                           ; 1 bytes @ 0x2
   719                           
   720  0072                     ___awdiv@divisor:	
   721                           ; 2 bytes @ 0x2
   722                           
   723  0072                     ___awmod@divisor:	
   724                           ; 2 bytes @ 0x2
   725                           
   726                           
   727                           ; 2 bytes @ 0x2
   728  0072                     	ds	1
   729  0073                     ?_setLED:	
   730  0073                     adc@src:	
   731                           ; 1 bytes @ 0x3
   732                           
   733  0073                     so@data:	
   734                           ; 1 bytes @ 0x3
   735                           
   736  0073                     setLED@r:	
   737                           ; 1 bytes @ 0x3
   738                           
   739                           
   740                           ; 1 bytes @ 0x3
   741  0073                     	ds	1
   742  0074                     ?_readVdd:	
   743  0074                     so@c:	
   744                           ; 2 bytes @ 0x4
   745                           
   746  0074                     setLED@b:	
   747                           ; 1 bytes @ 0x4
   748                           
   749  0074                     __sendchar_@c:	
   750                           ; 1 bytes @ 0x4
   751                           
   752  0074                     deltaT@tm_high:	
   753                           ; 1 bytes @ 0x4
   754                           
   755  0074                     ___awdiv@dividend:	
   756                           ; 2 bytes @ 0x4
   757                           
   758  0074                     ___awmod@dividend:	
   759                           ; 2 bytes @ 0x4
   760                           
   761                           
   762                           ; 2 bytes @ 0x4
   763  0074                     	ds	1
   764  0075                     ??_sendUInt8:	
   765  0075                     ?_sendInt24:	
   766                           ; 1 bytes @ 0x5
   767                           
   768  0075                     ??_clearDisplay:	
   769                           ; 1 bytes @ 0x5
   770                           
   771  0075                     ??_setLED:	
   772                           ; 1 bytes @ 0x5
   773                           
   774  0075                     ?_setUnit:	
   775                           ; 1 bytes @ 0x5
   776                           
   777  0075                     setLED@g:	
   778                           ; 1 bytes @ 0x5
   779                           
   780  0075                     sendUInt8@i:	
   781                           ; 1 bytes @ 0x5
   782                           
   783  0075                     eeprom_read@addr:	
   784                           ; 1 bytes @ 0x5
   785                           
   786  0075                     setUnit@u:	
   787                           ; 1 bytes @ 0x5
   788                           
   789  0075                     sendInt24@i:	
   790                           ; 3 bytes @ 0x5
   791                           
   792                           
   793                           ; 3 bytes @ 0x5
   794  0075                     	ds	1
   795  0076                     ??_readVdd:	
   796  0076                     ??_deltaT:	
   797                           ; 1 bytes @ 0x6
   798                           
   799  0076                     ??_sin_:	
   800                           ; 1 bytes @ 0x6
   801                           
   802  0076                     ??___awdiv:	
   803                           ; 1 bytes @ 0x6
   804                           
   805  0076                     ??___awmod:	
   806                           ; 1 bytes @ 0x6
   807                           
   808  0076                     clearDisplay@leng:	
   809                           ; 1 bytes @ 0x6
   810                           
   811  0076                     sin_@z:	
   812                           ; 1 bytes @ 0x6
   813                           
   814                           
   815                           ; 1 bytes @ 0x6
   816  0076                     	ds	1
   817  0077                     ?_sin:	
   818  0077                     ___awmod@counter:	
   819                           ; 1 bytes @ 0x7
   820                           
   821  0077                     sin@z:	
   822                           ; 1 bytes @ 0x7
   823                           
   824                           
   825                           ; 2 bytes @ 0x7
   826  0077                     	ds	1
   827  0078                     ??___wmul:	
   828  0078                     ___awmod@sign:	
   829                           ; 1 bytes @ 0x8
   830                           
   831  0078                     ___wmul@product:	
   832                           ; 1 bytes @ 0x8
   833                           
   834                           
   835                           ; 2 bytes @ 0x8
   836  0078                     	ds	1
   837  0079                     ??_sin:	
   838                           
   839                           ; 1 bytes @ 0x9
   840  0079                     	ds	1
   841  007A                     ??_cos:	
   842  007A                     ??___tmul:	
   843                           ; 1 bytes @ 0xA
   844                           
   845                           
   846                           	psect	cstackBANK0
   847  0020                     __pcstackBANK0:	
   848                           ; 1 bytes @ 0xA
   849                           
   850  0020                     ??_sendInt24:	
   851  0020                     ??_setUnit:	
   852                           ; 1 bytes @ 0x0
   853                           
   854  0020                     ?___wmul:	
   855                           ; 1 bytes @ 0x0
   856                           
   857  0020                     ___awdiv@counter:	
   858                           ; 2 bytes @ 0x0
   859                           
   860  0020                     sin@buff:	
   861                           ; 1 bytes @ 0x0
   862                           
   863  0020                     ___wmul@multiplier:	
   864                           ; 2 bytes @ 0x0
   865                           
   866                           
   867                           ; 2 bytes @ 0x0
   868  0020                     	ds	1
   869  0021                     ___awdiv@sign:	
   870                           
   871                           ; 1 bytes @ 0x1
   872  0021                     	ds	1
   873  0022                     ?_cos:	
   874  0022                     cos@us:	
   875                           ; 1 bytes @ 0x2
   876                           
   877  0022                     ___wmul@multiplicand:	
   878                           ; 2 bytes @ 0x2
   879                           
   880  0022                     ___awdiv@quotient:	
   881                           ; 2 bytes @ 0x2
   882                           
   883                           
   884                           ; 2 bytes @ 0x2
   885  0022                     	ds	2
   886  0024                     ?___tmul:	
   887  0024                     ___tmul@multiplier:	
   888                           ; 3 bytes @ 0x4
   889                           
   890                           
   891                           ; 3 bytes @ 0x4
   892  0024                     	ds	3
   893  0027                     ___tmul@multiplicand:	
   894                           
   895                           ; 3 bytes @ 0x7
   896  0027                     	ds	3
   897  002A                     ___tmul@product:	
   898                           
   899                           ; 3 bytes @ 0xA
   900  002A                     	ds	3
   901  002D                     ?___atdiv:	
   902  002D                     ___atdiv@divisor:	
   903                           ; 3 bytes @ 0xD
   904                           
   905                           
   906                           ; 3 bytes @ 0xD
   907  002D                     	ds	3
   908  0030                     ___atdiv@dividend:	
   909                           
   910                           ; 3 bytes @ 0x10
   911  0030                     	ds	3
   912  0033                     ??___atdiv:	
   913                           
   914                           ; 1 bytes @ 0x13
   915  0033                     	ds	1
   916  0034                     ___atdiv@counter:	
   917                           
   918                           ; 1 bytes @ 0x14
   919  0034                     	ds	1
   920  0035                     ___atdiv@sign:	
   921                           
   922                           ; 1 bytes @ 0x15
   923  0035                     	ds	1
   924  0036                     ___atdiv@quotient:	
   925                           
   926                           ; 3 bytes @ 0x16
   927  0036                     	ds	3
   928  0039                     ?_setVal:	
   929  0039                     ?_readCurrent:	
   930                           ; 1 bytes @ 0x19
   931                           
   932  0039                     setVal@v:	
   933                           ; 3 bytes @ 0x19
   934                           
   935                           
   936                           ; 2 bytes @ 0x19
   937  0039                     	ds	2
   938  003B                     ??_setVal:	
   939                           
   940                           ; 1 bytes @ 0x1B
   941  003B                     	ds	1
   942  003C                     ??_readCurrent:	
   943  003C                     setVal@i:	
   944                           ; 1 bytes @ 0x1C
   945                           
   946                           
   947                           ; 1 bytes @ 0x1C
   948  003C                     	ds	6
   949  0042                     ??_main:	
   950                           
   951                           ; 1 bytes @ 0x22
   952  0042                     	ds	3
   953  0045                     main@voltage:	
   954                           
   955                           ; 3 bytes @ 0x25
   956  0045                     	ds	3
   957  0048                     main@real:	
   958                           
   959                           ; 3 bytes @ 0x28
   960  0048                     	ds	3
   961  004B                     main@reactive:	
   962                           
   963                           ; 3 bytes @ 0x2B
   964  004B                     	ds	3
   965  004E                     main@angle:	
   966                           
   967                           ; 3 bytes @ 0x2E
   968  004E                     	ds	3
   969  0051                     main@bmode:	
   970                           
   971                           ; 2 bytes @ 0x31
   972  0051                     	ds	2
   973  0053                     main@apparent:	
   974                           
   975                           ; 3 bytes @ 0x33
   976  0053                     	ds	3
   977  0056                     main@current:	
   978                           
   979                           ; 3 bytes @ 0x36
   980  0056                     	ds	3
   981                           
   982                           	psect	maintext
   983  0074                     __pmaintext:	
   984 ;;
   985 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   986 ;;
   987 ;; *************** function _main *****************
   988 ;; Defined at:
   989 ;;		line 677 in file "powerspy.c"
   990 ;; Parameters:    Size  Location     Type
   991 ;;		None
   992 ;; Auto vars:     Size  Location     Type
   993 ;;  current         3   54[BANK0 ] m
   994 ;;  apparent        3   51[BANK0 ] m
   995 ;;  angle           3   46[BANK0 ] m
   996 ;;  reactive        3   43[BANK0 ] m
   997 ;;  real            3   40[BANK0 ] m
   998 ;;  voltage         3   37[BANK0 ] m
   999 ;;  bmode           2   49[BANK0 ] int 
  1000 ;;  i               1    0        char 
  1001 ;; Return value:  Size  Location     Type
  1002 ;;                  1    wreg      void 
  1003 ;; Registers used:
  1004 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1005 ;; Tracked objects:
  1006 ;;		On entry : B1F/0
  1007 ;;		On exit  : 0/0
  1008 ;;		Unchanged: 0/0
  1009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1010 ;;      Params:         0       0       0       0       0       0
  1011 ;;      Locals:         0      20       0       0       0       0
  1012 ;;      Temps:          0       3       0       0       0       0
  1013 ;;      Totals:         0      23       0       0       0       0
  1014 ;;Total ram usage:       23 bytes
  1015 ;; Hardware stack levels required when called:    5
  1016 ;; This function calls:
  1017 ;;		___atdiv
  1018 ;;		___awmod
  1019 ;;		___tmul
  1020 ;;		___wmul
  1021 ;;		_clearDisplay
  1022 ;;		_cos
  1023 ;;		_deltaT
  1024 ;;		_initADC
  1025 ;;		_initBT
  1026 ;;		_initCOMP1
  1027 ;;		_initCOMP2
  1028 ;;		_initFVR
  1029 ;;		_initMessaging
  1030 ;;		_initPWMTMR4
  1031 ;;		_initPins
  1032 ;;		_initTMR1
  1033 ;;		_readCurrent
  1034 ;;		_readVdd
  1035 ;;		_readVoltage
  1036 ;;		_sendInt24
  1037 ;;		_sendUInt8
  1038 ;;		_setLED
  1039 ;;		_setUnit
  1040 ;;		_setVal
  1041 ;;		_sin
  1042 ;; This function is called by:
  1043 ;;		Startup code after reset
  1044 ;; This function uses a non-reentrant model
  1045 ;;
  1046                           
  1047                           
  1048                           ;psect for function _main
  1049  0074                     _main:	
  1050                           
  1051                           ;powerspy.c: 679: int bmode = 0;
  1052                           
  1053                           ;incstack = 0
  1054                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1055  0074  0020               	movlb	0	; select bank0
  1056  0075  01D1               	clrf	main@bmode
  1057  0076  01D2               	clrf	main@bmode+1
  1058                           
  1059                           ;powerspy.c: 680: int24_t angle;
  1060                           ;powerspy.c: 681: int24_t current;
  1061                           ;powerspy.c: 682: int24_t voltage;
  1062                           ;powerspy.c: 683: int24_t apparent;
  1063                           ;powerspy.c: 684: int24_t real;
  1064                           ;powerspy.c: 685: int24_t reactive;
  1065                           ;powerspy.c: 686: int8_t i;
  1066                           ;powerspy.c: 688: PEIE = 0;
  1067  0077  130B               	bcf	11,6	;volatile
  1068                           
  1069                           ;powerspy.c: 689: GIE = 0;
  1070  0078  138B               	bcf	11,7	;volatile
  1071                           
  1072                           ;powerspy.c: 691: initPins();
  1073  0079  3187  270E  3180   	fcall	_initPins
  1074                           
  1075                           ;powerspy.c: 692: initFVR();
  1076  007C  318F  27D8  3180   	fcall	_initFVR
  1077                           
  1078                           ;powerspy.c: 693: initADC();
  1079  007F  318F  27EB  3180   	fcall	_initADC
  1080                           
  1081                           ;powerspy.c: 694: initTMR1();
  1082  0082  318F  27F5  3180   	fcall	_initTMR1
  1083                           
  1084                           ;powerspy.c: 695: initPWMTMR4();
  1085  0085  3187  272E  3180   	fcall	_initPWMTMR4
  1086                           
  1087                           ;powerspy.c: 696: initCOMP1();
  1088  0088  3187  27E7  3180   	fcall	_initCOMP1
  1089                           
  1090                           ;powerspy.c: 697: initCOMP2();
  1091  008B  3187  27DA  3180   	fcall	_initCOMP2
  1092                           
  1093                           ;powerspy.c: 698: initBT();
  1094  008E  3187  2781  3180   	fcall	_initBT
  1095                           
  1096                           ;powerspy.c: 699: initMessaging();
  1097  0091  318F  27CC  3180   	fcall	_initMessaging
  1098                           
  1099                           ;powerspy.c: 700: PEIE = 1;
  1100  0094  170B               	bsf	11,6	;volatile
  1101                           
  1102                           ;powerspy.c: 702: clearDisplay(7);
  1103  0095  3007               	movlw	7
  1104  0096  3187  27F4  3180   	fcall	_clearDisplay
  1105  0099                     l3148:	
  1106                           ;powerspy.c: 704: while (1) {
  1107                           
  1108                           
  1109                           ;powerspy.c: 706: GIE = 1;
  1110  0099  178B               	bsf	11,7	;volatile
  1111                           
  1112                           ;powerspy.c: 707: _delay((unsigned long)((50)*(32000000/4000.0)));
  1113  009A  3003               	movlw	3
  1114  009B  0020               	movlb	0	; select bank0
  1115  009C  00C4               	movwf	??_main+2
  1116  009D  3008               	movlw	8
  1117  009E  00C3               	movwf	??_main+1
  1118  009F  3078               	movlw	120
  1119  00A0  00C2               	movwf	??_main
  1120  00A1                     u3127:	
  1121  00A1  0BC2               	decfsz	??_main,f
  1122  00A2  28A1               	goto	u3127
  1123  00A3  0BC3               	decfsz	??_main+1,f
  1124  00A4  28A1               	goto	u3127
  1125  00A5  0BC4               	decfsz	??_main+2,f
  1126  00A6  28A1               	goto	u3127
  1127                           
  1128                           ;powerspy.c: 708: GIE = 0;
  1129  00A7  138B               	bcf	11,7	;volatile
  1130                           
  1131                           ;powerspy.c: 712: if ((flag & 0x02) && (flag & 0x01)) {
  1132  00A8  0020               	movlb	0	; select bank0
  1133  00A9  18E7               	btfsc	_flag,1	;volatile
  1134  00AA  1C67               	btfss	_flag,0	;volatile
  1135  00AB  2AF6               	goto	l372
  1136                           
  1137                           ;powerspy.c: 713: if (flag & 0x04)
  1138  00AC  1D67               	btfss	_flag,2	;volatile
  1139  00AD  28B6               	goto	l373
  1140                           
  1141                           ;powerspy.c: 714: angle = (deltaT(volt_time, curr_time) >> 2);
  1142  00AE  0866               	movf	_volt_time+1,w
  1143  00AF  00F3               	movwf	deltaT@tm_low+1
  1144  00B0  0865               	movf	_volt_time,w
  1145  00B1  00F2               	movwf	deltaT@tm_low
  1146  00B2  0862               	movf	_curr_time+1,w
  1147  00B3  00F5               	movwf	deltaT@tm_high+1
  1148  00B4  0861               	movf	_curr_time,w
  1149  00B5  28BF               	goto	L2
  1150  00B6                     l373:	
  1151                           
  1152                           ;powerspy.c: 715: else if (flag & 0x08)
  1153  00B6  1DE7               	btfss	_flag,3	;volatile
  1154  00B7  28D1               	goto	l3164
  1155                           
  1156                           ;powerspy.c: 716: angle = (deltaT(curr_time, volt_time) >> 2);
  1157  00B8  0862               	movf	_curr_time+1,w
  1158  00B9  00F3               	movwf	deltaT@tm_low+1
  1159  00BA  0861               	movf	_curr_time,w
  1160  00BB  00F2               	movwf	deltaT@tm_low
  1161  00BC  0866               	movf	_volt_time+1,w
  1162  00BD  00F5               	movwf	deltaT@tm_high+1
  1163  00BE  0865               	movf	_volt_time,w
  1164  00BF                     L2:	
  1165  00BF  00F4               	movwf	deltaT@tm_high
  1166  00C0  3186  2697  3180   	fcall	_deltaT
  1167  00C3  0872               	movf	?_deltaT,w
  1168  00C4  0020               	movlb	0	; select bank0
  1169  00C5  00C2               	movwf	??_main
  1170  00C6  0873               	movf	?_deltaT+1,w
  1171  00C7  00C3               	movwf	??_main+1
  1172  00C8  36C3               	lsrf	??_main+1,f
  1173  00C9  0CC2               	rrf	??_main,f
  1174  00CA  36C3               	lsrf	??_main+1,f
  1175  00CB  0CC2               	rrf	??_main,f
  1176  00CC  0842               	movf	??_main,w
  1177  00CD  00CE               	movwf	main@angle
  1178  00CE  0843               	movf	??_main+1,w
  1179  00CF  00CF               	movwf	main@angle+1
  1180  00D0  01D0               	clrf	main@angle+2
  1181  00D1                     l3164:	
  1182                           
  1183                           ;powerspy.c: 718: flag &= 0xf0;
  1184  00D1  30F0               	movlw	240
  1185  00D2  00C2               	movwf	??_main
  1186  00D3  0842               	movf	??_main,w
  1187  00D4  05E7               	andwf	_flag,f	;volatile
  1188                           
  1189                           ;powerspy.c: 723: i_u_offs = readVdd() * 5;
  1190  00D5  3187  2798  3180   	fcall	_readVdd
  1191  00D8  0875               	movf	?_readVdd+1,w
  1192  00D9  0020               	movlb	0	; select bank0
  1193  00DA  00A1               	movwf	___wmul@multiplier+1
  1194  00DB  0874               	movf	?_readVdd,w
  1195  00DC  00A0               	movwf	___wmul@multiplier
  1196  00DD  3005               	movlw	5
  1197  00DE  00A2               	movwf	___wmul@multiplicand
  1198  00DF  3000               	movlw	0
  1199  00E0  00A3               	movwf	___wmul@multiplicand+1
  1200  00E1  3187  274D  3180   	fcall	___wmul
  1201  00E4  0020               	movlb	0	; select bank0
  1202  00E5  0820               	movf	?___wmul,w
  1203  00E6  00EA               	movwf	_i_u_offs
  1204  00E7  0821               	movf	?___wmul+1,w
  1205  00E8  00EB               	movwf	_i_u_offs+1
  1206  00E9  01EC               	clrf	_i_u_offs+2
  1207                           
  1208                           ;powerspy.c: 724: i_u_offs >>= 1;
  1209  00EA  3001               	movlw	1
  1210  00EB  00C2               	movwf	??_main
  1211  00EC                     u3085:	
  1212  00EC  37EC               	asrf	_i_u_offs+2,f
  1213  00ED  0CEB               	rrf	_i_u_offs+1,f
  1214  00EE  0CEA               	rrf	_i_u_offs,f
  1215  00EF  0BC2               	decfsz	??_main,f
  1216  00F0  28EC               	goto	u3085
  1217                           
  1218                           ;powerspy.c: 725: i_u_offs = -i_u_offs;
  1219  00F1  09EA               	comf	_i_u_offs,f
  1220  00F2  09EB               	comf	_i_u_offs+1,f
  1221  00F3  09EC               	comf	_i_u_offs+2,f
  1222  00F4  0AEA               	incf	_i_u_offs,f
  1223  00F5  1903               	skipnz
  1224  00F6  0AEB               	incf	_i_u_offs+1,f
  1225  00F7  1903               	skipnz
  1226  00F8  0AEC               	incf	_i_u_offs+2,f
  1227                           
  1228                           ;powerspy.c: 727: sendUInt8('s');
  1229  00F9  3073               	movlw	115
  1230  00FA  3187  27CD  3180   	fcall	_sendUInt8
  1231                           
  1232                           ;powerspy.c: 728: sendInt24(ADRES);
  1233  00FD  0021               	movlb	1	; select bank1
  1234  00FE  081B               	movf	27,w	;volatile
  1235  00FF  00F5               	movwf	sendInt24@i
  1236  0100  081C               	movf	28,w	;volatile
  1237  0101  00F6               	movwf	sendInt24@i+1
  1238  0102  01F7               	clrf	sendInt24@i+2
  1239  0103  3186  2665  3180   	fcall	_sendInt24
  1240                           
  1241                           ;powerspy.c: 730: current = readCurrent();
  1242  0106  3185  254A  3180   	fcall	_readCurrent
  1243  0109  0020               	movlb	0	; select bank0
  1244  010A  0839               	movf	?_readCurrent,w
  1245  010B  00D6               	movwf	main@current
  1246  010C  083A               	movf	?_readCurrent+1,w
  1247  010D  00D7               	movwf	main@current+1
  1248  010E  083B               	movf	?_readCurrent+2,w
  1249  010F  00D8               	movwf	main@current+2
  1250                           
  1251                           ;powerspy.c: 731: current -= 300;
  1252  0110  30D4               	movlw	212
  1253  0111  07D6               	addwf	main@current,f
  1254  0112  30FE               	movlw	254
  1255  0113  1803               	skipnc
  1256  0114  30FF               	movlw	255
  1257  0115  07D7               	addwf	main@current+1,f
  1258  0116  30FF               	movlw	255
  1259  0117  1C03               	skipc
  1260  0118  07D8               	addwf	main@current+2,f
  1261                           
  1262                           ;powerspy.c: 732: current = (current < 0) ? -current : current;
  1263  0119  1FD8               	btfss	main@current+2,7
  1264  011A  2923               	goto	l3184
  1265  011B  09D6               	comf	main@current,f
  1266  011C  09D7               	comf	main@current+1,f
  1267  011D  09D8               	comf	main@current+2,f
  1268  011E  0AD6               	incf	main@current,f
  1269  011F  1903               	skipnz
  1270  0120  0AD7               	incf	main@current+1,f
  1271  0121  1903               	skipnz
  1272  0122  0AD8               	incf	main@current+2,f
  1273  0123                     l3184:	
  1274                           
  1275                           ;powerspy.c: 733: voltage = readVoltage();
  1276  0123  3180  2002  3180   	fcall	_readVoltage
  1277  0126  0020               	movlb	0	; select bank0
  1278  0127  00C2               	movwf	??_main
  1279  0128  01C3               	clrf	??_main+1
  1280  0129  01C4               	clrf	??_main+2
  1281  012A  0842               	movf	??_main,w
  1282  012B  00C5               	movwf	main@voltage
  1283  012C  0843               	movf	??_main+1,w
  1284  012D  00C6               	movwf	main@voltage+1
  1285  012E  0844               	movf	??_main+2,w
  1286  012F  00C7               	movwf	main@voltage+2
  1287                           
  1288                           ;powerspy.c: 734: apparent = voltage * current;
  1289  0130  0845               	movf	main@voltage,w
  1290  0131  00A4               	movwf	___tmul@multiplier
  1291  0132  0846               	movf	main@voltage+1,w
  1292  0133  00A5               	movwf	___tmul@multiplier+1
  1293  0134  0847               	movf	main@voltage+2,w
  1294  0135  00A6               	movwf	___tmul@multiplier+2
  1295  0136  0856               	movf	main@current,w
  1296  0137  00A7               	movwf	___tmul@multiplicand
  1297  0138  0857               	movf	main@current+1,w
  1298  0139  00A8               	movwf	___tmul@multiplicand+1
  1299  013A  0858               	movf	main@current+2,w
  1300  013B  00A9               	movwf	___tmul@multiplicand+2
  1301  013C  3186  26C1  3180   	fcall	___tmul
  1302  013F  0020               	movlb	0	; select bank0
  1303  0140  0824               	movf	?___tmul,w
  1304  0141  00D3               	movwf	main@apparent
  1305  0142  0825               	movf	?___tmul+1,w
  1306  0143  00D4               	movwf	main@apparent+1
  1307  0144  0826               	movf	?___tmul+2,w
  1308  0145  00D5               	movwf	main@apparent+2
  1309                           
  1310                           ;powerspy.c: 735: real = (apparent * cos(angle)) / (100);
  1311  0146  3064               	movlw	100
  1312  0147  00AD               	movwf	___atdiv@divisor
  1313  0148  3000               	movlw	0
  1314  0149  00AE               	movwf	___atdiv@divisor+1
  1315  014A  3000               	movlw	0
  1316  014B  00AF               	movwf	___atdiv@divisor+2
  1317  014C  084F               	movf	main@angle+1,w
  1318  014D  00A3               	movwf	cos@us+1
  1319  014E  084E               	movf	main@angle,w
  1320  014F  00A2               	movwf	cos@us
  1321  0150  318F  27E1  3180   	fcall	_cos
  1322  0153  0020               	movlb	0	; select bank0
  1323  0154  00C2               	movwf	??_main
  1324  0155  3000               	movlw	0
  1325  0156  1BC2               	btfsc	??_main,7
  1326  0157  30FF               	movlw	255
  1327  0158  00C3               	movwf	??_main+1
  1328  0159  00C4               	movwf	??_main+2
  1329  015A  0842               	movf	??_main,w
  1330  015B  00A4               	movwf	___tmul@multiplier
  1331  015C  0843               	movf	??_main+1,w
  1332  015D  00A5               	movwf	___tmul@multiplier+1
  1333  015E  0844               	movf	??_main+2,w
  1334  015F  00A6               	movwf	___tmul@multiplier+2
  1335  0160  0853               	movf	main@apparent,w
  1336  0161  00A7               	movwf	___tmul@multiplicand
  1337  0162  0854               	movf	main@apparent+1,w
  1338  0163  00A8               	movwf	___tmul@multiplicand+1
  1339  0164  0855               	movf	main@apparent+2,w
  1340  0165  00A9               	movwf	___tmul@multiplicand+2
  1341  0166  3186  26C1  3180   	fcall	___tmul
  1342  0169  0020               	movlb	0	; select bank0
  1343  016A  0824               	movf	?___tmul,w
  1344  016B  00B0               	movwf	___atdiv@dividend
  1345  016C  0825               	movf	?___tmul+1,w
  1346  016D  00B1               	movwf	___atdiv@dividend+1
  1347  016E  0826               	movf	?___tmul+2,w
  1348  016F  00B2               	movwf	___atdiv@dividend+2
  1349  0170  3184  242D  3180   	fcall	___atdiv
  1350  0173  0020               	movlb	0	; select bank0
  1351  0174  082D               	movf	?___atdiv,w
  1352  0175  00C8               	movwf	main@real
  1353  0176  082E               	movf	?___atdiv+1,w
  1354  0177  00C9               	movwf	main@real+1
  1355  0178  082F               	movf	?___atdiv+2,w
  1356  0179  00CA               	movwf	main@real+2
  1357                           
  1358                           ;powerspy.c: 736: reactive = (apparent * sin(angle)) / (100);
  1359  017A  3064               	movlw	100
  1360  017B  00AD               	movwf	___atdiv@divisor
  1361  017C  3000               	movlw	0
  1362  017D  00AE               	movwf	___atdiv@divisor+1
  1363  017E  3000               	movlw	0
  1364  017F  00AF               	movwf	___atdiv@divisor+2
  1365  0180  084F               	movf	main@angle+1,w
  1366  0181  00F8               	movwf	sin@z+1
  1367  0182  084E               	movf	main@angle,w
  1368  0183  00F7               	movwf	sin@z
  1369  0184  3184  2498  3180   	fcall	_sin
  1370  0187  0020               	movlb	0	; select bank0
  1371  0188  00C2               	movwf	??_main
  1372  0189  3000               	movlw	0
  1373  018A  1BC2               	btfsc	??_main,7
  1374  018B  30FF               	movlw	255
  1375  018C  00C3               	movwf	??_main+1
  1376  018D  00C4               	movwf	??_main+2
  1377  018E  0842               	movf	??_main,w
  1378  018F  00A4               	movwf	___tmul@multiplier
  1379  0190  0843               	movf	??_main+1,w
  1380  0191  00A5               	movwf	___tmul@multiplier+1
  1381  0192  0844               	movf	??_main+2,w
  1382  0193  00A6               	movwf	___tmul@multiplier+2
  1383  0194  0853               	movf	main@apparent,w
  1384  0195  00A7               	movwf	___tmul@multiplicand
  1385  0196  0854               	movf	main@apparent+1,w
  1386  0197  00A8               	movwf	___tmul@multiplicand+1
  1387  0198  0855               	movf	main@apparent+2,w
  1388  0199  00A9               	movwf	___tmul@multiplicand+2
  1389  019A  3186  26C1  3180   	fcall	___tmul
  1390  019D  0020               	movlb	0	; select bank0
  1391  019E  0824               	movf	?___tmul,w
  1392  019F  00B0               	movwf	___atdiv@dividend
  1393  01A0  0825               	movf	?___tmul+1,w
  1394  01A1  00B1               	movwf	___atdiv@dividend+1
  1395  01A2  0826               	movf	?___tmul+2,w
  1396  01A3  00B2               	movwf	___atdiv@dividend+2
  1397  01A4  3184  242D  3180   	fcall	___atdiv
  1398  01A7  0020               	movlb	0	; select bank0
  1399  01A8  082D               	movf	?___atdiv,w
  1400  01A9  00CB               	movwf	main@reactive
  1401  01AA  082E               	movf	?___atdiv+1,w
  1402  01AB  00CC               	movwf	main@reactive+1
  1403  01AC  082F               	movf	?___atdiv+2,w
  1404  01AD  00CD               	movwf	main@reactive+2
  1405                           
  1406                           ;powerspy.c: 739: sendUInt8('C');
  1407  01AE  3043               	movlw	67
  1408  01AF  3187  27CD  3180   	fcall	_sendUInt8
  1409                           
  1410                           ;powerspy.c: 740: sendInt24(ADRES);
  1411  01B2  0021               	movlb	1	; select bank1
  1412  01B3  081B               	movf	27,w	;volatile
  1413  01B4  00F5               	movwf	sendInt24@i
  1414  01B5  081C               	movf	28,w	;volatile
  1415  01B6  00F6               	movwf	sendInt24@i+1
  1416  01B7  01F7               	clrf	sendInt24@i+2
  1417  01B8  3186  2665  3180   	fcall	_sendInt24
  1418                           
  1419                           ;powerspy.c: 741: sendUInt8('o');
  1420  01BB  306F               	movlw	111
  1421  01BC  3187  27CD  3180   	fcall	_sendUInt8
  1422                           
  1423                           ;powerspy.c: 742: sendInt24(i_u_offs);
  1424  01BF  0020               	movlb	0	; select bank0
  1425  01C0  086A               	movf	_i_u_offs,w
  1426  01C1  00F5               	movwf	sendInt24@i
  1427  01C2  086B               	movf	_i_u_offs+1,w
  1428  01C3  00F6               	movwf	sendInt24@i+1
  1429  01C4  086C               	movf	_i_u_offs+2,w
  1430  01C5  00F7               	movwf	sendInt24@i+2
  1431  01C6  3186  2665  3180   	fcall	_sendInt24
  1432                           
  1433                           ;powerspy.c: 743: sendUInt8('c');
  1434  01C9  3063               	movlw	99
  1435  01CA  3187  27CD  3180   	fcall	_sendUInt8
  1436                           
  1437                           ;powerspy.c: 744: sendInt24(current);
  1438  01CD  0020               	movlb	0	; select bank0
  1439  01CE  0856               	movf	main@current,w
  1440  01CF  00F5               	movwf	sendInt24@i
  1441  01D0  0857               	movf	main@current+1,w
  1442  01D1  00F6               	movwf	sendInt24@i+1
  1443  01D2  0858               	movf	main@current+2,w
  1444  01D3  00F7               	movwf	sendInt24@i+2
  1445  01D4  3186  2665  3180   	fcall	_sendInt24
  1446                           
  1447                           ;powerspy.c: 745: sendUInt8('A');
  1448  01D7  3041               	movlw	65
  1449  01D8  3187  27CD  3180   	fcall	_sendUInt8
  1450                           
  1451                           ;powerspy.c: 746: sendInt24(apparent);
  1452  01DB  0020               	movlb	0	; select bank0
  1453  01DC  0853               	movf	main@apparent,w
  1454  01DD  00F5               	movwf	sendInt24@i
  1455  01DE  0854               	movf	main@apparent+1,w
  1456  01DF  00F6               	movwf	sendInt24@i+1
  1457  01E0  0855               	movf	main@apparent+2,w
  1458  01E1  00F7               	movwf	sendInt24@i+2
  1459  01E2  3186  2665  3180   	fcall	_sendInt24
  1460                           
  1461                           ;powerspy.c: 747: sendUInt8('r');
  1462  01E5  3072               	movlw	114
  1463  01E6  3187  27CD  3180   	fcall	_sendUInt8
  1464                           
  1465                           ;powerspy.c: 748: sendInt24(real);
  1466  01E9  0020               	movlb	0	; select bank0
  1467  01EA  0848               	movf	main@real,w
  1468  01EB  00F5               	movwf	sendInt24@i
  1469  01EC  0849               	movf	main@real+1,w
  1470  01ED  00F6               	movwf	sendInt24@i+1
  1471  01EE  084A               	movf	main@real+2,w
  1472  01EF  00F7               	movwf	sendInt24@i+2
  1473  01F0  3186  2665  3180   	fcall	_sendInt24
  1474                           
  1475                           ;powerspy.c: 749: sendUInt8('R');
  1476  01F3  3052               	movlw	82
  1477  01F4  3187  27CD  3180   	fcall	_sendUInt8
  1478                           
  1479                           ;powerspy.c: 750: sendInt24(reactive);
  1480  01F7  0020               	movlb	0	; select bank0
  1481  01F8  084B               	movf	main@reactive,w
  1482  01F9  00F5               	movwf	sendInt24@i
  1483  01FA  084C               	movf	main@reactive+1,w
  1484  01FB  00F6               	movwf	sendInt24@i+1
  1485  01FC  084D               	movf	main@reactive+2,w
  1486  01FD  00F7               	movwf	sendInt24@i+2
  1487  01FE  3186  2665  3180   	fcall	_sendInt24
  1488                           
  1489                           ;powerspy.c: 752: RA3 = 0;
  1490  0201  0020               	movlb	0	; select bank0
  1491  0202  118C               	bcf	12,3	;volatile
  1492                           
  1493                           ;powerspy.c: 753: switch (bmode) {
  1494  0203  2ADA               	goto	l3256
  1495  0204                     l3218:	
  1496                           ;powerspy.c: 755: default:
  1497                           
  1498                           ;powerspy.c: 754: case 0:
  1499                           
  1500                           
  1501                           ;powerspy.c: 756: setUnit(0xffffff);
  1502  0204  30FF               	movlw	255
  1503  0205  00F5               	movwf	setUnit@u
  1504  0206  30FF               	movlw	255
  1505  0207  00F6               	movwf	setUnit@u+1
  1506  0208  30FF               	movlw	255
  1507  0209  00F7               	movwf	setUnit@u+2
  1508  020A  3186  26E8  3180   	fcall	_setUnit
  1509                           
  1510                           ;powerspy.c: 757: setVal(0);
  1511  020D  3000               	movlw	0
  1512  020E  0020               	movlb	0	; select bank0
  1513  020F  00B9               	movwf	setVal@v
  1514  0210  00BA               	movwf	setVal@v+1
  1515  0211  3186  2631  3180   	fcall	_setVal
  1516                           
  1517                           ;powerspy.c: 758: setLED(0xff, 0xff, 0xff);
  1518  0214  30FF               	movlw	255
  1519  0215  0020               	movlb	0	; select bank0
  1520  0216  00C2               	movwf	??_main
  1521  0217  0842               	movf	??_main,w
  1522  0218  00F3               	movwf	setLED@r
  1523  0219  30FF               	movlw	255
  1524  021A  00C3               	movwf	??_main+1
  1525  021B  0843               	movf	??_main+1,w
  1526  021C  00F4               	movwf	setLED@b
  1527  021D  30FF               	movlw	255
  1528  021E  3187  27AB  3180   	fcall	_setLED
  1529                           
  1530                           ;powerspy.c: 759: break;
  1531  0221  2AF4               	goto	l383
  1532  0222                     l3224:	
  1533                           ;powerspy.c: 760: case 1:
  1534                           
  1535                           
  1536                           ;powerspy.c: 761: setUnit((0b111110100101101011011111&0b111110101111111111111111));
  1537  0222  30DF               	movlw	223
  1538  0223  00F5               	movwf	setUnit@u
  1539  0224  305A               	movlw	90
  1540  0225  00F6               	movwf	setUnit@u+1
  1541  0226  30FA               	movlw	250
  1542  0227  00F7               	movwf	setUnit@u+2
  1543  0228  3186  26E8  3180   	fcall	_setUnit
  1544                           
  1545                           ;powerspy.c: 762: setVal(current);
  1546  022B  0020               	movlb	0	; select bank0
  1547  022C  0857               	movf	main@current+1,w
  1548  022D  00BA               	movwf	setVal@v+1
  1549  022E  0856               	movf	main@current,w
  1550  022F  00B9               	movwf	setVal@v
  1551  0230  3186  2631  3180   	fcall	_setVal
  1552                           
  1553                           ;powerspy.c: 763: setLED(0x00, (0xff>>0), 0x00);
  1554  0233  30FF               	movlw	255
  1555  0234  0020               	movlb	0	; select bank0
  1556  0235  00C2               	movwf	??_main
  1557  0236  0842               	movf	??_main,w
  1558  0237  00F3               	movwf	setLED@r
  1559  0238  01F4               	clrf	setLED@b
  1560  0239  3000               	movlw	0
  1561  023A  3187  27AB  3180   	fcall	_setLED
  1562                           
  1563                           ;powerspy.c: 764: break;
  1564  023D  2AF4               	goto	l383
  1565  023E                     l3230:	
  1566                           ;powerspy.c: 765: case 5:
  1567                           
  1568                           
  1569                           ;powerspy.c: 766: setUnit(0b111011110101010101111111);
  1570  023E  307F               	movlw	127
  1571  023F  00F5               	movwf	setUnit@u
  1572  0240  3055               	movlw	85
  1573  0241  00F6               	movwf	setUnit@u+1
  1574  0242  30EF               	movlw	239
  1575  0243  00F7               	movwf	setUnit@u+2
  1576  0244  3186  26E8  3180   	fcall	_setUnit
  1577                           
  1578                           ;powerspy.c: 767: setVal(real / 1000);
  1579  0247  30E8               	movlw	232
  1580  0248  0020               	movlb	0	; select bank0
  1581  0249  00AD               	movwf	___atdiv@divisor
  1582  024A  3003               	movlw	3
  1583  024B  00AE               	movwf	___atdiv@divisor+1
  1584  024C  3000               	movlw	0
  1585  024D  00AF               	movwf	___atdiv@divisor+2
  1586  024E  0848               	movf	main@real,w
  1587  024F  00B0               	movwf	___atdiv@dividend
  1588  0250  0849               	movf	main@real+1,w
  1589  0251  00B1               	movwf	___atdiv@dividend+1
  1590  0252  084A               	movf	main@real+2,w
  1591  0253  00B2               	movwf	___atdiv@dividend+2
  1592  0254  3184  242D  3180   	fcall	___atdiv
  1593  0257  0020               	movlb	0	; select bank0
  1594  0258  082E               	movf	?___atdiv+1,w
  1595  0259  00BA               	movwf	setVal@v+1
  1596  025A  082D               	movf	?___atdiv,w
  1597  025B  00B9               	movwf	setVal@v
  1598  025C  3186  2631  3180   	fcall	_setVal
  1599                           
  1600                           ;powerspy.c: 768: setLED((0xff>>0), 0x00, 0x00);
  1601  025F  01F3               	clrf	setLED@r
  1602  0260  01F4               	clrf	setLED@b
  1603  0261  30FF               	movlw	255
  1604  0262  3187  27AB  3180   	fcall	_setLED
  1605                           
  1606                           ;powerspy.c: 769: break;
  1607  0265  2AF4               	goto	l383
  1608  0266                     l3236:	
  1609                           ;powerspy.c: 770: case 4:
  1610                           
  1611                           
  1612                           ;powerspy.c: 771: setUnit((0b111111111101110101101111&0b111110101111111111111111));
  1613  0266  306F               	movlw	111
  1614  0267  00F5               	movwf	setUnit@u
  1615  0268  30DD               	movlw	221
  1616  0269  00F6               	movwf	setUnit@u+1
  1617  026A  30FA               	movlw	250
  1618  026B  00F7               	movwf	setUnit@u+2
  1619  026C  3186  26E8  3180   	fcall	_setUnit
  1620                           
  1621                           ;powerspy.c: 772: setVal(apparent / 1000);
  1622  026F  30E8               	movlw	232
  1623  0270  0020               	movlb	0	; select bank0
  1624  0271  00AD               	movwf	___atdiv@divisor
  1625  0272  3003               	movlw	3
  1626  0273  00AE               	movwf	___atdiv@divisor+1
  1627  0274  3000               	movlw	0
  1628  0275  00AF               	movwf	___atdiv@divisor+2
  1629  0276  0853               	movf	main@apparent,w
  1630  0277  00B0               	movwf	___atdiv@dividend
  1631  0278  0854               	movf	main@apparent+1,w
  1632  0279  00B1               	movwf	___atdiv@dividend+1
  1633  027A  0855               	movf	main@apparent+2,w
  1634  027B  00B2               	movwf	___atdiv@dividend+2
  1635  027C  3184  242D  3180   	fcall	___atdiv
  1636  027F  0020               	movlb	0	; select bank0
  1637  0280  082E               	movf	?___atdiv+1,w
  1638  0281  00BA               	movwf	setVal@v+1
  1639  0282  082D               	movf	?___atdiv,w
  1640  0283  00B9               	movwf	setVal@v
  1641  0284  3186  2631  3180   	fcall	_setVal
  1642                           
  1643                           ;powerspy.c: 773: setLED(0x00, 0x00, (0xff>>0));
  1644  0287  01F3               	clrf	setLED@r
  1645  0288  30FF               	movlw	255
  1646  0289  0020               	movlb	0	; select bank0
  1647  028A  00C2               	movwf	??_main
  1648  028B  0842               	movf	??_main,w
  1649  028C  00F4               	movwf	setLED@b
  1650  028D  3000               	movlw	0
  1651  028E  3187  27AB  3180   	fcall	_setLED
  1652                           
  1653                           ;powerspy.c: 774: break;
  1654  0291  2AF4               	goto	l383
  1655  0292                     l3242:	
  1656                           ;powerspy.c: 775: case 6:
  1657                           
  1658                           
  1659                           ;powerspy.c: 776: setUnit((0b111111111101110101101111&0b111110101111111111111111));
  1660  0292  306F               	movlw	111
  1661  0293  00F5               	movwf	setUnit@u
  1662  0294  30DD               	movlw	221
  1663  0295  00F6               	movwf	setUnit@u+1
  1664  0296  30FA               	movlw	250
  1665  0297  00F7               	movwf	setUnit@u+2
  1666  0298  3186  26E8  3180   	fcall	_setUnit
  1667                           
  1668                           ;powerspy.c: 777: setVal(reactive / 1000);
  1669  029B  30E8               	movlw	232
  1670  029C  0020               	movlb	0	; select bank0
  1671  029D  00AD               	movwf	___atdiv@divisor
  1672  029E  3003               	movlw	3
  1673  029F  00AE               	movwf	___atdiv@divisor+1
  1674  02A0  3000               	movlw	0
  1675  02A1  00AF               	movwf	___atdiv@divisor+2
  1676  02A2  084B               	movf	main@reactive,w
  1677  02A3  00B0               	movwf	___atdiv@dividend
  1678  02A4  084C               	movf	main@reactive+1,w
  1679  02A5  00B1               	movwf	___atdiv@dividend+1
  1680  02A6  084D               	movf	main@reactive+2,w
  1681  02A7  00B2               	movwf	___atdiv@dividend+2
  1682  02A8  3184  242D  3180   	fcall	___atdiv
  1683  02AB  0020               	movlb	0	; select bank0
  1684  02AC  082E               	movf	?___atdiv+1,w
  1685  02AD  00BA               	movwf	setVal@v+1
  1686  02AE  082D               	movf	?___atdiv,w
  1687  02AF  00B9               	movwf	setVal@v
  1688  02B0  3186  2631  3180   	fcall	_setVal
  1689                           
  1690                           ;powerspy.c: 778: setLED((0xff>>0), 0x00, (0xff>>0));
  1691  02B3  01F3               	clrf	setLED@r
  1692  02B4  30FF               	movlw	255
  1693  02B5  0020               	movlb	0	; select bank0
  1694  02B6  00C2               	movwf	??_main
  1695  02B7  0842               	movf	??_main,w
  1696  02B8  00F4               	movwf	setLED@b
  1697  02B9  30FF               	movlw	255
  1698  02BA  3187  27AB  3180   	fcall	_setLED
  1699                           
  1700                           ;powerspy.c: 779: break;
  1701  02BD  2AF4               	goto	l383
  1702  02BE                     l3248:	
  1703                           ;powerspy.c: 780: case 2:
  1704                           
  1705                           
  1706                           ;powerspy.c: 781: setUnit(0b111111111101110101101111);
  1707  02BE  306F               	movlw	111
  1708  02BF  00F5               	movwf	setUnit@u
  1709  02C0  30DD               	movlw	221
  1710  02C1  00F6               	movwf	setUnit@u+1
  1711  02C2  30FF               	movlw	255
  1712  02C3  00F7               	movwf	setUnit@u+2
  1713  02C4  3186  26E8  3180   	fcall	_setUnit
  1714                           
  1715                           ;powerspy.c: 782: setVal(voltage);
  1716  02C7  0020               	movlb	0	; select bank0
  1717  02C8  0846               	movf	main@voltage+1,w
  1718  02C9  00BA               	movwf	setVal@v+1
  1719  02CA  0845               	movf	main@voltage,w
  1720  02CB  00B9               	movwf	setVal@v
  1721  02CC  3186  2631  3180   	fcall	_setVal
  1722                           
  1723                           ;powerspy.c: 783: setLED((0xff>>0), (0xff>>0), 0x00);
  1724  02CF  30FF               	movlw	255
  1725  02D0  0020               	movlb	0	; select bank0
  1726  02D1  00C2               	movwf	??_main
  1727  02D2  0842               	movf	??_main,w
  1728  02D3  00F3               	movwf	setLED@r
  1729  02D4  01F4               	clrf	setLED@b
  1730  02D5  30FF               	movlw	255
  1731  02D6  3187  27AB  3180   	fcall	_setLED
  1732                           
  1733                           ;powerspy.c: 785: }
  1734                           
  1735                           ;powerspy.c: 784: break;
  1736  02D9  2AF4               	goto	l383
  1737  02DA                     l3256:	
  1738                           
  1739                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1740                           ; Switch size 1, requested type "space"
  1741                           ; Number of cases is 1, Range of values is 0 to 0
  1742                           ; switch strategies available:
  1743                           ; Name         Instructions Cycles
  1744                           ; simple_byte            4     3 (average)
  1745                           ; direct_byte            8     6 (fixed)
  1746                           ; jumptable            260     6 (fixed)
  1747                           ;	Chosen strategy is simple_byte
  1748  02DA  0020               	movlb	0	; select bank0
  1749  02DB  0852               	movf	main@bmode+1,w
  1750  02DC  3A00               	xorlw	0	; case 0
  1751  02DD  1903               	skipnz
  1752  02DE  2AE0               	goto	l3306
  1753  02DF  2A04               	goto	l3218
  1754  02E0                     l3306:	
  1755                           
  1756                           ; Switch size 1, requested type "space"
  1757                           ; Number of cases is 6, Range of values is 0 to 6
  1758                           ; switch strategies available:
  1759                           ; Name         Instructions Cycles
  1760                           ; simple_byte           19    10 (average)
  1761                           ; direct_byte           20     6 (fixed)
  1762                           ; jumptable            260     6 (fixed)
  1763                           ;	Chosen strategy is simple_byte
  1764  02E0  0851               	movf	main@bmode,w
  1765  02E1  3A00               	xorlw	0	; case 0
  1766  02E2  1903               	skipnz
  1767  02E3  2A04               	goto	l3218
  1768  02E4  3A01               	xorlw	1	; case 1
  1769  02E5  1903               	skipnz
  1770  02E6  2A22               	goto	l3224
  1771  02E7  3A03               	xorlw	3	; case 2
  1772  02E8  1903               	skipnz
  1773  02E9  2ABE               	goto	l3248
  1774  02EA  3A06               	xorlw	6	; case 4
  1775  02EB  1903               	skipnz
  1776  02EC  2A66               	goto	l3236
  1777  02ED  3A01               	xorlw	1	; case 5
  1778  02EE  1903               	skipnz
  1779  02EF  2A3E               	goto	l3230
  1780  02F0  3A03               	xorlw	3	; case 6
  1781  02F1  1903               	skipnz
  1782  02F2  2A92               	goto	l3242
  1783  02F3  2A04               	goto	l3218
  1784  02F4                     l383:	
  1785                           
  1786                           ;powerspy.c: 786: RA3 = 1;
  1787  02F4  0020               	movlb	0	; select bank0
  1788  02F5  158C               	bsf	12,3	;volatile
  1789  02F6                     l372:	
  1790                           
  1791                           ;powerspy.c: 787: }
  1792                           ;powerspy.c: 790: if (!RB3 && !(flag & 0x10)) {
  1793  02F6  1D8D               	btfss	13,3	;volatile
  1794  02F7  1A67               	btfsc	_flag,4	;volatile
  1795  02F8  2B18               	goto	l3268
  1796                           
  1797                           ;powerspy.c: 791: bmode++;
  1798  02F9  3001               	movlw	1
  1799  02FA  07D1               	addwf	main@bmode,f
  1800  02FB  3000               	movlw	0
  1801  02FC  3DD2               	addwfc	main@bmode+1,f
  1802                           
  1803                           ;powerspy.c: 792: bmode %= 7;
  1804  02FD  3007               	movlw	7
  1805  02FE  00F2               	movwf	___awmod@divisor
  1806  02FF  3000               	movlw	0
  1807  0300  00F3               	movwf	___awmod@divisor+1
  1808  0301  0852               	movf	main@bmode+1,w
  1809  0302  00F5               	movwf	___awmod@dividend+1
  1810  0303  0851               	movf	main@bmode,w
  1811  0304  00F4               	movwf	___awmod@dividend
  1812  0305  3185  25EC  3180   	fcall	___awmod
  1813  0308  0873               	movf	?___awmod+1,w
  1814  0309  0020               	movlb	0	; select bank0
  1815  030A  00D2               	movwf	main@bmode+1
  1816  030B  0872               	movf	?___awmod,w
  1817  030C  00D1               	movwf	main@bmode
  1818                           
  1819                           ;powerspy.c: 794: flag |= 0x10;
  1820  030D  1667               	bsf	_flag,4	;volatile
  1821                           
  1822                           ;powerspy.c: 795: _delay((unsigned long)((10)*(32000000/4000.0)));
  1823  030E  3068               	movlw	104
  1824  030F  00C3               	movwf	??_main+1
  1825  0310  30E4               	movlw	228
  1826  0311  00C2               	movwf	??_main
  1827  0312                     u3137:	
  1828  0312  0BC2               	decfsz	??_main,f
  1829  0313  2B12               	goto	u3137
  1830  0314  0BC3               	decfsz	??_main+1,f
  1831  0315  2B12               	goto	u3137
  1832  0316  0000               	nop
  1833                           
  1834                           ;powerspy.c: 796: } else {
  1835  0317  2899               	goto	l3148
  1836  0318                     l3268:	
  1837                           
  1838                           ;powerspy.c: 797: flag &= ~0x10;
  1839  0318  30EF               	movlw	239
  1840  0319  0020               	movlb	0	; select bank0
  1841  031A  00C2               	movwf	??_main
  1842  031B  0842               	movf	??_main,w
  1843  031C  05E7               	andwf	_flag,f	;volatile
  1844  031D  2899               	goto	l3148
  1845  031E                     __end_of_main:	
  1846                           
  1847                           	psect	text1
  1848  0631                     __ptext1:	
  1849 ;; *************** function _setVal *****************
  1850 ;; Defined at:
  1851 ;;		line 621 in file "powerspy.c"
  1852 ;; Parameters:    Size  Location     Type
  1853 ;;  v               2   25[BANK0 ] short 
  1854 ;; Auto vars:     Size  Location     Type
  1855 ;;  i               1   28[BANK0 ] char 
  1856 ;; Return value:  Size  Location     Type
  1857 ;;                  1    wreg      void 
  1858 ;; Registers used:
  1859 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1860 ;; Tracked objects:
  1861 ;;		On entry : 0/0
  1862 ;;		On exit  : 0/0
  1863 ;;		Unchanged: 0/0
  1864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1865 ;;      Params:         0       2       0       0       0       0
  1866 ;;      Locals:         0       1       0       0       0       0
  1867 ;;      Temps:          0       1       0       0       0       0
  1868 ;;      Totals:         0       4       0       0       0       0
  1869 ;;Total ram usage:        4 bytes
  1870 ;; Hardware stack levels used:    1
  1871 ;; Hardware stack levels required when called:    2
  1872 ;; This function calls:
  1873 ;;		___awdiv
  1874 ;;		___awmod
  1875 ;;		_so
  1876 ;; This function is called by:
  1877 ;;		_main
  1878 ;; This function uses a non-reentrant model
  1879 ;;
  1880                           
  1881                           
  1882                           ;psect for function _setVal
  1883  0631                     _setVal:	
  1884                           
  1885                           ;powerspy.c: 623: int8_t i;
  1886                           ;powerspy.c: 624: for (i = 0; i < 7 - 3; i++) {
  1887                           
  1888                           ;incstack = 0
  1889                           ; Regs used in _setVal: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1890  0631  0020               	movlb	0	; select bank0
  1891  0632  01BC               	clrf	setVal@i
  1892  0633                     L3:	
  1893  0633  083C               	movf	setVal@i,w
  1894  0634  3A80               	xorlw	128
  1895  0635  3E7C               	addlw	-132
  1896  0636  1803               	btfsc	3,0
  1897  0637  0008               	return
  1898                           
  1899                           ;powerspy.c: 625: so(get_shift_byte[v % 10]);
  1900  0638  300A               	movlw	10
  1901  0639  00F2               	movwf	___awmod@divisor
  1902  063A  3000               	movlw	0
  1903  063B  00F3               	movwf	___awmod@divisor+1
  1904  063C  083A               	movf	setVal@v+1,w
  1905  063D  00F5               	movwf	___awmod@dividend+1
  1906  063E  0839               	movf	setVal@v,w
  1907  063F  00F4               	movwf	___awmod@dividend
  1908  0640  3185  25EC  3186   	fcall	___awmod
  1909  0643  0873               	movf	?___awmod+1,w
  1910  0644  0085               	movwf	5
  1911  0645  0872               	movf	?___awmod,w
  1912  0646  0084               	movwf	4
  1913  0647  3000               	movlw	low (_get_shift_byte| (0+32768))
  1914  0648  0784               	addwf	4,f
  1915  0649  3088               	movlw	high (_get_shift_byte| (0+32768))
  1916  064A  3D85               	addwfc	5,f
  1917  064B  0800               	movf	0,w	;code access
  1918  064C  3183  23C0  3186   	fcall	_so
  1919                           
  1920                           ;powerspy.c: 626: v /= 10;
  1921  064F  300A               	movlw	10
  1922  0650  00F2               	movwf	___awdiv@divisor
  1923  0651  3000               	movlw	0
  1924  0652  00F3               	movwf	___awdiv@divisor+1
  1925  0653  0020               	movlb	0	; select bank0
  1926  0654  083A               	movf	setVal@v+1,w
  1927  0655  00F5               	movwf	___awdiv@dividend+1
  1928  0656  0839               	movf	setVal@v,w
  1929  0657  00F4               	movwf	___awdiv@dividend
  1930  0658  3184  24F8  3186   	fcall	___awdiv
  1931  065B  0873               	movf	?___awdiv+1,w
  1932  065C  0020               	movlb	0	; select bank0
  1933  065D  00BA               	movwf	setVal@v+1
  1934  065E  0872               	movf	?___awdiv,w
  1935  065F  00B9               	movwf	setVal@v
  1936  0660  3001               	movlw	1
  1937  0661  00BB               	movwf	??_setVal
  1938  0662  083B               	movf	??_setVal,w
  1939  0663  07BC               	addwf	setVal@i,f
  1940  0664  2E33               	goto	L3
  1941  0665                     __end_of_setVal:	
  1942                           
  1943                           	psect	text2
  1944  05EC                     __ptext2:	
  1945 ;; *************** function ___awmod *****************
  1946 ;; Defined at:
  1947 ;;		line 6 in file "/Applications/microchip/xc8/v1.37/sources/common/awmod.c"
  1948 ;; Parameters:    Size  Location     Type
  1949 ;;  divisor         2    2[COMMON] int 
  1950 ;;  dividend        2    4[COMMON] int 
  1951 ;; Auto vars:     Size  Location     Type
  1952 ;;  sign            1    8[COMMON] unsigned char 
  1953 ;;  counter         1    7[COMMON] unsigned char 
  1954 ;; Return value:  Size  Location     Type
  1955 ;;                  2    2[COMMON] int 
  1956 ;; Registers used:
  1957 ;;		wreg, status,2, status,0
  1958 ;; Tracked objects:
  1959 ;;		On entry : 0/0
  1960 ;;		On exit  : 0/0
  1961 ;;		Unchanged: 0/0
  1962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1963 ;;      Params:         4       0       0       0       0       0
  1964 ;;      Locals:         2       0       0       0       0       0
  1965 ;;      Temps:          1       0       0       0       0       0
  1966 ;;      Totals:         7       0       0       0       0       0
  1967 ;;Total ram usage:        7 bytes
  1968 ;; Hardware stack levels used:    1
  1969 ;; Hardware stack levels required when called:    1
  1970 ;; This function calls:
  1971 ;;		Nothing
  1972 ;; This function is called by:
  1973 ;;		_setVal
  1974 ;;		_main
  1975 ;; This function uses a non-reentrant model
  1976 ;;
  1977                           
  1978                           
  1979                           ;psect for function ___awmod
  1980  05EC                     ___awmod:	
  1981                           
  1982                           ;incstack = 0
  1983                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1984  05EC  01F8               	clrf	___awmod@sign
  1985  05ED  1FF5               	btfss	___awmod@dividend+1,7
  1986  05EE  2DF6               	goto	l2414
  1987  05EF  09F4               	comf	___awmod@dividend,f
  1988  05F0  09F5               	comf	___awmod@dividend+1,f
  1989  05F1  0AF4               	incf	___awmod@dividend,f
  1990  05F2  1903               	skipnz
  1991  05F3  0AF5               	incf	___awmod@dividend+1,f
  1992  05F4  01F8               	clrf	___awmod@sign
  1993  05F5  0AF8               	incf	___awmod@sign,f
  1994  05F6                     l2414:	
  1995  05F6  1FF3               	btfss	___awmod@divisor+1,7
  1996  05F7  2DFD               	goto	l2418
  1997  05F8  09F2               	comf	___awmod@divisor,f
  1998  05F9  09F3               	comf	___awmod@divisor+1,f
  1999  05FA  0AF2               	incf	___awmod@divisor,f
  2000  05FB  1903               	skipnz
  2001  05FC  0AF3               	incf	___awmod@divisor+1,f
  2002  05FD                     l2418:	
  2003  05FD  0872               	movf	___awmod@divisor,w
  2004  05FE  0473               	iorwf	___awmod@divisor+1,w
  2005  05FF  1903               	btfsc	3,2
  2006  0600  2E24               	goto	l2436
  2007  0601  01F7               	clrf	___awmod@counter
  2008  0602  0AF7               	incf	___awmod@counter,f
  2009  0603                     l2426:	
  2010  0603  1BF3               	btfsc	___awmod@divisor+1,7
  2011  0604  2E0F               	goto	l2428
  2012  0605  3001               	movlw	1
  2013  0606                     u2115:	
  2014  0606  35F2               	lslf	___awmod@divisor,f
  2015  0607  0DF3               	rlf	___awmod@divisor+1,f
  2016  0608  0B89               	decfsz	9,f
  2017  0609  2E06               	goto	u2115
  2018  060A  3001               	movlw	1
  2019  060B  00F6               	movwf	??___awmod
  2020  060C  0876               	movf	??___awmod,w
  2021  060D  07F7               	addwf	___awmod@counter,f
  2022  060E  2E03               	goto	l2426
  2023  060F                     l2428:	
  2024  060F  0873               	movf	___awmod@divisor+1,w
  2025  0610  0275               	subwf	___awmod@dividend+1,w
  2026  0611  1D03               	skipz
  2027  0612  2E15               	goto	u2135
  2028  0613  0872               	movf	___awmod@divisor,w
  2029  0614  0274               	subwf	___awmod@dividend,w
  2030  0615                     u2135:	
  2031  0615  1C03               	skipc
  2032  0616  2E1B               	goto	l2432
  2033  0617  0872               	movf	___awmod@divisor,w
  2034  0618  02F4               	subwf	___awmod@dividend,f
  2035  0619  0873               	movf	___awmod@divisor+1,w
  2036  061A  3BF5               	subwfb	___awmod@dividend+1,f
  2037  061B                     l2432:	
  2038  061B  3001               	movlw	1
  2039  061C                     u2145:	
  2040  061C  36F3               	lsrf	___awmod@divisor+1,f
  2041  061D  0CF2               	rrf	___awmod@divisor,f
  2042  061E  0B89               	decfsz	9,f
  2043  061F  2E1C               	goto	u2145
  2044  0620  3001               	movlw	1
  2045  0621  02F7               	subwf	___awmod@counter,f
  2046  0622  1D03               	btfss	3,2
  2047  0623  2E0F               	goto	l2428
  2048  0624                     l2436:	
  2049  0624  0878               	movf	___awmod@sign,w
  2050  0625  1903               	btfsc	3,2
  2051  0626  2E2C               	goto	l2440
  2052  0627  09F4               	comf	___awmod@dividend,f
  2053  0628  09F5               	comf	___awmod@dividend+1,f
  2054  0629  0AF4               	incf	___awmod@dividend,f
  2055  062A  1903               	skipnz
  2056  062B  0AF5               	incf	___awmod@dividend+1,f
  2057  062C                     l2440:	
  2058  062C  0875               	movf	___awmod@dividend+1,w
  2059  062D  00F3               	movwf	?___awmod+1
  2060  062E  0874               	movf	___awmod@dividend,w
  2061  062F  00F2               	movwf	?___awmod
  2062  0630  0008               	return
  2063  0631                     __end_of___awmod:	
  2064                           
  2065                           	psect	text3
  2066  04F8                     __ptext3:	
  2067 ;; *************** function ___awdiv *****************
  2068 ;; Defined at:
  2069 ;;		line 6 in file "/Applications/microchip/xc8/v1.37/sources/common/awdiv.c"
  2070 ;; Parameters:    Size  Location     Type
  2071 ;;  divisor         2    2[COMMON] int 
  2072 ;;  dividend        2    4[COMMON] int 
  2073 ;; Auto vars:     Size  Location     Type
  2074 ;;  quotient        2    2[BANK0 ] int 
  2075 ;;  sign            1    1[BANK0 ] unsigned char 
  2076 ;;  counter         1    0[BANK0 ] unsigned char 
  2077 ;; Return value:  Size  Location     Type
  2078 ;;                  2    2[COMMON] int 
  2079 ;; Registers used:
  2080 ;;		wreg, status,2, status,0
  2081 ;; Tracked objects:
  2082 ;;		On entry : 0/0
  2083 ;;		On exit  : 0/0
  2084 ;;		Unchanged: 0/0
  2085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2086 ;;      Params:         4       0       0       0       0       0
  2087 ;;      Locals:         0       4       0       0       0       0
  2088 ;;      Temps:          1       0       0       0       0       0
  2089 ;;      Totals:         5       4       0       0       0       0
  2090 ;;Total ram usage:        9 bytes
  2091 ;; Hardware stack levels used:    1
  2092 ;; Hardware stack levels required when called:    1
  2093 ;; This function calls:
  2094 ;;		Nothing
  2095 ;; This function is called by:
  2096 ;;		_setVal
  2097 ;; This function uses a non-reentrant model
  2098 ;;
  2099                           
  2100                           
  2101                           ;psect for function ___awdiv
  2102  04F8                     ___awdiv:	
  2103                           
  2104                           ;incstack = 0
  2105                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2106  04F8  0020               	movlb	0	; select bank0
  2107  04F9  01A1               	clrf	___awdiv@sign
  2108  04FA  1FF3               	btfss	___awdiv@divisor+1,7
  2109  04FB  2D03               	goto	l3056
  2110  04FC  09F2               	comf	___awdiv@divisor,f
  2111  04FD  09F3               	comf	___awdiv@divisor+1,f
  2112  04FE  0AF2               	incf	___awdiv@divisor,f
  2113  04FF  1903               	skipnz
  2114  0500  0AF3               	incf	___awdiv@divisor+1,f
  2115  0501  01A1               	clrf	___awdiv@sign
  2116  0502  0AA1               	incf	___awdiv@sign,f
  2117  0503                     l3056:	
  2118  0503  1FF5               	btfss	___awdiv@dividend+1,7
  2119  0504  2D0E               	goto	l3062
  2120  0505  09F4               	comf	___awdiv@dividend,f
  2121  0506  09F5               	comf	___awdiv@dividend+1,f
  2122  0507  0AF4               	incf	___awdiv@dividend,f
  2123  0508  1903               	skipnz
  2124  0509  0AF5               	incf	___awdiv@dividend+1,f
  2125  050A  3001               	movlw	1
  2126  050B  00F6               	movwf	??___awdiv
  2127  050C  0876               	movf	??___awdiv,w
  2128  050D  06A1               	xorwf	___awdiv@sign,f
  2129  050E                     l3062:	
  2130  050E  01A2               	clrf	___awdiv@quotient
  2131  050F  01A3               	clrf	___awdiv@quotient+1
  2132  0510  0872               	movf	___awdiv@divisor,w
  2133  0511  0473               	iorwf	___awdiv@divisor+1,w
  2134  0512  1903               	btfsc	3,2
  2135  0513  2D3D               	goto	l3084
  2136  0514  01A0               	clrf	___awdiv@counter
  2137  0515  0AA0               	incf	___awdiv@counter,f
  2138  0516                     l3072:	
  2139  0516  1BF3               	btfsc	___awdiv@divisor+1,7
  2140  0517  2D22               	goto	l3074
  2141  0518  3001               	movlw	1
  2142  0519                     u2915:	
  2143  0519  35F2               	lslf	___awdiv@divisor,f
  2144  051A  0DF3               	rlf	___awdiv@divisor+1,f
  2145  051B  0B89               	decfsz	9,f
  2146  051C  2D19               	goto	u2915
  2147  051D  3001               	movlw	1
  2148  051E  00F6               	movwf	??___awdiv
  2149  051F  0876               	movf	??___awdiv,w
  2150  0520  07A0               	addwf	___awdiv@counter,f
  2151  0521  2D16               	goto	l3072
  2152  0522                     l3074:	
  2153  0522  3001               	movlw	1
  2154  0523                     u2935:	
  2155  0523  35A2               	lslf	___awdiv@quotient,f
  2156  0524  0DA3               	rlf	___awdiv@quotient+1,f
  2157  0525  0B89               	decfsz	9,f
  2158  0526  2D23               	goto	u2935
  2159  0527  0873               	movf	___awdiv@divisor+1,w
  2160  0528  0275               	subwf	___awdiv@dividend+1,w
  2161  0529  1D03               	skipz
  2162  052A  2D2D               	goto	u2945
  2163  052B  0872               	movf	___awdiv@divisor,w
  2164  052C  0274               	subwf	___awdiv@dividend,w
  2165  052D                     u2945:	
  2166  052D  1C03               	skipc
  2167  052E  2D34               	goto	l3080
  2168  052F  0872               	movf	___awdiv@divisor,w
  2169  0530  02F4               	subwf	___awdiv@dividend,f
  2170  0531  0873               	movf	___awdiv@divisor+1,w
  2171  0532  3BF5               	subwfb	___awdiv@dividend+1,f
  2172  0533  1422               	bsf	___awdiv@quotient,0
  2173  0534                     l3080:	
  2174  0534  3001               	movlw	1
  2175  0535                     u2955:	
  2176  0535  36F3               	lsrf	___awdiv@divisor+1,f
  2177  0536  0CF2               	rrf	___awdiv@divisor,f
  2178  0537  0B89               	decfsz	9,f
  2179  0538  2D35               	goto	u2955
  2180  0539  3001               	movlw	1
  2181  053A  02A0               	subwf	___awdiv@counter,f
  2182  053B  1D03               	btfss	3,2
  2183  053C  2D22               	goto	l3074
  2184  053D                     l3084:	
  2185  053D  0821               	movf	___awdiv@sign,w
  2186  053E  1903               	btfsc	3,2
  2187  053F  2D45               	goto	l3088
  2188  0540  09A2               	comf	___awdiv@quotient,f
  2189  0541  09A3               	comf	___awdiv@quotient+1,f
  2190  0542  0AA2               	incf	___awdiv@quotient,f
  2191  0543  1903               	skipnz
  2192  0544  0AA3               	incf	___awdiv@quotient+1,f
  2193  0545                     l3088:	
  2194  0545  0823               	movf	___awdiv@quotient+1,w
  2195  0546  00F3               	movwf	?___awdiv+1
  2196  0547  0822               	movf	___awdiv@quotient,w
  2197  0548  00F2               	movwf	?___awdiv
  2198  0549  0008               	return
  2199  054A                     __end_of___awdiv:	
  2200                           
  2201                           	psect	text4
  2202  06E8                     __ptext4:	
  2203 ;; *************** function _setUnit *****************
  2204 ;; Defined at:
  2205 ;;		line 614 in file "powerspy.c"
  2206 ;; Parameters:    Size  Location     Type
  2207 ;;  u               3    5[COMMON] unsigned um
  2208 ;; Auto vars:     Size  Location     Type
  2209 ;;		None
  2210 ;; Return value:  Size  Location     Type
  2211 ;;                  1    wreg      void 
  2212 ;; Registers used:
  2213 ;;		wreg, status,2, status,0, pclath, cstack
  2214 ;; Tracked objects:
  2215 ;;		On entry : 0/0
  2216 ;;		On exit  : 0/0
  2217 ;;		Unchanged: 0/0
  2218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2219 ;;      Params:         3       0       0       0       0       0
  2220 ;;      Locals:         0       0       0       0       0       0
  2221 ;;      Temps:          0       3       0       0       0       0
  2222 ;;      Totals:         3       3       0       0       0       0
  2223 ;;Total ram usage:        6 bytes
  2224 ;; Hardware stack levels used:    1
  2225 ;; Hardware stack levels required when called:    2
  2226 ;; This function calls:
  2227 ;;		_so
  2228 ;; This function is called by:
  2229 ;;		_main
  2230 ;; This function uses a non-reentrant model
  2231 ;;
  2232                           
  2233                           
  2234                           ;psect for function _setUnit
  2235  06E8                     _setUnit:	
  2236                           
  2237                           ;powerspy.c: 616: so(u >> 16 & 0xff);
  2238                           
  2239                           ;incstack = 0
  2240                           ; Regs used in _setUnit: [wreg+status,2+status,0+pclath+cstack]
  2241  06E8  0875               	movf	setUnit@u,w
  2242  06E9  0020               	movlb	0	; select bank0
  2243  06EA  00A0               	movwf	??_setUnit
  2244  06EB  0876               	movf	setUnit@u+1,w
  2245  06EC  00A1               	movwf	??_setUnit+1
  2246  06ED  0877               	movf	setUnit@u+2,w
  2247  06EE  00A2               	movwf	??_setUnit+2
  2248  06EF  3010               	movlw	16
  2249  06F0                     u2985:	
  2250  06F0  36A2               	lsrf	??_setUnit+2,f
  2251  06F1  0CA1               	rrf	??_setUnit+1,f
  2252  06F2  0CA0               	rrf	??_setUnit,f
  2253  06F3  0B89               	decfsz	9,f
  2254  06F4  2EF0               	goto	u2985
  2255  06F5  0820               	movf	??_setUnit,w
  2256  06F6  3183  23C0  3186   	fcall	_so
  2257                           
  2258                           ;powerspy.c: 617: so(u >> 8 & 0xff);
  2259  06F9  0875               	movf	setUnit@u,w
  2260  06FA  0020               	movlb	0	; select bank0
  2261  06FB  00A0               	movwf	??_setUnit
  2262  06FC  0876               	movf	setUnit@u+1,w
  2263  06FD  00A1               	movwf	??_setUnit+1
  2264  06FE  0877               	movf	setUnit@u+2,w
  2265  06FF  00A2               	movwf	??_setUnit+2
  2266  0700  3008               	movlw	8
  2267  0701                     u2995:	
  2268  0701  36A2               	lsrf	??_setUnit+2,f
  2269  0702  0CA1               	rrf	??_setUnit+1,f
  2270  0703  0CA0               	rrf	??_setUnit,f
  2271  0704  0B89               	decfsz	9,f
  2272  0705  2F01               	goto	u2995
  2273  0706  0820               	movf	??_setUnit,w
  2274  0707  3183  23C0  3186   	fcall	_so
  2275                           
  2276                           ;powerspy.c: 618: so(u & 0xff);
  2277  070A  0875               	movf	setUnit@u,w
  2278  070B  3183  23C0         	fcall	_so
  2279  070D  0008               	return
  2280  070E                     __end_of_setUnit:	
  2281                           
  2282                           	psect	text5
  2283  07AB                     __ptext5:	
  2284 ;; *************** function _setLED *****************
  2285 ;; Defined at:
  2286 ;;		line 606 in file "powerspy.c"
  2287 ;; Parameters:    Size  Location     Type
  2288 ;;  g               1    wreg     unsigned char 
  2289 ;;  r               1    3[COMMON] unsigned char 
  2290 ;;  b               1    4[COMMON] unsigned char 
  2291 ;; Auto vars:     Size  Location     Type
  2292 ;;  g               1    5[COMMON] unsigned char 
  2293 ;; Return value:  Size  Location     Type
  2294 ;;                  1    wreg      void 
  2295 ;; Registers used:
  2296 ;;		wreg, status,2, status,0, pclath, cstack
  2297 ;; Tracked objects:
  2298 ;;		On entry : 0/0
  2299 ;;		On exit  : 0/0
  2300 ;;		Unchanged: 0/0
  2301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2302 ;;      Params:         2       0       0       0       0       0
  2303 ;;      Locals:         1       0       0       0       0       0
  2304 ;;      Temps:          0       0       0       0       0       0
  2305 ;;      Totals:         3       0       0       0       0       0
  2306 ;;Total ram usage:        3 bytes
  2307 ;; Hardware stack levels used:    1
  2308 ;; Hardware stack levels required when called:    2
  2309 ;; This function calls:
  2310 ;;		_sendColour
  2311 ;; This function is called by:
  2312 ;;		_main
  2313 ;; This function uses a non-reentrant model
  2314 ;;
  2315                           
  2316                           
  2317                           ;psect for function _setLED
  2318  07AB                     _setLED:	
  2319                           
  2320                           ;incstack = 0
  2321                           ; Regs used in _setLED: [wreg+status,2+status,0+pclath+cstack]
  2322                           ;setLED@g stored from wreg
  2323  07AB  00F5               	movwf	setLED@g
  2324                           
  2325                           ;powerspy.c: 608: sendColour(g);
  2326  07AC  0875               	movf	setLED@g,w
  2327  07AD  3183  231E  3187   	fcall	_sendColour
  2328                           
  2329                           ;powerspy.c: 609: sendColour(r);
  2330  07B0  0873               	movf	setLED@r,w
  2331  07B1  3183  231E  3187   	fcall	_sendColour
  2332                           
  2333                           ;powerspy.c: 610: sendColour(b);
  2334  07B4  0874               	movf	setLED@b,w
  2335  07B5  3183  231E         	fcall	_sendColour
  2336                           
  2337                           ;powerspy.c: 611: led_rest = TMR1;
  2338  07B7  0020               	movlb	0	; select bank0
  2339  07B8  0817               	movf	23,w	;volatile
  2340  07B9  00E4               	movwf	_led_rest+1
  2341  07BA  0816               	movf	22,w	;volatile
  2342  07BB  00E3               	movwf	_led_rest
  2343  07BC  0008               	return
  2344  07BD                     __end_of_setLED:	
  2345                           
  2346                           	psect	text6
  2347  031E                     __ptext6:	
  2348 ;; *************** function _sendColour *****************
  2349 ;; Defined at:
  2350 ;;		line 508 in file "powerspy.c"
  2351 ;; Parameters:    Size  Location     Type
  2352 ;;  c               1    wreg     unsigned char 
  2353 ;; Auto vars:     Size  Location     Type
  2354 ;;  c               1    2[COMMON] unsigned char 
  2355 ;; Return value:  Size  Location     Type
  2356 ;;                  1    wreg      void 
  2357 ;; Registers used:
  2358 ;;		wreg
  2359 ;; Tracked objects:
  2360 ;;		On entry : 0/0
  2361 ;;		On exit  : 0/0
  2362 ;;		Unchanged: 0/0
  2363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2364 ;;      Params:         0       0       0       0       0       0
  2365 ;;      Locals:         1       0       0       0       0       0
  2366 ;;      Temps:          0       0       0       0       0       0
  2367 ;;      Totals:         1       0       0       0       0       0
  2368 ;;Total ram usage:        1 bytes
  2369 ;; Hardware stack levels used:    1
  2370 ;; Hardware stack levels required when called:    1
  2371 ;; This function calls:
  2372 ;;		Nothing
  2373 ;; This function is called by:
  2374 ;;		_setLED
  2375 ;; This function uses a non-reentrant model
  2376 ;;
  2377                           
  2378                           
  2379                           ;psect for function _sendColour
  2380  031E                     _sendColour:	
  2381                           
  2382                           ;incstack = 0
  2383                           ; Regs used in _sendColour: [wreg]
  2384                           ;sendColour@c stored from wreg
  2385  031E  00F2               	movwf	sendColour@c
  2386                           
  2387                           ;powerspy.c: 510: if (c & 0b10000000) { RA6=1; __nop(); __nop(); __nop(); __nop(); RA6=0
      +                          ; __nop(); }
  2388  031F  1FF2               	btfss	sendColour@c,7
  2389  0320  2B2B               	goto	l299
  2390  0321  0020               	movlb	0	; select bank0
  2391  0322  170C               	bsf	12,6	;volatile
  2392  0323  0000               	nop
  2393  0324  0000               	nop
  2394  0325  0000               	nop
  2395  0326  0000               	nop
  2396  0327  0020               	movlb	0	; select bank0
  2397  0328  130C               	bcf	12,6	;volatile
  2398  0329  0000               	nop
  2399  032A  2B33               	goto	l2192
  2400  032B                     l299:	
  2401                           
  2402                           ;powerspy.c: 511: else { RA6=1; __nop(); RA6=0; __nop(); __nop(); __nop(); };
  2403  032B  0020               	movlb	0	; select bank0
  2404  032C  170C               	bsf	12,6	;volatile
  2405  032D  0000               	nop
  2406  032E  0020               	movlb	0	; select bank0
  2407  032F  130C               	bcf	12,6	;volatile
  2408  0330  0000               	nop
  2409  0331  0000               	nop
  2410  0332  0000               	nop
  2411  0333                     l2192:	
  2412                           
  2413                           ;powerspy.c: 513: if (c & 0b01000000) { RA6=1; __nop(); __nop(); __nop(); __nop(); RA6=0
      +                          ; __nop(); }
  2414  0333  1F72               	btfss	sendColour@c,6
  2415  0334  2B3F               	goto	l301
  2416  0335  0020               	movlb	0	; select bank0
  2417  0336  170C               	bsf	12,6	;volatile
  2418  0337  0000               	nop
  2419  0338  0000               	nop
  2420  0339  0000               	nop
  2421  033A  0000               	nop
  2422  033B  0020               	movlb	0	; select bank0
  2423  033C  130C               	bcf	12,6	;volatile
  2424  033D  0000               	nop
  2425  033E  2B47               	goto	l2196
  2426  033F                     l301:	
  2427                           
  2428                           ;powerspy.c: 514: else { RA6=1; __nop(); RA6=0; __nop(); __nop(); __nop(); };
  2429  033F  0020               	movlb	0	; select bank0
  2430  0340  170C               	bsf	12,6	;volatile
  2431  0341  0000               	nop
  2432  0342  0020               	movlb	0	; select bank0
  2433  0343  130C               	bcf	12,6	;volatile
  2434  0344  0000               	nop
  2435  0345  0000               	nop
  2436  0346  0000               	nop
  2437  0347                     l2196:	
  2438                           
  2439                           ;powerspy.c: 516: if (c & 0b00100000) { RA6=1; __nop(); __nop(); __nop(); __nop(); RA6=0
      +                          ; __nop(); }
  2440  0347  1EF2               	btfss	sendColour@c,5
  2441  0348  2B53               	goto	l303
  2442  0349  0020               	movlb	0	; select bank0
  2443  034A  170C               	bsf	12,6	;volatile
  2444  034B  0000               	nop
  2445  034C  0000               	nop
  2446  034D  0000               	nop
  2447  034E  0000               	nop
  2448  034F  0020               	movlb	0	; select bank0
  2449  0350  130C               	bcf	12,6	;volatile
  2450  0351  0000               	nop
  2451  0352  2B5B               	goto	l2200
  2452  0353                     l303:	
  2453                           
  2454                           ;powerspy.c: 517: else { RA6=1; __nop(); RA6=0; __nop(); __nop(); __nop(); };
  2455  0353  0020               	movlb	0	; select bank0
  2456  0354  170C               	bsf	12,6	;volatile
  2457  0355  0000               	nop
  2458  0356  0020               	movlb	0	; select bank0
  2459  0357  130C               	bcf	12,6	;volatile
  2460  0358  0000               	nop
  2461  0359  0000               	nop
  2462  035A  0000               	nop
  2463  035B                     l2200:	
  2464                           
  2465                           ;powerspy.c: 519: if (c & 0b00010000) { RA6=1; __nop(); __nop(); __nop(); __nop(); RA6=0
      +                          ; __nop(); }
  2466  035B  1E72               	btfss	sendColour@c,4
  2467  035C  2B67               	goto	l305
  2468  035D  0020               	movlb	0	; select bank0
  2469  035E  170C               	bsf	12,6	;volatile
  2470  035F  0000               	nop
  2471  0360  0000               	nop
  2472  0361  0000               	nop
  2473  0362  0000               	nop
  2474  0363  0020               	movlb	0	; select bank0
  2475  0364  130C               	bcf	12,6	;volatile
  2476  0365  0000               	nop
  2477  0366  2B6F               	goto	l2204
  2478  0367                     l305:	
  2479                           
  2480                           ;powerspy.c: 520: else { RA6=1; __nop(); RA6=0; __nop(); __nop(); __nop(); };
  2481  0367  0020               	movlb	0	; select bank0
  2482  0368  170C               	bsf	12,6	;volatile
  2483  0369  0000               	nop
  2484  036A  0020               	movlb	0	; select bank0
  2485  036B  130C               	bcf	12,6	;volatile
  2486  036C  0000               	nop
  2487  036D  0000               	nop
  2488  036E  0000               	nop
  2489  036F                     l2204:	
  2490                           
  2491                           ;powerspy.c: 522: if (c & 0b00001000) { RA6=1; __nop(); __nop(); __nop(); __nop(); RA6=0
      +                          ; __nop(); }
  2492  036F  1DF2               	btfss	sendColour@c,3
  2493  0370  2B7B               	goto	l307
  2494  0371  0020               	movlb	0	; select bank0
  2495  0372  170C               	bsf	12,6	;volatile
  2496  0373  0000               	nop
  2497  0374  0000               	nop
  2498  0375  0000               	nop
  2499  0376  0000               	nop
  2500  0377  0020               	movlb	0	; select bank0
  2501  0378  130C               	bcf	12,6	;volatile
  2502  0379  0000               	nop
  2503  037A  2B83               	goto	l2208
  2504  037B                     l307:	
  2505                           
  2506                           ;powerspy.c: 523: else { RA6=1; __nop(); RA6=0; __nop(); __nop(); __nop(); };
  2507  037B  0020               	movlb	0	; select bank0
  2508  037C  170C               	bsf	12,6	;volatile
  2509  037D  0000               	nop
  2510  037E  0020               	movlb	0	; select bank0
  2511  037F  130C               	bcf	12,6	;volatile
  2512  0380  0000               	nop
  2513  0381  0000               	nop
  2514  0382  0000               	nop
  2515  0383                     l2208:	
  2516                           
  2517                           ;powerspy.c: 525: if (c & 0b00000100) { RA6=1; __nop(); __nop(); __nop(); __nop(); RA6=0
      +                          ; __nop(); }
  2518  0383  1D72               	btfss	sendColour@c,2
  2519  0384  2B8F               	goto	l309
  2520  0385  0020               	movlb	0	; select bank0
  2521  0386  170C               	bsf	12,6	;volatile
  2522  0387  0000               	nop
  2523  0388  0000               	nop
  2524  0389  0000               	nop
  2525  038A  0000               	nop
  2526  038B  0020               	movlb	0	; select bank0
  2527  038C  130C               	bcf	12,6	;volatile
  2528  038D  0000               	nop
  2529  038E  2B97               	goto	l2212
  2530  038F                     l309:	
  2531                           
  2532                           ;powerspy.c: 526: else { RA6=1; __nop(); RA6=0; __nop(); __nop(); __nop(); };
  2533  038F  0020               	movlb	0	; select bank0
  2534  0390  170C               	bsf	12,6	;volatile
  2535  0391  0000               	nop
  2536  0392  0020               	movlb	0	; select bank0
  2537  0393  130C               	bcf	12,6	;volatile
  2538  0394  0000               	nop
  2539  0395  0000               	nop
  2540  0396  0000               	nop
  2541  0397                     l2212:	
  2542                           
  2543                           ;powerspy.c: 528: if (c & 0b00000010) { RA6=1; __nop(); __nop(); __nop(); __nop(); RA6=0
      +                          ; __nop(); }
  2544  0397  1CF2               	btfss	sendColour@c,1
  2545  0398  2BA3               	goto	l311
  2546  0399  0020               	movlb	0	; select bank0
  2547  039A  170C               	bsf	12,6	;volatile
  2548  039B  0000               	nop
  2549  039C  0000               	nop
  2550  039D  0000               	nop
  2551  039E  0000               	nop
  2552  039F  0020               	movlb	0	; select bank0
  2553  03A0  130C               	bcf	12,6	;volatile
  2554  03A1  0000               	nop
  2555  03A2  2BAB               	goto	l2216
  2556  03A3                     l311:	
  2557                           
  2558                           ;powerspy.c: 529: else { RA6=1; __nop(); RA6=0; __nop(); __nop(); __nop(); };
  2559  03A3  0020               	movlb	0	; select bank0
  2560  03A4  170C               	bsf	12,6	;volatile
  2561  03A5  0000               	nop
  2562  03A6  0020               	movlb	0	; select bank0
  2563  03A7  130C               	bcf	12,6	;volatile
  2564  03A8  0000               	nop
  2565  03A9  0000               	nop
  2566  03AA  0000               	nop
  2567  03AB                     l2216:	
  2568                           
  2569                           ;powerspy.c: 531: if (c & 0b00000001) { RA6=1; __nop(); __nop(); __nop(); __nop(); RA6=0
      +                          ; __nop(); }
  2570  03AB  1C72               	btfss	sendColour@c,0
  2571  03AC  2BB7               	goto	l313
  2572  03AD  0020               	movlb	0	; select bank0
  2573  03AE  170C               	bsf	12,6	;volatile
  2574  03AF  0000               	nop
  2575  03B0  0000               	nop
  2576  03B1  0000               	nop
  2577  03B2  0000               	nop
  2578  03B3  0020               	movlb	0	; select bank0
  2579  03B4  130C               	bcf	12,6	;volatile
  2580  03B5  0000               	nop
  2581  03B6  0008               	return
  2582  03B7                     l313:	
  2583                           
  2584                           ;powerspy.c: 532: else { RA6=1; __nop(); RA6=0; __nop(); __nop(); __nop(); };
  2585  03B7  0020               	movlb	0	; select bank0
  2586  03B8  170C               	bsf	12,6	;volatile
  2587  03B9  0000               	nop
  2588  03BA  0020               	movlb	0	; select bank0
  2589  03BB  130C               	bcf	12,6	;volatile
  2590  03BC  0000               	nop
  2591  03BD  0000               	nop
  2592  03BE  0000               	nop
  2593  03BF  0008               	return
  2594  03C0                     __end_of_sendColour:	
  2595                           
  2596                           	psect	text7
  2597  07CD                     __ptext7:	
  2598 ;; *************** function _sendUInt8 *****************
  2599 ;; Defined at:
  2600 ;;		line 200 in file "message.c"
  2601 ;; Parameters:    Size  Location     Type
  2602 ;;  i               1    wreg     unsigned char 
  2603 ;; Auto vars:     Size  Location     Type
  2604 ;;  i               1    5[COMMON] unsigned char 
  2605 ;; Return value:  Size  Location     Type
  2606 ;;                  1    wreg      void 
  2607 ;; Registers used:
  2608 ;;		wreg, status,2, status,0, pclath, cstack
  2609 ;; Tracked objects:
  2610 ;;		On entry : 0/0
  2611 ;;		On exit  : 0/0
  2612 ;;		Unchanged: 0/0
  2613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2614 ;;      Params:         0       0       0       0       0       0
  2615 ;;      Locals:         1       0       0       0       0       0
  2616 ;;      Temps:          0       0       0       0       0       0
  2617 ;;      Totals:         1       0       0       0       0       0
  2618 ;;Total ram usage:        1 bytes
  2619 ;; Hardware stack levels used:    1
  2620 ;; Hardware stack levels required when called:    2
  2621 ;; This function calls:
  2622 ;;		__sendchar_
  2623 ;; This function is called by:
  2624 ;;		_main
  2625 ;; This function uses a non-reentrant model
  2626 ;;
  2627                           
  2628                           
  2629                           ;psect for function _sendUInt8
  2630  07CD                     _sendUInt8:	
  2631                           
  2632                           ;incstack = 0
  2633                           ; Regs used in _sendUInt8: [wreg+status,2+status,0+pclath+cstack]
  2634                           ;sendUInt8@i stored from wreg
  2635  07CD  00F5               	movwf	sendUInt8@i
  2636                           
  2637                           ;message.c: 202: _sendchar_(2);
  2638  07CE  3002               	movlw	2
  2639  07CF  3187  27BD  3187   	fcall	__sendchar_
  2640                           
  2641                           ;message.c: 203: _sendchar_('6');
  2642  07D2  3036               	movlw	54
  2643  07D3  3187  27BD  3187   	fcall	__sendchar_
  2644                           
  2645                           ;message.c: 204: _sendchar_(i);
  2646  07D6  0875               	movf	sendUInt8@i,w
  2647  07D7  3187  27BD         	fcall	__sendchar_
  2648  07D9  0008               	return
  2649  07DA                     __end_of_sendUInt8:	
  2650                           
  2651                           	psect	text8
  2652  0665                     __ptext8:	
  2653 ;; *************** function _sendInt24 *****************
  2654 ;; Defined at:
  2655 ;;		line 181 in file "message.c"
  2656 ;; Parameters:    Size  Location     Type
  2657 ;;  i               3    5[COMMON] m
  2658 ;; Auto vars:     Size  Location     Type
  2659 ;;		None
  2660 ;; Return value:  Size  Location     Type
  2661 ;;                  1    wreg      void 
  2662 ;; Registers used:
  2663 ;;		wreg, status,2, status,0, pclath, cstack
  2664 ;; Tracked objects:
  2665 ;;		On entry : 0/0
  2666 ;;		On exit  : 0/0
  2667 ;;		Unchanged: 0/0
  2668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2669 ;;      Params:         3       0       0       0       0       0
  2670 ;;      Locals:         0       0       0       0       0       0
  2671 ;;      Temps:          0       4       0       0       0       0
  2672 ;;      Totals:         3       4       0       0       0       0
  2673 ;;Total ram usage:        7 bytes
  2674 ;; Hardware stack levels used:    1
  2675 ;; Hardware stack levels required when called:    2
  2676 ;; This function calls:
  2677 ;;		__sendchar_
  2678 ;; This function is called by:
  2679 ;;		_main
  2680 ;; This function uses a non-reentrant model
  2681 ;;
  2682                           
  2683                           
  2684                           ;psect for function _sendInt24
  2685  0665                     _sendInt24:	
  2686                           
  2687                           ;message.c: 183: _sendchar_(2);
  2688                           
  2689                           ;incstack = 0
  2690                           ; Regs used in _sendInt24: [wreg+status,2+status,0+pclath+cstack]
  2691  0665  3002               	movlw	2
  2692  0666  3187  27BD  3186   	fcall	__sendchar_
  2693                           
  2694                           ;message.c: 184: _sendchar_('4');
  2695  0669  3034               	movlw	52
  2696  066A  3187  27BD  3186   	fcall	__sendchar_
  2697                           
  2698                           ;message.c: 185: _sendchar_((char) (i >> 16 & 0xff));
  2699  066D  0875               	movf	sendInt24@i,w
  2700  066E  0020               	movlb	0	; select bank0
  2701  066F  00A0               	movwf	??_sendInt24
  2702  0670  0876               	movf	sendInt24@i+1,w
  2703  0671  00A1               	movwf	??_sendInt24+1
  2704  0672  0877               	movf	sendInt24@i+2,w
  2705  0673  00A2               	movwf	??_sendInt24+2
  2706  0674  3010               	movlw	16
  2707  0675  00A3               	movwf	??_sendInt24+3
  2708  0676                     u3025:	
  2709  0676  0D22               	rlf	??_sendInt24+2,w
  2710  0677  0CA2               	rrf	??_sendInt24+2,f
  2711  0678  0CA1               	rrf	??_sendInt24+1,f
  2712  0679  0CA0               	rrf	??_sendInt24,f
  2713  067A  0BA3               	decfsz	??_sendInt24+3,f
  2714  067B  2E76               	goto	u3025
  2715  067C  0820               	movf	??_sendInt24,w
  2716  067D  3187  27BD  3186   	fcall	__sendchar_
  2717                           
  2718                           ;message.c: 186: _sendchar_((char) (i >> 8 & 0xff));
  2719  0680  0875               	movf	sendInt24@i,w
  2720  0681  0020               	movlb	0	; select bank0
  2721  0682  00A0               	movwf	??_sendInt24
  2722  0683  0876               	movf	sendInt24@i+1,w
  2723  0684  00A1               	movwf	??_sendInt24+1
  2724  0685  0877               	movf	sendInt24@i+2,w
  2725  0686  00A2               	movwf	??_sendInt24+2
  2726  0687  3008               	movlw	8
  2727  0688  00A3               	movwf	??_sendInt24+3
  2728  0689                     u3035:	
  2729  0689  0D22               	rlf	??_sendInt24+2,w
  2730  068A  0CA2               	rrf	??_sendInt24+2,f
  2731  068B  0CA1               	rrf	??_sendInt24+1,f
  2732  068C  0CA0               	rrf	??_sendInt24,f
  2733  068D  0BA3               	decfsz	??_sendInt24+3,f
  2734  068E  2E89               	goto	u3035
  2735  068F  0820               	movf	??_sendInt24,w
  2736  0690  3187  27BD  3186   	fcall	__sendchar_
  2737                           
  2738                           ;message.c: 187: _sendchar_((char) (i & 0xff));
  2739  0693  0875               	movf	sendInt24@i,w
  2740  0694  3187  27BD         	fcall	__sendchar_
  2741  0696  0008               	return
  2742  0697                     __end_of_sendInt24:	
  2743                           
  2744                           	psect	text9
  2745  07BD                     __ptext9:	
  2746 ;; *************** function __sendchar_ *****************
  2747 ;; Defined at:
  2748 ;;		line 159 in file "message.c"
  2749 ;; Parameters:    Size  Location     Type
  2750 ;;  c               1    wreg     unsigned char 
  2751 ;; Auto vars:     Size  Location     Type
  2752 ;;  c               1    4[COMMON] unsigned char 
  2753 ;; Return value:  Size  Location     Type
  2754 ;;                  1    wreg      void 
  2755 ;; Registers used:
  2756 ;;		wreg
  2757 ;; Tracked objects:
  2758 ;;		On entry : 0/0
  2759 ;;		On exit  : 0/0
  2760 ;;		Unchanged: 0/0
  2761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2762 ;;      Params:         0       0       0       0       0       0
  2763 ;;      Locals:         1       0       0       0       0       0
  2764 ;;      Temps:          2       0       0       0       0       0
  2765 ;;      Totals:         3       0       0       0       0       0
  2766 ;;Total ram usage:        3 bytes
  2767 ;; Hardware stack levels used:    1
  2768 ;; Hardware stack levels required when called:    1
  2769 ;; This function calls:
  2770 ;;		Nothing
  2771 ;; This function is called by:
  2772 ;;		_sendInt24
  2773 ;;		_sendUInt8
  2774 ;;		_sendInt8
  2775 ;;		_sendInt16
  2776 ;;		_sendInt32
  2777 ;;		_sendUInt16
  2778 ;;		_sendUInt24
  2779 ;;		_sendUInt32
  2780 ;;		_sendFloat
  2781 ;;		_sendString
  2782 ;; This function uses a non-reentrant model
  2783 ;;
  2784                           
  2785                           
  2786                           ;psect for function __sendchar_
  2787  07BD                     __sendchar_:	
  2788                           
  2789                           ;incstack = 0
  2790                           ; Regs used in __sendchar_: [wreg]
  2791                           ;__sendchar_@c stored from wreg
  2792  07BD  00F4               	movwf	__sendchar_@c
  2793                           
  2794                           ;message.c: 161: TXREG = c;
  2795  07BE  0874               	movf	__sendchar_@c,w
  2796  07BF  0023               	movlb	3	; select bank3
  2797  07C0  009A               	movwf	26	;volatile
  2798  07C1                     l469:	
  2799                           ;message.c: 162: while (!TRMT);
  2800                           
  2801  07C1  1C9E               	btfss	30,1	;volatile
  2802  07C2  2FC1               	goto	l469
  2803                           
  2804                           ;message.c: 163: _delay((unsigned long)((1)*(32000000/4000.0)));
  2805  07C3  300B               	movlw	11
  2806  07C4  00F3               	movwf	??__sendchar_+1
  2807  07C5  3062               	movlw	98
  2808  07C6  00F2               	movwf	??__sendchar_
  2809  07C7                     u3147:	
  2810  07C7  0BF2               	decfsz	??__sendchar_,f
  2811  07C8  2FC7               	goto	u3147
  2812  07C9  0BF3               	decfsz	??__sendchar_+1,f
  2813  07CA  2FC7               	goto	u3147
  2814  07CB  0000               	nop
  2815  07CC  0008               	return
  2816  07CD                     __end_of__sendchar_:	
  2817                           
  2818                           	psect	text10
  2819  0002                     __ptext10:	
  2820 ;; *************** function _readVoltage *****************
  2821 ;; Defined at:
  2822 ;;		line 432 in file "powerspy.c"
  2823 ;; Parameters:    Size  Location     Type
  2824 ;;		None
  2825 ;; Auto vars:     Size  Location     Type
  2826 ;;		None
  2827 ;; Return value:  Size  Location     Type
  2828 ;;                  1    wreg      unsigned char 
  2829 ;; Registers used:
  2830 ;;		wreg
  2831 ;; Tracked objects:
  2832 ;;		On entry : 0/0
  2833 ;;		On exit  : 0/0
  2834 ;;		Unchanged: 0/0
  2835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2836 ;;      Params:         0       0       0       0       0       0
  2837 ;;      Locals:         0       0       0       0       0       0
  2838 ;;      Temps:          0       0       0       0       0       0
  2839 ;;      Totals:         0       0       0       0       0       0
  2840 ;;Total ram usage:        0 bytes
  2841 ;; Hardware stack levels used:    1
  2842 ;; Hardware stack levels required when called:    1
  2843 ;; This function calls:
  2844 ;;		Nothing
  2845 ;; This function is called by:
  2846 ;;		_main
  2847 ;; This function uses a non-reentrant model
  2848 ;;
  2849                           
  2850                           
  2851                           ;psect for function _readVoltage
  2852  0002                     _readVoltage:	
  2853                           
  2854                           ;powerspy.c: 434: return 230;
  2855                           
  2856                           ;incstack = 0
  2857                           ; Regs used in _readVoltage: [wreg]
  2858  0002  30E6               	movlw	230
  2859  0003  0008               	return
  2860  0004                     __end_of_readVoltage:	
  2861                           
  2862                           	psect	text11
  2863  0798                     __ptext11:	
  2864 ;; *************** function _readVdd *****************
  2865 ;; Defined at:
  2866 ;;		line 459 in file "powerspy.c"
  2867 ;; Parameters:    Size  Location     Type
  2868 ;;		None
  2869 ;; Auto vars:     Size  Location     Type
  2870 ;;		None
  2871 ;; Return value:  Size  Location     Type
  2872 ;;                  2    4[COMMON] unsigned short 
  2873 ;; Registers used:
  2874 ;;		wreg, status,2, status,0, pclath, cstack
  2875 ;; Tracked objects:
  2876 ;;		On entry : 0/0
  2877 ;;		On exit  : 0/0
  2878 ;;		Unchanged: 0/0
  2879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2880 ;;      Params:         2       0       0       0       0       0
  2881 ;;      Locals:         0       0       0       0       0       0
  2882 ;;      Temps:          2       0       0       0       0       0
  2883 ;;      Totals:         4       0       0       0       0       0
  2884 ;;Total ram usage:        4 bytes
  2885 ;; Hardware stack levels used:    1
  2886 ;; Hardware stack levels required when called:    2
  2887 ;; This function calls:
  2888 ;;		_adc
  2889 ;; This function is called by:
  2890 ;;		_main
  2891 ;; This function uses a non-reentrant model
  2892 ;;
  2893                           
  2894                           
  2895                           ;psect for function _readVdd
  2896  0798                     _readVdd:	
  2897                           
  2898                           ;powerspy.c: 461: ADFM = 1;
  2899                           
  2900                           ;incstack = 0
  2901                           ; Regs used in _readVdd: [wreg+status,2+status,0+pclath+cstack]
  2902  0798  0021               	movlb	1	; select bank1
  2903  0799  179E               	bsf	30,7	;volatile
  2904                           
  2905                           ;powerspy.c: 462: adc(0b00011111);
  2906  079A  301F               	movlw	31
  2907  079B  3185  259B         	fcall	_adc
  2908                           
  2909                           ;powerspy.c: 468: return ADRES<<2;
  2910  079D  0021               	movlb	1	; select bank1
  2911  079E  081C               	movf	28,w	;volatile
  2912  079F  00F7               	movwf	??_readVdd+1
  2913  07A0  081B               	movf	27,w	;volatile
  2914  07A1  00F6               	movwf	??_readVdd
  2915  07A2  35F6               	lslf	??_readVdd,f
  2916  07A3  0DF7               	rlf	??_readVdd+1,f
  2917  07A4  35F6               	lslf	??_readVdd,f
  2918  07A5  0DF7               	rlf	??_readVdd+1,f
  2919  07A6  0876               	movf	??_readVdd,w
  2920  07A7  00F4               	movwf	?_readVdd
  2921  07A8  0877               	movf	??_readVdd+1,w
  2922  07A9  00F5               	movwf	?_readVdd+1
  2923  07AA  0008               	return
  2924  07AB                     __end_of_readVdd:	
  2925                           
  2926                           	psect	text12
  2927  054A                     __ptext12:	
  2928 ;; *************** function _readCurrent *****************
  2929 ;; Defined at:
  2930 ;;		line 442 in file "powerspy.c"
  2931 ;; Parameters:    Size  Location     Type
  2932 ;;		None
  2933 ;; Auto vars:     Size  Location     Type
  2934 ;;		None
  2935 ;; Return value:  Size  Location     Type
  2936 ;;                  3   25[BANK0 ] m
  2937 ;; Registers used:
  2938 ;;		wreg, status,2, status,0, pclath, cstack
  2939 ;; Tracked objects:
  2940 ;;		On entry : 0/0
  2941 ;;		On exit  : 0/0
  2942 ;;		Unchanged: 0/0
  2943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2944 ;;      Params:         0       3       0       0       0       0
  2945 ;;      Locals:         0       0       0       0       0       0
  2946 ;;      Temps:          0       6       0       0       0       0
  2947 ;;      Totals:         0       9       0       0       0       0
  2948 ;;Total ram usage:        9 bytes
  2949 ;; Hardware stack levels used:    1
  2950 ;; Hardware stack levels required when called:    2
  2951 ;; This function calls:
  2952 ;;		___atdiv
  2953 ;;		___tmul
  2954 ;;		___wmul
  2955 ;;		_adc
  2956 ;; This function is called by:
  2957 ;;		_main
  2958 ;; This function uses a non-reentrant model
  2959 ;;
  2960                           
  2961                           
  2962                           ;psect for function _readCurrent
  2963  054A                     _readCurrent:	
  2964                           
  2965                           ;powerspy.c: 450: ADFM = 1;
  2966                           
  2967                           ;incstack = 0
  2968                           ; Regs used in _readCurrent: [wreg+status,2+status,0+pclath+cstack]
  2969  054A  0021               	movlb	1	; select bank1
  2970  054B  179E               	bsf	30,7	;volatile
  2971                           
  2972                           ;powerspy.c: 451: adc(7);
  2973  054C  3007               	movlw	7
  2974  054D  3185  259B  3185   	fcall	_adc
  2975                           
  2976                           ;powerspy.c: 456: return (1000 * (5 * (ADRES + i_u_diode_offs) + i_u_offs)) / 1024;
  2977  0550  3000               	movlw	0
  2978  0551  0020               	movlb	0	; select bank0
  2979  0552  00AD               	movwf	___atdiv@divisor
  2980  0553  3004               	movlw	4
  2981  0554  00AE               	movwf	___atdiv@divisor+1
  2982  0555  3000               	movlw	0
  2983  0556  00AF               	movwf	___atdiv@divisor+2
  2984  0557  086A               	movf	_i_u_offs,w
  2985  0558  00BC               	movwf	??_readCurrent
  2986  0559  086B               	movf	_i_u_offs+1,w
  2987  055A  00BD               	movwf	??_readCurrent+1
  2988  055B  086C               	movf	_i_u_offs+2,w
  2989  055C  00BE               	movwf	??_readCurrent+2
  2990  055D  086D               	movf	_i_u_diode_offs,w
  2991  055E  0021               	movlb	1	; select bank1
  2992  055F  071B               	addwf	27,w	;volatile
  2993  0560  0020               	movlb	0	; select bank0
  2994  0561  00A0               	movwf	___wmul@multiplier
  2995  0562  0021               	movlb	1	; select bank1
  2996  0563  081C               	movf	28,w	;volatile
  2997  0564  1803               	skipnc
  2998  0565  0A1C               	incf	28,w	;volatile
  2999  0566  0020               	movlb	0	; select bank0
  3000  0567  00A1               	movwf	___wmul@multiplier+1
  3001  0568  3005               	movlw	5
  3002  0569  00A2               	movwf	___wmul@multiplicand
  3003  056A  3000               	movlw	0
  3004  056B  00A3               	movwf	___wmul@multiplicand+1
  3005  056C  3187  274D  3185   	fcall	___wmul
  3006  056F  0020               	movlb	0	; select bank0
  3007  0570  0820               	movf	?___wmul,w
  3008  0571  00BF               	movwf	??_readCurrent+3
  3009  0572  0821               	movf	?___wmul+1,w
  3010  0573  00C0               	movwf	??_readCurrent+4
  3011  0574  01C1               	clrf	??_readCurrent+5
  3012  0575  083F               	movf	??_readCurrent+3,w
  3013  0576  07BC               	addwf	??_readCurrent,f
  3014  0577  0840               	movf	??_readCurrent+4,w
  3015  0578  3DBD               	addwfc	??_readCurrent+1,f
  3016  0579  0841               	movf	??_readCurrent+5,w
  3017  057A  3DBE               	addwfc	??_readCurrent+2,f
  3018  057B  083C               	movf	??_readCurrent,w
  3019  057C  00A4               	movwf	___tmul@multiplier
  3020  057D  083D               	movf	??_readCurrent+1,w
  3021  057E  00A5               	movwf	___tmul@multiplier+1
  3022  057F  083E               	movf	??_readCurrent+2,w
  3023  0580  00A6               	movwf	___tmul@multiplier+2
  3024  0581  30E8               	movlw	232
  3025  0582  00A7               	movwf	___tmul@multiplicand
  3026  0583  3003               	movlw	3
  3027  0584  00A8               	movwf	___tmul@multiplicand+1
  3028  0585  3000               	movlw	0
  3029  0586  00A9               	movwf	___tmul@multiplicand+2
  3030  0587  3186  26C1  3185   	fcall	___tmul
  3031  058A  0020               	movlb	0	; select bank0
  3032  058B  0824               	movf	?___tmul,w
  3033  058C  00B0               	movwf	___atdiv@dividend
  3034  058D  0825               	movf	?___tmul+1,w
  3035  058E  00B1               	movwf	___atdiv@dividend+1
  3036  058F  0826               	movf	?___tmul+2,w
  3037  0590  00B2               	movwf	___atdiv@dividend+2
  3038  0591  3184  242D         	fcall	___atdiv
  3039  0593  0020               	movlb	0	; select bank0
  3040  0594  082D               	movf	?___atdiv,w
  3041  0595  00B9               	movwf	?_readCurrent
  3042  0596  082E               	movf	?___atdiv+1,w
  3043  0597  00BA               	movwf	?_readCurrent+1
  3044  0598  082F               	movf	?___atdiv+2,w
  3045  0599  00BB               	movwf	?_readCurrent+2
  3046  059A  0008               	return
  3047  059B                     __end_of_readCurrent:	
  3048                           
  3049                           	psect	text13
  3050  059B                     __ptext13:	
  3051 ;; *************** function _adc *****************
  3052 ;; Defined at:
  3053 ;;		line 388 in file "powerspy.c"
  3054 ;; Parameters:    Size  Location     Type
  3055 ;;  src             1    wreg     const char 
  3056 ;; Auto vars:     Size  Location     Type
  3057 ;;  src             1    3[COMMON] const char 
  3058 ;; Return value:  Size  Location     Type
  3059 ;;                  1    wreg      void 
  3060 ;; Registers used:
  3061 ;;		wreg, status,2, status,0
  3062 ;; Tracked objects:
  3063 ;;		On entry : 0/0
  3064 ;;		On exit  : 0/0
  3065 ;;		Unchanged: 0/0
  3066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3067 ;;      Params:         0       0       0       0       0       0
  3068 ;;      Locals:         1       0       0       0       0       0
  3069 ;;      Temps:          1       0       0       0       0       0
  3070 ;;      Totals:         2       0       0       0       0       0
  3071 ;;Total ram usage:        2 bytes
  3072 ;; Hardware stack levels used:    1
  3073 ;; Hardware stack levels required when called:    1
  3074 ;; This function calls:
  3075 ;;		Nothing
  3076 ;; This function is called by:
  3077 ;;		_readCurrent
  3078 ;;		_readVdd
  3079 ;; This function uses a non-reentrant model
  3080 ;;
  3081                           
  3082                           
  3083                           ;psect for function _adc
  3084  059B                     _adc:	
  3085                           
  3086                           ;incstack = 0
  3087                           ; Regs used in _adc: [wreg+status,2+status,0]
  3088                           ;adc@src stored from wreg
  3089  059B  00F3               	movwf	adc@src
  3090                           
  3091                           ;powerspy.c: 411: CHS0 = (bit) (src >> 0) & 0x01;
  3092  059C  1C73               	btfss	adc@src,0
  3093  059D  2DA1               	goto	u1410
  3094  059E  0021               	movlb	1	; select bank1
  3095  059F  151D               	bsf	29,2	;volatile
  3096  05A0  2DA3               	goto	l2004
  3097  05A1                     u1410:	
  3098  05A1  0021               	movlb	1	; select bank1
  3099  05A2  111D               	bcf	29,2	;volatile
  3100  05A3                     l2004:	
  3101                           
  3102                           ;powerspy.c: 412: CHS1 = (bit) (src >> 1) & 0x01;
  3103  05A3  0873               	movf	adc@src,w
  3104  05A4  00F2               	movwf	??_adc
  3105  05A5  3001               	movlw	1
  3106  05A6                     u1435:	
  3107  05A6  1003               	clrc
  3108  05A7  1BF2               	btfsc	??_adc,7
  3109  05A8  1403               	setc
  3110  05A9  0CF2               	rrf	??_adc,f
  3111  05AA  0B89               	decfsz	9,f
  3112  05AB  2DA6               	goto	u1435
  3113  05AC  1C72               	btfss	??_adc,0
  3114  05AD  2DB1               	goto	u1440
  3115  05AE  0021               	movlb	1	; select bank1
  3116  05AF  159D               	bsf	29,3	;volatile
  3117  05B0  2DB3               	goto	l2006
  3118  05B1                     u1440:	
  3119  05B1  0021               	movlb	1	; select bank1
  3120  05B2  119D               	bcf	29,3	;volatile
  3121  05B3                     l2006:	
  3122                           
  3123                           ;powerspy.c: 413: CHS2 = (bit) (src >> 2) & 0x01;
  3124  05B3  0873               	movf	adc@src,w
  3125  05B4  00F2               	movwf	??_adc
  3126  05B5  3002               	movlw	2
  3127  05B6                     u1465:	
  3128  05B6  1003               	clrc
  3129  05B7  1BF2               	btfsc	??_adc,7
  3130  05B8  1403               	setc
  3131  05B9  0CF2               	rrf	??_adc,f
  3132  05BA  0B89               	decfsz	9,f
  3133  05BB  2DB6               	goto	u1465
  3134  05BC  1C72               	btfss	??_adc,0
  3135  05BD  2DC1               	goto	u1470
  3136  05BE  0021               	movlb	1	; select bank1
  3137  05BF  161D               	bsf	29,4	;volatile
  3138  05C0  2DC3               	goto	l2008
  3139  05C1                     u1470:	
  3140  05C1  0021               	movlb	1	; select bank1
  3141  05C2  121D               	bcf	29,4	;volatile
  3142  05C3                     l2008:	
  3143                           
  3144                           ;powerspy.c: 414: CHS3 = (bit) (src >> 3) & 0x01;
  3145  05C3  0873               	movf	adc@src,w
  3146  05C4  00F2               	movwf	??_adc
  3147  05C5  3003               	movlw	3
  3148  05C6                     u1495:	
  3149  05C6  1003               	clrc
  3150  05C7  1BF2               	btfsc	??_adc,7
  3151  05C8  1403               	setc
  3152  05C9  0CF2               	rrf	??_adc,f
  3153  05CA  0B89               	decfsz	9,f
  3154  05CB  2DC6               	goto	u1495
  3155  05CC  1C72               	btfss	??_adc,0
  3156  05CD  2DD1               	goto	u1500
  3157  05CE  0021               	movlb	1	; select bank1
  3158  05CF  169D               	bsf	29,5	;volatile
  3159  05D0  2DD3               	goto	l2010
  3160  05D1                     u1500:	
  3161  05D1  0021               	movlb	1	; select bank1
  3162  05D2  129D               	bcf	29,5	;volatile
  3163  05D3                     l2010:	
  3164                           
  3165                           ;powerspy.c: 415: CHS4 = (bit) (src >> 4) & 0x01;
  3166  05D3  0873               	movf	adc@src,w
  3167  05D4  00F2               	movwf	??_adc
  3168  05D5  3004               	movlw	4
  3169  05D6                     u1525:	
  3170  05D6  1003               	clrc
  3171  05D7  1BF2               	btfsc	??_adc,7
  3172  05D8  1403               	setc
  3173  05D9  0CF2               	rrf	??_adc,f
  3174  05DA  0B89               	decfsz	9,f
  3175  05DB  2DD6               	goto	u1525
  3176  05DC  1C72               	btfss	??_adc,0
  3177  05DD  2DE1               	goto	u1530
  3178  05DE  0021               	movlb	1	; select bank1
  3179  05DF  171D               	bsf	29,6	;volatile
  3180  05E0  2DE3               	goto	u1544
  3181  05E1                     u1530:	
  3182  05E1  0021               	movlb	1	; select bank1
  3183  05E2  131D               	bcf	29,6	;volatile
  3184  05E3                     u1544:	
  3185                           
  3186                           ;powerspy.c: 417: _delay((unsigned long)((5)*(32000000/4000000.0)));
  3187  05E3  300D               	movlw	13
  3188  05E4  00F2               	movwf	??_adc
  3189  05E5                     u3157:	
  3190  05E5  0BF2               	decfsz	??_adc,f
  3191  05E6  2DE5               	goto	u3157
  3192                           
  3193                           ;powerspy.c: 420: GO_nDONE = 1;
  3194  05E7  0021               	movlb	1	; select bank1
  3195  05E8  149D               	bsf	29,1	;volatile
  3196  05E9                     l274:	
  3197                           ;powerspy.c: 421: while (GO_nDONE);
  3198                           
  3199  05E9  1C9D               	btfss	29,1	;volatile
  3200  05EA  0008               	return
  3201  05EB  2DE9               	goto	l274
  3202  05EC                     __end_of_adc:	
  3203                           
  3204                           	psect	text14
  3205  074D                     __ptext14:	
  3206 ;; *************** function ___wmul *****************
  3207 ;; Defined at:
  3208 ;;		line 15 in file "/Applications/microchip/xc8/v1.37/sources/common/Umul16.c"
  3209 ;; Parameters:    Size  Location     Type
  3210 ;;  multiplier      2    0[BANK0 ] unsigned int 
  3211 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  3212 ;; Auto vars:     Size  Location     Type
  3213 ;;  product         2    8[COMMON] unsigned int 
  3214 ;; Return value:  Size  Location     Type
  3215 ;;                  2    0[BANK0 ] unsigned int 
  3216 ;; Registers used:
  3217 ;;		wreg, status,2, status,0
  3218 ;; Tracked objects:
  3219 ;;		On entry : 0/0
  3220 ;;		On exit  : 0/0
  3221 ;;		Unchanged: 0/0
  3222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3223 ;;      Params:         0       4       0       0       0       0
  3224 ;;      Locals:         2       0       0       0       0       0
  3225 ;;      Temps:          0       0       0       0       0       0
  3226 ;;      Totals:         2       4       0       0       0       0
  3227 ;;Total ram usage:        6 bytes
  3228 ;; Hardware stack levels used:    1
  3229 ;; Hardware stack levels required when called:    1
  3230 ;; This function calls:
  3231 ;;		Nothing
  3232 ;; This function is called by:
  3233 ;;		_readCurrent
  3234 ;;		_main
  3235 ;; This function uses a non-reentrant model
  3236 ;;
  3237                           
  3238                           
  3239                           ;psect for function ___wmul
  3240  074D                     ___wmul:	
  3241                           
  3242                           ;incstack = 0
  3243                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3244  074D  01F8               	clrf	___wmul@product
  3245  074E  01F9               	clrf	___wmul@product+1
  3246  074F                     l3036:	
  3247  074F  0020               	movlb	0	; select bank0
  3248  0750  1C20               	btfss	___wmul@multiplier,0
  3249  0751  2F56               	goto	l604
  3250  0752  0822               	movf	___wmul@multiplicand,w
  3251  0753  07F8               	addwf	___wmul@product,f
  3252  0754  0823               	movf	___wmul@multiplicand+1,w
  3253  0755  3DF9               	addwfc	___wmul@product+1,f
  3254  0756                     l604:	
  3255  0756  3001               	movlw	1
  3256  0757                     u2855:	
  3257  0757  35A2               	lslf	___wmul@multiplicand,f
  3258  0758  0DA3               	rlf	___wmul@multiplicand+1,f
  3259  0759  0B89               	decfsz	9,f
  3260  075A  2F57               	goto	u2855
  3261  075B  3001               	movlw	1
  3262  075C                     u2865:	
  3263  075C  36A1               	lsrf	___wmul@multiplier+1,f
  3264  075D  0CA0               	rrf	___wmul@multiplier,f
  3265  075E  0B89               	decfsz	9,f
  3266  075F  2F5C               	goto	u2865
  3267  0760  0820               	movf	___wmul@multiplier,w
  3268  0761  0421               	iorwf	___wmul@multiplier+1,w
  3269  0762  1D03               	btfss	3,2
  3270  0763  2F4F               	goto	l3036
  3271  0764  0879               	movf	___wmul@product+1,w
  3272  0765  00A1               	movwf	?___wmul+1
  3273  0766  0878               	movf	___wmul@product,w
  3274  0767  00A0               	movwf	?___wmul
  3275  0768  0008               	return
  3276  0769                     __end_of___wmul:	
  3277                           
  3278                           	psect	text15
  3279  06C1                     __ptext15:	
  3280 ;; *************** function ___tmul *****************
  3281 ;; Defined at:
  3282 ;;		line 15 in file "/Applications/microchip/xc8/v1.37/sources/common/Umul24.c"
  3283 ;; Parameters:    Size  Location     Type
  3284 ;;  multiplier      3    4[BANK0 ] unsigned um
  3285 ;;  multiplicand    3    7[BANK0 ] unsigned um
  3286 ;; Auto vars:     Size  Location     Type
  3287 ;;  product         3   10[BANK0 ] unsigned um
  3288 ;; Return value:  Size  Location     Type
  3289 ;;                  3    4[BANK0 ] unsigned um
  3290 ;; Registers used:
  3291 ;;		wreg, status,2, status,0
  3292 ;; Tracked objects:
  3293 ;;		On entry : 0/0
  3294 ;;		On exit  : 0/0
  3295 ;;		Unchanged: 0/0
  3296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3297 ;;      Params:         0       6       0       0       0       0
  3298 ;;      Locals:         0       3       0       0       0       0
  3299 ;;      Temps:          0       0       0       0       0       0
  3300 ;;      Totals:         0       9       0       0       0       0
  3301 ;;Total ram usage:        9 bytes
  3302 ;; Hardware stack levels used:    1
  3303 ;; Hardware stack levels required when called:    1
  3304 ;; This function calls:
  3305 ;;		Nothing
  3306 ;; This function is called by:
  3307 ;;		_readCurrent
  3308 ;;		_main
  3309 ;; This function uses a non-reentrant model
  3310 ;;
  3311                           
  3312                           
  3313                           ;psect for function ___tmul
  3314  06C1                     ___tmul:	
  3315                           
  3316                           ;incstack = 0
  3317                           ; Regs used in ___tmul: [wreg+status,2+status,0]
  3318  06C1  3000               	movlw	0
  3319  06C2  0020               	movlb	0	; select bank0
  3320  06C3  00AA               	movwf	___tmul@product
  3321  06C4  3000               	movlw	0
  3322  06C5  00AB               	movwf	___tmul@product+1
  3323  06C6  3000               	movlw	0
  3324  06C7  00AC               	movwf	___tmul@product+2
  3325  06C8                     l2310:	
  3326  06C8  1C24               	btfss	___tmul@multiplier,0
  3327  06C9  2ED0               	goto	l2314
  3328  06CA  0827               	movf	___tmul@multiplicand,w
  3329  06CB  07AA               	addwf	___tmul@product,f
  3330  06CC  0828               	movf	___tmul@multiplicand+1,w
  3331  06CD  3DAB               	addwfc	___tmul@product+1,f
  3332  06CE  0829               	movf	___tmul@multiplicand+2,w
  3333  06CF  3DAC               	addwfc	___tmul@product+2,f
  3334  06D0                     l2314:	
  3335  06D0  3001               	movlw	1
  3336  06D1                     u1855:	
  3337  06D1  35A7               	lslf	___tmul@multiplicand,f
  3338  06D2  0DA8               	rlf	___tmul@multiplicand+1,f
  3339  06D3  0DA9               	rlf	___tmul@multiplicand+2,f
  3340  06D4  0B89               	decfsz	9,f
  3341  06D5  2ED1               	goto	u1855
  3342  06D6  3001               	movlw	1
  3343  06D7                     u1865:	
  3344  06D7  36A6               	lsrf	___tmul@multiplier+2,f
  3345  06D8  0CA5               	rrf	___tmul@multiplier+1,f
  3346  06D9  0CA4               	rrf	___tmul@multiplier,f
  3347  06DA  0B89               	decfsz	9,f
  3348  06DB  2ED7               	goto	u1865
  3349  06DC  0826               	movf	___tmul@multiplier+2,w
  3350  06DD  0425               	iorwf	___tmul@multiplier+1,w
  3351  06DE  0424               	iorwf	___tmul@multiplier,w
  3352  06DF  1D03               	skipz
  3353  06E0  2EC8               	goto	l2310
  3354  06E1  082A               	movf	___tmul@product,w
  3355  06E2  00A4               	movwf	?___tmul
  3356  06E3  082B               	movf	___tmul@product+1,w
  3357  06E4  00A5               	movwf	?___tmul+1
  3358  06E5  082C               	movf	___tmul@product+2,w
  3359  06E6  00A6               	movwf	?___tmul+2
  3360  06E7  0008               	return
  3361  06E8                     __end_of___tmul:	
  3362                           
  3363                           	psect	text16
  3364  042D                     __ptext16:	
  3365 ;; *************** function ___atdiv *****************
  3366 ;; Defined at:
  3367 ;;		line 6 in file "/Applications/microchip/xc8/v1.37/sources/common/atdiv.c"
  3368 ;; Parameters:    Size  Location     Type
  3369 ;;  divisor         3   13[BANK0 ] m
  3370 ;;  dividend        3   16[BANK0 ] m
  3371 ;; Auto vars:     Size  Location     Type
  3372 ;;  quotient        3   22[BANK0 ] m
  3373 ;;  sign            1   21[BANK0 ] unsigned char 
  3374 ;;  counter         1   20[BANK0 ] unsigned char 
  3375 ;; Return value:  Size  Location     Type
  3376 ;;                  3   13[BANK0 ] m
  3377 ;; Registers used:
  3378 ;;		wreg, status,2, status,0
  3379 ;; Tracked objects:
  3380 ;;		On entry : 0/0
  3381 ;;		On exit  : 0/0
  3382 ;;		Unchanged: 0/0
  3383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3384 ;;      Params:         0       6       0       0       0       0
  3385 ;;      Locals:         0       5       0       0       0       0
  3386 ;;      Temps:          0       1       0       0       0       0
  3387 ;;      Totals:         0      12       0       0       0       0
  3388 ;;Total ram usage:       12 bytes
  3389 ;; Hardware stack levels used:    1
  3390 ;; Hardware stack levels required when called:    1
  3391 ;; This function calls:
  3392 ;;		Nothing
  3393 ;; This function is called by:
  3394 ;;		_readCurrent
  3395 ;;		_main
  3396 ;; This function uses a non-reentrant model
  3397 ;;
  3398                           
  3399                           
  3400                           ;psect for function ___atdiv
  3401  042D                     ___atdiv:	
  3402                           
  3403                           ;incstack = 0
  3404                           ; Regs used in ___atdiv: [wreg+status,2+status,0]
  3405  042D  0020               	movlb	0	; select bank0
  3406  042E  01B5               	clrf	___atdiv@sign
  3407  042F  1FAF               	btfss	___atdiv@divisor+2,7
  3408  0430  2C3B               	goto	l694
  3409  0431  09AD               	comf	___atdiv@divisor,f
  3410  0432  09AE               	comf	___atdiv@divisor+1,f
  3411  0433  09AF               	comf	___atdiv@divisor+2,f
  3412  0434  0AAD               	incf	___atdiv@divisor,f
  3413  0435  1903               	skipnz
  3414  0436  0AAE               	incf	___atdiv@divisor+1,f
  3415  0437  1903               	skipnz
  3416  0438  0AAF               	incf	___atdiv@divisor+2,f
  3417  0439  01B5               	clrf	___atdiv@sign
  3418  043A  0AB5               	incf	___atdiv@sign,f
  3419  043B                     l694:	
  3420  043B  1FB2               	btfss	___atdiv@dividend+2,7
  3421  043C  2C49               	goto	l2332
  3422  043D  09B0               	comf	___atdiv@dividend,f
  3423  043E  09B1               	comf	___atdiv@dividend+1,f
  3424  043F  09B2               	comf	___atdiv@dividend+2,f
  3425  0440  0AB0               	incf	___atdiv@dividend,f
  3426  0441  1903               	skipnz
  3427  0442  0AB1               	incf	___atdiv@dividend+1,f
  3428  0443  1903               	skipnz
  3429  0444  0AB2               	incf	___atdiv@dividend+2,f
  3430  0445  3001               	movlw	1
  3431  0446  00B3               	movwf	??___atdiv
  3432  0447  0833               	movf	??___atdiv,w
  3433  0448  06B5               	xorwf	___atdiv@sign,f
  3434  0449                     l2332:	
  3435  0449  3000               	movlw	0
  3436  044A  00B6               	movwf	___atdiv@quotient
  3437  044B  3000               	movlw	0
  3438  044C  00B7               	movwf	___atdiv@quotient+1
  3439  044D  3000               	movlw	0
  3440  044E  00B8               	movwf	___atdiv@quotient+2
  3441  044F  082F               	movf	___atdiv@divisor+2,w
  3442  0450  042E               	iorwf	___atdiv@divisor+1,w
  3443  0451  042D               	iorwf	___atdiv@divisor,w
  3444  0452  1903               	skipnz
  3445  0453  2C86               	goto	l2354
  3446  0454  01B4               	clrf	___atdiv@counter
  3447  0455  0AB4               	incf	___atdiv@counter,f
  3448  0456                     l2340:	
  3449  0456  1BAF               	btfsc	___atdiv@divisor+2,7
  3450  0457  2C63               	goto	l2342
  3451  0458  3001               	movlw	1
  3452  0459                     u1915:	
  3453  0459  35AD               	lslf	___atdiv@divisor,f
  3454  045A  0DAE               	rlf	___atdiv@divisor+1,f
  3455  045B  0DAF               	rlf	___atdiv@divisor+2,f
  3456  045C  0B89               	decfsz	9,f
  3457  045D  2C59               	goto	u1915
  3458  045E  3001               	movlw	1
  3459  045F  00B3               	movwf	??___atdiv
  3460  0460  0833               	movf	??___atdiv,w
  3461  0461  07B4               	addwf	___atdiv@counter,f
  3462  0462  2C56               	goto	l2340
  3463  0463                     l2342:	
  3464  0463  3001               	movlw	1
  3465  0464                     u1935:	
  3466  0464  35B6               	lslf	___atdiv@quotient,f
  3467  0465  0DB7               	rlf	___atdiv@quotient+1,f
  3468  0466  0DB8               	rlf	___atdiv@quotient+2,f
  3469  0467  0B89               	decfsz	9,f
  3470  0468  2C64               	goto	u1935
  3471  0469  082F               	movf	___atdiv@divisor+2,w
  3472  046A  0232               	subwf	___atdiv@dividend+2,w
  3473  046B  1D03               	skipz
  3474  046C  2C73               	goto	u1945
  3475  046D  082E               	movf	___atdiv@divisor+1,w
  3476  046E  0231               	subwf	___atdiv@dividend+1,w
  3477  046F  1D03               	skipz
  3478  0470  2C73               	goto	u1945
  3479  0471  082D               	movf	___atdiv@divisor,w
  3480  0472  0230               	subwf	___atdiv@dividend,w
  3481  0473                     u1945:	
  3482  0473  1C03               	skipc
  3483  0474  2C7C               	goto	l2350
  3484  0475  082D               	movf	___atdiv@divisor,w
  3485  0476  02B0               	subwf	___atdiv@dividend,f
  3486  0477  082E               	movf	___atdiv@divisor+1,w
  3487  0478  3BB1               	subwfb	___atdiv@dividend+1,f
  3488  0479  082F               	movf	___atdiv@divisor+2,w
  3489  047A  3BB2               	subwfb	___atdiv@dividend+2,f
  3490  047B  1436               	bsf	___atdiv@quotient,0
  3491  047C                     l2350:	
  3492  047C  3001               	movlw	1
  3493  047D                     u1955:	
  3494  047D  36AF               	lsrf	___atdiv@divisor+2,f
  3495  047E  0CAE               	rrf	___atdiv@divisor+1,f
  3496  047F  0CAD               	rrf	___atdiv@divisor,f
  3497  0480  0B89               	decfsz	9,f
  3498  0481  2C7D               	goto	u1955
  3499  0482  3001               	movlw	1
  3500  0483  02B4               	subwf	___atdiv@counter,f
  3501  0484  1D03               	btfss	3,2
  3502  0485  2C63               	goto	l2342
  3503  0486                     l2354:	
  3504  0486  0835               	movf	___atdiv@sign,w
  3505  0487  1903               	btfsc	3,2
  3506  0488  2C91               	goto	l2358
  3507  0489  09B6               	comf	___atdiv@quotient,f
  3508  048A  09B7               	comf	___atdiv@quotient+1,f
  3509  048B  09B8               	comf	___atdiv@quotient+2,f
  3510  048C  0AB6               	incf	___atdiv@quotient,f
  3511  048D  1903               	skipnz
  3512  048E  0AB7               	incf	___atdiv@quotient+1,f
  3513  048F  1903               	skipnz
  3514  0490  0AB8               	incf	___atdiv@quotient+2,f
  3515  0491                     l2358:	
  3516  0491  0836               	movf	___atdiv@quotient,w
  3517  0492  00AD               	movwf	?___atdiv
  3518  0493  0837               	movf	___atdiv@quotient+1,w
  3519  0494  00AE               	movwf	?___atdiv+1
  3520  0495  0838               	movf	___atdiv@quotient+2,w
  3521  0496  00AF               	movwf	?___atdiv+2
  3522  0497  0008               	return
  3523  0498                     __end_of___atdiv:	
  3524                           
  3525                           	psect	text17
  3526  0FF5                     __ptext17:	
  3527 ;; *************** function _initTMR1 *****************
  3528 ;; Defined at:
  3529 ;;		line 166 in file "powerspy.c"
  3530 ;; Parameters:    Size  Location     Type
  3531 ;;		None
  3532 ;; Auto vars:     Size  Location     Type
  3533 ;;		None
  3534 ;; Return value:  Size  Location     Type
  3535 ;;                  1    wreg      void 
  3536 ;; Registers used:
  3537 ;;		None
  3538 ;; Tracked objects:
  3539 ;;		On entry : 0/0
  3540 ;;		On exit  : 0/0
  3541 ;;		Unchanged: 0/0
  3542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3543 ;;      Params:         0       0       0       0       0       0
  3544 ;;      Locals:         0       0       0       0       0       0
  3545 ;;      Temps:          0       0       0       0       0       0
  3546 ;;      Totals:         0       0       0       0       0       0
  3547 ;;Total ram usage:        0 bytes
  3548 ;; Hardware stack levels used:    1
  3549 ;; Hardware stack levels required when called:    1
  3550 ;; This function calls:
  3551 ;;		Nothing
  3552 ;; This function is called by:
  3553 ;;		_main
  3554 ;; This function uses a non-reentrant model
  3555 ;;
  3556                           
  3557                           
  3558                           ;psect for function _initTMR1
  3559  0FF5                     _initTMR1:	
  3560                           
  3561                           ;powerspy.c: 179: TMR1CS0 = 0;
  3562                           
  3563                           ;incstack = 0
  3564                           ; Regs used in _initTMR1: []
  3565  0FF5  0020               	movlb	0	; select bank0
  3566  0FF6  1318               	bcf	24,6	;volatile
  3567                           
  3568                           ;powerspy.c: 180: TMR1CS1 = 0;
  3569  0FF7  1398               	bcf	24,7	;volatile
  3570                           
  3571                           ;powerspy.c: 184: T1CKPS0 = 1;
  3572  0FF8  1618               	bsf	24,4	;volatile
  3573                           
  3574                           ;powerspy.c: 185: T1CKPS1 = 0;
  3575  0FF9  1298               	bcf	24,5	;volatile
  3576                           
  3577                           ;powerspy.c: 187: TMR1IE = 1;
  3578  0FFA  0021               	movlb	1	; select bank1
  3579  0FFB  1411               	bsf	17,0	;volatile
  3580                           
  3581                           ;powerspy.c: 188: TMR1IF = 0;
  3582  0FFC  0020               	movlb	0	; select bank0
  3583  0FFD  1011               	bcf	17,0	;volatile
  3584                           
  3585                           ;powerspy.c: 190: TMR1ON = 1;
  3586  0FFE  1418               	bsf	24,0	;volatile
  3587  0FFF  0008               	return
  3588  1000                     __end_of_initTMR1:	
  3589                           
  3590                           	psect	text18
  3591  070E                     __ptext18:	
  3592 ;; *************** function _initPins *****************
  3593 ;; Defined at:
  3594 ;;		line 63 in file "powerspy.c"
  3595 ;; Parameters:    Size  Location     Type
  3596 ;;		None
  3597 ;; Auto vars:     Size  Location     Type
  3598 ;;		None
  3599 ;; Return value:  Size  Location     Type
  3600 ;;                  1    wreg      void 
  3601 ;; Registers used:
  3602 ;;		wreg, status,2
  3603 ;; Tracked objects:
  3604 ;;		On entry : 0/0
  3605 ;;		On exit  : 0/0
  3606 ;;		Unchanged: 0/0
  3607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3608 ;;      Params:         0       0       0       0       0       0
  3609 ;;      Locals:         0       0       0       0       0       0
  3610 ;;      Temps:          0       0       0       0       0       0
  3611 ;;      Totals:         0       0       0       0       0       0
  3612 ;;Total ram usage:        0 bytes
  3613 ;; Hardware stack levels used:    1
  3614 ;; Hardware stack levels required when called:    1
  3615 ;; This function calls:
  3616 ;;		Nothing
  3617 ;; This function is called by:
  3618 ;;		_main
  3619 ;; This function uses a non-reentrant model
  3620 ;;
  3621                           
  3622                           
  3623                           ;psect for function _initPins
  3624  070E                     _initPins:	
  3625                           
  3626                           ;powerspy.c: 65: PORTA = 0b00000000;
  3627                           
  3628                           ;incstack = 0
  3629                           ; Regs used in _initPins: [wreg+status,2]
  3630  070E  0020               	movlb	0	; select bank0
  3631  070F  018C               	clrf	12	;volatile
  3632                           
  3633                           ;powerspy.c: 66: ANSELA = 0b00000111;
  3634  0710  3007               	movlw	7
  3635  0711  0023               	movlb	3	; select bank3
  3636  0712  008C               	movwf	12	;volatile
  3637                           
  3638                           ;powerspy.c: 67: TRISA = 0b00000111;
  3639  0713  3007               	movlw	7
  3640  0714  0021               	movlb	1	; select bank1
  3641  0715  008C               	movwf	12	;volatile
  3642                           
  3643                           ;powerspy.c: 69: PORTB = 0b00000000;
  3644  0716  0020               	movlb	0	; select bank0
  3645  0717  018D               	clrf	13	;volatile
  3646                           
  3647                           ;powerspy.c: 70: ANSELB = 0b00110000;
  3648  0718  3030               	movlw	48
  3649  0719  0023               	movlb	3	; select bank3
  3650  071A  008D               	movwf	13	;volatile
  3651                           
  3652                           ;powerspy.c: 71: TRISB = 0b00111010;
  3653  071B  303A               	movlw	58
  3654  071C  0021               	movlb	1	; select bank1
  3655  071D  008D               	movwf	13	;volatile
  3656                           
  3657                           ;powerspy.c: 73: nWPUEN = 0;
  3658  071E  1395               	bcf	21,7	;volatile
  3659                           
  3660                           ;powerspy.c: 74: WPUB = 0b00001000;
  3661  071F  3008               	movlw	8
  3662  0720  0024               	movlb	4	; select bank4
  3663  0721  008D               	movwf	13	;volatile
  3664                           
  3665                           ;powerspy.c: 78: SCS0 = 0;
  3666  0722  0021               	movlb	1	; select bank1
  3667  0723  1019               	bcf	25,0	;volatile
  3668                           
  3669                           ;powerspy.c: 79: SCS1 = 0;
  3670  0724  1099               	bcf	25,1	;volatile
  3671                           
  3672                           ;powerspy.c: 81: IRCF0 = 0;
  3673  0725  1199               	bcf	25,3	;volatile
  3674                           
  3675                           ;powerspy.c: 82: IRCF1 = 1;
  3676  0726  1619               	bsf	25,4	;volatile
  3677                           
  3678                           ;powerspy.c: 83: IRCF2 = 1;
  3679  0727  1699               	bsf	25,5	;volatile
  3680                           
  3681                           ;powerspy.c: 84: IRCF3 = 1;
  3682  0728  1719               	bsf	25,6	;volatile
  3683                           
  3684                           ;powerspy.c: 86: SPLLEN = 1;
  3685  0729  1799               	bsf	25,7	;volatile
  3686                           
  3687                           ;powerspy.c: 89: IOCBN5 = 1;
  3688  072A  0027               	movlb	7	; select bank7
  3689  072B  1695               	bsf	21,5	;volatile
  3690                           
  3691                           ;powerspy.c: 90: IOCIE = 1;
  3692  072C  158B               	bsf	11,3	;volatile
  3693  072D  0008               	return
  3694  072E                     __end_of_initPins:	
  3695                           
  3696                           	psect	text19
  3697  072E                     __ptext19:	
  3698 ;; *************** function _initPWMTMR4 *****************
  3699 ;; Defined at:
  3700 ;;		line 222 in file "powerspy.c"
  3701 ;; Parameters:    Size  Location     Type
  3702 ;;		None
  3703 ;; Auto vars:     Size  Location     Type
  3704 ;;		None
  3705 ;; Return value:  Size  Location     Type
  3706 ;;                  1    wreg      void 
  3707 ;; Registers used:
  3708 ;;		wreg, status,2, status,0
  3709 ;; Tracked objects:
  3710 ;;		On entry : 0/0
  3711 ;;		On exit  : 0/0
  3712 ;;		Unchanged: 0/0
  3713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3714 ;;      Params:         0       0       0       0       0       0
  3715 ;;      Locals:         0       0       0       0       0       0
  3716 ;;      Temps:          1       0       0       0       0       0
  3717 ;;      Totals:         1       0       0       0       0       0
  3718 ;;Total ram usage:        1 bytes
  3719 ;; Hardware stack levels used:    1
  3720 ;; Hardware stack levels required when called:    1
  3721 ;; This function calls:
  3722 ;;		Nothing
  3723 ;; This function is called by:
  3724 ;;		_main
  3725 ;; This function uses a non-reentrant model
  3726 ;;
  3727                           
  3728                           
  3729                           ;psect for function _initPWMTMR4
  3730  072E                     _initPWMTMR4:	
  3731                           
  3732                           ;powerspy.c: 226: CCP1SEL = 1;
  3733                           
  3734                           ;incstack = 0
  3735                           ; Regs used in _initPWMTMR4: [wreg+status,2+status,0]
  3736  072E  0022               	movlb	2	; select bank2
  3737  072F  141D               	bsf	29,0	;volatile
  3738                           
  3739                           ;powerspy.c: 229: TRISBbits.TRISB0 = 1;
  3740  0730  0021               	movlb	1	; select bank1
  3741  0731  140D               	bsf	13,0	;volatile
  3742                           
  3743                           ;powerspy.c: 232: PR2 = 0xff;
  3744  0732  30FF               	movlw	255
  3745  0733  0020               	movlb	0	; select bank0
  3746  0734  009B               	movwf	27	;volatile
  3747                           
  3748                           ;powerspy.c: 233: CCP1CON = 0b00110000;
  3749  0735  3030               	movlw	48
  3750  0736  0025               	movlb	5	; select bank5
  3751  0737  0093               	movwf	19	;volatile
  3752                           
  3753                           ;powerspy.c: 236: CCP1CON |= 0b00001100;
  3754  0738  300C               	movlw	12
  3755  0739  00F2               	movwf	??_initPWMTMR4
  3756  073A  0872               	movf	??_initPWMTMR4,w
  3757  073B  0493               	iorwf	19,f	;volatile
  3758                           
  3759                           ;powerspy.c: 242: CCPR1L = 0x7f;
  3760  073C  307F               	movlw	127
  3761  073D  0091               	movwf	17	;volatile
  3762                           
  3763                           ;powerspy.c: 245: DC1B0 = 1;
  3764  073E  1613               	bsf	19,4	;volatile
  3765                           
  3766                           ;powerspy.c: 246: DC1B1 = 1;
  3767  073F  1693               	bsf	19,5	;volatile
  3768                           
  3769                           ;powerspy.c: 250: C1TSEL0 = 1;
  3770  0740  141E               	bsf	30,0	;volatile
  3771                           
  3772                           ;powerspy.c: 251: C1TSEL1 = 0;
  3773  0741  109E               	bcf	30,1	;volatile
  3774                           
  3775                           ;powerspy.c: 252: TMR4IF = 0;
  3776  0742  0020               	movlb	0	; select bank0
  3777  0743  1093               	bcf	19,1	;volatile
  3778                           
  3779                           ;powerspy.c: 255: T4CKPS0 = 0;
  3780  0744  0028               	movlb	8	; select bank8
  3781  0745  1017               	bcf	23,0	;volatile
  3782                           
  3783                           ;powerspy.c: 256: T4CKPS1 = 0;
  3784  0746  1097               	bcf	23,1	;volatile
  3785                           
  3786                           ;powerspy.c: 258: TMR4ON = 1;
  3787  0747  1517               	bsf	23,2	;volatile
  3788                           
  3789                           ;powerspy.c: 262: TMR4IF = 0;
  3790  0748  0020               	movlb	0	; select bank0
  3791  0749  1093               	bcf	19,1	;volatile
  3792                           
  3793                           ;powerspy.c: 264: TRISBbits.TRISB0 = 0;
  3794  074A  0021               	movlb	1	; select bank1
  3795  074B  100D               	bcf	13,0	;volatile
  3796  074C  0008               	return
  3797  074D                     __end_of_initPWMTMR4:	
  3798                           
  3799                           	psect	text20
  3800  0FCC                     __ptext20:	
  3801 ;; *************** function _initMessaging *****************
  3802 ;; Defined at:
  3803 ;;		line 16 in file "message.c"
  3804 ;; Parameters:    Size  Location     Type
  3805 ;;		None
  3806 ;; Auto vars:     Size  Location     Type
  3807 ;;		None
  3808 ;; Return value:  Size  Location     Type
  3809 ;;                  1    wreg      void 
  3810 ;; Registers used:
  3811 ;;		status,2
  3812 ;; Tracked objects:
  3813 ;;		On entry : 0/0
  3814 ;;		On exit  : 0/0
  3815 ;;		Unchanged: 0/0
  3816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3817 ;;      Params:         0       0       0       0       0       0
  3818 ;;      Locals:         0       0       0       0       0       0
  3819 ;;      Temps:          0       0       0       0       0       0
  3820 ;;      Totals:         0       0       0       0       0       0
  3821 ;;Total ram usage:        0 bytes
  3822 ;; Hardware stack levels used:    1
  3823 ;; Hardware stack levels required when called:    1
  3824 ;; This function calls:
  3825 ;;		Nothing
  3826 ;; This function is called by:
  3827 ;;		_main
  3828 ;; This function uses a non-reentrant model
  3829 ;;
  3830                           
  3831                           
  3832                           ;psect for function _initMessaging
  3833  0FCC                     _initMessaging:	
  3834                           
  3835                           ;message.c: 18: buffpos = -1;
  3836                           
  3837                           ;incstack = 0
  3838                           ; Regs used in _initMessaging: [status,2]
  3839  0FCC  01FA               	clrf	_buffpos
  3840  0FCD  03FA               	decf	_buffpos,f
  3841                           
  3842                           ;message.c: 19: readpos = 0;
  3843  0FCE  01FB               	clrf	_readpos
  3844                           
  3845                           ;message.c: 20: reading = 0;
  3846  0FCF  0020               	movlb	0	; select bank0
  3847  0FD0  01E9               	clrf	_reading
  3848  0FD1  0008               	return
  3849  0FD2                     __end_of_initMessaging:	
  3850                           
  3851                           	psect	text21
  3852  0FD8                     __ptext21:	
  3853 ;; *************** function _initFVR *****************
  3854 ;; Defined at:
  3855 ;;		line 196 in file "powerspy.c"
  3856 ;; Parameters:    Size  Location     Type
  3857 ;;		None
  3858 ;; Auto vars:     Size  Location     Type
  3859 ;;		None
  3860 ;; Return value:  Size  Location     Type
  3861 ;;                  1    wreg      void 
  3862 ;; Registers used:
  3863 ;;		None
  3864 ;; Tracked objects:
  3865 ;;		On entry : 0/0
  3866 ;;		On exit  : 0/0
  3867 ;;		Unchanged: 0/0
  3868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3869 ;;      Params:         0       0       0       0       0       0
  3870 ;;      Locals:         0       0       0       0       0       0
  3871 ;;      Temps:          0       0       0       0       0       0
  3872 ;;      Totals:         0       0       0       0       0       0
  3873 ;;Total ram usage:        0 bytes
  3874 ;; Hardware stack levels used:    1
  3875 ;; Hardware stack levels required when called:    1
  3876 ;; This function calls:
  3877 ;;		Nothing
  3878 ;; This function is called by:
  3879 ;;		_main
  3880 ;; This function uses a non-reentrant model
  3881 ;;
  3882                           
  3883                           
  3884                           ;psect for function _initFVR
  3885  0FD8                     _initFVR:	
  3886                           
  3887                           ;powerspy.c: 208: ADFVR0 = 1;
  3888                           
  3889                           ;incstack = 0
  3890                           ; Regs used in _initFVR: []
  3891  0FD8  0022               	movlb	2	; select bank2
  3892  0FD9  1417               	bsf	23,0	;volatile
  3893                           
  3894                           ;powerspy.c: 209: ADFVR1 = 0;
  3895  0FDA  1097               	bcf	23,1	;volatile
  3896                           
  3897                           ;powerspy.c: 211: CDAFVR0 = 0;
  3898  0FDB  1117               	bcf	23,2	;volatile
  3899                           
  3900                           ;powerspy.c: 212: CDAFVR1 = 0;
  3901  0FDC  1197               	bcf	23,3	;volatile
  3902                           
  3903                           ;powerspy.c: 213: FVREN = 1;
  3904  0FDD  1797               	bsf	23,7	;volatile
  3905  0FDE                     l253:	
  3906                           ;powerspy.c: 214: while (!FVRRDY);
  3907                           
  3908  0FDE  1B17               	btfsc	23,6	;volatile
  3909  0FDF  0008               	return
  3910  0FE0  2FDE               	goto	l253
  3911  0FE1                     __end_of_initFVR:	
  3912                           
  3913                           	psect	text22
  3914  07DA                     __ptext22:	
  3915 ;; *************** function _initCOMP2 *****************
  3916 ;; Defined at:
  3917 ;;		line 316 in file "powerspy.c"
  3918 ;; Parameters:    Size  Location     Type
  3919 ;;		None
  3920 ;; Auto vars:     Size  Location     Type
  3921 ;;		None
  3922 ;; Return value:  Size  Location     Type
  3923 ;;                  1    wreg      void 
  3924 ;; Registers used:
  3925 ;;		None
  3926 ;; Tracked objects:
  3927 ;;		On entry : 0/0
  3928 ;;		On exit  : 0/0
  3929 ;;		Unchanged: 0/0
  3930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3931 ;;      Params:         0       0       0       0       0       0
  3932 ;;      Locals:         0       0       0       0       0       0
  3933 ;;      Temps:          0       0       0       0       0       0
  3934 ;;      Totals:         0       0       0       0       0       0
  3935 ;;Total ram usage:        0 bytes
  3936 ;; Hardware stack levels used:    1
  3937 ;; Hardware stack levels required when called:    1
  3938 ;; This function calls:
  3939 ;;		Nothing
  3940 ;; This function is called by:
  3941 ;;		_main
  3942 ;; This function uses a non-reentrant model
  3943 ;;
  3944                           
  3945                           
  3946                           ;psect for function _initCOMP2
  3947  07DA                     _initCOMP2:	
  3948                           
  3949                           ;powerspy.c: 321: C2NCH0 = 0;
  3950                           
  3951                           ;incstack = 0
  3952                           ; Regs used in _initCOMP2: []
  3953  07DA  0022               	movlb	2	; select bank2
  3954  07DB  1014               	bcf	20,0	;volatile
  3955                           
  3956                           ;powerspy.c: 322: C2NCH1 = 0;
  3957  07DC  1094               	bcf	20,1	;volatile
  3958                           
  3959                           ;powerspy.c: 335: C2PCH0 = 0;
  3960  07DD  1214               	bcf	20,4	;volatile
  3961                           
  3962                           ;powerspy.c: 336: C2PCH1 = 0;
  3963  07DE  1294               	bcf	20,5	;volatile
  3964                           
  3965                           ;powerspy.c: 339: C2INTP = 1;
  3966  07DF  1794               	bsf	20,7	;volatile
  3967                           
  3968                           ;powerspy.c: 340: C2IE = 1;
  3969  07E0  0021               	movlb	1	; select bank1
  3970  07E1  1712               	bsf	18,6	;volatile
  3971                           
  3972                           ;powerspy.c: 341: C2IF = 0;
  3973  07E2  0020               	movlb	0	; select bank0
  3974  07E3  1312               	bcf	18,6	;volatile
  3975                           
  3976                           ;powerspy.c: 342: C2ON = 1;
  3977  07E4  0022               	movlb	2	; select bank2
  3978  07E5  1793               	bsf	19,7	;volatile
  3979  07E6  0008               	return
  3980  07E7                     __end_of_initCOMP2:	
  3981                           
  3982                           	psect	text23
  3983  07E7                     __ptext23:	
  3984 ;; *************** function _initCOMP1 *****************
  3985 ;; Defined at:
  3986 ;;		line 282 in file "powerspy.c"
  3987 ;; Parameters:    Size  Location     Type
  3988 ;;		None
  3989 ;; Auto vars:     Size  Location     Type
  3990 ;;		None
  3991 ;; Return value:  Size  Location     Type
  3992 ;;                  1    wreg      void 
  3993 ;; Registers used:
  3994 ;;		None
  3995 ;; Tracked objects:
  3996 ;;		On entry : 0/0
  3997 ;;		On exit  : 0/0
  3998 ;;		Unchanged: 0/0
  3999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4000 ;;      Params:         0       0       0       0       0       0
  4001 ;;      Locals:         0       0       0       0       0       0
  4002 ;;      Temps:          0       0       0       0       0       0
  4003 ;;      Totals:         0       0       0       0       0       0
  4004 ;;Total ram usage:        0 bytes
  4005 ;; Hardware stack levels used:    1
  4006 ;; Hardware stack levels required when called:    1
  4007 ;; This function calls:
  4008 ;;		Nothing
  4009 ;; This function is called by:
  4010 ;;		_main
  4011 ;; This function uses a non-reentrant model
  4012 ;;
  4013                           
  4014                           
  4015                           ;psect for function _initCOMP1
  4016  07E7                     _initCOMP1:	
  4017                           
  4018                           ;powerspy.c: 287: C1NCH0 = 1;
  4019                           
  4020                           ;incstack = 0
  4021                           ; Regs used in _initCOMP1: []
  4022  07E7  0022               	movlb	2	; select bank2
  4023  07E8  1412               	bsf	18,0	;volatile
  4024                           
  4025                           ;powerspy.c: 288: C1NCH1 = 0;
  4026  07E9  1092               	bcf	18,1	;volatile
  4027                           
  4028                           ;powerspy.c: 302: C1PCH0 = 0;
  4029  07EA  1212               	bcf	18,4	;volatile
  4030                           
  4031                           ;powerspy.c: 303: C1PCH1 = 1;
  4032  07EB  1692               	bsf	18,5	;volatile
  4033                           
  4034                           ;powerspy.c: 306: C1INTP = 1;
  4035  07EC  1792               	bsf	18,7	;volatile
  4036                           
  4037                           ;powerspy.c: 307: C1IE = 1;
  4038  07ED  0021               	movlb	1	; select bank1
  4039  07EE  1692               	bsf	18,5	;volatile
  4040                           
  4041                           ;powerspy.c: 308: C1IF = 0;
  4042  07EF  0020               	movlb	0	; select bank0
  4043  07F0  1292               	bcf	18,5	;volatile
  4044                           
  4045                           ;powerspy.c: 309: C1ON = 1;
  4046  07F1  0022               	movlb	2	; select bank2
  4047  07F2  1791               	bsf	17,7	;volatile
  4048  07F3  0008               	return
  4049  07F4                     __end_of_initCOMP1:	
  4050                           
  4051                           	psect	text24
  4052  0781                     __ptext24:	
  4053 ;; *************** function _initBT *****************
  4054 ;; Defined at:
  4055 ;;		line 349 in file "powerspy.c"
  4056 ;; Parameters:    Size  Location     Type
  4057 ;;		None
  4058 ;; Auto vars:     Size  Location     Type
  4059 ;;		None
  4060 ;; Return value:  Size  Location     Type
  4061 ;;                  1    wreg      void 
  4062 ;; Registers used:
  4063 ;;		wreg
  4064 ;; Tracked objects:
  4065 ;;		On entry : 0/0
  4066 ;;		On exit  : 0/0
  4067 ;;		Unchanged: 0/0
  4068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4069 ;;      Params:         0       0       0       0       0       0
  4070 ;;      Locals:         0       0       0       0       0       0
  4071 ;;      Temps:          0       0       0       0       0       0
  4072 ;;      Totals:         0       0       0       0       0       0
  4073 ;;Total ram usage:        0 bytes
  4074 ;; Hardware stack levels used:    1
  4075 ;; Hardware stack levels required when called:    1
  4076 ;; This function calls:
  4077 ;;		Nothing
  4078 ;; This function is called by:
  4079 ;;		_main
  4080 ;; This function uses a non-reentrant model
  4081 ;;
  4082                           
  4083                           
  4084                           ;psect for function _initBT
  4085  0781                     _initBT:	
  4086                           
  4087                           ;powerspy.c: 353: RXDTSEL = 0;
  4088                           
  4089                           ;incstack = 0
  4090                           ; Regs used in _initBT: [wreg]
  4091  0781  0022               	movlb	2	; select bank2
  4092  0782  139D               	bcf	29,7	;volatile
  4093                           
  4094                           ;powerspy.c: 354: TXCKSEL = 0;
  4095  0783  101E               	bcf	30,0	;volatile
  4096                           
  4097                           ;powerspy.c: 357: TXEN = 1;
  4098  0784  0023               	movlb	3	; select bank3
  4099  0785  169E               	bsf	30,5	;volatile
  4100                           
  4101                           ;powerspy.c: 358: SYNC = 0;
  4102  0786  121E               	bcf	30,4	;volatile
  4103                           
  4104                           ;powerspy.c: 359: SPEN = 1;
  4105  0787  179D               	bsf	29,7	;volatile
  4106                           
  4107                           ;powerspy.c: 362: CREN = 1;
  4108  0788  161D               	bsf	29,4	;volatile
  4109                           
  4110                           ;powerspy.c: 363: SYNC = 0;
  4111  0789  121E               	bcf	30,4	;volatile
  4112                           
  4113                           ;powerspy.c: 364: SPEN = 1;
  4114  078A  179D               	bsf	29,7	;volatile
  4115                           
  4116                           ;powerspy.c: 367: BRGH = 0;
  4117  078B  111E               	bcf	30,2	;volatile
  4118                           
  4119                           ;powerspy.c: 368: BRG16 = 0;
  4120  078C  119F               	bcf	31,3	;volatile
  4121                           
  4122                           ;powerspy.c: 369: SPBRG = 51;
  4123  078D  3033               	movlw	51
  4124  078E  009B               	movwf	27	;volatile
  4125  078F                     l2520:	
  4126                           ;powerspy.c: 371: while (RCIF) {
  4127                           
  4128  078F  0020               	movlb	0	; select bank0
  4129  0790  1E91               	btfss	17,5	;volatile
  4130  0791  2F95               	goto	l270
  4131                           
  4132                           ;powerspy.c: 372: RCREG;
  4133  0792  0023               	movlb	3	; select bank3
  4134  0793  0819               	movf	25,w	;volatile
  4135  0794  2F8F               	goto	l2520
  4136  0795                     l270:	
  4137                           
  4138                           ;powerspy.c: 373: }
  4139                           ;powerspy.c: 375: RCIE = 1;
  4140  0795  0021               	movlb	1	; select bank1
  4141  0796  1691               	bsf	17,5	;volatile
  4142  0797  0008               	return
  4143  0798                     __end_of_initBT:	
  4144                           
  4145                           	psect	text25
  4146  0FEB                     __ptext25:	
  4147 ;; *************** function _initADC *****************
  4148 ;; Defined at:
  4149 ;;		line 97 in file "powerspy.c"
  4150 ;; Parameters:    Size  Location     Type
  4151 ;;		None
  4152 ;; Auto vars:     Size  Location     Type
  4153 ;;		None
  4154 ;; Return value:  Size  Location     Type
  4155 ;;                  1    wreg      void 
  4156 ;; Registers used:
  4157 ;;		None
  4158 ;; Tracked objects:
  4159 ;;		On entry : 0/0
  4160 ;;		On exit  : 0/0
  4161 ;;		Unchanged: 0/0
  4162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4163 ;;      Params:         0       0       0       0       0       0
  4164 ;;      Locals:         0       0       0       0       0       0
  4165 ;;      Temps:          0       0       0       0       0       0
  4166 ;;      Totals:         0       0       0       0       0       0
  4167 ;;Total ram usage:        0 bytes
  4168 ;; Hardware stack levels used:    1
  4169 ;; Hardware stack levels required when called:    1
  4170 ;; This function calls:
  4171 ;;		Nothing
  4172 ;; This function is called by:
  4173 ;;		_main
  4174 ;; This function uses a non-reentrant model
  4175 ;;
  4176                           
  4177                           
  4178                           ;psect for function _initADC
  4179  0FEB                     _initADC:	
  4180                           
  4181                           ;powerspy.c: 101: ADFM = 0;
  4182                           
  4183                           ;incstack = 0
  4184                           ; Regs used in _initADC: []
  4185  0FEB  0021               	movlb	1	; select bank1
  4186  0FEC  139E               	bcf	30,7	;volatile
  4187                           
  4188                           ;powerspy.c: 105: ADCS0 = 0;
  4189  0FED  121E               	bcf	30,4	;volatile
  4190                           
  4191                           ;powerspy.c: 106: ADCS1 = 1;
  4192  0FEE  169E               	bsf	30,5	;volatile
  4193                           
  4194                           ;powerspy.c: 107: ADCS2 = 1;
  4195  0FEF  171E               	bsf	30,6	;volatile
  4196                           
  4197                           ;powerspy.c: 111: ADPREF0 = 0;
  4198  0FF0  101E               	bcf	30,0	;volatile
  4199                           
  4200                           ;powerspy.c: 112: ADPREF1 = 0;
  4201  0FF1  109E               	bcf	30,1	;volatile
  4202                           
  4203                           ;powerspy.c: 113: ADNREF = 0;
  4204  0FF2  111E               	bcf	30,2	;volatile
  4205                           
  4206                           ;powerspy.c: 115: ADON = 1;
  4207  0FF3  141D               	bsf	29,0	;volatile
  4208  0FF4  0008               	return
  4209  0FF5                     __end_of_initADC:	
  4210                           
  4211                           	psect	text26
  4212  0697                     __ptext26:	
  4213 ;; *************** function _deltaT *****************
  4214 ;; Defined at:
  4215 ;;		line 543 in file "powerspy.c"
  4216 ;; Parameters:    Size  Location     Type
  4217 ;;  tm_low          2    2[COMMON] unsigned short 
  4218 ;;  tm_high         2    4[COMMON] unsigned short 
  4219 ;; Auto vars:     Size  Location     Type
  4220 ;;		None
  4221 ;; Return value:  Size  Location     Type
  4222 ;;                  2    2[COMMON] unsigned short 
  4223 ;; Registers used:
  4224 ;;		wreg, status,2, status,0
  4225 ;; Tracked objects:
  4226 ;;		On entry : 0/0
  4227 ;;		On exit  : 0/0
  4228 ;;		Unchanged: 0/0
  4229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4230 ;;      Params:         4       0       0       0       0       0
  4231 ;;      Locals:         0       0       0       0       0       0
  4232 ;;      Temps:          4       0       0       0       0       0
  4233 ;;      Totals:         8       0       0       0       0       0
  4234 ;;Total ram usage:        8 bytes
  4235 ;; Hardware stack levels used:    1
  4236 ;; Hardware stack levels required when called:    1
  4237 ;; This function calls:
  4238 ;;		Nothing
  4239 ;; This function is called by:
  4240 ;;		_main
  4241 ;; This function uses a non-reentrant model
  4242 ;;
  4243                           
  4244                           
  4245                           ;psect for function _deltaT
  4246  0697                     _deltaT:	
  4247                           
  4248                           ;powerspy.c: 545: if (tm_low < tm_high)
  4249                           
  4250                           ;incstack = 0
  4251                           ; Regs used in _deltaT: [wreg+status,2+status,0]
  4252  0697  0875               	movf	deltaT@tm_high+1,w
  4253  0698  0273               	subwf	deltaT@tm_low+1,w
  4254  0699  1D03               	skipz
  4255  069A  2E9D               	goto	u2215
  4256  069B  0874               	movf	deltaT@tm_high,w
  4257  069C  0272               	subwf	deltaT@tm_low,w
  4258  069D                     u2215:	
  4259  069D  1803               	skipnc
  4260  069E  2EAD               	goto	l2558
  4261                           
  4262                           ;powerspy.c: 546: return tm_high - tm_low;
  4263  069F  0972               	comf	deltaT@tm_low,w
  4264  06A0  00F6               	movwf	??_deltaT
  4265  06A1  0973               	comf	deltaT@tm_low+1,w
  4266  06A2  00F7               	movwf	??_deltaT+1
  4267  06A3  0AF6               	incf	??_deltaT,f
  4268  06A4  1903               	skipnz
  4269  06A5  0AF7               	incf	??_deltaT+1,f
  4270  06A6  0874               	movf	deltaT@tm_high,w
  4271  06A7  0776               	addwf	??_deltaT,w
  4272  06A8  00F2               	movwf	?_deltaT
  4273  06A9  0875               	movf	deltaT@tm_high+1,w
  4274  06AA  3D77               	addwfc	??_deltaT+1,w
  4275  06AB  00F3               	movwf	?_deltaT+1
  4276  06AC  0008               	return
  4277  06AD                     l2558:	
  4278                           
  4279                           ;powerspy.c: 547: else
  4280                           ;powerspy.c: 548: return 0xffff - tm_low + tm_high;
  4281  06AD  0972               	comf	deltaT@tm_low,w
  4282  06AE  00F6               	movwf	??_deltaT
  4283  06AF  0973               	comf	deltaT@tm_low+1,w
  4284  06B0  00F7               	movwf	??_deltaT+1
  4285  06B1  0AF6               	incf	??_deltaT,f
  4286  06B2  1903               	skipnz
  4287  06B3  0AF7               	incf	??_deltaT+1,f
  4288  06B4  0874               	movf	deltaT@tm_high,w
  4289  06B5  0776               	addwf	??_deltaT,w
  4290  06B6  00F8               	movwf	??_deltaT+2
  4291  06B7  0875               	movf	deltaT@tm_high+1,w
  4292  06B8  3D77               	addwfc	??_deltaT+1,w
  4293  06B9  00F9               	movwf	??_deltaT+3
  4294  06BA  0878               	movf	??_deltaT+2,w
  4295  06BB  3EFF               	addlw	255
  4296  06BC  00F2               	movwf	?_deltaT
  4297  06BD  30FF               	movlw	255
  4298  06BE  3D79               	addwfc	??_deltaT+3,w
  4299  06BF  00F3               	movwf	?_deltaT+1
  4300  06C0  0008               	return
  4301  06C1                     __end_of_deltaT:	
  4302                           
  4303                           	psect	text27
  4304  0FE1                     __ptext27:	
  4305 ;; *************** function _cos *****************
  4306 ;; Defined at:
  4307 ;;		line 585 in file "powerspy.c"
  4308 ;; Parameters:    Size  Location     Type
  4309 ;;  us              2    2[BANK0 ] short 
  4310 ;; Auto vars:     Size  Location     Type
  4311 ;;		None
  4312 ;; Return value:  Size  Location     Type
  4313 ;;                  1    wreg      char 
  4314 ;; Registers used:
  4315 ;;		wreg, status,2, status,0, pclath, cstack
  4316 ;; Tracked objects:
  4317 ;;		On entry : 0/0
  4318 ;;		On exit  : 0/0
  4319 ;;		Unchanged: 0/0
  4320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4321 ;;      Params:         0       2       0       0       0       0
  4322 ;;      Locals:         0       0       0       0       0       0
  4323 ;;      Temps:          0       0       0       0       0       0
  4324 ;;      Totals:         0       2       0       0       0       0
  4325 ;;Total ram usage:        2 bytes
  4326 ;; Hardware stack levels used:    1
  4327 ;; Hardware stack levels required when called:    4
  4328 ;; This function calls:
  4329 ;;		_sin
  4330 ;; This function is called by:
  4331 ;;		_main
  4332 ;; This function uses a non-reentrant model
  4333 ;;
  4334                           
  4335                           
  4336                           ;psect for function _cos
  4337  0FE1                     _cos:	
  4338                           
  4339                           ;powerspy.c: 587: return sin((100) + us);
  4340                           
  4341                           ;incstack = 0
  4342                           ; Regs used in _cos: [wreg+status,2+status,0+pclath+cstack]
  4343  0FE1  0020               	movlb	0	; select bank0
  4344  0FE2  0822               	movf	cos@us,w
  4345  0FE3  3E64               	addlw	100
  4346  0FE4  00F7               	movwf	sin@z
  4347  0FE5  3000               	movlw	0
  4348  0FE6  3D23               	addwfc	cos@us+1,w
  4349  0FE7  00F8               	movwf	sin@z+1
  4350  0FE8  3184  2498         	fcall	_sin
  4351  0FEA  0008               	return
  4352  0FEB                     __end_of_cos:	
  4353                           
  4354                           	psect	text28
  4355  0498                     __ptext28:	
  4356 ;; *************** function _sin *****************
  4357 ;; Defined at:
  4358 ;;		line 558 in file "powerspy.c"
  4359 ;; Parameters:    Size  Location     Type
  4360 ;;  z               2    7[COMMON] short 
  4361 ;; Auto vars:     Size  Location     Type
  4362 ;;  buff            2    0[BANK0 ] short 
  4363 ;; Return value:  Size  Location     Type
  4364 ;;                  1    wreg      char 
  4365 ;; Registers used:
  4366 ;;		wreg, status,2, status,0, pclath, cstack
  4367 ;; Tracked objects:
  4368 ;;		On entry : 0/0
  4369 ;;		On exit  : 0/0
  4370 ;;		Unchanged: 0/0
  4371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4372 ;;      Params:         2       0       0       0       0       0
  4373 ;;      Locals:         0       2       0       0       0       0
  4374 ;;      Temps:          1       0       0       0       0       0
  4375 ;;      Totals:         3       2       0       0       0       0
  4376 ;;Total ram usage:        5 bytes
  4377 ;; Hardware stack levels used:    1
  4378 ;; Hardware stack levels required when called:    3
  4379 ;; This function calls:
  4380 ;;		_sin_
  4381 ;; This function is called by:
  4382 ;;		_cos
  4383 ;;		_main
  4384 ;; This function uses a non-reentrant model
  4385 ;;
  4386                           
  4387                           
  4388                           ;psect for function _sin
  4389  0498                     _sin:	
  4390  0498                     l326:	
  4391                           ;powerspy.c: 561: int16_t buff;
  4392                           ;powerspy.c: 562: while (z > ((100)<<2))
  4393                           
  4394                           ;incstack = 0
  4395                           ; Regs used in _sin: [wreg+status,2+status,0+pclath+cstack]
  4396                           
  4397  0498  0878               	movf	sin@z+1,w
  4398  0499  3A80               	xorlw	128
  4399  049A  00F9               	movwf	??_sin
  4400  049B  3081               	movlw	129
  4401  049C  0279               	subwf	??_sin,w
  4402  049D  1D03               	skipz
  4403  049E  2CA1               	goto	u2805
  4404  049F  3091               	movlw	145
  4405  04A0  0277               	subwf	sin@z,w
  4406  04A1                     u2805:	
  4407  04A1  1C03               	btfss	3,0
  4408  04A2  2CA8               	goto	l3006
  4409                           
  4410                           ;powerspy.c: 563: z -= ((100)<<2);
  4411  04A3  3070               	movlw	112
  4412  04A4  07F7               	addwf	sin@z,f
  4413  04A5  30FE               	movlw	254
  4414  04A6  3DF8               	addwfc	sin@z+1,f
  4415  04A7  2C98               	goto	l326
  4416  04A8                     l3006:	
  4417                           
  4418                           ;powerspy.c: 565: if (z > (((100)<<1)) + (100)) {
  4419  04A8  0878               	movf	sin@z+1,w
  4420  04A9  3A80               	xorlw	128
  4421  04AA  00F9               	movwf	??_sin
  4422  04AB  3081               	movlw	129
  4423  04AC  0279               	subwf	??_sin,w
  4424  04AD  1D03               	skipz
  4425  04AE  2CB1               	goto	u2815
  4426  04AF  302D               	movlw	45
  4427  04B0  0277               	subwf	sin@z,w
  4428  04B1                     u2815:	
  4429  04B1  1C03               	skipc
  4430  04B2  2CC2               	goto	l3014
  4431                           
  4432                           ;powerspy.c: 566: buff = ((100)<<2);
  4433  04B3  3090               	movlw	144
  4434  04B4  0020               	movlb	0	; select bank0
  4435  04B5  00A0               	movwf	sin@buff
  4436  04B6  3001               	movlw	1
  4437  04B7  00A1               	movwf	sin@buff+1
  4438                           
  4439                           ;powerspy.c: 567: buff -= z;
  4440  04B8  0877               	movf	sin@z,w
  4441  04B9  02A0               	subwf	sin@buff,f
  4442  04BA  0878               	movf	sin@z+1,w
  4443  04BB  3BA1               	subwfb	sin@buff+1,f
  4444                           
  4445                           ;powerspy.c: 568: return -sin_((int8_t) buff);
  4446  04BC  0820               	movf	sin@buff,w
  4447  04BD  318F  27C7         	fcall	_sin_
  4448  04BF  3AFF               	xorlw	255
  4449  04C0  3E01               	addlw	1
  4450  04C1  0008               	return
  4451  04C2                     l3014:	
  4452                           
  4453                           ;powerspy.c: 569: }
  4454                           ;powerspy.c: 570: if (z > ((100)<<1)) {
  4455  04C2  0878               	movf	sin@z+1,w
  4456  04C3  3A80               	xorlw	128
  4457  04C4  00F9               	movwf	??_sin
  4458  04C5  3080               	movlw	128
  4459  04C6  0279               	subwf	??_sin,w
  4460  04C7  1D03               	skipz
  4461  04C8  2CCB               	goto	u2825
  4462  04C9  30C9               	movlw	201
  4463  04CA  0277               	subwf	sin@z,w
  4464  04CB                     u2825:	
  4465  04CB  1C03               	skipc
  4466  04CC  2CDC               	goto	l3022
  4467                           
  4468                           ;powerspy.c: 571: buff = z;
  4469  04CD  0878               	movf	sin@z+1,w
  4470  04CE  0020               	movlb	0	; select bank0
  4471  04CF  00A1               	movwf	sin@buff+1
  4472  04D0  0877               	movf	sin@z,w
  4473  04D1  00A0               	movwf	sin@buff
  4474                           
  4475                           ;powerspy.c: 572: buff -= ((100)<<1);
  4476  04D2  3038               	movlw	56
  4477  04D3  07A0               	addwf	sin@buff,f
  4478  04D4  30FF               	movlw	255
  4479  04D5  3DA1               	addwfc	sin@buff+1,f
  4480                           
  4481                           ;powerspy.c: 573: return -sin_((int8_t) buff);
  4482  04D6  0820               	movf	sin@buff,w
  4483  04D7  318F  27C7         	fcall	_sin_
  4484  04D9  3AFF               	xorlw	255
  4485  04DA  3E01               	addlw	1
  4486  04DB  0008               	return
  4487  04DC                     l3022:	
  4488                           
  4489                           ;powerspy.c: 574: }
  4490                           ;powerspy.c: 575: if (z > (100)) {
  4491  04DC  0878               	movf	sin@z+1,w
  4492  04DD  3A80               	xorlw	128
  4493  04DE  00F9               	movwf	??_sin
  4494  04DF  3080               	movlw	128
  4495  04E0  0279               	subwf	??_sin,w
  4496  04E1  1D03               	skipz
  4497  04E2  2CE5               	goto	u2835
  4498  04E3  3065               	movlw	101
  4499  04E4  0277               	subwf	sin@z,w
  4500  04E5                     u2835:	
  4501  04E5  1C03               	skipc
  4502  04E6  2CF4               	goto	l3030
  4503                           
  4504                           ;powerspy.c: 576: buff = ((100)<<1);
  4505  04E7  30C8               	movlw	200
  4506  04E8  0020               	movlb	0	; select bank0
  4507  04E9  00A0               	movwf	sin@buff
  4508  04EA  3000               	movlw	0
  4509  04EB  00A1               	movwf	sin@buff+1
  4510                           
  4511                           ;powerspy.c: 577: buff -= z;
  4512  04EC  0877               	movf	sin@z,w
  4513  04ED  02A0               	subwf	sin@buff,f
  4514  04EE  0878               	movf	sin@z+1,w
  4515  04EF  3BA1               	subwfb	sin@buff+1,f
  4516                           
  4517                           ;powerspy.c: 578: return sin_((int8_t) buff);
  4518  04F0  0820               	movf	sin@buff,w
  4519  04F1  318F  27C7         	fcall	_sin_
  4520  04F3  0008               	return
  4521  04F4                     l3030:	
  4522                           
  4523                           ;powerspy.c: 579: }
  4524                           ;powerspy.c: 582: return sin_((int8_t) z);
  4525  04F4  0877               	movf	sin@z,w
  4526  04F5  318F  27C7         	fcall	_sin_
  4527  04F7  0008               	return
  4528  04F8                     __end_of_sin:	
  4529                           
  4530                           	psect	text29
  4531  0FC7                     __ptext29:	
  4532 ;; *************** function _sin_ *****************
  4533 ;; Defined at:
  4534 ;;		line 551 in file "powerspy.c"
  4535 ;; Parameters:    Size  Location     Type
  4536 ;;  z               1    wreg     char 
  4537 ;; Auto vars:     Size  Location     Type
  4538 ;;  z               1    6[COMMON] char 
  4539 ;; Return value:  Size  Location     Type
  4540 ;;                  1    wreg      char 
  4541 ;; Registers used:
  4542 ;;		wreg, status,2, status,0, pclath, cstack
  4543 ;; Tracked objects:
  4544 ;;		On entry : 0/0
  4545 ;;		On exit  : 0/0
  4546 ;;		Unchanged: 0/0
  4547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4548 ;;      Params:         0       0       0       0       0       0
  4549 ;;      Locals:         1       0       0       0       0       0
  4550 ;;      Temps:          0       0       0       0       0       0
  4551 ;;      Totals:         1       0       0       0       0       0
  4552 ;;Total ram usage:        1 bytes
  4553 ;; Hardware stack levels used:    1
  4554 ;; Hardware stack levels required when called:    2
  4555 ;; This function calls:
  4556 ;;		_eeprom_read
  4557 ;; This function is called by:
  4558 ;;		_sin
  4559 ;; This function uses a non-reentrant model
  4560 ;;
  4561                           
  4562                           
  4563                           ;psect for function _sin_
  4564  0FC7                     _sin_:	
  4565                           
  4566                           ;incstack = 0
  4567                           ; Regs used in _sin_: [wreg+status,2+status,0+pclath+cstack]
  4568                           ;sin_@z stored from wreg
  4569  0FC7  00F6               	movwf	sin_@z
  4570                           
  4571                           ;powerspy.c: 553: return eeprom_read(z);
  4572  0FC8  0876               	movf	sin_@z,w
  4573  0FC9  3187  2769         	fcall	_eeprom_read
  4574  0FCB  0008               	return
  4575  0FCC                     __end_of_sin_:	
  4576                           
  4577                           	psect	text30
  4578  0769                     __ptext30:	
  4579 ;; *************** function _eeprom_read *****************
  4580 ;; Defined at:
  4581 ;;		line 6 in file "/Applications/microchip/xc8/v1.37/sources/pic/eeread.c"
  4582 ;; Parameters:    Size  Location     Type
  4583 ;;  addr            1    wreg     unsigned char 
  4584 ;; Auto vars:     Size  Location     Type
  4585 ;;  addr            1    5[COMMON] unsigned char 
  4586 ;; Return value:  Size  Location     Type
  4587 ;;                  1    wreg      unsigned char 
  4588 ;; Registers used:
  4589 ;;		wreg, status,2, status,0
  4590 ;; Tracked objects:
  4591 ;;		On entry : 0/0
  4592 ;;		On exit  : 0/0
  4593 ;;		Unchanged: 0/0
  4594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4595 ;;      Params:         0       0       0       0       0       0
  4596 ;;      Locals:         1       0       0       0       0       0
  4597 ;;      Temps:          3       0       0       0       0       0
  4598 ;;      Totals:         4       0       0       0       0       0
  4599 ;;Total ram usage:        4 bytes
  4600 ;; Hardware stack levels used:    1
  4601 ;; Hardware stack levels required when called:    1
  4602 ;; This function calls:
  4603 ;;		Nothing
  4604 ;; This function is called by:
  4605 ;;		_sin_
  4606 ;; This function uses a non-reentrant model
  4607 ;;
  4608                           
  4609                           
  4610                           ;psect for function _eeprom_read
  4611  0769                     _eeprom_read:	
  4612                           
  4613                           ;incstack = 0
  4614                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  4615                           ;eeprom_read@addr stored from wreg
  4616  0769  00F5               	movwf	eeprom_read@addr
  4617  076A                     l518:	
  4618  076A  0064               	clrwdt	;# 
  4619  076B  0023               	movlb	3	; select bank3
  4620  076C  1895               	btfsc	21,1	;volsfr
  4621  076D  2F6A               	goto	l518
  4622  076E  0875               	movf	eeprom_read@addr,w
  4623  076F  00F2               	movwf	??_eeprom_read
  4624  0770  01F3               	clrf	??_eeprom_read+1
  4625  0771  0872               	movf	??_eeprom_read,w
  4626  0772  0091               	movwf	17	;volatile
  4627  0773  0873               	movf	??_eeprom_read+1,w
  4628  0774  0092               	movwf	18	;volatile
  4629  0775  303F               	movlw	63
  4630  0776  00F4               	movwf	??_eeprom_read+2
  4631  0777  0874               	movf	??_eeprom_read+2,w
  4632  0778  0595               	andwf	21,f	;volsfr
  4633  0779  1415               	bsf	21,0	;volsfr
  4634  077A  1003               	clrc
  4635  077B  1815               	btfsc	21,0	;volsfr
  4636  077C  1403               	setc
  4637  077D  3000               	movlw	0
  4638  077E  3D09               	addwfc	9,w
  4639  077F  0813               	movf	19,w	;volatile
  4640  0780  0008               	return
  4641  0781                     __end_of_eeprom_read:	
  4642                           
  4643                           	psect	text31
  4644  07F4                     __ptext31:	
  4645 ;; *************** function _clearDisplay *****************
  4646 ;; Defined at:
  4647 ;;		line 498 in file "powerspy.c"
  4648 ;; Parameters:    Size  Location     Type
  4649 ;;  leng            1    wreg     char 
  4650 ;; Auto vars:     Size  Location     Type
  4651 ;;  leng            1    6[COMMON] char 
  4652 ;; Return value:  Size  Location     Type
  4653 ;;                  1    wreg      void 
  4654 ;; Registers used:
  4655 ;;		wreg, status,2, status,0, pclath, cstack
  4656 ;; Tracked objects:
  4657 ;;		On entry : 0/0
  4658 ;;		On exit  : 0/0
  4659 ;;		Unchanged: 0/0
  4660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4661 ;;      Params:         0       0       0       0       0       0
  4662 ;;      Locals:         1       0       0       0       0       0
  4663 ;;      Temps:          1       0       0       0       0       0
  4664 ;;      Totals:         2       0       0       0       0       0
  4665 ;;Total ram usage:        2 bytes
  4666 ;; Hardware stack levels used:    1
  4667 ;; Hardware stack levels required when called:    2
  4668 ;; This function calls:
  4669 ;;		_so
  4670 ;; This function is called by:
  4671 ;;		_main
  4672 ;; This function uses a non-reentrant model
  4673 ;;
  4674                           
  4675                           
  4676                           ;psect for function _clearDisplay
  4677  07F4                     _clearDisplay:	
  4678                           
  4679                           ;incstack = 0
  4680                           ; Regs used in _clearDisplay: [wreg+status,2+status,0+pclath+cstack]
  4681                           ;clearDisplay@leng stored from wreg
  4682  07F4  00F6               	movwf	clearDisplay@leng
  4683  07F5                     L4:	
  4684                           
  4685                           ;powerspy.c: 500: for (; leng >= 0; leng--)
  4686  07F5  1BF6               	btfsc	clearDisplay@leng,7
  4687  07F6  0008               	return
  4688                           
  4689                           ;powerspy.c: 501: so(0xff);
  4690  07F7  30FF               	movlw	255
  4691  07F8  3183  23C0  3187   	fcall	_so
  4692  07FB  30FF               	movlw	255
  4693  07FC  00F5               	movwf	??_clearDisplay
  4694  07FD  0875               	movf	??_clearDisplay,w
  4695  07FE  07F6               	addwf	clearDisplay@leng,f
  4696  07FF  2FF5               	goto	L4
  4697  0800                     __end_of_clearDisplay:	
  4698                           
  4699                           	psect	text32
  4700  03C0                     __ptext32:	
  4701 ;; *************** function _so *****************
  4702 ;; Defined at:
  4703 ;;		line 477 in file "powerspy.c"
  4704 ;; Parameters:    Size  Location     Type
  4705 ;;  data            1    wreg     const unsigned char 
  4706 ;; Auto vars:     Size  Location     Type
  4707 ;;  data            1    3[COMMON] const unsigned char 
  4708 ;;  c               1    4[COMMON] unsigned char 
  4709 ;; Return value:  Size  Location     Type
  4710 ;;                  1    wreg      void 
  4711 ;; Registers used:
  4712 ;;		wreg, status,2, status,0
  4713 ;; Tracked objects:
  4714 ;;		On entry : 0/0
  4715 ;;		On exit  : 0/0
  4716 ;;		Unchanged: 0/0
  4717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4718 ;;      Params:         0       0       0       0       0       0
  4719 ;;      Locals:         2       0       0       0       0       0
  4720 ;;      Temps:          1       0       0       0       0       0
  4721 ;;      Totals:         3       0       0       0       0       0
  4722 ;;Total ram usage:        3 bytes
  4723 ;; Hardware stack levels used:    1
  4724 ;; Hardware stack levels required when called:    1
  4725 ;; This function calls:
  4726 ;;		Nothing
  4727 ;; This function is called by:
  4728 ;;		_clearDisplay
  4729 ;;		_setUnit
  4730 ;;		_setVal
  4731 ;; This function uses a non-reentrant model
  4732 ;;
  4733                           
  4734                           
  4735                           ;psect for function _so
  4736  03C0                     _so:	
  4737                           
  4738                           ;incstack = 0
  4739                           ; Regs used in _so: [wreg+status,2+status,0]
  4740                           ;so@data stored from wreg
  4741  03C0  00F3               	movwf	so@data
  4742                           
  4743                           ;powerspy.c: 479: uint8_t c;
  4744                           ;powerspy.c: 480: for (c = 0; c < 8; c++) {
  4745  03C1  01F4               	clrf	so@c
  4746  03C2                     L5:	
  4747  03C2  3008               	movlw	8
  4748  03C3  0274               	subwf	so@c,w
  4749  03C4  1803               	btfsc	3,0
  4750  03C5  0008               	return
  4751                           
  4752                           ;powerspy.c: 481: RA7 = (data >> c) & 0x01;
  4753  03C6  0873               	movf	so@data,w
  4754  03C7  00F2               	movwf	??_so
  4755  03C8  0A74               	incf	so@c,w
  4756  03C9  2BCB               	goto	u1574
  4757  03CA                     u1575:	
  4758  03CA  36F2               	lsrf	??_so,f
  4759  03CB                     u1574:	
  4760  03CB  0B89               	decfsz	9,f
  4761  03CC  2BCA               	goto	u1575
  4762  03CD  1C72               	btfss	??_so,0
  4763  03CE  2BD2               	goto	u1580
  4764  03CF  0020               	movlb	0	; select bank0
  4765  03D0  178C               	bsf	12,7	;volatile
  4766  03D1  2BD4               	goto	l2022
  4767  03D2                     u1580:	
  4768  03D2  0020               	movlb	0	; select bank0
  4769  03D3  138C               	bcf	12,7	;volatile
  4770  03D4                     l2022:	
  4771                           
  4772                           ;powerspy.c: 482: __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop()
      +                          ; __nop(); __nop();
  4773  03D4  0000               	nop
  4774  03D5  0000               	nop
  4775  03D6  0000               	nop
  4776  03D7  0000               	nop
  4777  03D8  0000               	nop
  4778  03D9  0000               	nop
  4779  03DA  0000               	nop
  4780  03DB  0000               	nop
  4781  03DC  0000               	nop
  4782  03DD  0000               	nop
  4783                           
  4784                           ;powerspy.c: 483: __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop()
      +                          ; __nop(); __nop();
  4785  03DE  0000               	nop
  4786  03DF  0000               	nop
  4787  03E0  0000               	nop
  4788  03E1  0000               	nop
  4789  03E2  0000               	nop
  4790  03E3  0000               	nop
  4791  03E4  0000               	nop
  4792  03E5  0000               	nop
  4793  03E6  0000               	nop
  4794  03E7  0000               	nop
  4795                           
  4796                           ;powerspy.c: 484: __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop()
      +                          ; __nop(); __nop();
  4797  03E8  0000               	nop
  4798  03E9  0000               	nop
  4799  03EA  0000               	nop
  4800  03EB  0000               	nop
  4801  03EC  0000               	nop
  4802  03ED  0000               	nop
  4803  03EE  0000               	nop
  4804  03EF  0000               	nop
  4805  03F0  0000               	nop
  4806  03F1  0000               	nop
  4807                           
  4808                           ;powerspy.c: 485: __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop()
      +                          ; __nop(); __nop();
  4809  03F2  0000               	nop
  4810  03F3  0000               	nop
  4811  03F4  0000               	nop
  4812  03F5  0000               	nop
  4813  03F6  0000               	nop
  4814  03F7  0000               	nop
  4815  03F8  0000               	nop
  4816  03F9  0000               	nop
  4817  03FA  0000               	nop
  4818  03FB  0000               	nop
  4819                           
  4820                           ;powerspy.c: 486: RA4 = 1;
  4821  03FC  0020               	movlb	0	; select bank0
  4822  03FD  160C               	bsf	12,4	;volatile
  4823                           
  4824                           ;powerspy.c: 487: __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop()
      +                          ; __nop(); __nop();
  4825  03FE  0000               	nop
  4826  03FF  0000               	nop
  4827  0400  0000               	nop
  4828  0401  0000               	nop
  4829  0402  0000               	nop
  4830  0403  0000               	nop
  4831  0404  0000               	nop
  4832  0405  0000               	nop
  4833  0406  0000               	nop
  4834  0407  0000               	nop
  4835                           
  4836                           ;powerspy.c: 488: __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop()
      +                          ; __nop(); __nop();
  4837  0408  0000               	nop
  4838  0409  0000               	nop
  4839  040A  0000               	nop
  4840  040B  0000               	nop
  4841  040C  0000               	nop
  4842  040D  0000               	nop
  4843  040E  0000               	nop
  4844  040F  0000               	nop
  4845  0410  0000               	nop
  4846  0411  0000               	nop
  4847                           
  4848                           ;powerspy.c: 489: __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop()
      +                          ; __nop(); __nop();
  4849  0412  0000               	nop
  4850  0413  0000               	nop
  4851  0414  0000               	nop
  4852  0415  0000               	nop
  4853  0416  0000               	nop
  4854  0417  0000               	nop
  4855  0418  0000               	nop
  4856  0419  0000               	nop
  4857  041A  0000               	nop
  4858  041B  0000               	nop
  4859                           
  4860                           ;powerspy.c: 490: __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop()
      +                          ; __nop(); __nop();
  4861  041C  0000               	nop
  4862  041D  0000               	nop
  4863  041E  0000               	nop
  4864  041F  0000               	nop
  4865  0420  0000               	nop
  4866  0421  0000               	nop
  4867  0422  0000               	nop
  4868  0423  0000               	nop
  4869  0424  0000               	nop
  4870  0425  0000               	nop
  4871                           
  4872                           ;powerspy.c: 491: RA4 = 0;
  4873  0426  0020               	movlb	0	; select bank0
  4874  0427  120C               	bcf	12,4	;volatile
  4875  0428  3001               	movlw	1
  4876  0429  00F2               	movwf	??_so
  4877  042A  0872               	movf	??_so,w
  4878  042B  07F4               	addwf	so@c,f
  4879  042C  2BC2               	goto	L5
  4880  042D                     __end_of_so:	
  4881                           
  4882                           	psect	intentry
  4883  0004                     __pintentry:	
  4884 ;; *************** function _ISR *****************
  4885 ;; Defined at:
  4886 ;;		line 630 in file "powerspy.c"
  4887 ;; Parameters:    Size  Location     Type
  4888 ;;		None
  4889 ;; Auto vars:     Size  Location     Type
  4890 ;;		None
  4891 ;; Return value:  Size  Location     Type
  4892 ;;                  1    wreg      void 
  4893 ;; Registers used:
  4894 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4895 ;; Tracked objects:
  4896 ;;		On entry : 0/0
  4897 ;;		On exit  : 0/0
  4898 ;;		Unchanged: 0/0
  4899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4900 ;;      Params:         0       0       0       0       0       0
  4901 ;;      Locals:         0       0       0       0       0       0
  4902 ;;      Temps:          2       0       0       0       0       0
  4903 ;;      Totals:         2       0       0       0       0       0
  4904 ;;Total ram usage:        2 bytes
  4905 ;; Hardware stack levels used:    1
  4906 ;; This function calls:
  4907 ;;		Nothing
  4908 ;; This function is called by:
  4909 ;;		Interrupt level 1
  4910 ;; This function uses a non-reentrant model
  4911 ;;
  4912                           
  4913  0004                     _ISR:	
  4914                           
  4915                           ;incstack = 0
  4916                           ; Regs used in _ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  4917  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  4918  0005  3180               	pagesel	$
  4919  0006  0020               	movlb	0	; select bank0
  4920  0007  087F               	movf	127,w
  4921  0008  00F1               	movwf	??_ISR+1
  4922                           
  4923                           ;powerspy.c: 633: if (RCIE && RCIF) {
  4924  0009  0021               	movlb	1	; select bank1
  4925  000A  1E91               	btfss	17,5	;volatile
  4926  000B  2822               	goto	i1l2662
  4927  000C  0020               	movlb	0	; select bank0
  4928  000D  1E91               	btfss	17,5	;volatile
  4929  000E  2822               	goto	i1l2662
  4930                           
  4931                           ;powerspy.c: 634: receive_buff[buffpos] = RCREG;
  4932  000F  0023               	movlb	3	; select bank3
  4933  0010  0819               	movf	25,w	;volatile
  4934  0011  00F0               	movwf	??_ISR
  4935  0012  087A               	movf	_buffpos,w
  4936  0013  3E59               	addlw	(low (_receive_buff| 0))& (0+255)
  4937  0014  0086               	movwf	6
  4938  0015  0187               	clrf	7
  4939  0016  0870               	movf	??_ISR,w
  4940  0017  0081               	movwf	1
  4941                           
  4942                           ;powerspy.c: 635: buffpos++;
  4943  0018  3001               	movlw	1
  4944  0019  00F0               	movwf	??_ISR
  4945  001A  0870               	movf	??_ISR,w
  4946  001B  07FA               	addwf	_buffpos,f
  4947                           
  4948                           ;powerspy.c: 636: buffpos %= 8;
  4949  001C  3007               	movlw	7
  4950  001D  00F0               	movwf	??_ISR
  4951  001E  0870               	movf	??_ISR,w
  4952  001F  05FA               	andwf	_buffpos,f
  4953                           
  4954                           ;powerspy.c: 637: RCIF = 0;
  4955  0020  0020               	movlb	0	; select bank0
  4956  0021  1291               	bcf	17,5	;volatile
  4957  0022                     i1l2662:	
  4958                           
  4959                           ;powerspy.c: 638: }
  4960                           ;powerspy.c: 641: if (TMR1IE && TMR1IF) {
  4961  0022  0021               	movlb	1	; select bank1
  4962  0023  1C11               	btfss	17,0	;volatile
  4963  0024  2829               	goto	i1l360
  4964  0025  0020               	movlb	0	; select bank0
  4965  0026  1C11               	btfss	17,0	;volatile
  4966  0027  2829               	goto	i1l360
  4967                           
  4968                           ;powerspy.c: 642: TMR1IF = 0;
  4969  0028  1011               	bcf	17,0	;volatile
  4970  0029                     i1l360:	
  4971                           
  4972                           ;powerspy.c: 643: }
  4973                           ;powerspy.c: 646: if (C1IE && C1IF) {
  4974  0029  0021               	movlb	1	; select bank1
  4975  002A  1E92               	btfss	18,5	;volatile
  4976  002B  2839               	goto	i1l361
  4977  002C  0020               	movlb	0	; select bank0
  4978  002D  1E92               	btfss	18,5	;volatile
  4979  002E  2839               	goto	i1l361
  4980                           
  4981                           ;powerspy.c: 647: if (!(flag & 0x01)) {
  4982  002F  1867               	btfsc	_flag,0	;volatile
  4983  0030  2838               	goto	i1l362
  4984                           
  4985                           ;powerspy.c: 648: volt_time = TMR1;
  4986  0031  0817               	movf	23,w	;volatile
  4987  0032  00E6               	movwf	_volt_time+1
  4988  0033  0816               	movf	22,w	;volatile
  4989  0034  00E5               	movwf	_volt_time
  4990                           
  4991                           ;powerspy.c: 649: if (flag & 0x02)
  4992  0035  18E7               	btfsc	_flag,1	;volatile
  4993                           
  4994                           ;powerspy.c: 650: flag |= 0x08;
  4995  0036  15E7               	bsf	_flag,3	;volatile
  4996                           
  4997                           ;powerspy.c: 651: flag |= 0x01;
  4998  0037  1467               	bsf	_flag,0	;volatile
  4999  0038                     i1l362:	
  5000                           
  5001                           ;powerspy.c: 652: }
  5002                           ;powerspy.c: 654: C1IF = 0;
  5003  0038  1292               	bcf	18,5	;volatile
  5004  0039                     i1l361:	
  5005                           
  5006                           ;powerspy.c: 655: }
  5007                           ;powerspy.c: 658: if (C2IE && C2IF) {
  5008  0039  0021               	movlb	1	; select bank1
  5009  003A  1F12               	btfss	18,6	;volatile
  5010  003B  2849               	goto	i1l364
  5011  003C  0020               	movlb	0	; select bank0
  5012  003D  1F12               	btfss	18,6	;volatile
  5013  003E  2849               	goto	i1l364
  5014                           
  5015                           ;powerspy.c: 659: if (!(flag & 0x02)) {
  5016  003F  18E7               	btfsc	_flag,1	;volatile
  5017  0040  2848               	goto	i1l365
  5018                           
  5019                           ;powerspy.c: 660: curr_time = TMR1;
  5020  0041  0817               	movf	23,w	;volatile
  5021  0042  00E2               	movwf	_curr_time+1
  5022  0043  0816               	movf	22,w	;volatile
  5023  0044  00E1               	movwf	_curr_time
  5024                           
  5025                           ;powerspy.c: 661: if (flag & 0x01)
  5026  0045  1867               	btfsc	_flag,0	;volatile
  5027                           
  5028                           ;powerspy.c: 662: flag |= 0x04;
  5029  0046  1567               	bsf	_flag,2	;volatile
  5030                           
  5031                           ;powerspy.c: 663: flag |= 0x02;
  5032  0047  14E7               	bsf	_flag,1	;volatile
  5033  0048                     i1l365:	
  5034                           
  5035                           ;powerspy.c: 664: }
  5036                           ;powerspy.c: 666: C2IF = 0;
  5037  0048  1312               	bcf	18,6	;volatile
  5038  0049                     i1l364:	
  5039                           
  5040                           ;powerspy.c: 667: }
  5041                           ;powerspy.c: 669: if (TMR2IE && TMR2IF) {
  5042  0049  0021               	movlb	1	; select bank1
  5043  004A  1C91               	btfss	17,1	;volatile
  5044  004B  2850               	goto	i1l368
  5045  004C  0020               	movlb	0	; select bank0
  5046  004D  1C91               	btfss	17,1	;volatile
  5047  004E  2850               	goto	i1l368
  5048                           
  5049                           ;powerspy.c: 670: TMR2IF = 0;
  5050  004F  1091               	bcf	17,1	;volatile
  5051  0050                     i1l368:	
  5052  0050  0871               	movf	??_ISR+1,w
  5053  0051  0020               	movlb	0	; select bank0
  5054  0052  00FF               	movwf	127
  5055  0053  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  5056  0054  0009               	retfie
  5057  0055                     __end_of_ISR:	
  5058  007E                     btemp	set	126	;btemp
  5059  007E                     int$flags	set	126
  5060  007E                     wtemp	set	126
  5061  007E                     wtemp0	set	126
  5062  0080                     wtemp1	set	128
  5063  0082                     wtemp2	set	130
  5064  0084                     wtemp3	set	132
  5065  0086                     wtemp4	set	134
  5066  0088                     wtemp5	set	136
  5067  007F                     wtemp6	set	127
  5068  007E                     ttemp	set	126
  5069  007E                     ttemp0	set	126
  5070  0081                     ttemp1	set	129
  5071  0084                     ttemp2	set	132
  5072  0087                     ttemp3	set	135
  5073  007F                     ttemp4	set	127
  5074  007E                     ltemp	set	126
  5075  007E                     ltemp0	set	126
  5076  0082                     ltemp1	set	130
  5077  0086                     ltemp2	set	134
  5078  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    10
    Data        4
    BSS         19
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     57      78
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___wmul
    _main->_deltaT
    _main->_sin
    _setUnit->_so
    _setLED->_sendColour
    _sendUInt8->__sendchar_
    _sendInt24->__sendchar_
    _readVdd->_adc
    _readCurrent->___wmul
    ___wmul->_readVdd
    ___tmul->___wmul
    ___tmul->_sin
    ___atdiv->___wmul
    ___atdiv->_sin
    _cos->_sin
    _sin->_sin_
    _sin_->_eeprom_read
    _clearDisplay->_so

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_readCurrent
    _setVal->___atdiv
    _readCurrent->___atdiv
    ___tmul->___wmul
    ___tmul->_cos
    ___atdiv->___tmul
    _cos->_sin

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                24    24      0   10493
                                             34 BANK0     23    23      0
                            ___atdiv
                            ___awmod
                             ___tmul
                             ___wmul
                       _clearDisplay
                                _cos
                             _deltaT
                            _initADC
                             _initBT
                          _initCOMP1
                          _initCOMP2
                            _initFVR
                      _initMessaging
                        _initPWMTMR4
                           _initPins
                           _initTMR1
                        _readCurrent
                            _readVdd
                        _readVoltage
                          _sendInt24
                          _sendUInt8
                             _setLED
                            _setUnit
                             _setVal
                                _sin
 ---------------------------------------------------------------------------------
 (1) _setVal                                               4     2      2    1696
                                             25 BANK0      4     2      2
                            ___atdiv (ARG)
                            ___awdiv
                            ___awmod
                                 _so
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     508
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     575
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _setUnit                                              6     3      3     573
                                              5 COMMON     3     0      3
                                              0 BANK0      3     3      0
                                 _so
 ---------------------------------------------------------------------------------
 (1) _setLED                                               3     1      2     878
                                              3 COMMON     3     1      2
                         _sendColour
 ---------------------------------------------------------------------------------
 (2) _sendColour                                           1     1      0     176
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _sendUInt8                                            1     1      0      44
                                              5 COMMON     1     1      0
                         __sendchar_
 ---------------------------------------------------------------------------------
 (1) _sendInt24                                            7     4      3     570
                                              5 COMMON     3     0      3
                                              0 BANK0      4     4      0
                         __sendchar_
 ---------------------------------------------------------------------------------
 (2) __sendchar_                                           3     3      0      22
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _readVoltage                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _readVdd                                              4     2      2     110
                                              4 COMMON     4     2      2
                                _adc
 ---------------------------------------------------------------------------------
 (1) _readCurrent                                          9     6      3    1958
                                             25 BANK0      9     6      3
                            ___atdiv
                             ___tmul
                             ___wmul
                                _adc
 ---------------------------------------------------------------------------------
 (2) _adc                                                  2     2      0     110
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              8 COMMON     2     2      0
                                              0 BANK0      4     0      4
                            _readVdd (ARG)
 ---------------------------------------------------------------------------------
 (2) ___tmul                                               9     3      6     516
                                              4 BANK0      9     3      6
                             ___wmul (ARG)
                                _cos (ARG)
                                _sin (ARG)
 ---------------------------------------------------------------------------------
 (2) ___atdiv                                             12     6      6     936
                                             13 BANK0     12     6      6
                             ___tmul (ARG)
                             ___wmul (ARG)
                                _cos (ARG)
                                _sin (ARG)
 ---------------------------------------------------------------------------------
 (1) _initTMR1                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initPins                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initPWMTMR4                                          1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initMessaging                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initFVR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initCOMP2                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initCOMP1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initBT                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _deltaT                                               8     4      4     344
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _cos                                                  2     0      2     650
                                              2 BANK0      2     0      2
                                _sin
 ---------------------------------------------------------------------------------
 (1) _sin                                                  5     3      2     554
                                              7 COMMON     3     1      2
                                              0 BANK0      2     2      0
                               _sin_
 ---------------------------------------------------------------------------------
 (2) _sin_                                                 1     1      0      62
                                              6 COMMON     1     1      0
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (3) _eeprom_read                                          4     4      0      31
                                              2 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _clearDisplay                                         2     2      0     135
                                              5 COMMON     2     2      0
                                 _so
 ---------------------------------------------------------------------------------
 (2) _so                                                   3     3      0      90
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___atdiv
     ___tmul (ARG)
       ___wmul (ARG)
         _readVdd (ARG)
           _adc
       _cos (ARG)
         _sin
           _sin_
             _eeprom_read
       _sin (ARG)
         _sin_
           _eeprom_read
     ___wmul (ARG)
       _readVdd (ARG)
         _adc
     _cos (ARG)
       _sin
         _sin_
           _eeprom_read
     _sin (ARG)
       _sin_
         _eeprom_read
   ___awmod
   ___tmul
     ___wmul (ARG)
       _readVdd (ARG)
         _adc
     _cos (ARG)
       _sin
         _sin_
           _eeprom_read
     _sin (ARG)
       _sin_
         _eeprom_read
   ___wmul
     _readVdd (ARG)
       _adc
   _clearDisplay
     _so
   _cos
     _sin
       _sin_
         _eeprom_read
   _deltaT
   _initADC
   _initBT
   _initCOMP1
   _initCOMP2
   _initFVR
   _initMessaging
   _initPWMTMR4
   _initPins
   _initTMR1
   _readCurrent
     ___atdiv
       ___tmul (ARG)
         ___wmul (ARG)
           _readVdd (ARG)
             _adc
         _cos (ARG)
           _sin
             _sin_
               _eeprom_read
         _sin (ARG)
           _sin_
             _eeprom_read
       ___wmul (ARG)
         _readVdd (ARG)
           _adc
       _cos (ARG)
         _sin
           _sin_
             _eeprom_read
       _sin (ARG)
         _sin_
           _eeprom_read
     ___tmul
       ___wmul (ARG)
         _readVdd (ARG)
           _adc
       _cos (ARG)
         _sin
           _sin_
             _eeprom_read
       _sin (ARG)
         _sin_
           _eeprom_read
     ___wmul
       _readVdd (ARG)
         _adc
     _adc
   _readVdd
     _adc
   _readVoltage
   _sendInt24
     __sendchar_
   _sendUInt8
     __sendchar_
   _setLED
     _sendColour
   _setUnit
     _so
   _setVal
     ___atdiv (ARG)
       ___tmul (ARG)
         ___wmul (ARG)
           _readVdd (ARG)
             _adc
         _cos (ARG)
           _sin
             _sin_
               _eeprom_read
         _sin (ARG)
           _sin_
             _eeprom_read
       ___wmul (ARG)
         _readVdd (ARG)
           _adc
       _cos (ARG)
         _sin
           _sin_
             _eeprom_read
       _sin (ARG)
         _sin_
           _eeprom_read
     ___awdiv (ARG)
     ___awmod (ARG)
     _so (ARG)
   _sin
     _sin_
       _eeprom_read

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      5A       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     39      4E       6       97.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      5A      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Fri Jun 17 10:54:50 2016

            __CFG_CP$OFF 0000                       _RD 0CA8         ___atdiv@quotient 0036  
                     _WR 0CA9             ___awdiv@sign 0021                       _so 03C0  
    ___wmul@multiplicand 0022                      l301 033F                      l311 03A3  
                    l303 0353                      l313 03B7                      l305 0367  
                    l307 037B                      l253 0FDE                      l309 038F  
                    l326 0498                      l270 0795                      ?_so 0070  
                    l274 05E9                      l604 0756                      l372 02F6  
                    l373 00B6                      l518 076A                      l383 02F4  
                    l299 032B                      l469 07C1                      l694 043B  
                    _GIE 005F                      _RA3 0063                      _RA4 0064  
                    _RB3 006B                      _RA6 0066                      _RA7 0067  
                    _PR2 001B             __CFG_CPD$OFF 0000                      _ISR 0004  
                    _adc 059B                      _cos 0FE1                      _sin 0498  
                    so@c 0074             ___awmod@sign 0078             __CFG_BORV$LO 0000  
                    wreg 0009                     ??_so 0072             __CFG_LVP$OFF 0000  
                   ?_ISR 0070                     ?_adc 0070                     l2010 05D3  
                   _C1IE 0495                     l2004 05A3                     _C1IF 0095  
                   l2022 03D4                     l2006 05B3                     _C2IE 0496  
                   l2008 05C3                     l2200 035B                     _C2IF 0096  
                   l2212 0397                     l2204 036F                     l3030 04F4  
                   l3022 04DC                     l3014 04C2                     l3006 04A8  
                   l2310 06C8                     l2216 03AB                     l2208 0383  
                   l2314 06D0                     l2340 0456                     l2332 0449  
                   l3036 074F                     l2350 047C                     l2342 0463  
                   l3062 050E                     l2414 05F6                     l3230 023E  
                   l2520 078F                     l2192 0333                     l3080 0534  
                   l3072 0516                     l3056 0503                     l2440 062C  
                   l2432 061B                     l3224 0222                     _C1ON 088F  
                   l2354 0486                     l3074 0522                     l2426 0603  
                   l2418 05FD                     l3306 02E0                     l3242 0292  
                   l3218 0204                     l2196 0347                     l3084 053D  
                   l2428 060F                     l2436 0624                     l3236 0266  
                   l3164 00D1                     l3148 0099                     _C2ON 089F  
                   l2358 0491                     l3088 0545                     l3248 02BE  
                   l3256 02DA                     l3184 0123                     l3268 0318  
                   ?_cos 0022                     l2558 06AD                     _ADFM 04F7  
                   ?_sin 0077                     _ADON 04E8                     _CHS0 04EA  
                   _CHS1 04EB                     _CHS2 04EC                     _CHS3 04ED  
                   _CHS4 04EE                     _BRGH 0CF2                     _CREN 0CEC  
                   u1410 05A1                     u2115 0606                     u1500 05D1  
                   u2215 069D                     u2135 0615                     u1440 05B1  
                   u3025 0676                     u2145 061C                     u1530 05E1  
                   u1435 05A6                     u3035 0689                     u1525 05D6  
                   u1470 05C1                     u3127 00A1                     u1544 05E3  
                   u1465 05B6                     u3137 0312                     u3147 07C7  
                   u1580 03D2                     u3157 05E5                     u3085 00EC  
                   u1574 03CB                     u1575 03CA                     u1495 05C6  
                   u1915 0459                     u2805 04A1                     u2815 04B1  
                   u1935 0464                     u1855 06D1                     u2825 04CB  
                   u1945 0473                     u1865 06D7                     u2835 04E5  
                   u1955 047D                     u2915 0519                     _PEIE 005E  
                   u2855 0757                     u2935 0523                     u2865 075C  
                   u2945 052D                     u2955 0535                     _RCIE 048D  
                   _RCIF 008D                     u2985 06F0                     _SCS0 04C8  
                   u2995 0701                     _SCS1 04C9                     _TMR1 0016  
                   _SPEN 0CEF                     _TRMT 0CF1                     _TXEN 0CF5  
                   _SYNC 0CF4                     _WPUB 020D              main@current 0056  
           __CFG_WRT$OFF 0000                     _flag 0067             ?_initPWMTMR4 0070  
                   _main 0074                     _mode 0068                     _sin_ 0FC7  
                   fsr0h 0005                     fsr1h 0007                     fsr0l 0004  
                   indf0 0000                     indf1 0001                     fsr1l 0006  
                   btemp 007E                     sin@z 0077                     ltemp 007E  
                   start 0055                     ttemp 007E                     wtemp 007E  
          __CFG_IESO$OFF 0000              main@voltage 0045            __CFG_MCLRE$ON 0000  
   __end_of_clearDisplay 0800                    ??_ISR 0070                    ??_adc 0072  
                  ??_cos 007A                    ??_sin 0079            __CFG_PLLEN$ON 0000  
           ?_readCurrent 0039             main@apparent 0053                    _DC1B0 149C  
                  _DC1B1 149D                    _ADCS0 04F4                    _ADCS1 04F5  
                  _ADCS2 04F6                    ?_main 0070          __end_of___atdiv 0498  
        __end_of___awdiv 054A                    _ADRES 009B                    _EEADR 0191  
                  _BRG16 0CFB            __CFG_WDTE$OFF 0000                    ?_sin_ 0070  
        __end_of___awmod 0631          ___awdiv@divisor 0072                    _IRCF0 04CB  
                  _IRCF1 04CC                    _IRCF2 04CD                    _IRCF3 04CE  
                  _IOCIE 005B                    i1l360 0029                    i1l361 0039  
                  i1l362 0038                    i1l364 0049                    i1l365 0048  
                  i1l368 0050                    _FVREN 08BF          ___awdiv@counter 0020  
                  _RCREG 0199                    _SPBRG 019B                    _PORTA 000C  
                  _PORTB 000D                    _TRISA 008C                    _TRISB 008D  
                  _TXREG 019A             ?_readVoltage 0070             main@reactive 004B  
         __CFG_FCMEN$OFF 0000          __end_of_initADC 0FF5          __end_of_initFVR 0FE1  
        __end_of_readVdd 07AB                    cos@us 0022          __end_of_setUnit 070E  
         __CFG_BOREN$OFF 0000                    ltemp0 007E                    ltemp1 0082  
                  ltemp2 0086                    ltemp3 0080                    sin_@z 0076  
                  ttemp0 007E                    ttemp1 0081                    ttemp2 0084  
                  ttemp3 0087                    ttemp4 007F                    status 0003  
                  wtemp0 007E                    wtemp1 0080                    wtemp2 0082  
                  wtemp3 0084                    wtemp4 0086                    wtemp5 0088  
                  wtemp6 007F          __initialization 0057   __size_of_initMessaging 0006  
           __end_of_main 031E             __end_of_sin_ 0FCC                   ??_main 0042  
                 ??_sin_ 0076                   _C1NCH0 0890                   _C1NCH1 0891  
                 _C2NCH0 08A0                   _C1PCH0 0894                   _C2NCH1 08A1  
                 _C1PCH1 0895                   _C2PCH0 08A4                   _C2PCH1 08A5  
                 _C1INTP 0897                   _C2INTP 08A7                   _ADFVR0 08B8  
                 _ADFVR1 08B9                   _ADNREF 04F2                   _EEDATA 0193  
                 _CCPR1L 0291                   _EECON1 0195         ___awdiv@dividend 0074  
                 _ANSELA 018C                   _ANSELB 018D                   _IOCBN5 1CAD  
                 i1l2662 0022                   _FVRRDY 08BE                   _TMR1IE 0488  
                 _TMR1IF 0088                   _TMR2IE 0489                   _TMR2IF 0089  
                 _TMR4IF 0099                   _TMR1ON 00C0                   _TMR2ON 00E2  
                 _TMR4ON 20BA                   _SPLLEN 04CF           __CFG_PWRTE$OFF 0000  
   __size_of_eeprom_read 0018                   _nWPUEN 04AF                   adc@src 0073  
                 ___tmul 06C1                   ___wmul 074D                ??___atdiv 0033  
              ??___awdiv 0076                ??___awmod 0076                   _deltaT 0697  
       __end_of_initTMR1 1000         __end_of_initPins 072E                   _initBT 0781  
                 _setLED 07AB         ___awdiv@quotient 0022                   _setVal 0631  
        ___awmod@divisor 0072          ___awmod@counter 0077                ??_initADC 0072  
              ??_initFVR 0072                   so@data 0073                ??_readVdd 0076  
              ??_setUnit 0020            _initMessaging 0FCC  __end_of__initialization 0070  
        eeprom_read@addr 0075    __size_of_clearDisplay 000C     __size_of_initPWMTMR4 001F  
         __pcstackCOMMON 0070             __pidataBANK0 0FC3               __end_of_so 042D  
   __size_of_readCurrent 0051           ?_initMessaging 0070     __size_of_readVoltage 0002  
           _clearDisplay 07F4       __size_of_initCOMP1 000D       __size_of_initCOMP2 000D  
             __pbssBANK0 0059              sendColour@c 0072               __pmaintext 0074  
             __sendchar_ 07BD       __size_of_sendInt24 0032       __size_of_sendUInt8 000D  
                ?___tmul 0024                  ?___wmul 0020             __sendchar_@c 0074  
                _C1TSEL0 14F0                  _C1TSEL1 14F1                  ?_deltaT 0072  
             __pintentry 0004                  _CCP1CON 0293                  _CDAFVR0 08BA  
                _CDAFVR1 08BB                  ?_initBT 0070                  _CCP1SEL 08E8  
                ?_setLED 0073                  _ADPREF0 04F0                  _ADPREF1 04F1  
                ?_setVal 0039                  _T1CKPS0 00C4                  _T1CKPS1 00C5  
                _T2CKPS0 00E0                  _T2CKPS1 00E1                  _T4CKPS0 20B8  
                _T4CKPS1 20B9                  _TMR1CS0 00C6                  _TMR1CS1 00C7  
                _RXDTSEL 08EF                  _TXCKSEL 08F0                ?_initTMR1 0070  
              ?_initPins 0070                  ___atdiv 042D                  ___awdiv 04F8  
                ___awmod 05EC          __size_of___tmul 0027          __size_of___wmul 001C  
        __size_of_deltaT 002A        __end_of_initCOMP1 07F4        __end_of_initCOMP2 07E7  
        __CFG_STVREN$OFF 0000          __size_of_initBT 0017          __size_of_setLED 0012  
        __size_of_setVal 0034                  __ptext1 0631                  __ptext2 05EC  
                __ptext3 04F8                  __ptext4 06E8                  __ptext5 07AB  
                __ptext6 031E                  __ptext7 07CD                  __ptext8 0665  
                __ptext9 07BD                  _buffpos 007A          ??_initMessaging 0072  
                _initADC 0FEB             __size_of_ISR 0051                  _initFVR 0FD8  
           __size_of_adc 0051                  _readVdd 0798             __size_of_cos 000A  
           __size_of_sin 0060                  _reading 0069                  _readpos 007B  
       ___awmod@dividend 0074                  _setUnit 06E8        __end_of_sendInt24 0697  
      __end_of_sendUInt8 07DA                  clrloop0 0FD3               _sendColour 031E  
   end_of_initialization 0070               ??_initTMR1 0072                  setLED@b 0074  
                setLED@g 0075                  setLED@r 0073               ??_initPins 0072  
                sin@buff 0020                  setVal@i 003C                  setVal@v 0039  
            ?__sendchar_ 0070             __pstringtext 0800         __CFG_FOSC$INTOSC 0000  
              _TRISBbits 008D            ??_eeprom_read 0072            deltaT@tm_high 0074  
         __end_of___tmul 06E8           __end_of___wmul 0769           __end_of_deltaT 06C1  
         __end_of_initBT 0798           __end_of_setLED 07BD           __end_of_setVal 0665  
    start_initialization 0057              __end_of_ISR 0055              __end_of_adc 05EC  
            __end_of_cos 0FEB              __end_of_sin 04F8      __size_of__sendchar_ 0010  
            ?_sendColour 0070            ??_initPWMTMR4 0072                 ??___tmul 007A  
               ??___wmul 0078      __end_of_eeprom_read 0781                 ??_deltaT 0076  
            __pdataBANK0 006A                 ??_initBT 0072            ??_readCurrent 003C  
               ??_setLED 0075                 ??_setVal 003B           ___tmul@product 002A  
          ??_readVoltage 0072              __pbssCOMMON 007A                ___latbits 0001  
          __pcstackBANK0 0020        __size_of_initTMR1 000B               sendInt24@i 0075  
             sendUInt8@i 0075        __size_of_initPins 0020      __end_of_initPWMTMR4 074D  
               ?___atdiv 002D                 ?___awdiv 0072                 ?___awmod 0072  
    __size_of_sendColour 00A2           _i_u_diode_offs 006D                 ?_initADC 0070  
               ?_initFVR 0070                _initCOMP1 07E7                _initCOMP2 07DA  
               ?_readVdd 0074      __end_of_readCurrent 059B                 ?_setUnit 0075  
              _curr_time 0061      __end_of_readVoltage 0004              __size_of_so 006D  
               _T2OUTPS0 00E3                 _T2OUTPS1 00E4                 _T2OUTPS2 00E5  
               _T2OUTPS3 00E6                _sendInt24 0665                _sendUInt8 07CD  
         ___wmul@product 0078             _receive_buff 0059                clear_ram0 0FD2  
            _eeprom_read 0769             ??__sendchar_ 0072                 _GO_nDONE 04E9  
      ___wmul@multiplier 0020               ?_initCOMP1 0070               ?_initCOMP2 0070  
              main@angle 004E                main@bmode 0051    __end_of_initMessaging 0FD2  
    ___tmul@multiplicand 0027                _volt_time 0065             deltaT@tm_low 0072  
     __end_of__sendchar_ 07CD               ?_sendInt24 0075               ?_sendUInt8 0070  
            _initPWMTMR4 072E         __size_of___atdiv 006B         __size_of___awdiv 0052  
       __size_of___awmod 0045              _readCurrent 054A         __size_of_initADC 000A  
       __size_of_initFVR 0009              _readVoltage 0002         __size_of_readVdd 0013  
       __size_of_setUnit 0026            ?_clearDisplay 0070                 __ptext10 0002  
               __ptext11 0798                 __ptext20 0FCC                 __ptext12 054A  
               __ptext21 0FD8                 __ptext13 059B                 __ptext30 0769  
               __ptext22 07DA                 __ptext14 074D                 __ptext31 07F4  
               __ptext23 07E7                 __ptext15 06C1                 __ptext32 03C0  
               __ptext24 0781                 __ptext16 042D                 __ptext25 0FEB  
               __ptext17 0FF5                 __ptext26 0697                 __ptext18 070E  
               __ptext27 0FE1                 __ptext19 072E                 __ptext28 0498  
               __ptext29 0FC7             ??_sendColour 0072                 _i_u_offs 006A  
               _led_rest 0063                 _initTMR1 0FF5                 _initPins 070E  
          __size_of_main 02AA            __size_of_sin_ 0005                 int$flags 007E  
               main@real 0048       __end_of_sendColour 03C0              ??_initCOMP1 0072  
            ??_initCOMP2 0072           ??_clearDisplay 0075           _get_shift_byte 0800  
               intlevel1 0000              ??_sendInt24 0020              ??_sendUInt8 0075  
      __CFG_CLKOUTEN$OFF 0000                 setUnit@u 0075         clearDisplay@leng 0076  
      ___tmul@multiplier 0024   __end_of_get_shift_byte 080A         ___atdiv@dividend 0030  
        ___atdiv@divisor 002D          ___atdiv@counter 0034             ?_eeprom_read 0070  
           ___atdiv@sign 0035  
