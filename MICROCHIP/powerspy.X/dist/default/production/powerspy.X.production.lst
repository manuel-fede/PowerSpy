

Microchip Technology PIC LITE Macro Assembler V1.37 build -260352376 
                                                                                               Thu May 19 10:24:57 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	eeprom_data,global,class=EEDATA,space=3,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	stringtext,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	psect	intentry,global,class=CODE,delta=2
    48                           	dabs	1,0x7E,2
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  0011                     	;# 
    64  0012                     	;# 
    65  0013                     	;# 
    66  0014                     	;# 
    67  0015                     	;# 
    68  0016                     	;# 
    69  0016                     	;# 
    70  0017                     	;# 
    71  0018                     	;# 
    72  0019                     	;# 
    73  001A                     	;# 
    74  001B                     	;# 
    75  001C                     	;# 
    76  001E                     	;# 
    77  001F                     	;# 
    78  008C                     	;# 
    79  008D                     	;# 
    80  0091                     	;# 
    81  0092                     	;# 
    82  0093                     	;# 
    83  0094                     	;# 
    84  0095                     	;# 
    85  0096                     	;# 
    86  0097                     	;# 
    87  0098                     	;# 
    88  0099                     	;# 
    89  009A                     	;# 
    90  009B                     	;# 
    91  009B                     	;# 
    92  009C                     	;# 
    93  009D                     	;# 
    94  009E                     	;# 
    95  010C                     	;# 
    96  010D                     	;# 
    97  0111                     	;# 
    98  0112                     	;# 
    99  0113                     	;# 
   100  0114                     	;# 
   101  0115                     	;# 
   102  0116                     	;# 
   103  0117                     	;# 
   104  0118                     	;# 
   105  0119                     	;# 
   106  011A                     	;# 
   107  011B                     	;# 
   108  011D                     	;# 
   109  011E                     	;# 
   110  018C                     	;# 
   111  018D                     	;# 
   112  0191                     	;# 
   113  0191                     	;# 
   114  0192                     	;# 
   115  0193                     	;# 
   116  0193                     	;# 
   117  0193                     	;# 
   118  0194                     	;# 
   119  0195                     	;# 
   120  0196                     	;# 
   121  0199                     	;# 
   122  019A                     	;# 
   123  019B                     	;# 
   124  019B                     	;# 
   125  019B                     	;# 
   126  019B                     	;# 
   127  019C                     	;# 
   128  019C                     	;# 
   129  019D                     	;# 
   130  019E                     	;# 
   131  019F                     	;# 
   132  020C                     	;# 
   133  020D                     	;# 
   134  0211                     	;# 
   135  0211                     	;# 
   136  0212                     	;# 
   137  0212                     	;# 
   138  0213                     	;# 
   139  0213                     	;# 
   140  0214                     	;# 
   141  0214                     	;# 
   142  0215                     	;# 
   143  0215                     	;# 
   144  0215                     	;# 
   145  0216                     	;# 
   146  0216                     	;# 
   147  0217                     	;# 
   148  0217                     	;# 
   149  0219                     	;# 
   150  021A                     	;# 
   151  021B                     	;# 
   152  021C                     	;# 
   153  021D                     	;# 
   154  021E                     	;# 
   155  021F                     	;# 
   156  0291                     	;# 
   157  0291                     	;# 
   158  0292                     	;# 
   159  0293                     	;# 
   160  0294                     	;# 
   161  0295                     	;# 
   162  0295                     	;# 
   163  0296                     	;# 
   164  0298                     	;# 
   165  0298                     	;# 
   166  0299                     	;# 
   167  029A                     	;# 
   168  029B                     	;# 
   169  029C                     	;# 
   170  029C                     	;# 
   171  029D                     	;# 
   172  029E                     	;# 
   173  029E                     	;# 
   174  0311                     	;# 
   175  0311                     	;# 
   176  0312                     	;# 
   177  0313                     	;# 
   178  0318                     	;# 
   179  0318                     	;# 
   180  0319                     	;# 
   181  031A                     	;# 
   182  0394                     	;# 
   183  0395                     	;# 
   184  0396                     	;# 
   185  039A                     	;# 
   186  039C                     	;# 
   187  039D                     	;# 
   188  039E                     	;# 
   189  039F                     	;# 
   190  0415                     	;# 
   191  0416                     	;# 
   192  0417                     	;# 
   193  041C                     	;# 
   194  041D                     	;# 
   195  041E                     	;# 
   196  0FE4                     	;# 
   197  0FE5                     	;# 
   198  0FE6                     	;# 
   199  0FE7                     	;# 
   200  0FE8                     	;# 
   201  0FE9                     	;# 
   202  0FEA                     	;# 
   203  0FEB                     	;# 
   204  0FED                     	;# 
   205  0FEE                     	;# 
   206  0FEF                     	;# 
   207                           
   208                           	psect	eeprom_data
   209  0000  0000 0002 0003 0005 0006 0008 0009 000B 	db	0,2,3,5,6,8,9,11	;# 
   210  0008  000D 000E 0010 0011 0013 0014 0016 0017 	db	13,14,16,17,19,20,22,23	;# 
   211  0010  0019 001A 001C 001D 001F 0020 0022 0023 	db	25,26,28,29,31,32,34,35	;# 
   212  0018  0025 0026 0028 0029 002B 002C 002D 002F 	db	37,38,40,41,43,44,45,47	;# 
   213  0020  0030 0032 0033 0034 0036 0037 0038 003A 	db	48,50,51,52,54,55,56,58	;# 
   214  0028  003B 003C 003D 003F 0040 0041 0042 0043 	db	59,60,61,63,64,65,66,67	;# 
   215  0030  0044 0046 0047 0048 0049 004A 004B 004C 	db	68,70,71,72,73,74,75,76	;# 
   216  0038  004D 004E 004F 0050 0051 0052 0053 0054 	db	77,78,79,80,81,82,83,84	;# 
   217  0040  0054 0055 0056 0057 0058 0058 0059 005A 	db	84,85,86,87,88,88,89,90	;# 
   218  0048  005A 005B 005C 005C 005D 005E 005E 005F 	db	90,91,92,92,93,94,94,95	;# 
   219  0050  005F 0060 0060 0060 0061 0061 0062 0062 	db	95,96,96,96,97,97,98,98	;# 
   220  0058  0062 0063 0063 0063 0063 0063 0064 0064 	db	98,99,99,99,99,99,100,100	;# 
   221  0060  0064 0064 0064 0064 0064 0000 0000 0000 	db	100,100,100,100,100,0,0,0	;# 
   222  0000                     	;# 
   223  0001                     	;# 
   224  0002                     	;# 
   225  0003                     	;# 
   226  0004                     	;# 
   227  0005                     	;# 
   228  0006                     	;# 
   229  0007                     	;# 
   230  0008                     	;# 
   231  0009                     	;# 
   232  000A                     	;# 
   233  000B                     	;# 
   234  000C                     	;# 
   235  000D                     	;# 
   236  0011                     	;# 
   237  0012                     	;# 
   238  0013                     	;# 
   239  0014                     	;# 
   240  0015                     	;# 
   241  0016                     	;# 
   242  0016                     	;# 
   243  0017                     	;# 
   244  0018                     	;# 
   245  0019                     	;# 
   246  001A                     	;# 
   247  001B                     	;# 
   248  001C                     	;# 
   249  001E                     	;# 
   250  001F                     	;# 
   251  008C                     	;# 
   252  008D                     	;# 
   253  0091                     	;# 
   254  0092                     	;# 
   255  0093                     	;# 
   256  0094                     	;# 
   257  0095                     	;# 
   258  0096                     	;# 
   259  0097                     	;# 
   260  0098                     	;# 
   261  0099                     	;# 
   262  009A                     	;# 
   263  009B                     	;# 
   264  009B                     	;# 
   265  009C                     	;# 
   266  009D                     	;# 
   267  009E                     	;# 
   268  010C                     	;# 
   269  010D                     	;# 
   270  0111                     	;# 
   271  0112                     	;# 
   272  0113                     	;# 
   273  0114                     	;# 
   274  0115                     	;# 
   275  0116                     	;# 
   276  0117                     	;# 
   277  0118                     	;# 
   278  0119                     	;# 
   279  011A                     	;# 
   280  011B                     	;# 
   281  011D                     	;# 
   282  011E                     	;# 
   283  018C                     	;# 
   284  018D                     	;# 
   285  0191                     	;# 
   286  0191                     	;# 
   287  0192                     	;# 
   288  0193                     	;# 
   289  0193                     	;# 
   290  0193                     	;# 
   291  0194                     	;# 
   292  0195                     	;# 
   293  0196                     	;# 
   294  0199                     	;# 
   295  019A                     	;# 
   296  019B                     	;# 
   297  019B                     	;# 
   298  019B                     	;# 
   299  019B                     	;# 
   300  019C                     	;# 
   301  019C                     	;# 
   302  019D                     	;# 
   303  019E                     	;# 
   304  019F                     	;# 
   305  020C                     	;# 
   306  020D                     	;# 
   307  0211                     	;# 
   308  0211                     	;# 
   309  0212                     	;# 
   310  0212                     	;# 
   311  0213                     	;# 
   312  0213                     	;# 
   313  0214                     	;# 
   314  0214                     	;# 
   315  0215                     	;# 
   316  0215                     	;# 
   317  0215                     	;# 
   318  0216                     	;# 
   319  0216                     	;# 
   320  0217                     	;# 
   321  0217                     	;# 
   322  0219                     	;# 
   323  021A                     	;# 
   324  021B                     	;# 
   325  021C                     	;# 
   326  021D                     	;# 
   327  021E                     	;# 
   328  021F                     	;# 
   329  0291                     	;# 
   330  0291                     	;# 
   331  0292                     	;# 
   332  0293                     	;# 
   333  0294                     	;# 
   334  0295                     	;# 
   335  0295                     	;# 
   336  0296                     	;# 
   337  0298                     	;# 
   338  0298                     	;# 
   339  0299                     	;# 
   340  029A                     	;# 
   341  029B                     	;# 
   342  029C                     	;# 
   343  029C                     	;# 
   344  029D                     	;# 
   345  029E                     	;# 
   346  029E                     	;# 
   347  0311                     	;# 
   348  0311                     	;# 
   349  0312                     	;# 
   350  0313                     	;# 
   351  0318                     	;# 
   352  0318                     	;# 
   353  0319                     	;# 
   354  031A                     	;# 
   355  0394                     	;# 
   356  0395                     	;# 
   357  0396                     	;# 
   358  039A                     	;# 
   359  039C                     	;# 
   360  039D                     	;# 
   361  039E                     	;# 
   362  039F                     	;# 
   363  0415                     	;# 
   364  0416                     	;# 
   365  0417                     	;# 
   366  041C                     	;# 
   367  041D                     	;# 
   368  041E                     	;# 
   369  0FE4                     	;# 
   370  0FE5                     	;# 
   371  0FE6                     	;# 
   372  0FE7                     	;# 
   373  0FE8                     	;# 
   374  0FE9                     	;# 
   375  0FEA                     	;# 
   376  0FEB                     	;# 
   377  0FED                     	;# 
   378  0FEE                     	;# 
   379  0FEF                     	;# 
   380                           
   381                           	psect	idataBANK0
   382  0FA0                     __pidataBANK0:	
   383                           
   384                           ;initializer for _i_u_offs
   385  0FA0  342C               	retlw	44
   386  0FA1  34CF               	retlw	207
   387  0FA2  34FF               	retlw	255
   388                           
   389                           ;initializer for _i_u_diode_offs
   390  0FA3  3407               	retlw	7
   391                           
   392                           	psect	stringtext
   393  07FF                     __pstringtext:	
   394  07FF                     _get_shift_byte:	
   395  07FF  3481               	retlw	129
   396  0800  34BD               	retlw	189
   397  0801  3413               	retlw	19
   398  0802  3419               	retlw	25
   399  0803  342D               	retlw	45
   400  0804  3449               	retlw	73
   401  0805  3441               	retlw	65
   402  0806  349D               	retlw	157
   403  0807  3401               	retlw	1
   404  0808  3409               	retlw	9
   405  0809                     __end_of_get_shift_byte:	
   406  0016                     _TMR1	set	22
   407  000C                     _PORTA	set	12
   408  000D                     _PORTB	set	13
   409  001B                     _PR2	set	27
   410  0095                     _C1IF	set	149
   411  0096                     _C2IF	set	150
   412  005F                     _GIE	set	95
   413  005B                     _IOCIE	set	91
   414  005E                     _PEIE	set	94
   415  0063                     _RA3	set	99
   416  0064                     _RA4	set	100
   417  0066                     _RA6	set	102
   418  0067                     _RA7	set	103
   419  006B                     _RB3	set	107
   420  008D                     _RCIF	set	141
   421  00C4                     _T1CKPS0	set	196
   422  00C5                     _T1CKPS1	set	197
   423  00E0                     _T2CKPS0	set	224
   424  00E1                     _T2CKPS1	set	225
   425  00E3                     _T2OUTPS0	set	227
   426  00E4                     _T2OUTPS1	set	228
   427  00E5                     _T2OUTPS2	set	229
   428  00E6                     _T2OUTPS3	set	230
   429  00C6                     _TMR1CS0	set	198
   430  00C7                     _TMR1CS1	set	199
   431  0088                     _TMR1IF	set	136
   432  00C0                     _TMR1ON	set	192
   433  0089                     _TMR2IF	set	137
   434  00E2                     _TMR2ON	set	226
   435  0099                     _TMR4IF	set	153
   436  009B                     _ADRES	set	155
   437  008C                     _TRISA	set	140
   438  008D                     _TRISB	set	141
   439  008D                     _TRISBbits	set	141
   440  04F4                     _ADCS0	set	1268
   441  04F5                     _ADCS1	set	1269
   442  04F6                     _ADCS2	set	1270
   443  04F7                     _ADFM	set	1271
   444  04F2                     _ADNREF	set	1266
   445  04E8                     _ADON	set	1256
   446  04F0                     _ADPREF0	set	1264
   447  04F1                     _ADPREF1	set	1265
   448  0495                     _C1IE	set	1173
   449  0496                     _C2IE	set	1174
   450  04EA                     _CHS0	set	1258
   451  04EB                     _CHS1	set	1259
   452  04EC                     _CHS2	set	1260
   453  04ED                     _CHS3	set	1261
   454  04EE                     _CHS4	set	1262
   455  04E9                     _GO_nDONE	set	1257
   456  04CB                     _IRCF0	set	1227
   457  04CC                     _IRCF1	set	1228
   458  04CD                     _IRCF2	set	1229
   459  04CE                     _IRCF3	set	1230
   460  048D                     _RCIE	set	1165
   461  04C8                     _SCS0	set	1224
   462  04C9                     _SCS1	set	1225
   463  04CF                     _SPLLEN	set	1231
   464  0488                     _TMR1IE	set	1160
   465  0489                     _TMR2IE	set	1161
   466  04AF                     _nWPUEN	set	1199
   467  08B8                     _ADFVR0	set	2232
   468  08B9                     _ADFVR1	set	2233
   469  0897                     _C1INTP	set	2199
   470  0890                     _C1NCH0	set	2192
   471  0891                     _C1NCH1	set	2193
   472  088F                     _C1ON	set	2191
   473  0894                     _C1PCH0	set	2196
   474  0895                     _C1PCH1	set	2197
   475  08A7                     _C2INTP	set	2215
   476  08A0                     _C2NCH0	set	2208
   477  08A1                     _C2NCH1	set	2209
   478  089F                     _C2ON	set	2207
   479  08A4                     _C2PCH0	set	2212
   480  08A5                     _C2PCH1	set	2213
   481  08E8                     _CCP1SEL	set	2280
   482  08BA                     _CDAFVR0	set	2234
   483  08BB                     _CDAFVR1	set	2235
   484  08BF                     _FVREN	set	2239
   485  08BE                     _FVRRDY	set	2238
   486  08EF                     _RXDTSEL	set	2287
   487  08F0                     _TXCKSEL	set	2288
   488  0191                     _EEADR	set	401
   489  018C                     _ANSELA	set	396
   490  018D                     _ANSELB	set	397
   491  0195                     _EECON1	set	405
   492  0193                     _EEDATA	set	403
   493  0199                     _RCREG	set	409
   494  019B                     _SPBRG	set	411
   495  019A                     _TXREG	set	410
   496  0CFB                     _BRG16	set	3323
   497  0CF2                     _BRGH	set	3314
   498  0CEC                     _CREN	set	3308
   499  0CA8                     _RD	set	3240
   500  0CEF                     _SPEN	set	3311
   501  0CF4                     _SYNC	set	3316
   502  0CF1                     _TRMT	set	3313
   503  0CF5                     _TXEN	set	3317
   504  0CA9                     _WR	set	3241
   505  020D                     _WPUB	set	525
   506  0293                     _CCP1CON	set	659
   507  0291                     _CCPR1L	set	657
   508  14F0                     _C1TSEL0	set	5360
   509  14F1                     _C1TSEL1	set	5361
   510  149C                     _DC1B0	set	5276
   511  149D                     _DC1B1	set	5277
   512  1CAD                     _IOCBN5	set	7341
   513  20B8                     _T4CKPS0	set	8376
   514  20B9                     _T4CKPS1	set	8377
   515  20BA                     _TMR4ON	set	8378
   516                           
   517                           ; #config settings
   518  0000                     
   519                           	psect	cinit
   520  0057                     start_initialization:	
   521  0057                     __initialization:	
   522                           
   523                           ; Clear objects allocated to COMMON
   524  0057  01FA               	clrf	__pbssCOMMON& (0+127)
   525  0058  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   526                           
   527                           ; Clear objects allocated to BANK0
   528  0059  01E3               	clrf	__pbssBANK0& (0+127)
   529  005A  01E4               	clrf	(__pbssBANK0+1)& (0+127)
   530  005B  01E5               	clrf	(__pbssBANK0+2)& (0+127)
   531  005C  01E6               	clrf	(__pbssBANK0+3)& (0+127)
   532  005D  01E7               	clrf	(__pbssBANK0+4)& (0+127)
   533  005E  01E8               	clrf	(__pbssBANK0+5)& (0+127)
   534  005F  01E9               	clrf	(__pbssBANK0+6)& (0+127)
   535  0060  01EA               	clrf	(__pbssBANK0+7)& (0+127)
   536  0061  01EB               	clrf	(__pbssBANK0+8)& (0+127)
   537                           
   538                           ; Clear objects allocated to BANK1
   539  0062  0021               	movlb	1	; select bank1
   540  0063  01A0               	clrf	__pbssBANK1& (0+127)
   541  0064  01A1               	clrf	(__pbssBANK1+1)& (0+127)
   542  0065  01A2               	clrf	(__pbssBANK1+2)& (0+127)
   543  0066  01A3               	clrf	(__pbssBANK1+3)& (0+127)
   544  0067  01A4               	clrf	(__pbssBANK1+4)& (0+127)
   545  0068  01A5               	clrf	(__pbssBANK1+5)& (0+127)
   546  0069  01A6               	clrf	(__pbssBANK1+6)& (0+127)
   547  006A  01A7               	clrf	(__pbssBANK1+7)& (0+127)
   548                           
   549                           ; Initialize objects allocated to BANK0
   550  006B  0020               	movlb	0	; select bank0
   551  006C  318F  27A0  3180   	fcall	__pidataBANK0	;fetch initializer
   552  006F  00EC               	movwf	__pdataBANK0& (0+127)
   553  0070  318F  27A1  3180   	fcall	__pidataBANK0+1	;fetch initializer
   554  0073  00ED               	movwf	(__pdataBANK0+1)& (0+127)
   555  0074  318F  27A2  3180   	fcall	__pidataBANK0+2	;fetch initializer
   556  0077  00EE               	movwf	(__pdataBANK0+2)& (0+127)
   557  0078  318F  27A3         	fcall	__pidataBANK0+3	;fetch initializer
   558  007A  00EF               	movwf	(__pdataBANK0+3)& (0+127)
   559  007B                     end_of_initialization:	
   560                           ;End of C runtime variable initialization code
   561                           
   562  007B                     __end_of__initialization:	
   563  007B  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   564  007C  0020               	movlb	0
   565  007D  3180  287F         	ljmp	_main	;jump to C main() function
   566                           
   567                           	psect	bssCOMMON
   568  007A                     __pbssCOMMON:	
   569  007A                     _buffpos:	
   570  007A                     	ds	1
   571  007B                     _readpos:	
   572  007B                     	ds	1
   573                           
   574                           	psect	bssBANK0
   575  0063                     __pbssBANK0:	
   576  0063                     _curr_time:	
   577  0063                     	ds	2
   578  0065                     _led_rest:	
   579  0065                     	ds	2
   580  0067                     _volt_time:	
   581  0067                     	ds	2
   582  0069                     _flag:	
   583  0069                     	ds	1
   584  006A                     _mode:	
   585  006A                     	ds	1
   586  006B                     _reading:	
   587  006B                     	ds	1
   588                           
   589                           	psect	dataBANK0
   590  006C                     __pdataBANK0:	
   591  006C                     _i_u_offs:	
   592  006C                     	ds	3
   593  006F                     _i_u_diode_offs:	
   594  006F                     	ds	1
   595                           
   596                           	psect	bssBANK1
   597  00A0                     __pbssBANK1:	
   598  00A0                     _receive_buff:	
   599  00A0                     	ds	8
   600                           
   601                           	psect	cstackCOMMON
   602  0070                     __pcstackCOMMON:	
   603  0070                     ?_eeprom_read:	
   604  0070                     ?_initMessaging:	
   605                           ; 1 bytes @ 0x0
   606                           
   607  0070                     ?_sendUInt8:	
   608                           ; 1 bytes @ 0x0
   609                           
   610  0070                     ?_initPins:	
   611                           ; 1 bytes @ 0x0
   612                           
   613  0070                     ?_initADC:	
   614                           ; 1 bytes @ 0x0
   615                           
   616  0070                     ?_initTMR1:	
   617                           ; 1 bytes @ 0x0
   618                           
   619  0070                     ?_initFVR:	
   620                           ; 1 bytes @ 0x0
   621                           
   622  0070                     ?_initPWMTMR4:	
   623                           ; 1 bytes @ 0x0
   624                           
   625  0070                     ?_initCOMP1:	
   626                           ; 1 bytes @ 0x0
   627                           
   628  0070                     ?_initCOMP2:	
   629                           ; 1 bytes @ 0x0
   630                           
   631  0070                     ?_initBT:	
   632                           ; 1 bytes @ 0x0
   633                           
   634  0070                     ?_adc:	
   635                           ; 1 bytes @ 0x0
   636                           
   637  0070                     ?_readVoltage:	
   638                           ; 1 bytes @ 0x0
   639                           
   640  0070                     ?_so:	
   641                           ; 1 bytes @ 0x0
   642                           
   643  0070                     ?_sendColour:	
   644                           ; 1 bytes @ 0x0
   645                           
   646  0070                     ?_sin_:	
   647                           ; 1 bytes @ 0x0
   648                           
   649  0070                     ?_ISR:	
   650                           ; 1 bytes @ 0x0
   651                           
   652  0070                     ??_ISR:	
   653                           ; 1 bytes @ 0x0
   654                           
   655  0070                     ?_main:	
   656                           ; 1 bytes @ 0x0
   657                           
   658  0070                     ?__sendchar_:	
   659                           ; 1 bytes @ 0x0
   660                           
   661                           
   662                           ; 1 bytes @ 0x0
   663  0070                     	ds	2
   664  0072                     ??_eeprom_read:	
   665  0072                     ??_initMessaging:	
   666                           ; 1 bytes @ 0x2
   667                           
   668  0072                     ??_initPins:	
   669                           ; 1 bytes @ 0x2
   670                           
   671  0072                     ??_initADC:	
   672                           ; 1 bytes @ 0x2
   673                           
   674  0072                     ??_initTMR1:	
   675                           ; 1 bytes @ 0x2
   676                           
   677  0072                     ??_initFVR:	
   678                           ; 1 bytes @ 0x2
   679                           
   680  0072                     ??_initPWMTMR4:	
   681                           ; 1 bytes @ 0x2
   682                           
   683  0072                     ??_initCOMP1:	
   684                           ; 1 bytes @ 0x2
   685                           
   686  0072                     ??_initCOMP2:	
   687                           ; 1 bytes @ 0x2
   688                           
   689  0072                     ??_initBT:	
   690                           ; 1 bytes @ 0x2
   691                           
   692  0072                     ??_adc:	
   693                           ; 1 bytes @ 0x2
   694                           
   695  0072                     ??_readVoltage:	
   696                           ; 1 bytes @ 0x2
   697                           
   698  0072                     ??_so:	
   699                           ; 1 bytes @ 0x2
   700                           
   701  0072                     ??_sendColour:	
   702                           ; 1 bytes @ 0x2
   703                           
   704  0072                     ??__sendchar_:	
   705                           ; 1 bytes @ 0x2
   706                           
   707  0072                     ?_deltaT:	
   708                           ; 1 bytes @ 0x2
   709                           
   710  0072                     ?___awmod:	
   711                           ; 2 bytes @ 0x2
   712                           
   713  0072                     sendColour@c:	
   714                           ; 2 bytes @ 0x2
   715                           
   716  0072                     deltaT@tm_low:	
   717                           ; 1 bytes @ 0x2
   718                           
   719  0072                     ___awmod@divisor:	
   720                           ; 2 bytes @ 0x2
   721                           
   722                           
   723                           ; 2 bytes @ 0x2
   724  0072                     	ds	1
   725  0073                     ?_setLED:	
   726  0073                     adc@src:	
   727                           ; 1 bytes @ 0x3
   728                           
   729  0073                     so@data:	
   730                           ; 1 bytes @ 0x3
   731                           
   732  0073                     setLED@r:	
   733                           ; 1 bytes @ 0x3
   734                           
   735                           
   736                           ; 1 bytes @ 0x3
   737  0073                     	ds	1
   738  0074                     ?_readVdd:	
   739  0074                     so@c:	
   740                           ; 2 bytes @ 0x4
   741                           
   742  0074                     setLED@b:	
   743                           ; 1 bytes @ 0x4
   744                           
   745  0074                     __sendchar_@c:	
   746                           ; 1 bytes @ 0x4
   747                           
   748  0074                     deltaT@tm_high:	
   749                           ; 1 bytes @ 0x4
   750                           
   751  0074                     ___awmod@dividend:	
   752                           ; 2 bytes @ 0x4
   753                           
   754                           
   755                           ; 2 bytes @ 0x4
   756  0074                     	ds	1
   757  0075                     ??_sendUInt8:	
   758  0075                     ?_sendInt24:	
   759                           ; 1 bytes @ 0x5
   760                           
   761  0075                     ??_setLED:	
   762                           ; 1 bytes @ 0x5
   763                           
   764  0075                     ?_setUnit:	
   765                           ; 1 bytes @ 0x5
   766                           
   767  0075                     setLED@g:	
   768                           ; 1 bytes @ 0x5
   769                           
   770  0075                     sendUInt8@i:	
   771                           ; 1 bytes @ 0x5
   772                           
   773  0075                     eeprom_read@addr:	
   774                           ; 1 bytes @ 0x5
   775                           
   776  0075                     setUnit@u:	
   777                           ; 1 bytes @ 0x5
   778                           
   779  0075                     sendInt24@i:	
   780                           ; 3 bytes @ 0x5
   781                           
   782                           
   783                           ; 3 bytes @ 0x5
   784  0075                     	ds	1
   785  0076                     ??_readVdd:	
   786  0076                     ??_deltaT:	
   787                           ; 1 bytes @ 0x6
   788                           
   789  0076                     ??_sin_:	
   790                           ; 1 bytes @ 0x6
   791                           
   792  0076                     ??___awmod:	
   793                           ; 1 bytes @ 0x6
   794                           
   795  0076                     sin_@z:	
   796                           ; 1 bytes @ 0x6
   797                           
   798                           
   799                           ; 1 bytes @ 0x6
   800  0076                     	ds	1
   801  0077                     ?_sin:	
   802  0077                     ___awmod@counter:	
   803                           ; 1 bytes @ 0x7
   804                           
   805  0077                     sin@z:	
   806                           ; 1 bytes @ 0x7
   807                           
   808                           
   809                           ; 2 bytes @ 0x7
   810  0077                     	ds	1
   811  0078                     ??___wmul:	
   812  0078                     ___awmod@sign:	
   813                           ; 1 bytes @ 0x8
   814                           
   815  0078                     ___wmul@product:	
   816                           ; 1 bytes @ 0x8
   817                           
   818                           
   819                           ; 2 bytes @ 0x8
   820  0078                     	ds	1
   821  0079                     ??_sin:	
   822                           
   823                           ; 1 bytes @ 0x9
   824  0079                     	ds	1
   825  007A                     ??_cos:	
   826  007A                     ??___tmul:	
   827                           ; 1 bytes @ 0xA
   828                           
   829                           
   830                           	psect	cstackBANK0
   831  0020                     __pcstackBANK0:	
   832                           ; 1 bytes @ 0xA
   833                           
   834  0020                     ??_sendInt24:	
   835  0020                     ??_setUnit:	
   836                           ; 1 bytes @ 0x0
   837                           
   838  0020                     ?___wmul:	
   839                           ; 1 bytes @ 0x0
   840                           
   841  0020                     sin@buff:	
   842                           ; 2 bytes @ 0x0
   843                           
   844  0020                     ___wmul@multiplier:	
   845                           ; 2 bytes @ 0x0
   846                           
   847                           
   848                           ; 2 bytes @ 0x0
   849  0020                     	ds	2
   850  0022                     ?_cos:	
   851  0022                     cos@us:	
   852                           ; 1 bytes @ 0x2
   853                           
   854  0022                     ___wmul@multiplicand:	
   855                           ; 2 bytes @ 0x2
   856                           
   857                           
   858                           ; 2 bytes @ 0x2
   859  0022                     	ds	2
   860  0024                     ?___tmul:	
   861  0024                     ___tmul@multiplier:	
   862                           ; 3 bytes @ 0x4
   863                           
   864                           
   865                           ; 3 bytes @ 0x4
   866  0024                     	ds	3
   867  0027                     ___tmul@multiplicand:	
   868                           
   869                           ; 3 bytes @ 0x7
   870  0027                     	ds	3
   871  002A                     ___tmul@product:	
   872                           
   873                           ; 3 bytes @ 0xA
   874  002A                     	ds	3
   875  002D                     ?___atdiv:	
   876  002D                     ___atdiv@divisor:	
   877                           ; 3 bytes @ 0xD
   878                           
   879                           
   880                           ; 3 bytes @ 0xD
   881  002D                     	ds	3
   882  0030                     ___atdiv@dividend:	
   883                           
   884                           ; 3 bytes @ 0x10
   885  0030                     	ds	3
   886  0033                     ??___atdiv:	
   887                           
   888                           ; 1 bytes @ 0x13
   889  0033                     	ds	1
   890  0034                     ___atdiv@counter:	
   891                           
   892                           ; 1 bytes @ 0x14
   893  0034                     	ds	1
   894  0035                     ___atdiv@sign:	
   895                           
   896                           ; 1 bytes @ 0x15
   897  0035                     	ds	1
   898  0036                     ___atdiv@quotient:	
   899                           
   900                           ; 3 bytes @ 0x16
   901  0036                     	ds	3
   902  0039                     ?_abs:	
   903  0039                     ?_readCurrent:	
   904                           ; 2 bytes @ 0x19
   905                           
   906  0039                     abs@a:	
   907                           ; 3 bytes @ 0x19
   908                           
   909                           
   910                           ; 2 bytes @ 0x19
   911  0039                     	ds	2
   912  003B                     ??_abs:	
   913                           
   914                           ; 1 bytes @ 0x1B
   915  003B                     	ds	1
   916  003C                     ??_readCurrent:	
   917                           
   918                           ; 1 bytes @ 0x1C
   919  003C                     	ds	1
   920  003D                     ?___awdiv:	
   921  003D                     ___awdiv@divisor:	
   922                           ; 2 bytes @ 0x1D
   923                           
   924                           
   925                           ; 2 bytes @ 0x1D
   926  003D                     	ds	2
   927  003F                     ___awdiv@dividend:	
   928                           
   929                           ; 2 bytes @ 0x1F
   930  003F                     	ds	2
   931  0041                     ??___awdiv:	
   932                           
   933                           ; 1 bytes @ 0x21
   934  0041                     	ds	1
   935  0042                     ___awdiv@counter:	
   936                           
   937                           ; 1 bytes @ 0x22
   938  0042                     	ds	1
   939  0043                     ___awdiv@sign:	
   940                           
   941                           ; 1 bytes @ 0x23
   942  0043                     	ds	1
   943  0044                     ___awdiv@quotient:	
   944                           
   945                           ; 2 bytes @ 0x24
   946  0044                     	ds	2
   947  0046                     ?_setVal:	
   948  0046                     setVal@v:	
   949                           ; 1 bytes @ 0x26
   950                           
   951                           
   952                           ; 2 bytes @ 0x26
   953  0046                     	ds	2
   954  0048                     ??_setVal:	
   955                           
   956                           ; 1 bytes @ 0x28
   957  0048                     	ds	1
   958  0049                     setVal@i:	
   959                           
   960                           ; 1 bytes @ 0x29
   961  0049                     	ds	1
   962  004A                     ??_main:	
   963                           
   964                           ; 1 bytes @ 0x2A
   965  004A                     	ds	3
   966  004D                     main@voltage:	
   967                           
   968                           ; 3 bytes @ 0x2D
   969  004D                     	ds	3
   970  0050                     main@real:	
   971                           
   972                           ; 3 bytes @ 0x30
   973  0050                     	ds	3
   974  0053                     main@reactive:	
   975                           
   976                           ; 3 bytes @ 0x33
   977  0053                     	ds	3
   978  0056                     main@angle:	
   979                           
   980                           ; 3 bytes @ 0x36
   981  0056                     	ds	3
   982  0059                     main@bmode:	
   983                           
   984                           ; 2 bytes @ 0x39
   985  0059                     	ds	2
   986  005B                     main@current:	
   987                           
   988                           ; 3 bytes @ 0x3B
   989  005B                     	ds	3
   990  005E                     _main$840:	
   991                           
   992                           ; 2 bytes @ 0x3E
   993  005E                     	ds	2
   994  0060                     main@apparent:	
   995                           
   996                           ; 3 bytes @ 0x40
   997  0060                     	ds	3
   998                           
   999                           	psect	maintext
  1000  007F                     __pmaintext:	
  1001 ;;
  1002 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1003 ;;
  1004 ;; *************** function _main *****************
  1005 ;; Defined at:
  1006 ;;		line 689 in file "powerspy.c"
  1007 ;; Parameters:    Size  Location     Type
  1008 ;;		None
  1009 ;; Auto vars:     Size  Location     Type
  1010 ;;  apparent        3   64[BANK0 ] m
  1011 ;;  current         3   59[BANK0 ] m
  1012 ;;  angle           3   54[BANK0 ] m
  1013 ;;  reactive        3   51[BANK0 ] m
  1014 ;;  real            3   48[BANK0 ] m
  1015 ;;  voltage         3   45[BANK0 ] m
  1016 ;;  bmode           2   57[BANK0 ] int 
  1017 ;;  i               1    0        char 
  1018 ;; Return value:  Size  Location     Type
  1019 ;;                  1    wreg      void 
  1020 ;; Registers used:
  1021 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1022 ;; Tracked objects:
  1023 ;;		On entry : B1F/0
  1024 ;;		On exit  : 0/0
  1025 ;;		Unchanged: 0/0
  1026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1027 ;;      Params:         0       0       0       0       0       0
  1028 ;;      Locals:         0      22       0       0       0       0
  1029 ;;      Temps:          0       3       0       0       0       0
  1030 ;;      Totals:         0      25       0       0       0       0
  1031 ;;Total ram usage:       25 bytes
  1032 ;; Hardware stack levels required when called:    5
  1033 ;; This function calls:
  1034 ;;		___atdiv
  1035 ;;		___awdiv
  1036 ;;		___awmod
  1037 ;;		___tmul
  1038 ;;		___wmul
  1039 ;;		_abs
  1040 ;;		_cos
  1041 ;;		_deltaT
  1042 ;;		_initADC
  1043 ;;		_initBT
  1044 ;;		_initCOMP1
  1045 ;;		_initCOMP2
  1046 ;;		_initFVR
  1047 ;;		_initMessaging
  1048 ;;		_initPWMTMR4
  1049 ;;		_initPins
  1050 ;;		_initTMR1
  1051 ;;		_readCurrent
  1052 ;;		_readVdd
  1053 ;;		_readVoltage
  1054 ;;		_sendInt24
  1055 ;;		_sendUInt8
  1056 ;;		_setLED
  1057 ;;		_setUnit
  1058 ;;		_setVal
  1059 ;;		_sin
  1060 ;; This function is called by:
  1061 ;;		Startup code after reset
  1062 ;; This function uses a non-reentrant model
  1063 ;;
  1064                           
  1065                           
  1066                           ;psect for function _main
  1067  007F                     _main:	
  1068                           
  1069                           ;powerspy.c: 691: int bmode = 0;
  1070                           
  1071                           ;incstack = 0
  1072                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1073  007F  0020               	movlb	0	; select bank0
  1074  0080  01D9               	clrf	main@bmode
  1075  0081  01DA               	clrf	main@bmode+1
  1076                           
  1077                           ;powerspy.c: 692: int24_t angle;
  1078                           ;powerspy.c: 693: int24_t current;
  1079                           ;powerspy.c: 694: int24_t voltage;
  1080                           ;powerspy.c: 695: int24_t apparent;
  1081                           ;powerspy.c: 696: int24_t real;
  1082                           ;powerspy.c: 697: int24_t reactive;
  1083                           ;powerspy.c: 698: int8_t i;
  1084                           ;powerspy.c: 700: PEIE = 0;
  1085  0082  130B               	bcf	11,6	;volatile
  1086                           
  1087                           ;powerspy.c: 701: GIE = 0;
  1088  0083  138B               	bcf	11,7	;volatile
  1089                           
  1090                           ;powerspy.c: 703: initPins();
  1091  0084  3187  2733  3180   	fcall	_initPins
  1092                           
  1093                           ;powerspy.c: 704: initFVR();
  1094  0087  318F  27AF  3180   	fcall	_initFVR
  1095                           
  1096                           ;powerspy.c: 705: initADC();
  1097  008A  318F  27C2  3180   	fcall	_initADC
  1098                           
  1099                           ;powerspy.c: 706: initTMR1();
  1100  008D  318F  27CC  3180   	fcall	_initTMR1
  1101                           
  1102                           ;powerspy.c: 707: initPWMTMR4();
  1103  0090  3187  2753  3180   	fcall	_initPWMTMR4
  1104                           
  1105                           ;powerspy.c: 708: initCOMP1();
  1106  0093  318F  27D7  3180   	fcall	_initCOMP1
  1107                           
  1108                           ;powerspy.c: 709: initCOMP2();
  1109  0096  318F  27E4  3180   	fcall	_initCOMP2
  1110                           
  1111                           ;powerspy.c: 710: initBT();
  1112  0099  3187  27A6  3180   	fcall	_initBT
  1113                           
  1114                           ;powerspy.c: 711: initMessaging();
  1115  009C  318F  27A9  3180   	fcall	_initMessaging
  1116                           
  1117                           ;powerspy.c: 712: PEIE = 1;
  1118  009F  170B               	bsf	11,6	;volatile
  1119  00A0                     l3104:	
  1120                           ;powerspy.c: 715: while (1) {
  1121                           
  1122                           
  1123                           ;powerspy.c: 717: GIE = 1;
  1124  00A0  178B               	bsf	11,7	;volatile
  1125                           
  1126                           ;powerspy.c: 718: _delay((unsigned long)((50)*(32000000/4000.0)));
  1127  00A1  3003               	movlw	3
  1128  00A2  0020               	movlb	0	; select bank0
  1129  00A3  00CC               	movwf	??_main+2
  1130  00A4  3008               	movlw	8
  1131  00A5  00CB               	movwf	??_main+1
  1132  00A6  3078               	movlw	120
  1133  00A7  00CA               	movwf	??_main
  1134  00A8                     u3017:	
  1135  00A8  0BCA               	decfsz	??_main,f
  1136  00A9  28A8               	goto	u3017
  1137  00AA  0BCB               	decfsz	??_main+1,f
  1138  00AB  28A8               	goto	u3017
  1139  00AC  0BCC               	decfsz	??_main+2,f
  1140  00AD  28A8               	goto	u3017
  1141                           
  1142                           ;powerspy.c: 719: GIE = 0;
  1143  00AE  138B               	bcf	11,7	;volatile
  1144                           
  1145                           ;powerspy.c: 723: if ((flag & 0x02) && (flag & 0x01)) {
  1146  00AF  0020               	movlb	0	; select bank0
  1147  00B0  18E9               	btfsc	_flag,1	;volatile
  1148  00B1  1C69               	btfss	_flag,0	;volatile
  1149  00B2  2B1B               	goto	l380
  1150                           
  1151                           ;powerspy.c: 724: if (flag & 0x04)
  1152  00B3  1D69               	btfss	_flag,2	;volatile
  1153  00B4  28BD               	goto	l381
  1154                           
  1155                           ;powerspy.c: 725: angle = (deltaT(volt_time, curr_time) >> 2);
  1156  00B5  0868               	movf	_volt_time+1,w
  1157  00B6  00F3               	movwf	deltaT@tm_low+1
  1158  00B7  0867               	movf	_volt_time,w
  1159  00B8  00F2               	movwf	deltaT@tm_low
  1160  00B9  0864               	movf	_curr_time+1,w
  1161  00BA  00F5               	movwf	deltaT@tm_high+1
  1162  00BB  0863               	movf	_curr_time,w
  1163  00BC  28C6               	goto	L2
  1164  00BD                     l381:	
  1165                           
  1166                           ;powerspy.c: 726: else if (flag & 0x08)
  1167  00BD  1DE9               	btfss	_flag,3	;volatile
  1168  00BE  28D8               	goto	l3120
  1169                           
  1170                           ;powerspy.c: 727: angle = (deltaT(curr_time, volt_time) >> 2);
  1171  00BF  0864               	movf	_curr_time+1,w
  1172  00C0  00F3               	movwf	deltaT@tm_low+1
  1173  00C1  0863               	movf	_curr_time,w
  1174  00C2  00F2               	movwf	deltaT@tm_low
  1175  00C3  0868               	movf	_volt_time+1,w
  1176  00C4  00F5               	movwf	deltaT@tm_high+1
  1177  00C5  0867               	movf	_volt_time,w
  1178  00C6                     L2:	
  1179  00C6  00F4               	movwf	deltaT@tm_high
  1180  00C7  3186  26BC  3180   	fcall	_deltaT
  1181  00CA  0872               	movf	?_deltaT,w
  1182  00CB  0020               	movlb	0	; select bank0
  1183  00CC  00CA               	movwf	??_main
  1184  00CD  0873               	movf	?_deltaT+1,w
  1185  00CE  00CB               	movwf	??_main+1
  1186  00CF  36CB               	lsrf	??_main+1,f
  1187  00D0  0CCA               	rrf	??_main,f
  1188  00D1  36CB               	lsrf	??_main+1,f
  1189  00D2  0CCA               	rrf	??_main,f
  1190  00D3  084A               	movf	??_main,w
  1191  00D4  00D6               	movwf	main@angle
  1192  00D5  084B               	movf	??_main+1,w
  1193  00D6  00D7               	movwf	main@angle+1
  1194  00D7  01D8               	clrf	main@angle+2
  1195  00D8                     l3120:	
  1196                           
  1197                           ;powerspy.c: 729: flag &= 0xf0;
  1198  00D8  30F0               	movlw	240
  1199  00D9  00CA               	movwf	??_main
  1200  00DA  084A               	movf	??_main,w
  1201  00DB  05E9               	andwf	_flag,f	;volatile
  1202                           
  1203                           ;powerspy.c: 734: i_u_offs = readVdd() * 5;
  1204  00DC  3187  27BD  3180   	fcall	_readVdd
  1205  00DF  0875               	movf	?_readVdd+1,w
  1206  00E0  0020               	movlb	0	; select bank0
  1207  00E1  00A1               	movwf	___wmul@multiplier+1
  1208  00E2  0874               	movf	?_readVdd,w
  1209  00E3  00A0               	movwf	___wmul@multiplier
  1210  00E4  3005               	movlw	5
  1211  00E5  00A2               	movwf	___wmul@multiplicand
  1212  00E6  3000               	movlw	0
  1213  00E7  00A3               	movwf	___wmul@multiplicand+1
  1214  00E8  3187  2772  3180   	fcall	___wmul
  1215  00EB  0020               	movlb	0	; select bank0
  1216  00EC  0820               	movf	?___wmul,w
  1217  00ED  00EC               	movwf	_i_u_offs
  1218  00EE  0821               	movf	?___wmul+1,w
  1219  00EF  00ED               	movwf	_i_u_offs+1
  1220  00F0  01EE               	clrf	_i_u_offs+2
  1221                           
  1222                           ;powerspy.c: 735: i_u_offs >>= 1;
  1223  00F1  3001               	movlw	1
  1224  00F2  00CA               	movwf	??_main
  1225  00F3                     u2985:	
  1226  00F3  37EE               	asrf	_i_u_offs+2,f
  1227  00F4  0CED               	rrf	_i_u_offs+1,f
  1228  00F5  0CEC               	rrf	_i_u_offs,f
  1229  00F6  0BCA               	decfsz	??_main,f
  1230  00F7  28F3               	goto	u2985
  1231                           
  1232                           ;powerspy.c: 736: i_u_offs = -i_u_offs;
  1233  00F8  09EC               	comf	_i_u_offs,f
  1234  00F9  09ED               	comf	_i_u_offs+1,f
  1235  00FA  09EE               	comf	_i_u_offs+2,f
  1236  00FB  0AEC               	incf	_i_u_offs,f
  1237  00FC  1903               	skipnz
  1238  00FD  0AED               	incf	_i_u_offs+1,f
  1239  00FE  1903               	skipnz
  1240  00FF  0AEE               	incf	_i_u_offs+2,f
  1241                           
  1242                           ;powerspy.c: 738: sendUInt8('s');
  1243  0100  3073               	movlw	115
  1244  0101  3187  27F2  3180   	fcall	_sendUInt8
  1245                           
  1246                           ;powerspy.c: 739: sendInt24(ADRES);
  1247  0104  0021               	movlb	1	; select bank1
  1248  0105  081B               	movf	27,w	;volatile
  1249  0106  00F5               	movwf	sendInt24@i
  1250  0107  081C               	movf	28,w	;volatile
  1251  0108  00F6               	movwf	sendInt24@i+1
  1252  0109  01F7               	clrf	sendInt24@i+2
  1253  010A  3186  268A  3180   	fcall	_sendInt24
  1254                           
  1255                           ;powerspy.c: 741: current = readCurrent();
  1256  010D  3185  256F  3180   	fcall	_readCurrent
  1257  0110  0020               	movlb	0	; select bank0
  1258  0111  0839               	movf	?_readCurrent,w
  1259  0112  00DB               	movwf	main@current
  1260  0113  083A               	movf	?_readCurrent+1,w
  1261  0114  00DC               	movwf	main@current+1
  1262  0115  083B               	movf	?_readCurrent+2,w
  1263  0116  00DD               	movwf	main@current+2
  1264                           
  1265                           ;powerspy.c: 742: voltage = readVoltage();
  1266  0117  3180  2002  3180   	fcall	_readVoltage
  1267  011A  0020               	movlb	0	; select bank0
  1268  011B  00CA               	movwf	??_main
  1269  011C  01CB               	clrf	??_main+1
  1270  011D  01CC               	clrf	??_main+2
  1271  011E  084A               	movf	??_main,w
  1272  011F  00CD               	movwf	main@voltage
  1273  0120  084B               	movf	??_main+1,w
  1274  0121  00CE               	movwf	main@voltage+1
  1275  0122  084C               	movf	??_main+2,w
  1276  0123  00CF               	movwf	main@voltage+2
  1277                           
  1278                           ;powerspy.c: 743: apparent = voltage * current;
  1279  0124  084D               	movf	main@voltage,w
  1280  0125  00A4               	movwf	___tmul@multiplier
  1281  0126  084E               	movf	main@voltage+1,w
  1282  0127  00A5               	movwf	___tmul@multiplier+1
  1283  0128  084F               	movf	main@voltage+2,w
  1284  0129  00A6               	movwf	___tmul@multiplier+2
  1285  012A  085B               	movf	main@current,w
  1286  012B  00A7               	movwf	___tmul@multiplicand
  1287  012C  085C               	movf	main@current+1,w
  1288  012D  00A8               	movwf	___tmul@multiplicand+1
  1289  012E  085D               	movf	main@current+2,w
  1290  012F  00A9               	movwf	___tmul@multiplicand+2
  1291  0130  3186  26E6  3180   	fcall	___tmul
  1292  0133  0020               	movlb	0	; select bank0
  1293  0134  0824               	movf	?___tmul,w
  1294  0135  00E0               	movwf	main@apparent
  1295  0136  0825               	movf	?___tmul+1,w
  1296  0137  00E1               	movwf	main@apparent+1
  1297  0138  0826               	movf	?___tmul+2,w
  1298  0139  00E2               	movwf	main@apparent+2
  1299                           
  1300                           ;powerspy.c: 744: real = (apparent * cos(angle)) / (100);
  1301  013A  3064               	movlw	100
  1302  013B  00AD               	movwf	___atdiv@divisor
  1303  013C  3000               	movlw	0
  1304  013D  00AE               	movwf	___atdiv@divisor+1
  1305  013E  3000               	movlw	0
  1306  013F  00AF               	movwf	___atdiv@divisor+2
  1307  0140  0857               	movf	main@angle+1,w
  1308  0141  00A3               	movwf	cos@us+1
  1309  0142  0856               	movf	main@angle,w
  1310  0143  00A2               	movwf	cos@us
  1311  0144  318F  27B8  3180   	fcall	_cos
  1312  0147  0020               	movlb	0	; select bank0
  1313  0148  00CA               	movwf	??_main
  1314  0149  3000               	movlw	0
  1315  014A  1BCA               	btfsc	??_main,7
  1316  014B  30FF               	movlw	255
  1317  014C  00CB               	movwf	??_main+1
  1318  014D  00CC               	movwf	??_main+2
  1319  014E  084A               	movf	??_main,w
  1320  014F  00A4               	movwf	___tmul@multiplier
  1321  0150  084B               	movf	??_main+1,w
  1322  0151  00A5               	movwf	___tmul@multiplier+1
  1323  0152  084C               	movf	??_main+2,w
  1324  0153  00A6               	movwf	___tmul@multiplier+2
  1325  0154  0860               	movf	main@apparent,w
  1326  0155  00A7               	movwf	___tmul@multiplicand
  1327  0156  0861               	movf	main@apparent+1,w
  1328  0157  00A8               	movwf	___tmul@multiplicand+1
  1329  0158  0862               	movf	main@apparent+2,w
  1330  0159  00A9               	movwf	___tmul@multiplicand+2
  1331  015A  3186  26E6  3180   	fcall	___tmul
  1332  015D  0020               	movlb	0	; select bank0
  1333  015E  0824               	movf	?___tmul,w
  1334  015F  00B0               	movwf	___atdiv@dividend
  1335  0160  0825               	movf	?___tmul+1,w
  1336  0161  00B1               	movwf	___atdiv@dividend+1
  1337  0162  0826               	movf	?___tmul+2,w
  1338  0163  00B2               	movwf	___atdiv@dividend+2
  1339  0164  3184  2452  3180   	fcall	___atdiv
  1340  0167  0020               	movlb	0	; select bank0
  1341  0168  082D               	movf	?___atdiv,w
  1342  0169  00D0               	movwf	main@real
  1343  016A  082E               	movf	?___atdiv+1,w
  1344  016B  00D1               	movwf	main@real+1
  1345  016C  082F               	movf	?___atdiv+2,w
  1346  016D  00D2               	movwf	main@real+2
  1347                           
  1348                           ;powerspy.c: 745: reactive = (apparent * sin(angle)) / (100);
  1349  016E  3064               	movlw	100
  1350  016F  00AD               	movwf	___atdiv@divisor
  1351  0170  3000               	movlw	0
  1352  0171  00AE               	movwf	___atdiv@divisor+1
  1353  0172  3000               	movlw	0
  1354  0173  00AF               	movwf	___atdiv@divisor+2
  1355  0174  0857               	movf	main@angle+1,w
  1356  0175  00F8               	movwf	sin@z+1
  1357  0176  0856               	movf	main@angle,w
  1358  0177  00F7               	movwf	sin@z
  1359  0178  3184  24BD  3180   	fcall	_sin
  1360  017B  0020               	movlb	0	; select bank0
  1361  017C  00CA               	movwf	??_main
  1362  017D  3000               	movlw	0
  1363  017E  1BCA               	btfsc	??_main,7
  1364  017F  30FF               	movlw	255
  1365  0180  00CB               	movwf	??_main+1
  1366  0181  00CC               	movwf	??_main+2
  1367  0182  084A               	movf	??_main,w
  1368  0183  00A4               	movwf	___tmul@multiplier
  1369  0184  084B               	movf	??_main+1,w
  1370  0185  00A5               	movwf	___tmul@multiplier+1
  1371  0186  084C               	movf	??_main+2,w
  1372  0187  00A6               	movwf	___tmul@multiplier+2
  1373  0188  0860               	movf	main@apparent,w
  1374  0189  00A7               	movwf	___tmul@multiplicand
  1375  018A  0861               	movf	main@apparent+1,w
  1376  018B  00A8               	movwf	___tmul@multiplicand+1
  1377  018C  0862               	movf	main@apparent+2,w
  1378  018D  00A9               	movwf	___tmul@multiplicand+2
  1379  018E  3186  26E6  3180   	fcall	___tmul
  1380  0191  0020               	movlb	0	; select bank0
  1381  0192  0824               	movf	?___tmul,w
  1382  0193  00B0               	movwf	___atdiv@dividend
  1383  0194  0825               	movf	?___tmul+1,w
  1384  0195  00B1               	movwf	___atdiv@dividend+1
  1385  0196  0826               	movf	?___tmul+2,w
  1386  0197  00B2               	movwf	___atdiv@dividend+2
  1387  0198  3184  2452  3180   	fcall	___atdiv
  1388  019B  0020               	movlb	0	; select bank0
  1389  019C  082D               	movf	?___atdiv,w
  1390  019D  00D3               	movwf	main@reactive
  1391  019E  082E               	movf	?___atdiv+1,w
  1392  019F  00D4               	movwf	main@reactive+1
  1393  01A0  082F               	movf	?___atdiv+2,w
  1394  01A1  00D5               	movwf	main@reactive+2
  1395                           
  1396                           ;powerspy.c: 748: sendUInt8('C');
  1397  01A2  3043               	movlw	67
  1398  01A3  3187  27F2  3180   	fcall	_sendUInt8
  1399                           
  1400                           ;powerspy.c: 749: sendInt24(ADRES);
  1401  01A6  0021               	movlb	1	; select bank1
  1402  01A7  081B               	movf	27,w	;volatile
  1403  01A8  00F5               	movwf	sendInt24@i
  1404  01A9  081C               	movf	28,w	;volatile
  1405  01AA  00F6               	movwf	sendInt24@i+1
  1406  01AB  01F7               	clrf	sendInt24@i+2
  1407  01AC  3186  268A  3180   	fcall	_sendInt24
  1408                           
  1409                           ;powerspy.c: 750: sendUInt8('o');
  1410  01AF  306F               	movlw	111
  1411  01B0  3187  27F2  3180   	fcall	_sendUInt8
  1412                           
  1413                           ;powerspy.c: 751: sendInt24(i_u_offs);
  1414  01B3  0020               	movlb	0	; select bank0
  1415  01B4  086C               	movf	_i_u_offs,w
  1416  01B5  00F5               	movwf	sendInt24@i
  1417  01B6  086D               	movf	_i_u_offs+1,w
  1418  01B7  00F6               	movwf	sendInt24@i+1
  1419  01B8  086E               	movf	_i_u_offs+2,w
  1420  01B9  00F7               	movwf	sendInt24@i+2
  1421  01BA  3186  268A  3180   	fcall	_sendInt24
  1422                           
  1423                           ;powerspy.c: 752: sendUInt8('c');
  1424  01BD  3063               	movlw	99
  1425  01BE  3187  27F2  3180   	fcall	_sendUInt8
  1426                           
  1427                           ;powerspy.c: 753: sendInt24(current);
  1428  01C1  0020               	movlb	0	; select bank0
  1429  01C2  085B               	movf	main@current,w
  1430  01C3  00F5               	movwf	sendInt24@i
  1431  01C4  085C               	movf	main@current+1,w
  1432  01C5  00F6               	movwf	sendInt24@i+1
  1433  01C6  085D               	movf	main@current+2,w
  1434  01C7  00F7               	movwf	sendInt24@i+2
  1435  01C8  3186  268A  3180   	fcall	_sendInt24
  1436                           
  1437                           ;powerspy.c: 754: sendUInt8('A');
  1438  01CB  3041               	movlw	65
  1439  01CC  3187  27F2  3180   	fcall	_sendUInt8
  1440                           
  1441                           ;powerspy.c: 755: sendInt24(apparent);
  1442  01CF  0020               	movlb	0	; select bank0
  1443  01D0  0860               	movf	main@apparent,w
  1444  01D1  00F5               	movwf	sendInt24@i
  1445  01D2  0861               	movf	main@apparent+1,w
  1446  01D3  00F6               	movwf	sendInt24@i+1
  1447  01D4  0862               	movf	main@apparent+2,w
  1448  01D5  00F7               	movwf	sendInt24@i+2
  1449  01D6  3186  268A  3180   	fcall	_sendInt24
  1450                           
  1451                           ;powerspy.c: 756: sendUInt8('r');
  1452  01D9  3072               	movlw	114
  1453  01DA  3187  27F2  3180   	fcall	_sendUInt8
  1454                           
  1455                           ;powerspy.c: 757: sendInt24(real);
  1456  01DD  0020               	movlb	0	; select bank0
  1457  01DE  0850               	movf	main@real,w
  1458  01DF  00F5               	movwf	sendInt24@i
  1459  01E0  0851               	movf	main@real+1,w
  1460  01E1  00F6               	movwf	sendInt24@i+1
  1461  01E2  0852               	movf	main@real+2,w
  1462  01E3  00F7               	movwf	sendInt24@i+2
  1463  01E4  3186  268A  3180   	fcall	_sendInt24
  1464                           
  1465                           ;powerspy.c: 758: sendUInt8('R');
  1466  01E7  3052               	movlw	82
  1467  01E8  3187  27F2  3180   	fcall	_sendUInt8
  1468                           
  1469                           ;powerspy.c: 759: sendInt24(reactive);
  1470  01EB  0020               	movlb	0	; select bank0
  1471  01EC  0853               	movf	main@reactive,w
  1472  01ED  00F5               	movwf	sendInt24@i
  1473  01EE  0854               	movf	main@reactive+1,w
  1474  01EF  00F6               	movwf	sendInt24@i+1
  1475  01F0  0855               	movf	main@reactive+2,w
  1476  01F1  00F7               	movwf	sendInt24@i+2
  1477  01F2  3186  268A  3180   	fcall	_sendInt24
  1478                           
  1479                           ;powerspy.c: 761: RA3 = 0;
  1480  01F5  0020               	movlb	0	; select bank0
  1481  01F6  118C               	bcf	12,3	;volatile
  1482                           
  1483                           ;powerspy.c: 762: switch (bmode) {
  1484  01F7  2AFF               	goto	l3204
  1485  01F8                     l3166:	
  1486                           ;powerspy.c: 764: default:
  1487                           
  1488                           ;powerspy.c: 763: case 0:
  1489                           
  1490                           
  1491                           ;powerspy.c: 765: setUnit(0xffffff);
  1492  01F8  30FF               	movlw	255
  1493  01F9  00F5               	movwf	setUnit@u
  1494  01FA  30FF               	movlw	255
  1495  01FB  00F6               	movwf	setUnit@u+1
  1496  01FC  30FF               	movlw	255
  1497  01FD  00F7               	movwf	setUnit@u+2
  1498  01FE  3187  270D  3180   	fcall	_setUnit
  1499                           
  1500                           ;powerspy.c: 766: setVal(0);
  1501  0201  3000               	movlw	0
  1502  0202  0020               	movlb	0	; select bank0
  1503  0203  00C6               	movwf	setVal@v
  1504  0204  00C7               	movwf	setVal@v+1
  1505  0205  3186  2656  3180   	fcall	_setVal
  1506                           
  1507                           ;powerspy.c: 767: setLED(0x00, 0x00, 0x00);
  1508  0208  01F3               	clrf	setLED@r
  1509  0209  01F4               	clrf	setLED@b
  1510  020A  3000               	movlw	0
  1511  020B  3187  27D0  3180   	fcall	_setLED
  1512                           
  1513                           ;powerspy.c: 768: break;
  1514  020E  2B19               	goto	l387
  1515  020F                     l3172:	
  1516                           ;powerspy.c: 769: case 1:
  1517                           
  1518                           
  1519                           ;powerspy.c: 770: setUnit(0b111001110101111001011111);
  1520  020F  305F               	movlw	95
  1521  0210  00F5               	movwf	setUnit@u
  1522  0211  305E               	movlw	94
  1523  0212  00F6               	movwf	setUnit@u+1
  1524  0213  30E7               	movlw	231
  1525  0214  00F7               	movwf	setUnit@u+2
  1526  0215  3187  270D  3180   	fcall	_setUnit
  1527                           
  1528                           ;powerspy.c: 771: setVal(abs(current) / 1000);
  1529  0218  30E8               	movlw	232
  1530  0219  0020               	movlb	0	; select bank0
  1531  021A  00BD               	movwf	___awdiv@divisor
  1532  021B  3003               	movlw	3
  1533  021C  00BE               	movwf	___awdiv@divisor+1
  1534  021D  085C               	movf	main@current+1,w
  1535  021E  00BA               	movwf	abs@a+1
  1536  021F  085B               	movf	main@current,w
  1537  0220  00B9               	movwf	abs@a
  1538  0221  318F  27F1  3180   	fcall	_abs
  1539  0224  0020               	movlb	0	; select bank0
  1540  0225  083A               	movf	?_abs+1,w
  1541  0226  00C0               	movwf	___awdiv@dividend+1
  1542  0227  0839               	movf	?_abs,w
  1543  0228  00BF               	movwf	___awdiv@dividend
  1544  0229  3185  251D  3180   	fcall	___awdiv
  1545  022C  0020               	movlb	0	; select bank0
  1546  022D  083E               	movf	?___awdiv+1,w
  1547  022E  00DF               	movwf	_main$840+1
  1548  022F  083D               	movf	?___awdiv,w
  1549  0230  00DE               	movwf	_main$840
  1550                           
  1551                           ;powerspy.c: 771: setVal(abs(current) / 1000);
  1552  0231  085F               	movf	_main$840+1,w
  1553  0232  00C7               	movwf	setVal@v+1
  1554  0233  085E               	movf	_main$840,w
  1555  0234  00C6               	movwf	setVal@v
  1556  0235  3186  2656  3180   	fcall	_setVal
  1557                           
  1558                           ;powerspy.c: 772: setLED(0x00, (0xff>>3), 0x00);
  1559  0238  301F               	movlw	31
  1560  0239  0020               	movlb	0	; select bank0
  1561  023A  00CA               	movwf	??_main
  1562  023B  084A               	movf	??_main,w
  1563  023C  00F3               	movwf	setLED@r
  1564  023D  01F4               	clrf	setLED@b
  1565  023E  3000               	movlw	0
  1566  023F  3187  27D0  3180   	fcall	_setLED
  1567                           
  1568                           ;powerspy.c: 773: break;
  1569  0242  2B19               	goto	l387
  1570  0243                     l3178:	
  1571                           ;powerspy.c: 774: case 5:
  1572                           
  1573                           
  1574                           ;powerspy.c: 775: setUnit(0b111011110101010101111111);
  1575  0243  307F               	movlw	127
  1576  0244  00F5               	movwf	setUnit@u
  1577  0245  3055               	movlw	85
  1578  0246  00F6               	movwf	setUnit@u+1
  1579  0247  30EF               	movlw	239
  1580  0248  00F7               	movwf	setUnit@u+2
  1581  0249  3187  270D  3180   	fcall	_setUnit
  1582                           
  1583                           ;powerspy.c: 776: setVal(abs(real) / 1000);
  1584  024C  30E8               	movlw	232
  1585  024D  0020               	movlb	0	; select bank0
  1586  024E  00BD               	movwf	___awdiv@divisor
  1587  024F  3003               	movlw	3
  1588  0250  00BE               	movwf	___awdiv@divisor+1
  1589  0251  0851               	movf	main@real+1,w
  1590  0252  00BA               	movwf	abs@a+1
  1591  0253  0850               	movf	main@real,w
  1592  0254  00B9               	movwf	abs@a
  1593  0255  318F  27F1  3180   	fcall	_abs
  1594  0258  0020               	movlb	0	; select bank0
  1595  0259  083A               	movf	?_abs+1,w
  1596  025A  00C0               	movwf	___awdiv@dividend+1
  1597  025B  0839               	movf	?_abs,w
  1598  025C  00BF               	movwf	___awdiv@dividend
  1599  025D  3185  251D  3180   	fcall	___awdiv
  1600  0260  0020               	movlb	0	; select bank0
  1601  0261  083E               	movf	?___awdiv+1,w
  1602  0262  00DF               	movwf	_main$840+1
  1603  0263  083D               	movf	?___awdiv,w
  1604  0264  00DE               	movwf	_main$840
  1605                           
  1606                           ;powerspy.c: 776: setVal(abs(real) / 1000);
  1607  0265  085F               	movf	_main$840+1,w
  1608  0266  00C7               	movwf	setVal@v+1
  1609  0267  085E               	movf	_main$840,w
  1610  0268  00C6               	movwf	setVal@v
  1611  0269  3186  2656  3180   	fcall	_setVal
  1612                           
  1613                           ;powerspy.c: 777: setLED((0xff>>3), 0x00, 0x00);
  1614  026C  01F3               	clrf	setLED@r
  1615  026D  01F4               	clrf	setLED@b
  1616  026E  301F               	movlw	31
  1617  026F  3187  27D0  3180   	fcall	_setLED
  1618                           
  1619                           ;powerspy.c: 778: break;
  1620  0272  2B19               	goto	l387
  1621  0273                     l3184:	
  1622                           ;powerspy.c: 779: case 4:
  1623                           
  1624                           
  1625                           ;powerspy.c: 780: setUnit((0b111111111101110101101111&0b111110101111111111111111));
  1626  0273  306F               	movlw	111
  1627  0274  00F5               	movwf	setUnit@u
  1628  0275  30DD               	movlw	221
  1629  0276  00F6               	movwf	setUnit@u+1
  1630  0277  30FA               	movlw	250
  1631  0278  00F7               	movwf	setUnit@u+2
  1632  0279  3187  270D  3180   	fcall	_setUnit
  1633                           
  1634                           ;powerspy.c: 781: setVal(abs(apparent) / 1000);
  1635  027C  30E8               	movlw	232
  1636  027D  0020               	movlb	0	; select bank0
  1637  027E  00BD               	movwf	___awdiv@divisor
  1638  027F  3003               	movlw	3
  1639  0280  00BE               	movwf	___awdiv@divisor+1
  1640  0281  0861               	movf	main@apparent+1,w
  1641  0282  00BA               	movwf	abs@a+1
  1642  0283  0860               	movf	main@apparent,w
  1643  0284  00B9               	movwf	abs@a
  1644  0285  318F  27F1  3180   	fcall	_abs
  1645  0288  0020               	movlb	0	; select bank0
  1646  0289  083A               	movf	?_abs+1,w
  1647  028A  00C0               	movwf	___awdiv@dividend+1
  1648  028B  0839               	movf	?_abs,w
  1649  028C  00BF               	movwf	___awdiv@dividend
  1650  028D  3185  251D  3180   	fcall	___awdiv
  1651  0290  0020               	movlb	0	; select bank0
  1652  0291  083E               	movf	?___awdiv+1,w
  1653  0292  00DF               	movwf	_main$840+1
  1654  0293  083D               	movf	?___awdiv,w
  1655  0294  00DE               	movwf	_main$840
  1656                           
  1657                           ;powerspy.c: 781: setVal(abs(apparent) / 1000);
  1658  0295  085F               	movf	_main$840+1,w
  1659  0296  00C7               	movwf	setVal@v+1
  1660  0297  085E               	movf	_main$840,w
  1661  0298  00C6               	movwf	setVal@v
  1662  0299  3186  2656  3180   	fcall	_setVal
  1663                           
  1664                           ;powerspy.c: 782: setLED(0x00, 0x00, (0xff>>3));
  1665  029C  01F3               	clrf	setLED@r
  1666  029D  301F               	movlw	31
  1667  029E  0020               	movlb	0	; select bank0
  1668  029F  00CA               	movwf	??_main
  1669  02A0  084A               	movf	??_main,w
  1670  02A1  00F4               	movwf	setLED@b
  1671  02A2  3000               	movlw	0
  1672  02A3  3187  27D0  3180   	fcall	_setLED
  1673                           
  1674                           ;powerspy.c: 783: break;
  1675  02A6  2B19               	goto	l387
  1676  02A7                     l3190:	
  1677                           ;powerspy.c: 784: case 6:
  1678                           
  1679                           
  1680                           ;powerspy.c: 785: setUnit((0b111111111101110101101111&0b111110101111111111111111));
  1681  02A7  306F               	movlw	111
  1682  02A8  00F5               	movwf	setUnit@u
  1683  02A9  30DD               	movlw	221
  1684  02AA  00F6               	movwf	setUnit@u+1
  1685  02AB  30FA               	movlw	250
  1686  02AC  00F7               	movwf	setUnit@u+2
  1687  02AD  3187  270D  3180   	fcall	_setUnit
  1688                           
  1689                           ;powerspy.c: 786: setVal(abs(reactive / 1000));
  1690  02B0  30E8               	movlw	232
  1691  02B1  0020               	movlb	0	; select bank0
  1692  02B2  00AD               	movwf	___atdiv@divisor
  1693  02B3  3003               	movlw	3
  1694  02B4  00AE               	movwf	___atdiv@divisor+1
  1695  02B5  3000               	movlw	0
  1696  02B6  00AF               	movwf	___atdiv@divisor+2
  1697  02B7  0853               	movf	main@reactive,w
  1698  02B8  00B0               	movwf	___atdiv@dividend
  1699  02B9  0854               	movf	main@reactive+1,w
  1700  02BA  00B1               	movwf	___atdiv@dividend+1
  1701  02BB  0855               	movf	main@reactive+2,w
  1702  02BC  00B2               	movwf	___atdiv@dividend+2
  1703  02BD  3184  2452  3180   	fcall	___atdiv
  1704  02C0  0020               	movlb	0	; select bank0
  1705  02C1  082E               	movf	?___atdiv+1,w
  1706  02C2  00BA               	movwf	abs@a+1
  1707  02C3  082D               	movf	?___atdiv,w
  1708  02C4  00B9               	movwf	abs@a
  1709  02C5  318F  27F1  3180   	fcall	_abs
  1710  02C8  0020               	movlb	0	; select bank0
  1711  02C9  083A               	movf	?_abs+1,w
  1712  02CA  00C7               	movwf	setVal@v+1
  1713  02CB  0839               	movf	?_abs,w
  1714  02CC  00C6               	movwf	setVal@v
  1715  02CD  3186  2656  3180   	fcall	_setVal
  1716                           
  1717                           ;powerspy.c: 787: setLED((0xff>>3), 0x00, (0xff>>3));
  1718  02D0  01F3               	clrf	setLED@r
  1719  02D1  301F               	movlw	31
  1720  02D2  0020               	movlb	0	; select bank0
  1721  02D3  00CA               	movwf	??_main
  1722  02D4  084A               	movf	??_main,w
  1723  02D5  00F4               	movwf	setLED@b
  1724  02D6  301F               	movlw	31
  1725  02D7  3187  27D0  3180   	fcall	_setLED
  1726                           
  1727                           ;powerspy.c: 788: break;
  1728  02DA  2B19               	goto	l387
  1729  02DB                     l3196:	
  1730                           ;powerspy.c: 789: case 2:
  1731                           
  1732                           
  1733                           ;powerspy.c: 790: setUnit(0b111111111101110101101111);
  1734  02DB  306F               	movlw	111
  1735  02DC  00F5               	movwf	setUnit@u
  1736  02DD  30DD               	movlw	221
  1737  02DE  00F6               	movwf	setUnit@u+1
  1738  02DF  30FF               	movlw	255
  1739  02E0  00F7               	movwf	setUnit@u+2
  1740  02E1  3187  270D  3180   	fcall	_setUnit
  1741                           
  1742                           ;powerspy.c: 791: setVal(abs(voltage));
  1743  02E4  0020               	movlb	0	; select bank0
  1744  02E5  084E               	movf	main@voltage+1,w
  1745  02E6  00BA               	movwf	abs@a+1
  1746  02E7  084D               	movf	main@voltage,w
  1747  02E8  00B9               	movwf	abs@a
  1748  02E9  318F  27F1  3180   	fcall	_abs
  1749  02EC  0020               	movlb	0	; select bank0
  1750  02ED  083A               	movf	?_abs+1,w
  1751  02EE  00C7               	movwf	setVal@v+1
  1752  02EF  0839               	movf	?_abs,w
  1753  02F0  00C6               	movwf	setVal@v
  1754  02F1  3186  2656  3180   	fcall	_setVal
  1755                           
  1756                           ;powerspy.c: 792: setLED((0xff>>3), (0xff>>3), 0x00);
  1757  02F4  301F               	movlw	31
  1758  02F5  0020               	movlb	0	; select bank0
  1759  02F6  00CA               	movwf	??_main
  1760  02F7  084A               	movf	??_main,w
  1761  02F8  00F3               	movwf	setLED@r
  1762  02F9  01F4               	clrf	setLED@b
  1763  02FA  301F               	movlw	31
  1764  02FB  3187  27D0  3180   	fcall	_setLED
  1765                           
  1766                           ;powerspy.c: 794: }
  1767                           
  1768                           ;powerspy.c: 793: break;
  1769  02FE  2B19               	goto	l387
  1770  02FF                     l3204:	
  1771                           
  1772                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1773                           ; Switch size 1, requested type "space"
  1774                           ; Number of cases is 1, Range of values is 0 to 0
  1775                           ; switch strategies available:
  1776                           ; Name         Instructions Cycles
  1777                           ; simple_byte            4     3 (average)
  1778                           ; direct_byte            8     6 (fixed)
  1779                           ; jumptable            260     6 (fixed)
  1780                           ;	Chosen strategy is simple_byte
  1781  02FF  0020               	movlb	0	; select bank0
  1782  0300  085A               	movf	main@bmode+1,w
  1783  0301  3A00               	xorlw	0	; case 0
  1784  0302  1903               	skipnz
  1785  0303  2B05               	goto	l3254
  1786  0304  29F8               	goto	l3166
  1787  0305                     l3254:	
  1788                           
  1789                           ; Switch size 1, requested type "space"
  1790                           ; Number of cases is 6, Range of values is 0 to 6
  1791                           ; switch strategies available:
  1792                           ; Name         Instructions Cycles
  1793                           ; simple_byte           19    10 (average)
  1794                           ; direct_byte           20     6 (fixed)
  1795                           ; jumptable            260     6 (fixed)
  1796                           ;	Chosen strategy is simple_byte
  1797  0305  0859               	movf	main@bmode,w
  1798  0306  3A00               	xorlw	0	; case 0
  1799  0307  1903               	skipnz
  1800  0308  29F8               	goto	l3166
  1801  0309  3A01               	xorlw	1	; case 1
  1802  030A  1903               	skipnz
  1803  030B  2A0F               	goto	l3172
  1804  030C  3A03               	xorlw	3	; case 2
  1805  030D  1903               	skipnz
  1806  030E  2ADB               	goto	l3196
  1807  030F  3A06               	xorlw	6	; case 4
  1808  0310  1903               	skipnz
  1809  0311  2A73               	goto	l3184
  1810  0312  3A01               	xorlw	1	; case 5
  1811  0313  1903               	skipnz
  1812  0314  2A43               	goto	l3178
  1813  0315  3A03               	xorlw	3	; case 6
  1814  0316  1903               	skipnz
  1815  0317  2AA7               	goto	l3190
  1816  0318  29F8               	goto	l3166
  1817  0319                     l387:	
  1818                           
  1819                           ;powerspy.c: 795: RA3 = 1;
  1820  0319  0020               	movlb	0	; select bank0
  1821  031A  158C               	bsf	12,3	;volatile
  1822  031B                     l380:	
  1823                           
  1824                           ;powerspy.c: 796: }
  1825                           ;powerspy.c: 799: if (!RB3 && !(flag & 0x10)) {
  1826  031B  1D8D               	btfss	13,3	;volatile
  1827  031C  1A69               	btfsc	_flag,4	;volatile
  1828  031D  2B3D               	goto	l3216
  1829                           
  1830                           ;powerspy.c: 800: bmode++;
  1831  031E  3001               	movlw	1
  1832  031F  07D9               	addwf	main@bmode,f
  1833  0320  3000               	movlw	0
  1834  0321  3DDA               	addwfc	main@bmode+1,f
  1835                           
  1836                           ;powerspy.c: 801: bmode %= 7;
  1837  0322  3007               	movlw	7
  1838  0323  00F2               	movwf	___awmod@divisor
  1839  0324  3000               	movlw	0
  1840  0325  00F3               	movwf	___awmod@divisor+1
  1841  0326  085A               	movf	main@bmode+1,w
  1842  0327  00F5               	movwf	___awmod@dividend+1
  1843  0328  0859               	movf	main@bmode,w
  1844  0329  00F4               	movwf	___awmod@dividend
  1845  032A  3186  2611  3180   	fcall	___awmod
  1846  032D  0873               	movf	?___awmod+1,w
  1847  032E  0020               	movlb	0	; select bank0
  1848  032F  00DA               	movwf	main@bmode+1
  1849  0330  0872               	movf	?___awmod,w
  1850  0331  00D9               	movwf	main@bmode
  1851                           
  1852                           ;powerspy.c: 803: flag |= 0x10;
  1853  0332  1669               	bsf	_flag,4	;volatile
  1854                           
  1855                           ;powerspy.c: 804: _delay((unsigned long)((10)*(32000000/4000.0)));
  1856  0333  3068               	movlw	104
  1857  0334  00CB               	movwf	??_main+1
  1858  0335  30E4               	movlw	228
  1859  0336  00CA               	movwf	??_main
  1860  0337                     u3027:	
  1861  0337  0BCA               	decfsz	??_main,f
  1862  0338  2B37               	goto	u3027
  1863  0339  0BCB               	decfsz	??_main+1,f
  1864  033A  2B37               	goto	u3027
  1865  033B  0000               	nop
  1866                           
  1867                           ;powerspy.c: 805: } else {
  1868  033C  28A0               	goto	l3104
  1869  033D                     l3216:	
  1870                           
  1871                           ;powerspy.c: 806: flag &= ~0x10;
  1872  033D  30EF               	movlw	239
  1873  033E  0020               	movlb	0	; select bank0
  1874  033F  00CA               	movwf	??_main
  1875  0340  084A               	movf	??_main,w
  1876  0341  05E9               	andwf	_flag,f	;volatile
  1877  0342  28A0               	goto	l3104
  1878  0343                     __end_of_main:	
  1879                           
  1880                           	psect	text1
  1881  0656                     __ptext1:	
  1882 ;; *************** function _setVal *****************
  1883 ;; Defined at:
  1884 ;;		line 633 in file "powerspy.c"
  1885 ;; Parameters:    Size  Location     Type
  1886 ;;  v               2   38[BANK0 ] short 
  1887 ;; Auto vars:     Size  Location     Type
  1888 ;;  i               1   41[BANK0 ] char 
  1889 ;; Return value:  Size  Location     Type
  1890 ;;                  1    wreg      void 
  1891 ;; Registers used:
  1892 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1893 ;; Tracked objects:
  1894 ;;		On entry : 0/0
  1895 ;;		On exit  : 0/0
  1896 ;;		Unchanged: 0/0
  1897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1898 ;;      Params:         0       2       0       0       0       0
  1899 ;;      Locals:         0       1       0       0       0       0
  1900 ;;      Temps:          0       1       0       0       0       0
  1901 ;;      Totals:         0       4       0       0       0       0
  1902 ;;Total ram usage:        4 bytes
  1903 ;; Hardware stack levels used:    1
  1904 ;; Hardware stack levels required when called:    2
  1905 ;; This function calls:
  1906 ;;		___awdiv
  1907 ;;		___awmod
  1908 ;;		_so
  1909 ;; This function is called by:
  1910 ;;		_main
  1911 ;; This function uses a non-reentrant model
  1912 ;;
  1913                           
  1914                           
  1915                           ;psect for function _setVal
  1916  0656                     _setVal:	
  1917                           
  1918                           ;powerspy.c: 635: int8_t i;
  1919                           ;powerspy.c: 636: for (i = 0; i < 7 - 3; i++) {
  1920                           
  1921                           ;incstack = 0
  1922                           ; Regs used in _setVal: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1923  0656  0020               	movlb	0	; select bank0
  1924  0657  01C9               	clrf	setVal@i
  1925  0658                     L3:	
  1926  0658  0849               	movf	setVal@i,w
  1927  0659  3A80               	xorlw	128
  1928  065A  3E7C               	addlw	-132
  1929  065B  1803               	btfsc	3,0
  1930  065C  0008               	return
  1931                           
  1932                           ;powerspy.c: 637: so(get_shift_byte[v % 10]);
  1933  065D  300A               	movlw	10
  1934  065E  00F2               	movwf	___awmod@divisor
  1935  065F  3000               	movlw	0
  1936  0660  00F3               	movwf	___awmod@divisor+1
  1937  0661  0847               	movf	setVal@v+1,w
  1938  0662  00F5               	movwf	___awmod@dividend+1
  1939  0663  0846               	movf	setVal@v,w
  1940  0664  00F4               	movwf	___awmod@dividend
  1941  0665  3186  2611  3186   	fcall	___awmod
  1942  0668  0873               	movf	?___awmod+1,w
  1943  0669  0085               	movwf	5
  1944  066A  0872               	movf	?___awmod,w
  1945  066B  0084               	movwf	4
  1946  066C  30FF               	movlw	low (_get_shift_byte| (0+32768))
  1947  066D  0784               	addwf	4,f
  1948  066E  3087               	movlw	high (_get_shift_byte| (0+32768))
  1949  066F  3D85               	addwfc	5,f
  1950  0670  0800               	movf	0,w	;code access
  1951  0671  3183  23E5  3186   	fcall	_so
  1952                           
  1953                           ;powerspy.c: 638: v /= 10;
  1954  0674  300A               	movlw	10
  1955  0675  0020               	movlb	0	; select bank0
  1956  0676  00BD               	movwf	___awdiv@divisor
  1957  0677  3000               	movlw	0
  1958  0678  00BE               	movwf	___awdiv@divisor+1
  1959  0679  0847               	movf	setVal@v+1,w
  1960  067A  00C0               	movwf	___awdiv@dividend+1
  1961  067B  0846               	movf	setVal@v,w
  1962  067C  00BF               	movwf	___awdiv@dividend
  1963  067D  3185  251D  3186   	fcall	___awdiv
  1964  0680  0020               	movlb	0	; select bank0
  1965  0681  083E               	movf	?___awdiv+1,w
  1966  0682  00C7               	movwf	setVal@v+1
  1967  0683  083D               	movf	?___awdiv,w
  1968  0684  00C6               	movwf	setVal@v
  1969  0685  3001               	movlw	1
  1970  0686  00C8               	movwf	??_setVal
  1971  0687  0848               	movf	??_setVal,w
  1972  0688  07C9               	addwf	setVal@i,f
  1973  0689  2E58               	goto	L3
  1974  068A                     __end_of_setVal:	
  1975                           
  1976                           	psect	text2
  1977  0611                     __ptext2:	
  1978 ;; *************** function ___awmod *****************
  1979 ;; Defined at:
  1980 ;;		line 6 in file "/Applications/microchip/xc8/v1.37/sources/common/awmod.c"
  1981 ;; Parameters:    Size  Location     Type
  1982 ;;  divisor         2    2[COMMON] int 
  1983 ;;  dividend        2    4[COMMON] int 
  1984 ;; Auto vars:     Size  Location     Type
  1985 ;;  sign            1    8[COMMON] unsigned char 
  1986 ;;  counter         1    7[COMMON] unsigned char 
  1987 ;; Return value:  Size  Location     Type
  1988 ;;                  2    2[COMMON] int 
  1989 ;; Registers used:
  1990 ;;		wreg, status,2, status,0
  1991 ;; Tracked objects:
  1992 ;;		On entry : 0/0
  1993 ;;		On exit  : 0/0
  1994 ;;		Unchanged: 0/0
  1995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1996 ;;      Params:         4       0       0       0       0       0
  1997 ;;      Locals:         2       0       0       0       0       0
  1998 ;;      Temps:          1       0       0       0       0       0
  1999 ;;      Totals:         7       0       0       0       0       0
  2000 ;;Total ram usage:        7 bytes
  2001 ;; Hardware stack levels used:    1
  2002 ;; Hardware stack levels required when called:    1
  2003 ;; This function calls:
  2004 ;;		Nothing
  2005 ;; This function is called by:
  2006 ;;		_setVal
  2007 ;;		_main
  2008 ;; This function uses a non-reentrant model
  2009 ;;
  2010                           
  2011                           
  2012                           ;psect for function ___awmod
  2013  0611                     ___awmod:	
  2014                           
  2015                           ;incstack = 0
  2016                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2017  0611  01F8               	clrf	___awmod@sign
  2018  0612  1FF5               	btfss	___awmod@dividend+1,7
  2019  0613  2E1B               	goto	l2426
  2020  0614  09F4               	comf	___awmod@dividend,f
  2021  0615  09F5               	comf	___awmod@dividend+1,f
  2022  0616  0AF4               	incf	___awmod@dividend,f
  2023  0617  1903               	skipnz
  2024  0618  0AF5               	incf	___awmod@dividend+1,f
  2025  0619  01F8               	clrf	___awmod@sign
  2026  061A  0AF8               	incf	___awmod@sign,f
  2027  061B                     l2426:	
  2028  061B  1FF3               	btfss	___awmod@divisor+1,7
  2029  061C  2E22               	goto	l2430
  2030  061D  09F2               	comf	___awmod@divisor,f
  2031  061E  09F3               	comf	___awmod@divisor+1,f
  2032  061F  0AF2               	incf	___awmod@divisor,f
  2033  0620  1903               	skipnz
  2034  0621  0AF3               	incf	___awmod@divisor+1,f
  2035  0622                     l2430:	
  2036  0622  0872               	movf	___awmod@divisor,w
  2037  0623  0473               	iorwf	___awmod@divisor+1,w
  2038  0624  1903               	btfsc	3,2
  2039  0625  2E49               	goto	l2448
  2040  0626  01F7               	clrf	___awmod@counter
  2041  0627  0AF7               	incf	___awmod@counter,f
  2042  0628                     l2438:	
  2043  0628  1BF3               	btfsc	___awmod@divisor+1,7
  2044  0629  2E34               	goto	l2440
  2045  062A  3001               	movlw	1
  2046  062B                     u2125:	
  2047  062B  35F2               	lslf	___awmod@divisor,f
  2048  062C  0DF3               	rlf	___awmod@divisor+1,f
  2049  062D  0B89               	decfsz	9,f
  2050  062E  2E2B               	goto	u2125
  2051  062F  3001               	movlw	1
  2052  0630  00F6               	movwf	??___awmod
  2053  0631  0876               	movf	??___awmod,w
  2054  0632  07F7               	addwf	___awmod@counter,f
  2055  0633  2E28               	goto	l2438
  2056  0634                     l2440:	
  2057  0634  0873               	movf	___awmod@divisor+1,w
  2058  0635  0275               	subwf	___awmod@dividend+1,w
  2059  0636  1D03               	skipz
  2060  0637  2E3A               	goto	u2145
  2061  0638  0872               	movf	___awmod@divisor,w
  2062  0639  0274               	subwf	___awmod@dividend,w
  2063  063A                     u2145:	
  2064  063A  1C03               	skipc
  2065  063B  2E40               	goto	l2444
  2066  063C  0872               	movf	___awmod@divisor,w
  2067  063D  02F4               	subwf	___awmod@dividend,f
  2068  063E  0873               	movf	___awmod@divisor+1,w
  2069  063F  3BF5               	subwfb	___awmod@dividend+1,f
  2070  0640                     l2444:	
  2071  0640  3001               	movlw	1
  2072  0641                     u2155:	
  2073  0641  36F3               	lsrf	___awmod@divisor+1,f
  2074  0642  0CF2               	rrf	___awmod@divisor,f
  2075  0643  0B89               	decfsz	9,f
  2076  0644  2E41               	goto	u2155
  2077  0645  3001               	movlw	1
  2078  0646  02F7               	subwf	___awmod@counter,f
  2079  0647  1D03               	btfss	3,2
  2080  0648  2E34               	goto	l2440
  2081  0649                     l2448:	
  2082  0649  0878               	movf	___awmod@sign,w
  2083  064A  1903               	btfsc	3,2
  2084  064B  2E51               	goto	l2452
  2085  064C  09F4               	comf	___awmod@dividend,f
  2086  064D  09F5               	comf	___awmod@dividend+1,f
  2087  064E  0AF4               	incf	___awmod@dividend,f
  2088  064F  1903               	skipnz
  2089  0650  0AF5               	incf	___awmod@dividend+1,f
  2090  0651                     l2452:	
  2091  0651  0875               	movf	___awmod@dividend+1,w
  2092  0652  00F3               	movwf	?___awmod+1
  2093  0653  0874               	movf	___awmod@dividend,w
  2094  0654  00F2               	movwf	?___awmod
  2095  0655  0008               	return
  2096  0656                     __end_of___awmod:	
  2097                           
  2098                           	psect	text3
  2099  051D                     __ptext3:	
  2100 ;; *************** function ___awdiv *****************
  2101 ;; Defined at:
  2102 ;;		line 6 in file "/Applications/microchip/xc8/v1.37/sources/common/awdiv.c"
  2103 ;; Parameters:    Size  Location     Type
  2104 ;;  divisor         2   29[BANK0 ] int 
  2105 ;;  dividend        2   31[BANK0 ] int 
  2106 ;; Auto vars:     Size  Location     Type
  2107 ;;  quotient        2   36[BANK0 ] int 
  2108 ;;  sign            1   35[BANK0 ] unsigned char 
  2109 ;;  counter         1   34[BANK0 ] unsigned char 
  2110 ;; Return value:  Size  Location     Type
  2111 ;;                  2   29[BANK0 ] int 
  2112 ;; Registers used:
  2113 ;;		wreg, status,2, status,0
  2114 ;; Tracked objects:
  2115 ;;		On entry : 0/0
  2116 ;;		On exit  : 0/0
  2117 ;;		Unchanged: 0/0
  2118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2119 ;;      Params:         0       4       0       0       0       0
  2120 ;;      Locals:         0       4       0       0       0       0
  2121 ;;      Temps:          0       1       0       0       0       0
  2122 ;;      Totals:         0       9       0       0       0       0
  2123 ;;Total ram usage:        9 bytes
  2124 ;; Hardware stack levels used:    1
  2125 ;; Hardware stack levels required when called:    1
  2126 ;; This function calls:
  2127 ;;		Nothing
  2128 ;; This function is called by:
  2129 ;;		_setVal
  2130 ;;		_main
  2131 ;; This function uses a non-reentrant model
  2132 ;;
  2133                           
  2134                           
  2135                           ;psect for function ___awdiv
  2136  051D                     ___awdiv:	
  2137                           
  2138                           ;incstack = 0
  2139                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2140  051D  0020               	movlb	0	; select bank0
  2141  051E  01C3               	clrf	___awdiv@sign
  2142  051F  1FBE               	btfss	___awdiv@divisor+1,7
  2143  0520  2D28               	goto	l2382
  2144  0521  09BD               	comf	___awdiv@divisor,f
  2145  0522  09BE               	comf	___awdiv@divisor+1,f
  2146  0523  0ABD               	incf	___awdiv@divisor,f
  2147  0524  1903               	skipnz
  2148  0525  0ABE               	incf	___awdiv@divisor+1,f
  2149  0526  01C3               	clrf	___awdiv@sign
  2150  0527  0AC3               	incf	___awdiv@sign,f
  2151  0528                     l2382:	
  2152  0528  1FC0               	btfss	___awdiv@dividend+1,7
  2153  0529  2D33               	goto	l2388
  2154  052A  09BF               	comf	___awdiv@dividend,f
  2155  052B  09C0               	comf	___awdiv@dividend+1,f
  2156  052C  0ABF               	incf	___awdiv@dividend,f
  2157  052D  1903               	skipnz
  2158  052E  0AC0               	incf	___awdiv@dividend+1,f
  2159  052F  3001               	movlw	1
  2160  0530  00C1               	movwf	??___awdiv
  2161  0531  0841               	movf	??___awdiv,w
  2162  0532  06C3               	xorwf	___awdiv@sign,f
  2163  0533                     l2388:	
  2164  0533  01C4               	clrf	___awdiv@quotient
  2165  0534  01C5               	clrf	___awdiv@quotient+1
  2166  0535  083D               	movf	___awdiv@divisor,w
  2167  0536  043E               	iorwf	___awdiv@divisor+1,w
  2168  0537  1903               	btfsc	3,2
  2169  0538  2D62               	goto	l2410
  2170  0539  01C2               	clrf	___awdiv@counter
  2171  053A  0AC2               	incf	___awdiv@counter,f
  2172  053B                     l2398:	
  2173  053B  1BBE               	btfsc	___awdiv@divisor+1,7
  2174  053C  2D47               	goto	l2400
  2175  053D  3001               	movlw	1
  2176  053E                     u2025:	
  2177  053E  35BD               	lslf	___awdiv@divisor,f
  2178  053F  0DBE               	rlf	___awdiv@divisor+1,f
  2179  0540  0B89               	decfsz	9,f
  2180  0541  2D3E               	goto	u2025
  2181  0542  3001               	movlw	1
  2182  0543  00C1               	movwf	??___awdiv
  2183  0544  0841               	movf	??___awdiv,w
  2184  0545  07C2               	addwf	___awdiv@counter,f
  2185  0546  2D3B               	goto	l2398
  2186  0547                     l2400:	
  2187  0547  3001               	movlw	1
  2188  0548                     u2045:	
  2189  0548  35C4               	lslf	___awdiv@quotient,f
  2190  0549  0DC5               	rlf	___awdiv@quotient+1,f
  2191  054A  0B89               	decfsz	9,f
  2192  054B  2D48               	goto	u2045
  2193  054C  083E               	movf	___awdiv@divisor+1,w
  2194  054D  0240               	subwf	___awdiv@dividend+1,w
  2195  054E  1D03               	skipz
  2196  054F  2D52               	goto	u2055
  2197  0550  083D               	movf	___awdiv@divisor,w
  2198  0551  023F               	subwf	___awdiv@dividend,w
  2199  0552                     u2055:	
  2200  0552  1C03               	skipc
  2201  0553  2D59               	goto	l2406
  2202  0554  083D               	movf	___awdiv@divisor,w
  2203  0555  02BF               	subwf	___awdiv@dividend,f
  2204  0556  083E               	movf	___awdiv@divisor+1,w
  2205  0557  3BC0               	subwfb	___awdiv@dividend+1,f
  2206  0558  1444               	bsf	___awdiv@quotient,0
  2207  0559                     l2406:	
  2208  0559  3001               	movlw	1
  2209  055A                     u2065:	
  2210  055A  36BE               	lsrf	___awdiv@divisor+1,f
  2211  055B  0CBD               	rrf	___awdiv@divisor,f
  2212  055C  0B89               	decfsz	9,f
  2213  055D  2D5A               	goto	u2065
  2214  055E  3001               	movlw	1
  2215  055F  02C2               	subwf	___awdiv@counter,f
  2216  0560  1D03               	btfss	3,2
  2217  0561  2D47               	goto	l2400
  2218  0562                     l2410:	
  2219  0562  0843               	movf	___awdiv@sign,w
  2220  0563  1903               	btfsc	3,2
  2221  0564  2D6A               	goto	l2414
  2222  0565  09C4               	comf	___awdiv@quotient,f
  2223  0566  09C5               	comf	___awdiv@quotient+1,f
  2224  0567  0AC4               	incf	___awdiv@quotient,f
  2225  0568  1903               	skipnz
  2226  0569  0AC5               	incf	___awdiv@quotient+1,f
  2227  056A                     l2414:	
  2228  056A  0845               	movf	___awdiv@quotient+1,w
  2229  056B  00BE               	movwf	?___awdiv+1
  2230  056C  0844               	movf	___awdiv@quotient,w
  2231  056D  00BD               	movwf	?___awdiv
  2232  056E  0008               	return
  2233  056F                     __end_of___awdiv:	
  2234                           
  2235                           	psect	text4
  2236  070D                     __ptext4:	
  2237 ;; *************** function _setUnit *****************
  2238 ;; Defined at:
  2239 ;;		line 626 in file "powerspy.c"
  2240 ;; Parameters:    Size  Location     Type
  2241 ;;  u               3    5[COMMON] unsigned um
  2242 ;; Auto vars:     Size  Location     Type
  2243 ;;		None
  2244 ;; Return value:  Size  Location     Type
  2245 ;;                  1    wreg      void 
  2246 ;; Registers used:
  2247 ;;		wreg, status,2, status,0, pclath, cstack
  2248 ;; Tracked objects:
  2249 ;;		On entry : 0/0
  2250 ;;		On exit  : 0/0
  2251 ;;		Unchanged: 0/0
  2252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2253 ;;      Params:         3       0       0       0       0       0
  2254 ;;      Locals:         0       0       0       0       0       0
  2255 ;;      Temps:          0       3       0       0       0       0
  2256 ;;      Totals:         3       3       0       0       0       0
  2257 ;;Total ram usage:        6 bytes
  2258 ;; Hardware stack levels used:    1
  2259 ;; Hardware stack levels required when called:    2
  2260 ;; This function calls:
  2261 ;;		_so
  2262 ;; This function is called by:
  2263 ;;		_main
  2264 ;; This function uses a non-reentrant model
  2265 ;;
  2266                           
  2267                           
  2268                           ;psect for function _setUnit
  2269  070D                     _setUnit:	
  2270                           
  2271                           ;powerspy.c: 628: so(u >> 16 & 0xff);
  2272                           
  2273                           ;incstack = 0
  2274                           ; Regs used in _setUnit: [wreg+status,2+status,0+pclath+cstack]
  2275  070D  0875               	movf	setUnit@u,w
  2276  070E  0020               	movlb	0	; select bank0
  2277  070F  00A0               	movwf	??_setUnit
  2278  0710  0876               	movf	setUnit@u+1,w
  2279  0711  00A1               	movwf	??_setUnit+1
  2280  0712  0877               	movf	setUnit@u+2,w
  2281  0713  00A2               	movwf	??_setUnit+2
  2282  0714  3010               	movlw	16
  2283  0715                     u2905:	
  2284  0715  36A2               	lsrf	??_setUnit+2,f
  2285  0716  0CA1               	rrf	??_setUnit+1,f
  2286  0717  0CA0               	rrf	??_setUnit,f
  2287  0718  0B89               	decfsz	9,f
  2288  0719  2F15               	goto	u2905
  2289  071A  0820               	movf	??_setUnit,w
  2290  071B  3183  23E5  3187   	fcall	_so
  2291                           
  2292                           ;powerspy.c: 629: so(u >> 8 & 0xff);
  2293  071E  0875               	movf	setUnit@u,w
  2294  071F  0020               	movlb	0	; select bank0
  2295  0720  00A0               	movwf	??_setUnit
  2296  0721  0876               	movf	setUnit@u+1,w
  2297  0722  00A1               	movwf	??_setUnit+1
  2298  0723  0877               	movf	setUnit@u+2,w
  2299  0724  00A2               	movwf	??_setUnit+2
  2300  0725  3008               	movlw	8
  2301  0726                     u2915:	
  2302  0726  36A2               	lsrf	??_setUnit+2,f
  2303  0727  0CA1               	rrf	??_setUnit+1,f
  2304  0728  0CA0               	rrf	??_setUnit,f
  2305  0729  0B89               	decfsz	9,f
  2306  072A  2F26               	goto	u2915
  2307  072B  0820               	movf	??_setUnit,w
  2308  072C  3183  23E5  3187   	fcall	_so
  2309                           
  2310                           ;powerspy.c: 630: so(u & 0xff);
  2311  072F  0875               	movf	setUnit@u,w
  2312  0730  3183  23E5         	fcall	_so
  2313  0732  0008               	return
  2314  0733                     __end_of_setUnit:	
  2315                           
  2316                           	psect	text5
  2317  03E5                     __ptext5:	
  2318 ;; *************** function _so *****************
  2319 ;; Defined at:
  2320 ;;		line 478 in file "powerspy.c"
  2321 ;; Parameters:    Size  Location     Type
  2322 ;;  data            1    wreg     const unsigned char 
  2323 ;; Auto vars:     Size  Location     Type
  2324 ;;  data            1    3[COMMON] const unsigned char 
  2325 ;;  c               1    4[COMMON] unsigned char 
  2326 ;; Return value:  Size  Location     Type
  2327 ;;                  1    wreg      void 
  2328 ;; Registers used:
  2329 ;;		wreg, status,2, status,0
  2330 ;; Tracked objects:
  2331 ;;		On entry : 0/0
  2332 ;;		On exit  : 0/0
  2333 ;;		Unchanged: 0/0
  2334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2335 ;;      Params:         0       0       0       0       0       0
  2336 ;;      Locals:         2       0       0       0       0       0
  2337 ;;      Temps:          1       0       0       0       0       0
  2338 ;;      Totals:         3       0       0       0       0       0
  2339 ;;Total ram usage:        3 bytes
  2340 ;; Hardware stack levels used:    1
  2341 ;; Hardware stack levels required when called:    1
  2342 ;; This function calls:
  2343 ;;		Nothing
  2344 ;; This function is called by:
  2345 ;;		_setUnit
  2346 ;;		_setVal
  2347 ;;		_clearDisplay
  2348 ;;		_setNr
  2349 ;; This function uses a non-reentrant model
  2350 ;;
  2351                           
  2352                           
  2353                           ;psect for function _so
  2354  03E5                     _so:	
  2355                           
  2356                           ;incstack = 0
  2357                           ; Regs used in _so: [wreg+status,2+status,0]
  2358                           ;so@data stored from wreg
  2359  03E5  00F3               	movwf	so@data
  2360                           
  2361                           ;powerspy.c: 480: uint8_t c;
  2362                           ;powerspy.c: 481: for (c = 0; c < 8; c++) {
  2363  03E6  01F4               	clrf	so@c
  2364  03E7                     L4:	
  2365  03E7  3008               	movlw	8
  2366  03E8  0274               	subwf	so@c,w
  2367  03E9  1803               	btfsc	3,0
  2368  03EA  0008               	return
  2369                           
  2370                           ;powerspy.c: 482: RA7 = (data >> c) & 0x01;
  2371  03EB  0873               	movf	so@data,w
  2372  03EC  00F2               	movwf	??_so
  2373  03ED  0A74               	incf	so@c,w
  2374  03EE  2BF0               	goto	u1584
  2375  03EF                     u1585:	
  2376  03EF  36F2               	lsrf	??_so,f
  2377  03F0                     u1584:	
  2378  03F0  0B89               	decfsz	9,f
  2379  03F1  2BEF               	goto	u1585
  2380  03F2  1C72               	btfss	??_so,0
  2381  03F3  2BF7               	goto	u1590
  2382  03F4  0020               	movlb	0	; select bank0
  2383  03F5  178C               	bsf	12,7	;volatile
  2384  03F6  2BF9               	goto	l2034
  2385  03F7                     u1590:	
  2386  03F7  0020               	movlb	0	; select bank0
  2387  03F8  138C               	bcf	12,7	;volatile
  2388  03F9                     l2034:	
  2389                           
  2390                           ;powerspy.c: 483: __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop()
      +                          ; __nop(); __nop();
  2391  03F9  0000               	nop
  2392  03FA  0000               	nop
  2393  03FB  0000               	nop
  2394  03FC  0000               	nop
  2395  03FD  0000               	nop
  2396  03FE  0000               	nop
  2397  03FF  0000               	nop
  2398  0400  0000               	nop
  2399  0401  0000               	nop
  2400  0402  0000               	nop
  2401                           
  2402                           ;powerspy.c: 484: __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop()
      +                          ; __nop(); __nop();
  2403  0403  0000               	nop
  2404  0404  0000               	nop
  2405  0405  0000               	nop
  2406  0406  0000               	nop
  2407  0407  0000               	nop
  2408  0408  0000               	nop
  2409  0409  0000               	nop
  2410  040A  0000               	nop
  2411  040B  0000               	nop
  2412  040C  0000               	nop
  2413                           
  2414                           ;powerspy.c: 485: __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop()
      +                          ; __nop(); __nop();
  2415  040D  0000               	nop
  2416  040E  0000               	nop
  2417  040F  0000               	nop
  2418  0410  0000               	nop
  2419  0411  0000               	nop
  2420  0412  0000               	nop
  2421  0413  0000               	nop
  2422  0414  0000               	nop
  2423  0415  0000               	nop
  2424  0416  0000               	nop
  2425                           
  2426                           ;powerspy.c: 486: __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop()
      +                          ; __nop(); __nop();
  2427  0417  0000               	nop
  2428  0418  0000               	nop
  2429  0419  0000               	nop
  2430  041A  0000               	nop
  2431  041B  0000               	nop
  2432  041C  0000               	nop
  2433  041D  0000               	nop
  2434  041E  0000               	nop
  2435  041F  0000               	nop
  2436  0420  0000               	nop
  2437                           
  2438                           ;powerspy.c: 487: RA4 = 1;
  2439  0421  0020               	movlb	0	; select bank0
  2440  0422  160C               	bsf	12,4	;volatile
  2441                           
  2442                           ;powerspy.c: 488: __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop()
      +                          ; __nop(); __nop();
  2443  0423  0000               	nop
  2444  0424  0000               	nop
  2445  0425  0000               	nop
  2446  0426  0000               	nop
  2447  0427  0000               	nop
  2448  0428  0000               	nop
  2449  0429  0000               	nop
  2450  042A  0000               	nop
  2451  042B  0000               	nop
  2452  042C  0000               	nop
  2453                           
  2454                           ;powerspy.c: 489: __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop()
      +                          ; __nop(); __nop();
  2455  042D  0000               	nop
  2456  042E  0000               	nop
  2457  042F  0000               	nop
  2458  0430  0000               	nop
  2459  0431  0000               	nop
  2460  0432  0000               	nop
  2461  0433  0000               	nop
  2462  0434  0000               	nop
  2463  0435  0000               	nop
  2464  0436  0000               	nop
  2465                           
  2466                           ;powerspy.c: 490: __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop()
      +                          ; __nop(); __nop();
  2467  0437  0000               	nop
  2468  0438  0000               	nop
  2469  0439  0000               	nop
  2470  043A  0000               	nop
  2471  043B  0000               	nop
  2472  043C  0000               	nop
  2473  043D  0000               	nop
  2474  043E  0000               	nop
  2475  043F  0000               	nop
  2476  0440  0000               	nop
  2477                           
  2478                           ;powerspy.c: 491: __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop()
      +                          ; __nop(); __nop();
  2479  0441  0000               	nop
  2480  0442  0000               	nop
  2481  0443  0000               	nop
  2482  0444  0000               	nop
  2483  0445  0000               	nop
  2484  0446  0000               	nop
  2485  0447  0000               	nop
  2486  0448  0000               	nop
  2487  0449  0000               	nop
  2488  044A  0000               	nop
  2489                           
  2490                           ;powerspy.c: 492: RA4 = 0;
  2491  044B  0020               	movlb	0	; select bank0
  2492  044C  120C               	bcf	12,4	;volatile
  2493  044D  3001               	movlw	1
  2494  044E  00F2               	movwf	??_so
  2495  044F  0872               	movf	??_so,w
  2496  0450  07F4               	addwf	so@c,f
  2497  0451  2BE7               	goto	L4
  2498  0452                     __end_of_so:	
  2499                           
  2500                           	psect	text6
  2501  07D0                     __ptext6:	
  2502 ;; *************** function _setLED *****************
  2503 ;; Defined at:
  2504 ;;		line 618 in file "powerspy.c"
  2505 ;; Parameters:    Size  Location     Type
  2506 ;;  g               1    wreg     unsigned char 
  2507 ;;  r               1    3[COMMON] unsigned char 
  2508 ;;  b               1    4[COMMON] unsigned char 
  2509 ;; Auto vars:     Size  Location     Type
  2510 ;;  g               1    5[COMMON] unsigned char 
  2511 ;; Return value:  Size  Location     Type
  2512 ;;                  1    wreg      void 
  2513 ;; Registers used:
  2514 ;;		wreg, status,2, status,0, pclath, cstack
  2515 ;; Tracked objects:
  2516 ;;		On entry : 0/0
  2517 ;;		On exit  : 0/0
  2518 ;;		Unchanged: 0/0
  2519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2520 ;;      Params:         2       0       0       0       0       0
  2521 ;;      Locals:         1       0       0       0       0       0
  2522 ;;      Temps:          0       0       0       0       0       0
  2523 ;;      Totals:         3       0       0       0       0       0
  2524 ;;Total ram usage:        3 bytes
  2525 ;; Hardware stack levels used:    1
  2526 ;; Hardware stack levels required when called:    2
  2527 ;; This function calls:
  2528 ;;		_sendColour
  2529 ;; This function is called by:
  2530 ;;		_main
  2531 ;; This function uses a non-reentrant model
  2532 ;;
  2533                           
  2534                           
  2535                           ;psect for function _setLED
  2536  07D0                     _setLED:	
  2537                           
  2538                           ;incstack = 0
  2539                           ; Regs used in _setLED: [wreg+status,2+status,0+pclath+cstack]
  2540                           ;setLED@g stored from wreg
  2541  07D0  00F5               	movwf	setLED@g
  2542                           
  2543                           ;powerspy.c: 620: sendColour(g);
  2544  07D1  0875               	movf	setLED@g,w
  2545  07D2  3183  2343  3187   	fcall	_sendColour
  2546                           
  2547                           ;powerspy.c: 621: sendColour(r);
  2548  07D5  0873               	movf	setLED@r,w
  2549  07D6  3183  2343  3187   	fcall	_sendColour
  2550                           
  2551                           ;powerspy.c: 622: sendColour(b);
  2552  07D9  0874               	movf	setLED@b,w
  2553  07DA  3183  2343         	fcall	_sendColour
  2554                           
  2555                           ;powerspy.c: 623: led_rest = TMR1;
  2556  07DC  0020               	movlb	0	; select bank0
  2557  07DD  0817               	movf	23,w	;volatile
  2558  07DE  00E6               	movwf	_led_rest+1
  2559  07DF  0816               	movf	22,w	;volatile
  2560  07E0  00E5               	movwf	_led_rest
  2561  07E1  0008               	return
  2562  07E2                     __end_of_setLED:	
  2563                           
  2564                           	psect	text7
  2565  0343                     __ptext7:	
  2566 ;; *************** function _sendColour *****************
  2567 ;; Defined at:
  2568 ;;		line 520 in file "powerspy.c"
  2569 ;; Parameters:    Size  Location     Type
  2570 ;;  c               1    wreg     unsigned char 
  2571 ;; Auto vars:     Size  Location     Type
  2572 ;;  c               1    2[COMMON] unsigned char 
  2573 ;; Return value:  Size  Location     Type
  2574 ;;                  1    wreg      void 
  2575 ;; Registers used:
  2576 ;;		wreg
  2577 ;; Tracked objects:
  2578 ;;		On entry : 0/0
  2579 ;;		On exit  : 0/0
  2580 ;;		Unchanged: 0/0
  2581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2582 ;;      Params:         0       0       0       0       0       0
  2583 ;;      Locals:         1       0       0       0       0       0
  2584 ;;      Temps:          0       0       0       0       0       0
  2585 ;;      Totals:         1       0       0       0       0       0
  2586 ;;Total ram usage:        1 bytes
  2587 ;; Hardware stack levels used:    1
  2588 ;; Hardware stack levels required when called:    1
  2589 ;; This function calls:
  2590 ;;		Nothing
  2591 ;; This function is called by:
  2592 ;;		_setLED
  2593 ;; This function uses a non-reentrant model
  2594 ;;
  2595                           
  2596                           
  2597                           ;psect for function _sendColour
  2598  0343                     _sendColour:	
  2599                           
  2600                           ;incstack = 0
  2601                           ; Regs used in _sendColour: [wreg]
  2602                           ;sendColour@c stored from wreg
  2603  0343  00F2               	movwf	sendColour@c
  2604                           
  2605                           ;powerspy.c: 522: if (c & 0b10000000) { RA6=1; __nop(); __nop(); __nop(); __nop(); RA6=0
      +                          ; __nop(); }
  2606  0344  1FF2               	btfss	sendColour@c,7
  2607  0345  2B50               	goto	l307
  2608  0346  0020               	movlb	0	; select bank0
  2609  0347  170C               	bsf	12,6	;volatile
  2610  0348  0000               	nop
  2611  0349  0000               	nop
  2612  034A  0000               	nop
  2613  034B  0000               	nop
  2614  034C  0020               	movlb	0	; select bank0
  2615  034D  130C               	bcf	12,6	;volatile
  2616  034E  0000               	nop
  2617  034F  2B58               	goto	l2204
  2618  0350                     l307:	
  2619                           
  2620                           ;powerspy.c: 523: else { RA6=1; __nop(); RA6=0; __nop(); __nop(); __nop(); };
  2621  0350  0020               	movlb	0	; select bank0
  2622  0351  170C               	bsf	12,6	;volatile
  2623  0352  0000               	nop
  2624  0353  0020               	movlb	0	; select bank0
  2625  0354  130C               	bcf	12,6	;volatile
  2626  0355  0000               	nop
  2627  0356  0000               	nop
  2628  0357  0000               	nop
  2629  0358                     l2204:	
  2630                           
  2631                           ;powerspy.c: 525: if (c & 0b01000000) { RA6=1; __nop(); __nop(); __nop(); __nop(); RA6=0
      +                          ; __nop(); }
  2632  0358  1F72               	btfss	sendColour@c,6
  2633  0359  2B64               	goto	l309
  2634  035A  0020               	movlb	0	; select bank0
  2635  035B  170C               	bsf	12,6	;volatile
  2636  035C  0000               	nop
  2637  035D  0000               	nop
  2638  035E  0000               	nop
  2639  035F  0000               	nop
  2640  0360  0020               	movlb	0	; select bank0
  2641  0361  130C               	bcf	12,6	;volatile
  2642  0362  0000               	nop
  2643  0363  2B6C               	goto	l2208
  2644  0364                     l309:	
  2645                           
  2646                           ;powerspy.c: 526: else { RA6=1; __nop(); RA6=0; __nop(); __nop(); __nop(); };
  2647  0364  0020               	movlb	0	; select bank0
  2648  0365  170C               	bsf	12,6	;volatile
  2649  0366  0000               	nop
  2650  0367  0020               	movlb	0	; select bank0
  2651  0368  130C               	bcf	12,6	;volatile
  2652  0369  0000               	nop
  2653  036A  0000               	nop
  2654  036B  0000               	nop
  2655  036C                     l2208:	
  2656                           
  2657                           ;powerspy.c: 528: if (c & 0b00100000) { RA6=1; __nop(); __nop(); __nop(); __nop(); RA6=0
      +                          ; __nop(); }
  2658  036C  1EF2               	btfss	sendColour@c,5
  2659  036D  2B78               	goto	l311
  2660  036E  0020               	movlb	0	; select bank0
  2661  036F  170C               	bsf	12,6	;volatile
  2662  0370  0000               	nop
  2663  0371  0000               	nop
  2664  0372  0000               	nop
  2665  0373  0000               	nop
  2666  0374  0020               	movlb	0	; select bank0
  2667  0375  130C               	bcf	12,6	;volatile
  2668  0376  0000               	nop
  2669  0377  2B80               	goto	l2212
  2670  0378                     l311:	
  2671                           
  2672                           ;powerspy.c: 529: else { RA6=1; __nop(); RA6=0; __nop(); __nop(); __nop(); };
  2673  0378  0020               	movlb	0	; select bank0
  2674  0379  170C               	bsf	12,6	;volatile
  2675  037A  0000               	nop
  2676  037B  0020               	movlb	0	; select bank0
  2677  037C  130C               	bcf	12,6	;volatile
  2678  037D  0000               	nop
  2679  037E  0000               	nop
  2680  037F  0000               	nop
  2681  0380                     l2212:	
  2682                           
  2683                           ;powerspy.c: 531: if (c & 0b00010000) { RA6=1; __nop(); __nop(); __nop(); __nop(); RA6=0
      +                          ; __nop(); }
  2684  0380  1E72               	btfss	sendColour@c,4
  2685  0381  2B8C               	goto	l313
  2686  0382  0020               	movlb	0	; select bank0
  2687  0383  170C               	bsf	12,6	;volatile
  2688  0384  0000               	nop
  2689  0385  0000               	nop
  2690  0386  0000               	nop
  2691  0387  0000               	nop
  2692  0388  0020               	movlb	0	; select bank0
  2693  0389  130C               	bcf	12,6	;volatile
  2694  038A  0000               	nop
  2695  038B  2B94               	goto	l2216
  2696  038C                     l313:	
  2697                           
  2698                           ;powerspy.c: 532: else { RA6=1; __nop(); RA6=0; __nop(); __nop(); __nop(); };
  2699  038C  0020               	movlb	0	; select bank0
  2700  038D  170C               	bsf	12,6	;volatile
  2701  038E  0000               	nop
  2702  038F  0020               	movlb	0	; select bank0
  2703  0390  130C               	bcf	12,6	;volatile
  2704  0391  0000               	nop
  2705  0392  0000               	nop
  2706  0393  0000               	nop
  2707  0394                     l2216:	
  2708                           
  2709                           ;powerspy.c: 534: if (c & 0b00001000) { RA6=1; __nop(); __nop(); __nop(); __nop(); RA6=0
      +                          ; __nop(); }
  2710  0394  1DF2               	btfss	sendColour@c,3
  2711  0395  2BA0               	goto	l315
  2712  0396  0020               	movlb	0	; select bank0
  2713  0397  170C               	bsf	12,6	;volatile
  2714  0398  0000               	nop
  2715  0399  0000               	nop
  2716  039A  0000               	nop
  2717  039B  0000               	nop
  2718  039C  0020               	movlb	0	; select bank0
  2719  039D  130C               	bcf	12,6	;volatile
  2720  039E  0000               	nop
  2721  039F  2BA8               	goto	l2220
  2722  03A0                     l315:	
  2723                           
  2724                           ;powerspy.c: 535: else { RA6=1; __nop(); RA6=0; __nop(); __nop(); __nop(); };
  2725  03A0  0020               	movlb	0	; select bank0
  2726  03A1  170C               	bsf	12,6	;volatile
  2727  03A2  0000               	nop
  2728  03A3  0020               	movlb	0	; select bank0
  2729  03A4  130C               	bcf	12,6	;volatile
  2730  03A5  0000               	nop
  2731  03A6  0000               	nop
  2732  03A7  0000               	nop
  2733  03A8                     l2220:	
  2734                           
  2735                           ;powerspy.c: 537: if (c & 0b00000100) { RA6=1; __nop(); __nop(); __nop(); __nop(); RA6=0
      +                          ; __nop(); }
  2736  03A8  1D72               	btfss	sendColour@c,2
  2737  03A9  2BB4               	goto	l317
  2738  03AA  0020               	movlb	0	; select bank0
  2739  03AB  170C               	bsf	12,6	;volatile
  2740  03AC  0000               	nop
  2741  03AD  0000               	nop
  2742  03AE  0000               	nop
  2743  03AF  0000               	nop
  2744  03B0  0020               	movlb	0	; select bank0
  2745  03B1  130C               	bcf	12,6	;volatile
  2746  03B2  0000               	nop
  2747  03B3  2BBC               	goto	l2224
  2748  03B4                     l317:	
  2749                           
  2750                           ;powerspy.c: 538: else { RA6=1; __nop(); RA6=0; __nop(); __nop(); __nop(); };
  2751  03B4  0020               	movlb	0	; select bank0
  2752  03B5  170C               	bsf	12,6	;volatile
  2753  03B6  0000               	nop
  2754  03B7  0020               	movlb	0	; select bank0
  2755  03B8  130C               	bcf	12,6	;volatile
  2756  03B9  0000               	nop
  2757  03BA  0000               	nop
  2758  03BB  0000               	nop
  2759  03BC                     l2224:	
  2760                           
  2761                           ;powerspy.c: 540: if (c & 0b00000010) { RA6=1; __nop(); __nop(); __nop(); __nop(); RA6=0
      +                          ; __nop(); }
  2762  03BC  1CF2               	btfss	sendColour@c,1
  2763  03BD  2BC8               	goto	l319
  2764  03BE  0020               	movlb	0	; select bank0
  2765  03BF  170C               	bsf	12,6	;volatile
  2766  03C0  0000               	nop
  2767  03C1  0000               	nop
  2768  03C2  0000               	nop
  2769  03C3  0000               	nop
  2770  03C4  0020               	movlb	0	; select bank0
  2771  03C5  130C               	bcf	12,6	;volatile
  2772  03C6  0000               	nop
  2773  03C7  2BD0               	goto	l2228
  2774  03C8                     l319:	
  2775                           
  2776                           ;powerspy.c: 541: else { RA6=1; __nop(); RA6=0; __nop(); __nop(); __nop(); };
  2777  03C8  0020               	movlb	0	; select bank0
  2778  03C9  170C               	bsf	12,6	;volatile
  2779  03CA  0000               	nop
  2780  03CB  0020               	movlb	0	; select bank0
  2781  03CC  130C               	bcf	12,6	;volatile
  2782  03CD  0000               	nop
  2783  03CE  0000               	nop
  2784  03CF  0000               	nop
  2785  03D0                     l2228:	
  2786                           
  2787                           ;powerspy.c: 543: if (c & 0b00000001) { RA6=1; __nop(); __nop(); __nop(); __nop(); RA6=0
      +                          ; __nop(); }
  2788  03D0  1C72               	btfss	sendColour@c,0
  2789  03D1  2BDC               	goto	l321
  2790  03D2  0020               	movlb	0	; select bank0
  2791  03D3  170C               	bsf	12,6	;volatile
  2792  03D4  0000               	nop
  2793  03D5  0000               	nop
  2794  03D6  0000               	nop
  2795  03D7  0000               	nop
  2796  03D8  0020               	movlb	0	; select bank0
  2797  03D9  130C               	bcf	12,6	;volatile
  2798  03DA  0000               	nop
  2799  03DB  0008               	return
  2800  03DC                     l321:	
  2801                           
  2802                           ;powerspy.c: 544: else { RA6=1; __nop(); RA6=0; __nop(); __nop(); __nop(); };
  2803  03DC  0020               	movlb	0	; select bank0
  2804  03DD  170C               	bsf	12,6	;volatile
  2805  03DE  0000               	nop
  2806  03DF  0020               	movlb	0	; select bank0
  2807  03E0  130C               	bcf	12,6	;volatile
  2808  03E1  0000               	nop
  2809  03E2  0000               	nop
  2810  03E3  0000               	nop
  2811  03E4  0008               	return
  2812  03E5                     __end_of_sendColour:	
  2813                           
  2814                           	psect	text8
  2815  07F2                     __ptext8:	
  2816 ;; *************** function _sendUInt8 *****************
  2817 ;; Defined at:
  2818 ;;		line 200 in file "message.c"
  2819 ;; Parameters:    Size  Location     Type
  2820 ;;  i               1    wreg     unsigned char 
  2821 ;; Auto vars:     Size  Location     Type
  2822 ;;  i               1    5[COMMON] unsigned char 
  2823 ;; Return value:  Size  Location     Type
  2824 ;;                  1    wreg      void 
  2825 ;; Registers used:
  2826 ;;		wreg, status,2, status,0, pclath, cstack
  2827 ;; Tracked objects:
  2828 ;;		On entry : 0/0
  2829 ;;		On exit  : 0/0
  2830 ;;		Unchanged: 0/0
  2831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2832 ;;      Params:         0       0       0       0       0       0
  2833 ;;      Locals:         1       0       0       0       0       0
  2834 ;;      Temps:          0       0       0       0       0       0
  2835 ;;      Totals:         1       0       0       0       0       0
  2836 ;;Total ram usage:        1 bytes
  2837 ;; Hardware stack levels used:    1
  2838 ;; Hardware stack levels required when called:    2
  2839 ;; This function calls:
  2840 ;;		__sendchar_
  2841 ;; This function is called by:
  2842 ;;		_main
  2843 ;; This function uses a non-reentrant model
  2844 ;;
  2845                           
  2846                           
  2847                           ;psect for function _sendUInt8
  2848  07F2                     _sendUInt8:	
  2849                           
  2850                           ;incstack = 0
  2851                           ; Regs used in _sendUInt8: [wreg+status,2+status,0+pclath+cstack]
  2852                           ;sendUInt8@i stored from wreg
  2853  07F2  00F5               	movwf	sendUInt8@i
  2854                           
  2855                           ;message.c: 202: _sendchar_(2);
  2856  07F3  3002               	movlw	2
  2857  07F4  3187  27E2  3187   	fcall	__sendchar_
  2858                           
  2859                           ;message.c: 203: _sendchar_('6');
  2860  07F7  3036               	movlw	54
  2861  07F8  3187  27E2  3187   	fcall	__sendchar_
  2862                           
  2863                           ;message.c: 204: _sendchar_(i);
  2864  07FB  0875               	movf	sendUInt8@i,w
  2865  07FC  3187  27E2         	fcall	__sendchar_
  2866  07FE  0008               	return
  2867  07FF                     __end_of_sendUInt8:	
  2868                           
  2869                           	psect	text9
  2870  068A                     __ptext9:	
  2871 ;; *************** function _sendInt24 *****************
  2872 ;; Defined at:
  2873 ;;		line 181 in file "message.c"
  2874 ;; Parameters:    Size  Location     Type
  2875 ;;  i               3    5[COMMON] m
  2876 ;; Auto vars:     Size  Location     Type
  2877 ;;		None
  2878 ;; Return value:  Size  Location     Type
  2879 ;;                  1    wreg      void 
  2880 ;; Registers used:
  2881 ;;		wreg, status,2, status,0, pclath, cstack
  2882 ;; Tracked objects:
  2883 ;;		On entry : 0/0
  2884 ;;		On exit  : 0/0
  2885 ;;		Unchanged: 0/0
  2886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2887 ;;      Params:         3       0       0       0       0       0
  2888 ;;      Locals:         0       0       0       0       0       0
  2889 ;;      Temps:          0       4       0       0       0       0
  2890 ;;      Totals:         3       4       0       0       0       0
  2891 ;;Total ram usage:        7 bytes
  2892 ;; Hardware stack levels used:    1
  2893 ;; Hardware stack levels required when called:    2
  2894 ;; This function calls:
  2895 ;;		__sendchar_
  2896 ;; This function is called by:
  2897 ;;		_main
  2898 ;; This function uses a non-reentrant model
  2899 ;;
  2900                           
  2901                           
  2902                           ;psect for function _sendInt24
  2903  068A                     _sendInt24:	
  2904                           
  2905                           ;message.c: 183: _sendchar_(2);
  2906                           
  2907                           ;incstack = 0
  2908                           ; Regs used in _sendInt24: [wreg+status,2+status,0+pclath+cstack]
  2909  068A  3002               	movlw	2
  2910  068B  3187  27E2  3186   	fcall	__sendchar_
  2911                           
  2912                           ;message.c: 184: _sendchar_('4');
  2913  068E  3034               	movlw	52
  2914  068F  3187  27E2  3186   	fcall	__sendchar_
  2915                           
  2916                           ;message.c: 185: _sendchar_((char) (i >> 16 & 0xff));
  2917  0692  0875               	movf	sendInt24@i,w
  2918  0693  0020               	movlb	0	; select bank0
  2919  0694  00A0               	movwf	??_sendInt24
  2920  0695  0876               	movf	sendInt24@i+1,w
  2921  0696  00A1               	movwf	??_sendInt24+1
  2922  0697  0877               	movf	sendInt24@i+2,w
  2923  0698  00A2               	movwf	??_sendInt24+2
  2924  0699  3010               	movlw	16
  2925  069A  00A3               	movwf	??_sendInt24+3
  2926  069B                     u2925:	
  2927  069B  0D22               	rlf	??_sendInt24+2,w
  2928  069C  0CA2               	rrf	??_sendInt24+2,f
  2929  069D  0CA1               	rrf	??_sendInt24+1,f
  2930  069E  0CA0               	rrf	??_sendInt24,f
  2931  069F  0BA3               	decfsz	??_sendInt24+3,f
  2932  06A0  2E9B               	goto	u2925
  2933  06A1  0820               	movf	??_sendInt24,w
  2934  06A2  3187  27E2  3186   	fcall	__sendchar_
  2935                           
  2936                           ;message.c: 186: _sendchar_((char) (i >> 8 & 0xff));
  2937  06A5  0875               	movf	sendInt24@i,w
  2938  06A6  0020               	movlb	0	; select bank0
  2939  06A7  00A0               	movwf	??_sendInt24
  2940  06A8  0876               	movf	sendInt24@i+1,w
  2941  06A9  00A1               	movwf	??_sendInt24+1
  2942  06AA  0877               	movf	sendInt24@i+2,w
  2943  06AB  00A2               	movwf	??_sendInt24+2
  2944  06AC  3008               	movlw	8
  2945  06AD  00A3               	movwf	??_sendInt24+3
  2946  06AE                     u2935:	
  2947  06AE  0D22               	rlf	??_sendInt24+2,w
  2948  06AF  0CA2               	rrf	??_sendInt24+2,f
  2949  06B0  0CA1               	rrf	??_sendInt24+1,f
  2950  06B1  0CA0               	rrf	??_sendInt24,f
  2951  06B2  0BA3               	decfsz	??_sendInt24+3,f
  2952  06B3  2EAE               	goto	u2935
  2953  06B4  0820               	movf	??_sendInt24,w
  2954  06B5  3187  27E2  3186   	fcall	__sendchar_
  2955                           
  2956                           ;message.c: 187: _sendchar_((char) (i & 0xff));
  2957  06B8  0875               	movf	sendInt24@i,w
  2958  06B9  3187  27E2         	fcall	__sendchar_
  2959  06BB  0008               	return
  2960  06BC                     __end_of_sendInt24:	
  2961                           
  2962                           	psect	text10
  2963  07E2                     __ptext10:	
  2964 ;; *************** function __sendchar_ *****************
  2965 ;; Defined at:
  2966 ;;		line 159 in file "message.c"
  2967 ;; Parameters:    Size  Location     Type
  2968 ;;  c               1    wreg     unsigned char 
  2969 ;; Auto vars:     Size  Location     Type
  2970 ;;  c               1    4[COMMON] unsigned char 
  2971 ;; Return value:  Size  Location     Type
  2972 ;;                  1    wreg      void 
  2973 ;; Registers used:
  2974 ;;		wreg
  2975 ;; Tracked objects:
  2976 ;;		On entry : 0/0
  2977 ;;		On exit  : 0/0
  2978 ;;		Unchanged: 0/0
  2979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2980 ;;      Params:         0       0       0       0       0       0
  2981 ;;      Locals:         1       0       0       0       0       0
  2982 ;;      Temps:          2       0       0       0       0       0
  2983 ;;      Totals:         3       0       0       0       0       0
  2984 ;;Total ram usage:        3 bytes
  2985 ;; Hardware stack levels used:    1
  2986 ;; Hardware stack levels required when called:    1
  2987 ;; This function calls:
  2988 ;;		Nothing
  2989 ;; This function is called by:
  2990 ;;		_sendInt24
  2991 ;;		_sendUInt8
  2992 ;;		_sendInt8
  2993 ;;		_sendInt16
  2994 ;;		_sendInt32
  2995 ;;		_sendUInt16
  2996 ;;		_sendUInt24
  2997 ;;		_sendUInt32
  2998 ;;		_sendFloat
  2999 ;;		_sendString
  3000 ;; This function uses a non-reentrant model
  3001 ;;
  3002                           
  3003                           
  3004                           ;psect for function __sendchar_
  3005  07E2                     __sendchar_:	
  3006                           
  3007                           ;incstack = 0
  3008                           ; Regs used in __sendchar_: [wreg]
  3009                           ;__sendchar_@c stored from wreg
  3010  07E2  00F4               	movwf	__sendchar_@c
  3011                           
  3012                           ;message.c: 161: TXREG = c;
  3013  07E3  0874               	movf	__sendchar_@c,w
  3014  07E4  0023               	movlb	3	; select bank3
  3015  07E5  009A               	movwf	26	;volatile
  3016  07E6                     l473:	
  3017                           ;message.c: 162: while (!TRMT);
  3018                           
  3019  07E6  1C9E               	btfss	30,1	;volatile
  3020  07E7  2FE6               	goto	l473
  3021                           
  3022                           ;message.c: 163: _delay((unsigned long)((1)*(32000000/4000.0)));
  3023  07E8  300B               	movlw	11
  3024  07E9  00F3               	movwf	??__sendchar_+1
  3025  07EA  3062               	movlw	98
  3026  07EB  00F2               	movwf	??__sendchar_
  3027  07EC                     u3037:	
  3028  07EC  0BF2               	decfsz	??__sendchar_,f
  3029  07ED  2FEC               	goto	u3037
  3030  07EE  0BF3               	decfsz	??__sendchar_+1,f
  3031  07EF  2FEC               	goto	u3037
  3032  07F0  0000               	nop
  3033  07F1  0008               	return
  3034  07F2                     __end_of__sendchar_:	
  3035                           
  3036                           	psect	text11
  3037  0002                     __ptext11:	
  3038 ;; *************** function _readVoltage *****************
  3039 ;; Defined at:
  3040 ;;		line 433 in file "powerspy.c"
  3041 ;; Parameters:    Size  Location     Type
  3042 ;;		None
  3043 ;; Auto vars:     Size  Location     Type
  3044 ;;		None
  3045 ;; Return value:  Size  Location     Type
  3046 ;;                  1    wreg      unsigned char 
  3047 ;; Registers used:
  3048 ;;		wreg
  3049 ;; Tracked objects:
  3050 ;;		On entry : 0/0
  3051 ;;		On exit  : 0/0
  3052 ;;		Unchanged: 0/0
  3053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3054 ;;      Params:         0       0       0       0       0       0
  3055 ;;      Locals:         0       0       0       0       0       0
  3056 ;;      Temps:          0       0       0       0       0       0
  3057 ;;      Totals:         0       0       0       0       0       0
  3058 ;;Total ram usage:        0 bytes
  3059 ;; Hardware stack levels used:    1
  3060 ;; Hardware stack levels required when called:    1
  3061 ;; This function calls:
  3062 ;;		Nothing
  3063 ;; This function is called by:
  3064 ;;		_main
  3065 ;; This function uses a non-reentrant model
  3066 ;;
  3067                           
  3068                           
  3069                           ;psect for function _readVoltage
  3070  0002                     _readVoltage:	
  3071                           
  3072                           ;powerspy.c: 435: return 230;
  3073                           
  3074                           ;incstack = 0
  3075                           ; Regs used in _readVoltage: [wreg]
  3076  0002  30E6               	movlw	230
  3077  0003  0008               	return
  3078  0004                     __end_of_readVoltage:	
  3079                           
  3080                           	psect	text12
  3081  07BD                     __ptext12:	
  3082 ;; *************** function _readVdd *****************
  3083 ;; Defined at:
  3084 ;;		line 460 in file "powerspy.c"
  3085 ;; Parameters:    Size  Location     Type
  3086 ;;		None
  3087 ;; Auto vars:     Size  Location     Type
  3088 ;;		None
  3089 ;; Return value:  Size  Location     Type
  3090 ;;                  2    4[COMMON] unsigned short 
  3091 ;; Registers used:
  3092 ;;		wreg, status,2, status,0, pclath, cstack
  3093 ;; Tracked objects:
  3094 ;;		On entry : 0/0
  3095 ;;		On exit  : 0/0
  3096 ;;		Unchanged: 0/0
  3097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3098 ;;      Params:         2       0       0       0       0       0
  3099 ;;      Locals:         0       0       0       0       0       0
  3100 ;;      Temps:          2       0       0       0       0       0
  3101 ;;      Totals:         4       0       0       0       0       0
  3102 ;;Total ram usage:        4 bytes
  3103 ;; Hardware stack levels used:    1
  3104 ;; Hardware stack levels required when called:    2
  3105 ;; This function calls:
  3106 ;;		_adc
  3107 ;; This function is called by:
  3108 ;;		_main
  3109 ;; This function uses a non-reentrant model
  3110 ;;
  3111                           
  3112                           
  3113                           ;psect for function _readVdd
  3114  07BD                     _readVdd:	
  3115                           
  3116                           ;powerspy.c: 462: ADFM = 1;
  3117                           
  3118                           ;incstack = 0
  3119                           ; Regs used in _readVdd: [wreg+status,2+status,0+pclath+cstack]
  3120  07BD  0021               	movlb	1	; select bank1
  3121  07BE  179E               	bsf	30,7	;volatile
  3122                           
  3123                           ;powerspy.c: 463: adc(0b00011111);
  3124  07BF  301F               	movlw	31
  3125  07C0  3185  25C0         	fcall	_adc
  3126                           
  3127                           ;powerspy.c: 469: return ADRES<<2;
  3128  07C2  0021               	movlb	1	; select bank1
  3129  07C3  081C               	movf	28,w	;volatile
  3130  07C4  00F7               	movwf	??_readVdd+1
  3131  07C5  081B               	movf	27,w	;volatile
  3132  07C6  00F6               	movwf	??_readVdd
  3133  07C7  35F6               	lslf	??_readVdd,f
  3134  07C8  0DF7               	rlf	??_readVdd+1,f
  3135  07C9  35F6               	lslf	??_readVdd,f
  3136  07CA  0DF7               	rlf	??_readVdd+1,f
  3137  07CB  0876               	movf	??_readVdd,w
  3138  07CC  00F4               	movwf	?_readVdd
  3139  07CD  0877               	movf	??_readVdd+1,w
  3140  07CE  00F5               	movwf	?_readVdd+1
  3141  07CF  0008               	return
  3142  07D0                     __end_of_readVdd:	
  3143                           
  3144                           	psect	text13
  3145  056F                     __ptext13:	
  3146 ;; *************** function _readCurrent *****************
  3147 ;; Defined at:
  3148 ;;		line 443 in file "powerspy.c"
  3149 ;; Parameters:    Size  Location     Type
  3150 ;;		None
  3151 ;; Auto vars:     Size  Location     Type
  3152 ;;		None
  3153 ;; Return value:  Size  Location     Type
  3154 ;;                  3   25[BANK0 ] m
  3155 ;; Registers used:
  3156 ;;		wreg, status,2, status,0, pclath, cstack
  3157 ;; Tracked objects:
  3158 ;;		On entry : 0/0
  3159 ;;		On exit  : 0/0
  3160 ;;		Unchanged: 0/0
  3161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3162 ;;      Params:         0       3       0       0       0       0
  3163 ;;      Locals:         0       0       0       0       0       0
  3164 ;;      Temps:          0       6       0       0       0       0
  3165 ;;      Totals:         0       9       0       0       0       0
  3166 ;;Total ram usage:        9 bytes
  3167 ;; Hardware stack levels used:    1
  3168 ;; Hardware stack levels required when called:    2
  3169 ;; This function calls:
  3170 ;;		___atdiv
  3171 ;;		___tmul
  3172 ;;		___wmul
  3173 ;;		_adc
  3174 ;; This function is called by:
  3175 ;;		_main
  3176 ;; This function uses a non-reentrant model
  3177 ;;
  3178                           
  3179                           
  3180                           ;psect for function _readCurrent
  3181  056F                     _readCurrent:	
  3182                           
  3183                           ;powerspy.c: 451: ADFM = 1;
  3184                           
  3185                           ;incstack = 0
  3186                           ; Regs used in _readCurrent: [wreg+status,2+status,0+pclath+cstack]
  3187  056F  0021               	movlb	1	; select bank1
  3188  0570  179E               	bsf	30,7	;volatile
  3189                           
  3190                           ;powerspy.c: 452: adc(7);
  3191  0571  3007               	movlw	7
  3192  0572  3185  25C0  3185   	fcall	_adc
  3193                           
  3194                           ;powerspy.c: 457: return (1000 * (5 * (ADRES + i_u_diode_offs) + i_u_offs)) / 1024;
  3195  0575  3000               	movlw	0
  3196  0576  0020               	movlb	0	; select bank0
  3197  0577  00AD               	movwf	___atdiv@divisor
  3198  0578  3004               	movlw	4
  3199  0579  00AE               	movwf	___atdiv@divisor+1
  3200  057A  3000               	movlw	0
  3201  057B  00AF               	movwf	___atdiv@divisor+2
  3202  057C  086C               	movf	_i_u_offs,w
  3203  057D  00BC               	movwf	??_readCurrent
  3204  057E  086D               	movf	_i_u_offs+1,w
  3205  057F  00BD               	movwf	??_readCurrent+1
  3206  0580  086E               	movf	_i_u_offs+2,w
  3207  0581  00BE               	movwf	??_readCurrent+2
  3208  0582  086F               	movf	_i_u_diode_offs,w
  3209  0583  0021               	movlb	1	; select bank1
  3210  0584  071B               	addwf	27,w	;volatile
  3211  0585  0020               	movlb	0	; select bank0
  3212  0586  00A0               	movwf	___wmul@multiplier
  3213  0587  0021               	movlb	1	; select bank1
  3214  0588  081C               	movf	28,w	;volatile
  3215  0589  1803               	skipnc
  3216  058A  0A1C               	incf	28,w	;volatile
  3217  058B  0020               	movlb	0	; select bank0
  3218  058C  00A1               	movwf	___wmul@multiplier+1
  3219  058D  3005               	movlw	5
  3220  058E  00A2               	movwf	___wmul@multiplicand
  3221  058F  3000               	movlw	0
  3222  0590  00A3               	movwf	___wmul@multiplicand+1
  3223  0591  3187  2772  3185   	fcall	___wmul
  3224  0594  0020               	movlb	0	; select bank0
  3225  0595  0820               	movf	?___wmul,w
  3226  0596  00BF               	movwf	??_readCurrent+3
  3227  0597  0821               	movf	?___wmul+1,w
  3228  0598  00C0               	movwf	??_readCurrent+4
  3229  0599  01C1               	clrf	??_readCurrent+5
  3230  059A  083F               	movf	??_readCurrent+3,w
  3231  059B  07BC               	addwf	??_readCurrent,f
  3232  059C  0840               	movf	??_readCurrent+4,w
  3233  059D  3DBD               	addwfc	??_readCurrent+1,f
  3234  059E  0841               	movf	??_readCurrent+5,w
  3235  059F  3DBE               	addwfc	??_readCurrent+2,f
  3236  05A0  083C               	movf	??_readCurrent,w
  3237  05A1  00A4               	movwf	___tmul@multiplier
  3238  05A2  083D               	movf	??_readCurrent+1,w
  3239  05A3  00A5               	movwf	___tmul@multiplier+1
  3240  05A4  083E               	movf	??_readCurrent+2,w
  3241  05A5  00A6               	movwf	___tmul@multiplier+2
  3242  05A6  30E8               	movlw	232
  3243  05A7  00A7               	movwf	___tmul@multiplicand
  3244  05A8  3003               	movlw	3
  3245  05A9  00A8               	movwf	___tmul@multiplicand+1
  3246  05AA  3000               	movlw	0
  3247  05AB  00A9               	movwf	___tmul@multiplicand+2
  3248  05AC  3186  26E6  3185   	fcall	___tmul
  3249  05AF  0020               	movlb	0	; select bank0
  3250  05B0  0824               	movf	?___tmul,w
  3251  05B1  00B0               	movwf	___atdiv@dividend
  3252  05B2  0825               	movf	?___tmul+1,w
  3253  05B3  00B1               	movwf	___atdiv@dividend+1
  3254  05B4  0826               	movf	?___tmul+2,w
  3255  05B5  00B2               	movwf	___atdiv@dividend+2
  3256  05B6  3184  2452         	fcall	___atdiv
  3257  05B8  0020               	movlb	0	; select bank0
  3258  05B9  082D               	movf	?___atdiv,w
  3259  05BA  00B9               	movwf	?_readCurrent
  3260  05BB  082E               	movf	?___atdiv+1,w
  3261  05BC  00BA               	movwf	?_readCurrent+1
  3262  05BD  082F               	movf	?___atdiv+2,w
  3263  05BE  00BB               	movwf	?_readCurrent+2
  3264  05BF  0008               	return
  3265  05C0                     __end_of_readCurrent:	
  3266                           
  3267                           	psect	text14
  3268  05C0                     __ptext14:	
  3269 ;; *************** function _adc *****************
  3270 ;; Defined at:
  3271 ;;		line 389 in file "powerspy.c"
  3272 ;; Parameters:    Size  Location     Type
  3273 ;;  src             1    wreg     const char 
  3274 ;; Auto vars:     Size  Location     Type
  3275 ;;  src             1    3[COMMON] const char 
  3276 ;; Return value:  Size  Location     Type
  3277 ;;                  1    wreg      void 
  3278 ;; Registers used:
  3279 ;;		wreg, status,2, status,0
  3280 ;; Tracked objects:
  3281 ;;		On entry : 0/0
  3282 ;;		On exit  : 0/0
  3283 ;;		Unchanged: 0/0
  3284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3285 ;;      Params:         0       0       0       0       0       0
  3286 ;;      Locals:         1       0       0       0       0       0
  3287 ;;      Temps:          1       0       0       0       0       0
  3288 ;;      Totals:         2       0       0       0       0       0
  3289 ;;Total ram usage:        2 bytes
  3290 ;; Hardware stack levels used:    1
  3291 ;; Hardware stack levels required when called:    1
  3292 ;; This function calls:
  3293 ;;		Nothing
  3294 ;; This function is called by:
  3295 ;;		_readCurrent
  3296 ;;		_readVdd
  3297 ;; This function uses a non-reentrant model
  3298 ;;
  3299                           
  3300                           
  3301                           ;psect for function _adc
  3302  05C0                     _adc:	
  3303                           
  3304                           ;incstack = 0
  3305                           ; Regs used in _adc: [wreg+status,2+status,0]
  3306                           ;adc@src stored from wreg
  3307  05C0  00F3               	movwf	adc@src
  3308                           
  3309                           ;powerspy.c: 412: CHS0 = (bit) (src >> 0) & 0x01;
  3310  05C1  1C73               	btfss	adc@src,0
  3311  05C2  2DC6               	goto	u1420
  3312  05C3  0021               	movlb	1	; select bank1
  3313  05C4  151D               	bsf	29,2	;volatile
  3314  05C5  2DC8               	goto	l2016
  3315  05C6                     u1420:	
  3316  05C6  0021               	movlb	1	; select bank1
  3317  05C7  111D               	bcf	29,2	;volatile
  3318  05C8                     l2016:	
  3319                           
  3320                           ;powerspy.c: 413: CHS1 = (bit) (src >> 1) & 0x01;
  3321  05C8  0873               	movf	adc@src,w
  3322  05C9  00F2               	movwf	??_adc
  3323  05CA  3001               	movlw	1
  3324  05CB                     u1445:	
  3325  05CB  1003               	clrc
  3326  05CC  1BF2               	btfsc	??_adc,7
  3327  05CD  1403               	setc
  3328  05CE  0CF2               	rrf	??_adc,f
  3329  05CF  0B89               	decfsz	9,f
  3330  05D0  2DCB               	goto	u1445
  3331  05D1  1C72               	btfss	??_adc,0
  3332  05D2  2DD6               	goto	u1450
  3333  05D3  0021               	movlb	1	; select bank1
  3334  05D4  159D               	bsf	29,3	;volatile
  3335  05D5  2DD8               	goto	l2018
  3336  05D6                     u1450:	
  3337  05D6  0021               	movlb	1	; select bank1
  3338  05D7  119D               	bcf	29,3	;volatile
  3339  05D8                     l2018:	
  3340                           
  3341                           ;powerspy.c: 414: CHS2 = (bit) (src >> 2) & 0x01;
  3342  05D8  0873               	movf	adc@src,w
  3343  05D9  00F2               	movwf	??_adc
  3344  05DA  3002               	movlw	2
  3345  05DB                     u1475:	
  3346  05DB  1003               	clrc
  3347  05DC  1BF2               	btfsc	??_adc,7
  3348  05DD  1403               	setc
  3349  05DE  0CF2               	rrf	??_adc,f
  3350  05DF  0B89               	decfsz	9,f
  3351  05E0  2DDB               	goto	u1475
  3352  05E1  1C72               	btfss	??_adc,0
  3353  05E2  2DE6               	goto	u1480
  3354  05E3  0021               	movlb	1	; select bank1
  3355  05E4  161D               	bsf	29,4	;volatile
  3356  05E5  2DE8               	goto	l2020
  3357  05E6                     u1480:	
  3358  05E6  0021               	movlb	1	; select bank1
  3359  05E7  121D               	bcf	29,4	;volatile
  3360  05E8                     l2020:	
  3361                           
  3362                           ;powerspy.c: 415: CHS3 = (bit) (src >> 3) & 0x01;
  3363  05E8  0873               	movf	adc@src,w
  3364  05E9  00F2               	movwf	??_adc
  3365  05EA  3003               	movlw	3
  3366  05EB                     u1505:	
  3367  05EB  1003               	clrc
  3368  05EC  1BF2               	btfsc	??_adc,7
  3369  05ED  1403               	setc
  3370  05EE  0CF2               	rrf	??_adc,f
  3371  05EF  0B89               	decfsz	9,f
  3372  05F0  2DEB               	goto	u1505
  3373  05F1  1C72               	btfss	??_adc,0
  3374  05F2  2DF6               	goto	u1510
  3375  05F3  0021               	movlb	1	; select bank1
  3376  05F4  169D               	bsf	29,5	;volatile
  3377  05F5  2DF8               	goto	l2022
  3378  05F6                     u1510:	
  3379  05F6  0021               	movlb	1	; select bank1
  3380  05F7  129D               	bcf	29,5	;volatile
  3381  05F8                     l2022:	
  3382                           
  3383                           ;powerspy.c: 416: CHS4 = (bit) (src >> 4) & 0x01;
  3384  05F8  0873               	movf	adc@src,w
  3385  05F9  00F2               	movwf	??_adc
  3386  05FA  3004               	movlw	4
  3387  05FB                     u1535:	
  3388  05FB  1003               	clrc
  3389  05FC  1BF2               	btfsc	??_adc,7
  3390  05FD  1403               	setc
  3391  05FE  0CF2               	rrf	??_adc,f
  3392  05FF  0B89               	decfsz	9,f
  3393  0600  2DFB               	goto	u1535
  3394  0601  1C72               	btfss	??_adc,0
  3395  0602  2E06               	goto	u1540
  3396  0603  0021               	movlb	1	; select bank1
  3397  0604  171D               	bsf	29,6	;volatile
  3398  0605  2E08               	goto	u1554
  3399  0606                     u1540:	
  3400  0606  0021               	movlb	1	; select bank1
  3401  0607  131D               	bcf	29,6	;volatile
  3402  0608                     u1554:	
  3403                           
  3404                           ;powerspy.c: 418: _delay((unsigned long)((5)*(32000000/4000000.0)));
  3405  0608  300D               	movlw	13
  3406  0609  00F2               	movwf	??_adc
  3407  060A                     u3047:	
  3408  060A  0BF2               	decfsz	??_adc,f
  3409  060B  2E0A               	goto	u3047
  3410                           
  3411                           ;powerspy.c: 421: GO_nDONE = 1;
  3412  060C  0021               	movlb	1	; select bank1
  3413  060D  149D               	bsf	29,1	;volatile
  3414  060E                     l276:	
  3415                           ;powerspy.c: 422: while (GO_nDONE);
  3416                           
  3417  060E  1C9D               	btfss	29,1	;volatile
  3418  060F  0008               	return
  3419  0610  2E0E               	goto	l276
  3420  0611                     __end_of_adc:	
  3421                           
  3422                           	psect	text15
  3423  0772                     __ptext15:	
  3424 ;; *************** function ___wmul *****************
  3425 ;; Defined at:
  3426 ;;		line 15 in file "/Applications/microchip/xc8/v1.37/sources/common/Umul16.c"
  3427 ;; Parameters:    Size  Location     Type
  3428 ;;  multiplier      2    0[BANK0 ] unsigned int 
  3429 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  3430 ;; Auto vars:     Size  Location     Type
  3431 ;;  product         2    8[COMMON] unsigned int 
  3432 ;; Return value:  Size  Location     Type
  3433 ;;                  2    0[BANK0 ] unsigned int 
  3434 ;; Registers used:
  3435 ;;		wreg, status,2, status,0
  3436 ;; Tracked objects:
  3437 ;;		On entry : 0/0
  3438 ;;		On exit  : 0/0
  3439 ;;		Unchanged: 0/0
  3440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3441 ;;      Params:         0       4       0       0       0       0
  3442 ;;      Locals:         2       0       0       0       0       0
  3443 ;;      Temps:          0       0       0       0       0       0
  3444 ;;      Totals:         2       4       0       0       0       0
  3445 ;;Total ram usage:        6 bytes
  3446 ;; Hardware stack levels used:    1
  3447 ;; Hardware stack levels required when called:    1
  3448 ;; This function calls:
  3449 ;;		Nothing
  3450 ;; This function is called by:
  3451 ;;		_readCurrent
  3452 ;;		_main
  3453 ;; This function uses a non-reentrant model
  3454 ;;
  3455                           
  3456                           
  3457                           ;psect for function ___wmul
  3458  0772                     ___wmul:	
  3459                           
  3460                           ;incstack = 0
  3461                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3462  0772  01F8               	clrf	___wmul@product
  3463  0773  01F9               	clrf	___wmul@product+1
  3464  0774                     l3052:	
  3465  0774  0020               	movlb	0	; select bank0
  3466  0775  1C20               	btfss	___wmul@multiplier,0
  3467  0776  2F7B               	goto	l608
  3468  0777  0822               	movf	___wmul@multiplicand,w
  3469  0778  07F8               	addwf	___wmul@product,f
  3470  0779  0823               	movf	___wmul@multiplicand+1,w
  3471  077A  3DF9               	addwfc	___wmul@product+1,f
  3472  077B                     l608:	
  3473  077B  3001               	movlw	1
  3474  077C                     u2875:	
  3475  077C  35A2               	lslf	___wmul@multiplicand,f
  3476  077D  0DA3               	rlf	___wmul@multiplicand+1,f
  3477  077E  0B89               	decfsz	9,f
  3478  077F  2F7C               	goto	u2875
  3479  0780  3001               	movlw	1
  3480  0781                     u2885:	
  3481  0781  36A1               	lsrf	___wmul@multiplier+1,f
  3482  0782  0CA0               	rrf	___wmul@multiplier,f
  3483  0783  0B89               	decfsz	9,f
  3484  0784  2F81               	goto	u2885
  3485  0785  0820               	movf	___wmul@multiplier,w
  3486  0786  0421               	iorwf	___wmul@multiplier+1,w
  3487  0787  1D03               	btfss	3,2
  3488  0788  2F74               	goto	l3052
  3489  0789  0879               	movf	___wmul@product+1,w
  3490  078A  00A1               	movwf	?___wmul+1
  3491  078B  0878               	movf	___wmul@product,w
  3492  078C  00A0               	movwf	?___wmul
  3493  078D  0008               	return
  3494  078E                     __end_of___wmul:	
  3495                           
  3496                           	psect	text16
  3497  06E6                     __ptext16:	
  3498 ;; *************** function ___tmul *****************
  3499 ;; Defined at:
  3500 ;;		line 15 in file "/Applications/microchip/xc8/v1.37/sources/common/Umul24.c"
  3501 ;; Parameters:    Size  Location     Type
  3502 ;;  multiplier      3    4[BANK0 ] unsigned um
  3503 ;;  multiplicand    3    7[BANK0 ] unsigned um
  3504 ;; Auto vars:     Size  Location     Type
  3505 ;;  product         3   10[BANK0 ] unsigned um
  3506 ;; Return value:  Size  Location     Type
  3507 ;;                  3    4[BANK0 ] unsigned um
  3508 ;; Registers used:
  3509 ;;		wreg, status,2, status,0
  3510 ;; Tracked objects:
  3511 ;;		On entry : 0/0
  3512 ;;		On exit  : 0/0
  3513 ;;		Unchanged: 0/0
  3514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3515 ;;      Params:         0       6       0       0       0       0
  3516 ;;      Locals:         0       3       0       0       0       0
  3517 ;;      Temps:          0       0       0       0       0       0
  3518 ;;      Totals:         0       9       0       0       0       0
  3519 ;;Total ram usage:        9 bytes
  3520 ;; Hardware stack levels used:    1
  3521 ;; Hardware stack levels required when called:    1
  3522 ;; This function calls:
  3523 ;;		Nothing
  3524 ;; This function is called by:
  3525 ;;		_readCurrent
  3526 ;;		_main
  3527 ;; This function uses a non-reentrant model
  3528 ;;
  3529                           
  3530                           
  3531                           ;psect for function ___tmul
  3532  06E6                     ___tmul:	
  3533                           
  3534                           ;incstack = 0
  3535                           ; Regs used in ___tmul: [wreg+status,2+status,0]
  3536  06E6  3000               	movlw	0
  3537  06E7  0020               	movlb	0	; select bank0
  3538  06E8  00AA               	movwf	___tmul@product
  3539  06E9  3000               	movlw	0
  3540  06EA  00AB               	movwf	___tmul@product+1
  3541  06EB  3000               	movlw	0
  3542  06EC  00AC               	movwf	___tmul@product+2
  3543  06ED                     l2322:	
  3544  06ED  1C24               	btfss	___tmul@multiplier,0
  3545  06EE  2EF5               	goto	l2326
  3546  06EF  0827               	movf	___tmul@multiplicand,w
  3547  06F0  07AA               	addwf	___tmul@product,f
  3548  06F1  0828               	movf	___tmul@multiplicand+1,w
  3549  06F2  3DAB               	addwfc	___tmul@product+1,f
  3550  06F3  0829               	movf	___tmul@multiplicand+2,w
  3551  06F4  3DAC               	addwfc	___tmul@product+2,f
  3552  06F5                     l2326:	
  3553  06F5  3001               	movlw	1
  3554  06F6                     u1865:	
  3555  06F6  35A7               	lslf	___tmul@multiplicand,f
  3556  06F7  0DA8               	rlf	___tmul@multiplicand+1,f
  3557  06F8  0DA9               	rlf	___tmul@multiplicand+2,f
  3558  06F9  0B89               	decfsz	9,f
  3559  06FA  2EF6               	goto	u1865
  3560  06FB  3001               	movlw	1
  3561  06FC                     u1875:	
  3562  06FC  36A6               	lsrf	___tmul@multiplier+2,f
  3563  06FD  0CA5               	rrf	___tmul@multiplier+1,f
  3564  06FE  0CA4               	rrf	___tmul@multiplier,f
  3565  06FF  0B89               	decfsz	9,f
  3566  0700  2EFC               	goto	u1875
  3567  0701  0826               	movf	___tmul@multiplier+2,w
  3568  0702  0425               	iorwf	___tmul@multiplier+1,w
  3569  0703  0424               	iorwf	___tmul@multiplier,w
  3570  0704  1D03               	skipz
  3571  0705  2EED               	goto	l2322
  3572  0706  082A               	movf	___tmul@product,w
  3573  0707  00A4               	movwf	?___tmul
  3574  0708  082B               	movf	___tmul@product+1,w
  3575  0709  00A5               	movwf	?___tmul+1
  3576  070A  082C               	movf	___tmul@product+2,w
  3577  070B  00A6               	movwf	?___tmul+2
  3578  070C  0008               	return
  3579  070D                     __end_of___tmul:	
  3580                           
  3581                           	psect	text17
  3582  0452                     __ptext17:	
  3583 ;; *************** function ___atdiv *****************
  3584 ;; Defined at:
  3585 ;;		line 6 in file "/Applications/microchip/xc8/v1.37/sources/common/atdiv.c"
  3586 ;; Parameters:    Size  Location     Type
  3587 ;;  divisor         3   13[BANK0 ] m
  3588 ;;  dividend        3   16[BANK0 ] m
  3589 ;; Auto vars:     Size  Location     Type
  3590 ;;  quotient        3   22[BANK0 ] m
  3591 ;;  sign            1   21[BANK0 ] unsigned char 
  3592 ;;  counter         1   20[BANK0 ] unsigned char 
  3593 ;; Return value:  Size  Location     Type
  3594 ;;                  3   13[BANK0 ] m
  3595 ;; Registers used:
  3596 ;;		wreg, status,2, status,0
  3597 ;; Tracked objects:
  3598 ;;		On entry : 0/0
  3599 ;;		On exit  : 0/0
  3600 ;;		Unchanged: 0/0
  3601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3602 ;;      Params:         0       6       0       0       0       0
  3603 ;;      Locals:         0       5       0       0       0       0
  3604 ;;      Temps:          0       1       0       0       0       0
  3605 ;;      Totals:         0      12       0       0       0       0
  3606 ;;Total ram usage:       12 bytes
  3607 ;; Hardware stack levels used:    1
  3608 ;; Hardware stack levels required when called:    1
  3609 ;; This function calls:
  3610 ;;		Nothing
  3611 ;; This function is called by:
  3612 ;;		_readCurrent
  3613 ;;		_main
  3614 ;; This function uses a non-reentrant model
  3615 ;;
  3616                           
  3617                           
  3618                           ;psect for function ___atdiv
  3619  0452                     ___atdiv:	
  3620                           
  3621                           ;incstack = 0
  3622                           ; Regs used in ___atdiv: [wreg+status,2+status,0]
  3623  0452  0020               	movlb	0	; select bank0
  3624  0453  01B5               	clrf	___atdiv@sign
  3625  0454  1FAF               	btfss	___atdiv@divisor+2,7
  3626  0455  2C60               	goto	l702
  3627  0456  09AD               	comf	___atdiv@divisor,f
  3628  0457  09AE               	comf	___atdiv@divisor+1,f
  3629  0458  09AF               	comf	___atdiv@divisor+2,f
  3630  0459  0AAD               	incf	___atdiv@divisor,f
  3631  045A  1903               	skipnz
  3632  045B  0AAE               	incf	___atdiv@divisor+1,f
  3633  045C  1903               	skipnz
  3634  045D  0AAF               	incf	___atdiv@divisor+2,f
  3635  045E  01B5               	clrf	___atdiv@sign
  3636  045F  0AB5               	incf	___atdiv@sign,f
  3637  0460                     l702:	
  3638  0460  1FB2               	btfss	___atdiv@dividend+2,7
  3639  0461  2C6E               	goto	l2344
  3640  0462  09B0               	comf	___atdiv@dividend,f
  3641  0463  09B1               	comf	___atdiv@dividend+1,f
  3642  0464  09B2               	comf	___atdiv@dividend+2,f
  3643  0465  0AB0               	incf	___atdiv@dividend,f
  3644  0466  1903               	skipnz
  3645  0467  0AB1               	incf	___atdiv@dividend+1,f
  3646  0468  1903               	skipnz
  3647  0469  0AB2               	incf	___atdiv@dividend+2,f
  3648  046A  3001               	movlw	1
  3649  046B  00B3               	movwf	??___atdiv
  3650  046C  0833               	movf	??___atdiv,w
  3651  046D  06B5               	xorwf	___atdiv@sign,f
  3652  046E                     l2344:	
  3653  046E  3000               	movlw	0
  3654  046F  00B6               	movwf	___atdiv@quotient
  3655  0470  3000               	movlw	0
  3656  0471  00B7               	movwf	___atdiv@quotient+1
  3657  0472  3000               	movlw	0
  3658  0473  00B8               	movwf	___atdiv@quotient+2
  3659  0474  082F               	movf	___atdiv@divisor+2,w
  3660  0475  042E               	iorwf	___atdiv@divisor+1,w
  3661  0476  042D               	iorwf	___atdiv@divisor,w
  3662  0477  1903               	skipnz
  3663  0478  2CAB               	goto	l2366
  3664  0479  01B4               	clrf	___atdiv@counter
  3665  047A  0AB4               	incf	___atdiv@counter,f
  3666  047B                     l2352:	
  3667  047B  1BAF               	btfsc	___atdiv@divisor+2,7
  3668  047C  2C88               	goto	l2354
  3669  047D  3001               	movlw	1
  3670  047E                     u1925:	
  3671  047E  35AD               	lslf	___atdiv@divisor,f
  3672  047F  0DAE               	rlf	___atdiv@divisor+1,f
  3673  0480  0DAF               	rlf	___atdiv@divisor+2,f
  3674  0481  0B89               	decfsz	9,f
  3675  0482  2C7E               	goto	u1925
  3676  0483  3001               	movlw	1
  3677  0484  00B3               	movwf	??___atdiv
  3678  0485  0833               	movf	??___atdiv,w
  3679  0486  07B4               	addwf	___atdiv@counter,f
  3680  0487  2C7B               	goto	l2352
  3681  0488                     l2354:	
  3682  0488  3001               	movlw	1
  3683  0489                     u1945:	
  3684  0489  35B6               	lslf	___atdiv@quotient,f
  3685  048A  0DB7               	rlf	___atdiv@quotient+1,f
  3686  048B  0DB8               	rlf	___atdiv@quotient+2,f
  3687  048C  0B89               	decfsz	9,f
  3688  048D  2C89               	goto	u1945
  3689  048E  082F               	movf	___atdiv@divisor+2,w
  3690  048F  0232               	subwf	___atdiv@dividend+2,w
  3691  0490  1D03               	skipz
  3692  0491  2C98               	goto	u1955
  3693  0492  082E               	movf	___atdiv@divisor+1,w
  3694  0493  0231               	subwf	___atdiv@dividend+1,w
  3695  0494  1D03               	skipz
  3696  0495  2C98               	goto	u1955
  3697  0496  082D               	movf	___atdiv@divisor,w
  3698  0497  0230               	subwf	___atdiv@dividend,w
  3699  0498                     u1955:	
  3700  0498  1C03               	skipc
  3701  0499  2CA1               	goto	l2362
  3702  049A  082D               	movf	___atdiv@divisor,w
  3703  049B  02B0               	subwf	___atdiv@dividend,f
  3704  049C  082E               	movf	___atdiv@divisor+1,w
  3705  049D  3BB1               	subwfb	___atdiv@dividend+1,f
  3706  049E  082F               	movf	___atdiv@divisor+2,w
  3707  049F  3BB2               	subwfb	___atdiv@dividend+2,f
  3708  04A0  1436               	bsf	___atdiv@quotient,0
  3709  04A1                     l2362:	
  3710  04A1  3001               	movlw	1
  3711  04A2                     u1965:	
  3712  04A2  36AF               	lsrf	___atdiv@divisor+2,f
  3713  04A3  0CAE               	rrf	___atdiv@divisor+1,f
  3714  04A4  0CAD               	rrf	___atdiv@divisor,f
  3715  04A5  0B89               	decfsz	9,f
  3716  04A6  2CA2               	goto	u1965
  3717  04A7  3001               	movlw	1
  3718  04A8  02B4               	subwf	___atdiv@counter,f
  3719  04A9  1D03               	btfss	3,2
  3720  04AA  2C88               	goto	l2354
  3721  04AB                     l2366:	
  3722  04AB  0835               	movf	___atdiv@sign,w
  3723  04AC  1903               	btfsc	3,2
  3724  04AD  2CB6               	goto	l2370
  3725  04AE  09B6               	comf	___atdiv@quotient,f
  3726  04AF  09B7               	comf	___atdiv@quotient+1,f
  3727  04B0  09B8               	comf	___atdiv@quotient+2,f
  3728  04B1  0AB6               	incf	___atdiv@quotient,f
  3729  04B2  1903               	skipnz
  3730  04B3  0AB7               	incf	___atdiv@quotient+1,f
  3731  04B4  1903               	skipnz
  3732  04B5  0AB8               	incf	___atdiv@quotient+2,f
  3733  04B6                     l2370:	
  3734  04B6  0836               	movf	___atdiv@quotient,w
  3735  04B7  00AD               	movwf	?___atdiv
  3736  04B8  0837               	movf	___atdiv@quotient+1,w
  3737  04B9  00AE               	movwf	?___atdiv+1
  3738  04BA  0838               	movf	___atdiv@quotient+2,w
  3739  04BB  00AF               	movwf	?___atdiv+2
  3740  04BC  0008               	return
  3741  04BD                     __end_of___atdiv:	
  3742                           
  3743                           	psect	text18
  3744  0FCC                     __ptext18:	
  3745 ;; *************** function _initTMR1 *****************
  3746 ;; Defined at:
  3747 ;;		line 167 in file "powerspy.c"
  3748 ;; Parameters:    Size  Location     Type
  3749 ;;		None
  3750 ;; Auto vars:     Size  Location     Type
  3751 ;;		None
  3752 ;; Return value:  Size  Location     Type
  3753 ;;                  1    wreg      void 
  3754 ;; Registers used:
  3755 ;;		None
  3756 ;; Tracked objects:
  3757 ;;		On entry : 0/0
  3758 ;;		On exit  : 0/0
  3759 ;;		Unchanged: 0/0
  3760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3761 ;;      Params:         0       0       0       0       0       0
  3762 ;;      Locals:         0       0       0       0       0       0
  3763 ;;      Temps:          0       0       0       0       0       0
  3764 ;;      Totals:         0       0       0       0       0       0
  3765 ;;Total ram usage:        0 bytes
  3766 ;; Hardware stack levels used:    1
  3767 ;; Hardware stack levels required when called:    1
  3768 ;; This function calls:
  3769 ;;		Nothing
  3770 ;; This function is called by:
  3771 ;;		_main
  3772 ;; This function uses a non-reentrant model
  3773 ;;
  3774                           
  3775                           
  3776                           ;psect for function _initTMR1
  3777  0FCC                     _initTMR1:	
  3778                           
  3779                           ;powerspy.c: 180: TMR1CS0 = 0;
  3780                           
  3781                           ;incstack = 0
  3782                           ; Regs used in _initTMR1: []
  3783  0FCC  0020               	movlb	0	; select bank0
  3784  0FCD  1318               	bcf	24,6	;volatile
  3785                           
  3786                           ;powerspy.c: 181: TMR1CS1 = 0;
  3787  0FCE  1398               	bcf	24,7	;volatile
  3788                           
  3789                           ;powerspy.c: 185: T1CKPS0 = 1;
  3790  0FCF  1618               	bsf	24,4	;volatile
  3791                           
  3792                           ;powerspy.c: 186: T1CKPS1 = 0;
  3793  0FD0  1298               	bcf	24,5	;volatile
  3794                           
  3795                           ;powerspy.c: 188: TMR1IE = 1;
  3796  0FD1  0021               	movlb	1	; select bank1
  3797  0FD2  1411               	bsf	17,0	;volatile
  3798                           
  3799                           ;powerspy.c: 189: TMR1IF = 0;
  3800  0FD3  0020               	movlb	0	; select bank0
  3801  0FD4  1011               	bcf	17,0	;volatile
  3802                           
  3803                           ;powerspy.c: 191: TMR1ON = 1;
  3804  0FD5  1418               	bsf	24,0	;volatile
  3805  0FD6  0008               	return
  3806  0FD7                     __end_of_initTMR1:	
  3807                           
  3808                           	psect	text19
  3809  0733                     __ptext19:	
  3810 ;; *************** function _initPins *****************
  3811 ;; Defined at:
  3812 ;;		line 64 in file "powerspy.c"
  3813 ;; Parameters:    Size  Location     Type
  3814 ;;		None
  3815 ;; Auto vars:     Size  Location     Type
  3816 ;;		None
  3817 ;; Return value:  Size  Location     Type
  3818 ;;                  1    wreg      void 
  3819 ;; Registers used:
  3820 ;;		wreg, status,2
  3821 ;; Tracked objects:
  3822 ;;		On entry : 0/0
  3823 ;;		On exit  : 0/0
  3824 ;;		Unchanged: 0/0
  3825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3826 ;;      Params:         0       0       0       0       0       0
  3827 ;;      Locals:         0       0       0       0       0       0
  3828 ;;      Temps:          0       0       0       0       0       0
  3829 ;;      Totals:         0       0       0       0       0       0
  3830 ;;Total ram usage:        0 bytes
  3831 ;; Hardware stack levels used:    1
  3832 ;; Hardware stack levels required when called:    1
  3833 ;; This function calls:
  3834 ;;		Nothing
  3835 ;; This function is called by:
  3836 ;;		_main
  3837 ;; This function uses a non-reentrant model
  3838 ;;
  3839                           
  3840                           
  3841                           ;psect for function _initPins
  3842  0733                     _initPins:	
  3843                           
  3844                           ;powerspy.c: 66: PORTA = 0b00000000;
  3845                           
  3846                           ;incstack = 0
  3847                           ; Regs used in _initPins: [wreg+status,2]
  3848  0733  0020               	movlb	0	; select bank0
  3849  0734  018C               	clrf	12	;volatile
  3850                           
  3851                           ;powerspy.c: 67: ANSELA = 0b00000111;
  3852  0735  3007               	movlw	7
  3853  0736  0023               	movlb	3	; select bank3
  3854  0737  008C               	movwf	12	;volatile
  3855                           
  3856                           ;powerspy.c: 68: TRISA = 0b00000111;
  3857  0738  3007               	movlw	7
  3858  0739  0021               	movlb	1	; select bank1
  3859  073A  008C               	movwf	12	;volatile
  3860                           
  3861                           ;powerspy.c: 70: PORTB = 0b00000000;
  3862  073B  0020               	movlb	0	; select bank0
  3863  073C  018D               	clrf	13	;volatile
  3864                           
  3865                           ;powerspy.c: 71: ANSELB = 0b00110000;
  3866  073D  3030               	movlw	48
  3867  073E  0023               	movlb	3	; select bank3
  3868  073F  008D               	movwf	13	;volatile
  3869                           
  3870                           ;powerspy.c: 72: TRISB = 0b00111010;
  3871  0740  303A               	movlw	58
  3872  0741  0021               	movlb	1	; select bank1
  3873  0742  008D               	movwf	13	;volatile
  3874                           
  3875                           ;powerspy.c: 74: nWPUEN = 0;
  3876  0743  1395               	bcf	21,7	;volatile
  3877                           
  3878                           ;powerspy.c: 75: WPUB = 0b00001000;
  3879  0744  3008               	movlw	8
  3880  0745  0024               	movlb	4	; select bank4
  3881  0746  008D               	movwf	13	;volatile
  3882                           
  3883                           ;powerspy.c: 79: SCS0 = 0;
  3884  0747  0021               	movlb	1	; select bank1
  3885  0748  1019               	bcf	25,0	;volatile
  3886                           
  3887                           ;powerspy.c: 80: SCS1 = 0;
  3888  0749  1099               	bcf	25,1	;volatile
  3889                           
  3890                           ;powerspy.c: 82: IRCF0 = 0;
  3891  074A  1199               	bcf	25,3	;volatile
  3892                           
  3893                           ;powerspy.c: 83: IRCF1 = 1;
  3894  074B  1619               	bsf	25,4	;volatile
  3895                           
  3896                           ;powerspy.c: 84: IRCF2 = 1;
  3897  074C  1699               	bsf	25,5	;volatile
  3898                           
  3899                           ;powerspy.c: 85: IRCF3 = 1;
  3900  074D  1719               	bsf	25,6	;volatile
  3901                           
  3902                           ;powerspy.c: 87: SPLLEN = 1;
  3903  074E  1799               	bsf	25,7	;volatile
  3904                           
  3905                           ;powerspy.c: 90: IOCBN5 = 1;
  3906  074F  0027               	movlb	7	; select bank7
  3907  0750  1695               	bsf	21,5	;volatile
  3908                           
  3909                           ;powerspy.c: 91: IOCIE = 1;
  3910  0751  158B               	bsf	11,3	;volatile
  3911  0752  0008               	return
  3912  0753                     __end_of_initPins:	
  3913                           
  3914                           	psect	text20
  3915  0753                     __ptext20:	
  3916 ;; *************** function _initPWMTMR4 *****************
  3917 ;; Defined at:
  3918 ;;		line 223 in file "powerspy.c"
  3919 ;; Parameters:    Size  Location     Type
  3920 ;;		None
  3921 ;; Auto vars:     Size  Location     Type
  3922 ;;		None
  3923 ;; Return value:  Size  Location     Type
  3924 ;;                  1    wreg      void 
  3925 ;; Registers used:
  3926 ;;		wreg, status,2, status,0
  3927 ;; Tracked objects:
  3928 ;;		On entry : 0/0
  3929 ;;		On exit  : 0/0
  3930 ;;		Unchanged: 0/0
  3931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3932 ;;      Params:         0       0       0       0       0       0
  3933 ;;      Locals:         0       0       0       0       0       0
  3934 ;;      Temps:          1       0       0       0       0       0
  3935 ;;      Totals:         1       0       0       0       0       0
  3936 ;;Total ram usage:        1 bytes
  3937 ;; Hardware stack levels used:    1
  3938 ;; Hardware stack levels required when called:    1
  3939 ;; This function calls:
  3940 ;;		Nothing
  3941 ;; This function is called by:
  3942 ;;		_main
  3943 ;; This function uses a non-reentrant model
  3944 ;;
  3945                           
  3946                           
  3947                           ;psect for function _initPWMTMR4
  3948  0753                     _initPWMTMR4:	
  3949                           
  3950                           ;powerspy.c: 227: CCP1SEL = 1;
  3951                           
  3952                           ;incstack = 0
  3953                           ; Regs used in _initPWMTMR4: [wreg+status,2+status,0]
  3954  0753  0022               	movlb	2	; select bank2
  3955  0754  141D               	bsf	29,0	;volatile
  3956                           
  3957                           ;powerspy.c: 230: TRISBbits.TRISB0 = 1;
  3958  0755  0021               	movlb	1	; select bank1
  3959  0756  140D               	bsf	13,0	;volatile
  3960                           
  3961                           ;powerspy.c: 233: PR2 = 0xff;
  3962  0757  30FF               	movlw	255
  3963  0758  0020               	movlb	0	; select bank0
  3964  0759  009B               	movwf	27	;volatile
  3965                           
  3966                           ;powerspy.c: 234: CCP1CON = 0b00110000;
  3967  075A  3030               	movlw	48
  3968  075B  0025               	movlb	5	; select bank5
  3969  075C  0093               	movwf	19	;volatile
  3970                           
  3971                           ;powerspy.c: 237: CCP1CON |= 0b00001100;
  3972  075D  300C               	movlw	12
  3973  075E  00F2               	movwf	??_initPWMTMR4
  3974  075F  0872               	movf	??_initPWMTMR4,w
  3975  0760  0493               	iorwf	19,f	;volatile
  3976                           
  3977                           ;powerspy.c: 243: CCPR1L = 0x7f;
  3978  0761  307F               	movlw	127
  3979  0762  0091               	movwf	17	;volatile
  3980                           
  3981                           ;powerspy.c: 246: DC1B0 = 1;
  3982  0763  1613               	bsf	19,4	;volatile
  3983                           
  3984                           ;powerspy.c: 247: DC1B1 = 1;
  3985  0764  1693               	bsf	19,5	;volatile
  3986                           
  3987                           ;powerspy.c: 251: C1TSEL0 = 1;
  3988  0765  141E               	bsf	30,0	;volatile
  3989                           
  3990                           ;powerspy.c: 252: C1TSEL1 = 0;
  3991  0766  109E               	bcf	30,1	;volatile
  3992                           
  3993                           ;powerspy.c: 253: TMR4IF = 0;
  3994  0767  0020               	movlb	0	; select bank0
  3995  0768  1093               	bcf	19,1	;volatile
  3996                           
  3997                           ;powerspy.c: 256: T4CKPS0 = 0;
  3998  0769  0028               	movlb	8	; select bank8
  3999  076A  1017               	bcf	23,0	;volatile
  4000                           
  4001                           ;powerspy.c: 257: T4CKPS1 = 0;
  4002  076B  1097               	bcf	23,1	;volatile
  4003                           
  4004                           ;powerspy.c: 259: TMR4ON = 1;
  4005  076C  1517               	bsf	23,2	;volatile
  4006                           
  4007                           ;powerspy.c: 263: TMR4IF = 0;
  4008  076D  0020               	movlb	0	; select bank0
  4009  076E  1093               	bcf	19,1	;volatile
  4010                           
  4011                           ;powerspy.c: 265: TRISBbits.TRISB0 = 0;
  4012  076F  0021               	movlb	1	; select bank1
  4013  0770  100D               	bcf	13,0	;volatile
  4014  0771  0008               	return
  4015  0772                     __end_of_initPWMTMR4:	
  4016                           
  4017                           	psect	text21
  4018  0FA9                     __ptext21:	
  4019 ;; *************** function _initMessaging *****************
  4020 ;; Defined at:
  4021 ;;		line 16 in file "message.c"
  4022 ;; Parameters:    Size  Location     Type
  4023 ;;		None
  4024 ;; Auto vars:     Size  Location     Type
  4025 ;;		None
  4026 ;; Return value:  Size  Location     Type
  4027 ;;                  1    wreg      void 
  4028 ;; Registers used:
  4029 ;;		status,2
  4030 ;; Tracked objects:
  4031 ;;		On entry : 0/0
  4032 ;;		On exit  : 0/0
  4033 ;;		Unchanged: 0/0
  4034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4035 ;;      Params:         0       0       0       0       0       0
  4036 ;;      Locals:         0       0       0       0       0       0
  4037 ;;      Temps:          0       0       0       0       0       0
  4038 ;;      Totals:         0       0       0       0       0       0
  4039 ;;Total ram usage:        0 bytes
  4040 ;; Hardware stack levels used:    1
  4041 ;; Hardware stack levels required when called:    1
  4042 ;; This function calls:
  4043 ;;		Nothing
  4044 ;; This function is called by:
  4045 ;;		_main
  4046 ;; This function uses a non-reentrant model
  4047 ;;
  4048                           
  4049                           
  4050                           ;psect for function _initMessaging
  4051  0FA9                     _initMessaging:	
  4052                           
  4053                           ;message.c: 18: buffpos = -1;
  4054                           
  4055                           ;incstack = 0
  4056                           ; Regs used in _initMessaging: [status,2]
  4057  0FA9  01FA               	clrf	_buffpos
  4058  0FAA  03FA               	decf	_buffpos,f
  4059                           
  4060                           ;message.c: 19: readpos = 0;
  4061  0FAB  01FB               	clrf	_readpos
  4062                           
  4063                           ;message.c: 20: reading = 0;
  4064  0FAC  0020               	movlb	0	; select bank0
  4065  0FAD  01EB               	clrf	_reading
  4066  0FAE  0008               	return
  4067  0FAF                     __end_of_initMessaging:	
  4068                           
  4069                           	psect	text22
  4070  0FAF                     __ptext22:	
  4071 ;; *************** function _initFVR *****************
  4072 ;; Defined at:
  4073 ;;		line 197 in file "powerspy.c"
  4074 ;; Parameters:    Size  Location     Type
  4075 ;;		None
  4076 ;; Auto vars:     Size  Location     Type
  4077 ;;		None
  4078 ;; Return value:  Size  Location     Type
  4079 ;;                  1    wreg      void 
  4080 ;; Registers used:
  4081 ;;		None
  4082 ;; Tracked objects:
  4083 ;;		On entry : 0/0
  4084 ;;		On exit  : 0/0
  4085 ;;		Unchanged: 0/0
  4086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4087 ;;      Params:         0       0       0       0       0       0
  4088 ;;      Locals:         0       0       0       0       0       0
  4089 ;;      Temps:          0       0       0       0       0       0
  4090 ;;      Totals:         0       0       0       0       0       0
  4091 ;;Total ram usage:        0 bytes
  4092 ;; Hardware stack levels used:    1
  4093 ;; Hardware stack levels required when called:    1
  4094 ;; This function calls:
  4095 ;;		Nothing
  4096 ;; This function is called by:
  4097 ;;		_main
  4098 ;; This function uses a non-reentrant model
  4099 ;;
  4100                           
  4101                           
  4102                           ;psect for function _initFVR
  4103  0FAF                     _initFVR:	
  4104                           
  4105                           ;powerspy.c: 209: ADFVR0 = 1;
  4106                           
  4107                           ;incstack = 0
  4108                           ; Regs used in _initFVR: []
  4109  0FAF  0022               	movlb	2	; select bank2
  4110  0FB0  1417               	bsf	23,0	;volatile
  4111                           
  4112                           ;powerspy.c: 210: ADFVR1 = 0;
  4113  0FB1  1097               	bcf	23,1	;volatile
  4114                           
  4115                           ;powerspy.c: 212: CDAFVR0 = 0;
  4116  0FB2  1117               	bcf	23,2	;volatile
  4117                           
  4118                           ;powerspy.c: 213: CDAFVR1 = 0;
  4119  0FB3  1197               	bcf	23,3	;volatile
  4120                           
  4121                           ;powerspy.c: 214: FVREN = 1;
  4122  0FB4  1797               	bsf	23,7	;volatile
  4123  0FB5                     l255:	
  4124                           ;powerspy.c: 215: while (!FVRRDY);
  4125                           
  4126  0FB5  1B17               	btfsc	23,6	;volatile
  4127  0FB6  0008               	return
  4128  0FB7  2FB5               	goto	l255
  4129  0FB8                     __end_of_initFVR:	
  4130                           
  4131                           	psect	text23
  4132  0FE4                     __ptext23:	
  4133 ;; *************** function _initCOMP2 *****************
  4134 ;; Defined at:
  4135 ;;		line 317 in file "powerspy.c"
  4136 ;; Parameters:    Size  Location     Type
  4137 ;;		None
  4138 ;; Auto vars:     Size  Location     Type
  4139 ;;		None
  4140 ;; Return value:  Size  Location     Type
  4141 ;;                  1    wreg      void 
  4142 ;; Registers used:
  4143 ;;		None
  4144 ;; Tracked objects:
  4145 ;;		On entry : 0/0
  4146 ;;		On exit  : 0/0
  4147 ;;		Unchanged: 0/0
  4148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4149 ;;      Params:         0       0       0       0       0       0
  4150 ;;      Locals:         0       0       0       0       0       0
  4151 ;;      Temps:          0       0       0       0       0       0
  4152 ;;      Totals:         0       0       0       0       0       0
  4153 ;;Total ram usage:        0 bytes
  4154 ;; Hardware stack levels used:    1
  4155 ;; Hardware stack levels required when called:    1
  4156 ;; This function calls:
  4157 ;;		Nothing
  4158 ;; This function is called by:
  4159 ;;		_main
  4160 ;; This function uses a non-reentrant model
  4161 ;;
  4162                           
  4163                           
  4164                           ;psect for function _initCOMP2
  4165  0FE4                     _initCOMP2:	
  4166                           
  4167                           ;powerspy.c: 322: C2NCH0 = 0;
  4168                           
  4169                           ;incstack = 0
  4170                           ; Regs used in _initCOMP2: []
  4171  0FE4  0022               	movlb	2	; select bank2
  4172  0FE5  1014               	bcf	20,0	;volatile
  4173                           
  4174                           ;powerspy.c: 323: C2NCH1 = 0;
  4175  0FE6  1094               	bcf	20,1	;volatile
  4176                           
  4177                           ;powerspy.c: 336: C2PCH0 = 0;
  4178  0FE7  1214               	bcf	20,4	;volatile
  4179                           
  4180                           ;powerspy.c: 337: C2PCH1 = 0;
  4181  0FE8  1294               	bcf	20,5	;volatile
  4182                           
  4183                           ;powerspy.c: 340: C2INTP = 1;
  4184  0FE9  1794               	bsf	20,7	;volatile
  4185                           
  4186                           ;powerspy.c: 341: C2IE = 1;
  4187  0FEA  0021               	movlb	1	; select bank1
  4188  0FEB  1712               	bsf	18,6	;volatile
  4189                           
  4190                           ;powerspy.c: 342: C2IF = 0;
  4191  0FEC  0020               	movlb	0	; select bank0
  4192  0FED  1312               	bcf	18,6	;volatile
  4193                           
  4194                           ;powerspy.c: 343: C2ON = 1;
  4195  0FEE  0022               	movlb	2	; select bank2
  4196  0FEF  1793               	bsf	19,7	;volatile
  4197  0FF0  0008               	return
  4198  0FF1                     __end_of_initCOMP2:	
  4199                           
  4200                           	psect	text24
  4201  0FD7                     __ptext24:	
  4202 ;; *************** function _initCOMP1 *****************
  4203 ;; Defined at:
  4204 ;;		line 283 in file "powerspy.c"
  4205 ;; Parameters:    Size  Location     Type
  4206 ;;		None
  4207 ;; Auto vars:     Size  Location     Type
  4208 ;;		None
  4209 ;; Return value:  Size  Location     Type
  4210 ;;                  1    wreg      void 
  4211 ;; Registers used:
  4212 ;;		None
  4213 ;; Tracked objects:
  4214 ;;		On entry : 0/0
  4215 ;;		On exit  : 0/0
  4216 ;;		Unchanged: 0/0
  4217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4218 ;;      Params:         0       0       0       0       0       0
  4219 ;;      Locals:         0       0       0       0       0       0
  4220 ;;      Temps:          0       0       0       0       0       0
  4221 ;;      Totals:         0       0       0       0       0       0
  4222 ;;Total ram usage:        0 bytes
  4223 ;; Hardware stack levels used:    1
  4224 ;; Hardware stack levels required when called:    1
  4225 ;; This function calls:
  4226 ;;		Nothing
  4227 ;; This function is called by:
  4228 ;;		_main
  4229 ;; This function uses a non-reentrant model
  4230 ;;
  4231                           
  4232                           
  4233                           ;psect for function _initCOMP1
  4234  0FD7                     _initCOMP1:	
  4235                           
  4236                           ;powerspy.c: 288: C1NCH0 = 1;
  4237                           
  4238                           ;incstack = 0
  4239                           ; Regs used in _initCOMP1: []
  4240  0FD7  0022               	movlb	2	; select bank2
  4241  0FD8  1412               	bsf	18,0	;volatile
  4242                           
  4243                           ;powerspy.c: 289: C1NCH1 = 0;
  4244  0FD9  1092               	bcf	18,1	;volatile
  4245                           
  4246                           ;powerspy.c: 303: C1PCH0 = 0;
  4247  0FDA  1212               	bcf	18,4	;volatile
  4248                           
  4249                           ;powerspy.c: 304: C1PCH1 = 1;
  4250  0FDB  1692               	bsf	18,5	;volatile
  4251                           
  4252                           ;powerspy.c: 307: C1INTP = 1;
  4253  0FDC  1792               	bsf	18,7	;volatile
  4254                           
  4255                           ;powerspy.c: 308: C1IE = 1;
  4256  0FDD  0021               	movlb	1	; select bank1
  4257  0FDE  1692               	bsf	18,5	;volatile
  4258                           
  4259                           ;powerspy.c: 309: C1IF = 0;
  4260  0FDF  0020               	movlb	0	; select bank0
  4261  0FE0  1292               	bcf	18,5	;volatile
  4262                           
  4263                           ;powerspy.c: 310: C1ON = 1;
  4264  0FE1  0022               	movlb	2	; select bank2
  4265  0FE2  1791               	bsf	17,7	;volatile
  4266  0FE3  0008               	return
  4267  0FE4                     __end_of_initCOMP1:	
  4268                           
  4269                           	psect	text25
  4270  07A6                     __ptext25:	
  4271 ;; *************** function _initBT *****************
  4272 ;; Defined at:
  4273 ;;		line 350 in file "powerspy.c"
  4274 ;; Parameters:    Size  Location     Type
  4275 ;;		None
  4276 ;; Auto vars:     Size  Location     Type
  4277 ;;		None
  4278 ;; Return value:  Size  Location     Type
  4279 ;;                  1    wreg      void 
  4280 ;; Registers used:
  4281 ;;		wreg
  4282 ;; Tracked objects:
  4283 ;;		On entry : 0/0
  4284 ;;		On exit  : 0/0
  4285 ;;		Unchanged: 0/0
  4286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4287 ;;      Params:         0       0       0       0       0       0
  4288 ;;      Locals:         0       0       0       0       0       0
  4289 ;;      Temps:          0       0       0       0       0       0
  4290 ;;      Totals:         0       0       0       0       0       0
  4291 ;;Total ram usage:        0 bytes
  4292 ;; Hardware stack levels used:    1
  4293 ;; Hardware stack levels required when called:    1
  4294 ;; This function calls:
  4295 ;;		Nothing
  4296 ;; This function is called by:
  4297 ;;		_main
  4298 ;; This function uses a non-reentrant model
  4299 ;;
  4300                           
  4301                           
  4302                           ;psect for function _initBT
  4303  07A6                     _initBT:	
  4304                           
  4305                           ;powerspy.c: 354: RXDTSEL = 0;
  4306                           
  4307                           ;incstack = 0
  4308                           ; Regs used in _initBT: [wreg]
  4309  07A6  0022               	movlb	2	; select bank2
  4310  07A7  139D               	bcf	29,7	;volatile
  4311                           
  4312                           ;powerspy.c: 355: TXCKSEL = 0;
  4313  07A8  101E               	bcf	30,0	;volatile
  4314                           
  4315                           ;powerspy.c: 358: TXEN = 1;
  4316  07A9  0023               	movlb	3	; select bank3
  4317  07AA  169E               	bsf	30,5	;volatile
  4318                           
  4319                           ;powerspy.c: 359: SYNC = 0;
  4320  07AB  121E               	bcf	30,4	;volatile
  4321                           
  4322                           ;powerspy.c: 360: SPEN = 1;
  4323  07AC  179D               	bsf	29,7	;volatile
  4324                           
  4325                           ;powerspy.c: 363: CREN = 1;
  4326  07AD  161D               	bsf	29,4	;volatile
  4327                           
  4328                           ;powerspy.c: 364: SYNC = 0;
  4329  07AE  121E               	bcf	30,4	;volatile
  4330                           
  4331                           ;powerspy.c: 365: SPEN = 1;
  4332  07AF  179D               	bsf	29,7	;volatile
  4333                           
  4334                           ;powerspy.c: 368: BRGH = 0;
  4335  07B0  111E               	bcf	30,2	;volatile
  4336                           
  4337                           ;powerspy.c: 369: BRG16 = 0;
  4338  07B1  119F               	bcf	31,3	;volatile
  4339                           
  4340                           ;powerspy.c: 370: SPBRG = 51;
  4341  07B2  3033               	movlw	51
  4342  07B3  009B               	movwf	27	;volatile
  4343  07B4                     l2532:	
  4344                           ;powerspy.c: 372: while (RCIF) {
  4345                           
  4346  07B4  0020               	movlb	0	; select bank0
  4347  07B5  1E91               	btfss	17,5	;volatile
  4348  07B6  2FBA               	goto	l272
  4349                           
  4350                           ;powerspy.c: 373: RCREG;
  4351  07B7  0023               	movlb	3	; select bank3
  4352  07B8  0819               	movf	25,w	;volatile
  4353  07B9  2FB4               	goto	l2532
  4354  07BA                     l272:	
  4355                           
  4356                           ;powerspy.c: 374: }
  4357                           ;powerspy.c: 376: RCIE = 1;
  4358  07BA  0021               	movlb	1	; select bank1
  4359  07BB  1691               	bsf	17,5	;volatile
  4360  07BC  0008               	return
  4361  07BD                     __end_of_initBT:	
  4362                           
  4363                           	psect	text26
  4364  0FC2                     __ptext26:	
  4365 ;; *************** function _initADC *****************
  4366 ;; Defined at:
  4367 ;;		line 98 in file "powerspy.c"
  4368 ;; Parameters:    Size  Location     Type
  4369 ;;		None
  4370 ;; Auto vars:     Size  Location     Type
  4371 ;;		None
  4372 ;; Return value:  Size  Location     Type
  4373 ;;                  1    wreg      void 
  4374 ;; Registers used:
  4375 ;;		None
  4376 ;; Tracked objects:
  4377 ;;		On entry : 0/0
  4378 ;;		On exit  : 0/0
  4379 ;;		Unchanged: 0/0
  4380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4381 ;;      Params:         0       0       0       0       0       0
  4382 ;;      Locals:         0       0       0       0       0       0
  4383 ;;      Temps:          0       0       0       0       0       0
  4384 ;;      Totals:         0       0       0       0       0       0
  4385 ;;Total ram usage:        0 bytes
  4386 ;; Hardware stack levels used:    1
  4387 ;; Hardware stack levels required when called:    1
  4388 ;; This function calls:
  4389 ;;		Nothing
  4390 ;; This function is called by:
  4391 ;;		_main
  4392 ;; This function uses a non-reentrant model
  4393 ;;
  4394                           
  4395                           
  4396                           ;psect for function _initADC
  4397  0FC2                     _initADC:	
  4398                           
  4399                           ;powerspy.c: 102: ADFM = 0;
  4400                           
  4401                           ;incstack = 0
  4402                           ; Regs used in _initADC: []
  4403  0FC2  0021               	movlb	1	; select bank1
  4404  0FC3  139E               	bcf	30,7	;volatile
  4405                           
  4406                           ;powerspy.c: 106: ADCS0 = 0;
  4407  0FC4  121E               	bcf	30,4	;volatile
  4408                           
  4409                           ;powerspy.c: 107: ADCS1 = 1;
  4410  0FC5  169E               	bsf	30,5	;volatile
  4411                           
  4412                           ;powerspy.c: 108: ADCS2 = 1;
  4413  0FC6  171E               	bsf	30,6	;volatile
  4414                           
  4415                           ;powerspy.c: 112: ADPREF0 = 0;
  4416  0FC7  101E               	bcf	30,0	;volatile
  4417                           
  4418                           ;powerspy.c: 113: ADPREF1 = 0;
  4419  0FC8  109E               	bcf	30,1	;volatile
  4420                           
  4421                           ;powerspy.c: 114: ADNREF = 0;
  4422  0FC9  111E               	bcf	30,2	;volatile
  4423                           
  4424                           ;powerspy.c: 116: ADON = 1;
  4425  0FCA  141D               	bsf	29,0	;volatile
  4426  0FCB  0008               	return
  4427  0FCC                     __end_of_initADC:	
  4428                           
  4429                           	psect	text27
  4430  06BC                     __ptext27:	
  4431 ;; *************** function _deltaT *****************
  4432 ;; Defined at:
  4433 ;;		line 555 in file "powerspy.c"
  4434 ;; Parameters:    Size  Location     Type
  4435 ;;  tm_low          2    2[COMMON] unsigned short 
  4436 ;;  tm_high         2    4[COMMON] unsigned short 
  4437 ;; Auto vars:     Size  Location     Type
  4438 ;;		None
  4439 ;; Return value:  Size  Location     Type
  4440 ;;                  2    2[COMMON] unsigned short 
  4441 ;; Registers used:
  4442 ;;		wreg, status,2, status,0
  4443 ;; Tracked objects:
  4444 ;;		On entry : 0/0
  4445 ;;		On exit  : 0/0
  4446 ;;		Unchanged: 0/0
  4447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4448 ;;      Params:         4       0       0       0       0       0
  4449 ;;      Locals:         0       0       0       0       0       0
  4450 ;;      Temps:          4       0       0       0       0       0
  4451 ;;      Totals:         8       0       0       0       0       0
  4452 ;;Total ram usage:        8 bytes
  4453 ;; Hardware stack levels used:    1
  4454 ;; Hardware stack levels required when called:    1
  4455 ;; This function calls:
  4456 ;;		Nothing
  4457 ;; This function is called by:
  4458 ;;		_main
  4459 ;; This function uses a non-reentrant model
  4460 ;;
  4461                           
  4462                           
  4463                           ;psect for function _deltaT
  4464  06BC                     _deltaT:	
  4465                           
  4466                           ;powerspy.c: 557: if (tm_low < tm_high)
  4467                           
  4468                           ;incstack = 0
  4469                           ; Regs used in _deltaT: [wreg+status,2+status,0]
  4470  06BC  0875               	movf	deltaT@tm_high+1,w
  4471  06BD  0273               	subwf	deltaT@tm_low+1,w
  4472  06BE  1D03               	skipz
  4473  06BF  2EC2               	goto	u2205
  4474  06C0  0874               	movf	deltaT@tm_high,w
  4475  06C1  0272               	subwf	deltaT@tm_low,w
  4476  06C2                     u2205:	
  4477  06C2  1803               	skipnc
  4478  06C3  2ED2               	goto	l2560
  4479                           
  4480                           ;powerspy.c: 558: return tm_high - tm_low;
  4481  06C4  0972               	comf	deltaT@tm_low,w
  4482  06C5  00F6               	movwf	??_deltaT
  4483  06C6  0973               	comf	deltaT@tm_low+1,w
  4484  06C7  00F7               	movwf	??_deltaT+1
  4485  06C8  0AF6               	incf	??_deltaT,f
  4486  06C9  1903               	skipnz
  4487  06CA  0AF7               	incf	??_deltaT+1,f
  4488  06CB  0874               	movf	deltaT@tm_high,w
  4489  06CC  0776               	addwf	??_deltaT,w
  4490  06CD  00F2               	movwf	?_deltaT
  4491  06CE  0875               	movf	deltaT@tm_high+1,w
  4492  06CF  3D77               	addwfc	??_deltaT+1,w
  4493  06D0  00F3               	movwf	?_deltaT+1
  4494  06D1  0008               	return
  4495  06D2                     l2560:	
  4496                           
  4497                           ;powerspy.c: 559: else
  4498                           ;powerspy.c: 560: return 0xffff - tm_low + tm_high;
  4499  06D2  0972               	comf	deltaT@tm_low,w
  4500  06D3  00F6               	movwf	??_deltaT
  4501  06D4  0973               	comf	deltaT@tm_low+1,w
  4502  06D5  00F7               	movwf	??_deltaT+1
  4503  06D6  0AF6               	incf	??_deltaT,f
  4504  06D7  1903               	skipnz
  4505  06D8  0AF7               	incf	??_deltaT+1,f
  4506  06D9  0874               	movf	deltaT@tm_high,w
  4507  06DA  0776               	addwf	??_deltaT,w
  4508  06DB  00F8               	movwf	??_deltaT+2
  4509  06DC  0875               	movf	deltaT@tm_high+1,w
  4510  06DD  3D77               	addwfc	??_deltaT+1,w
  4511  06DE  00F9               	movwf	??_deltaT+3
  4512  06DF  0878               	movf	??_deltaT+2,w
  4513  06E0  3EFF               	addlw	255
  4514  06E1  00F2               	movwf	?_deltaT
  4515  06E2  30FF               	movlw	255
  4516  06E3  3D79               	addwfc	??_deltaT+3,w
  4517  06E4  00F3               	movwf	?_deltaT+1
  4518  06E5  0008               	return
  4519  06E6                     __end_of_deltaT:	
  4520                           
  4521                           	psect	text28
  4522  0FB8                     __ptext28:	
  4523 ;; *************** function _cos *****************
  4524 ;; Defined at:
  4525 ;;		line 597 in file "powerspy.c"
  4526 ;; Parameters:    Size  Location     Type
  4527 ;;  us              2    2[BANK0 ] short 
  4528 ;; Auto vars:     Size  Location     Type
  4529 ;;		None
  4530 ;; Return value:  Size  Location     Type
  4531 ;;                  1    wreg      char 
  4532 ;; Registers used:
  4533 ;;		wreg, status,2, status,0, pclath, cstack
  4534 ;; Tracked objects:
  4535 ;;		On entry : 0/0
  4536 ;;		On exit  : 0/0
  4537 ;;		Unchanged: 0/0
  4538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4539 ;;      Params:         0       2       0       0       0       0
  4540 ;;      Locals:         0       0       0       0       0       0
  4541 ;;      Temps:          0       0       0       0       0       0
  4542 ;;      Totals:         0       2       0       0       0       0
  4543 ;;Total ram usage:        2 bytes
  4544 ;; Hardware stack levels used:    1
  4545 ;; Hardware stack levels required when called:    4
  4546 ;; This function calls:
  4547 ;;		_sin
  4548 ;; This function is called by:
  4549 ;;		_main
  4550 ;; This function uses a non-reentrant model
  4551 ;;
  4552                           
  4553                           
  4554                           ;psect for function _cos
  4555  0FB8                     _cos:	
  4556                           
  4557                           ;powerspy.c: 599: return sin((100) + us);
  4558                           
  4559                           ;incstack = 0
  4560                           ; Regs used in _cos: [wreg+status,2+status,0+pclath+cstack]
  4561  0FB8  0020               	movlb	0	; select bank0
  4562  0FB9  0822               	movf	cos@us,w
  4563  0FBA  3E64               	addlw	100
  4564  0FBB  00F7               	movwf	sin@z
  4565  0FBC  3000               	movlw	0
  4566  0FBD  3D23               	addwfc	cos@us+1,w
  4567  0FBE  00F8               	movwf	sin@z+1
  4568  0FBF  3184  24BD         	fcall	_sin
  4569  0FC1  0008               	return
  4570  0FC2                     __end_of_cos:	
  4571                           
  4572                           	psect	text29
  4573  04BD                     __ptext29:	
  4574 ;; *************** function _sin *****************
  4575 ;; Defined at:
  4576 ;;		line 570 in file "powerspy.c"
  4577 ;; Parameters:    Size  Location     Type
  4578 ;;  z               2    7[COMMON] short 
  4579 ;; Auto vars:     Size  Location     Type
  4580 ;;  buff            2    0[BANK0 ] short 
  4581 ;; Return value:  Size  Location     Type
  4582 ;;                  1    wreg      char 
  4583 ;; Registers used:
  4584 ;;		wreg, status,2, status,0, pclath, cstack
  4585 ;; Tracked objects:
  4586 ;;		On entry : 0/0
  4587 ;;		On exit  : 0/0
  4588 ;;		Unchanged: 0/0
  4589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4590 ;;      Params:         2       0       0       0       0       0
  4591 ;;      Locals:         0       2       0       0       0       0
  4592 ;;      Temps:          1       0       0       0       0       0
  4593 ;;      Totals:         3       2       0       0       0       0
  4594 ;;Total ram usage:        5 bytes
  4595 ;; Hardware stack levels used:    1
  4596 ;; Hardware stack levels required when called:    3
  4597 ;; This function calls:
  4598 ;;		_sin_
  4599 ;; This function is called by:
  4600 ;;		_cos
  4601 ;;		_main
  4602 ;; This function uses a non-reentrant model
  4603 ;;
  4604                           
  4605                           
  4606                           ;psect for function _sin
  4607  04BD                     _sin:	
  4608  04BD                     l334:	
  4609                           ;powerspy.c: 573: int16_t buff;
  4610                           ;powerspy.c: 574: while (z > ((100)<<2))
  4611                           
  4612                           ;incstack = 0
  4613                           ; Regs used in _sin: [wreg+status,2+status,0+pclath+cstack]
  4614                           
  4615  04BD  0878               	movf	sin@z+1,w
  4616  04BE  3A80               	xorlw	128
  4617  04BF  00F9               	movwf	??_sin
  4618  04C0  3081               	movlw	129
  4619  04C1  0279               	subwf	??_sin,w
  4620  04C2  1D03               	skipz
  4621  04C3  2CC6               	goto	u2825
  4622  04C4  3091               	movlw	145
  4623  04C5  0277               	subwf	sin@z,w
  4624  04C6                     u2825:	
  4625  04C6  1C03               	btfss	3,0
  4626  04C7  2CCD               	goto	l3022
  4627                           
  4628                           ;powerspy.c: 575: z -= ((100)<<2);
  4629  04C8  3070               	movlw	112
  4630  04C9  07F7               	addwf	sin@z,f
  4631  04CA  30FE               	movlw	254
  4632  04CB  3DF8               	addwfc	sin@z+1,f
  4633  04CC  2CBD               	goto	l334
  4634  04CD                     l3022:	
  4635                           
  4636                           ;powerspy.c: 577: if (z > (((100)<<1)) + (100)) {
  4637  04CD  0878               	movf	sin@z+1,w
  4638  04CE  3A80               	xorlw	128
  4639  04CF  00F9               	movwf	??_sin
  4640  04D0  3081               	movlw	129
  4641  04D1  0279               	subwf	??_sin,w
  4642  04D2  1D03               	skipz
  4643  04D3  2CD6               	goto	u2835
  4644  04D4  302D               	movlw	45
  4645  04D5  0277               	subwf	sin@z,w
  4646  04D6                     u2835:	
  4647  04D6  1C03               	skipc
  4648  04D7  2CE7               	goto	l3030
  4649                           
  4650                           ;powerspy.c: 578: buff = ((100)<<2);
  4651  04D8  3090               	movlw	144
  4652  04D9  0020               	movlb	0	; select bank0
  4653  04DA  00A0               	movwf	sin@buff
  4654  04DB  3001               	movlw	1
  4655  04DC  00A1               	movwf	sin@buff+1
  4656                           
  4657                           ;powerspy.c: 579: buff -= z;
  4658  04DD  0877               	movf	sin@z,w
  4659  04DE  02A0               	subwf	sin@buff,f
  4660  04DF  0878               	movf	sin@z+1,w
  4661  04E0  3BA1               	subwfb	sin@buff+1,f
  4662                           
  4663                           ;powerspy.c: 580: return -sin_((int8_t) buff);
  4664  04E1  0820               	movf	sin@buff,w
  4665  04E2  318F  27A4         	fcall	_sin_
  4666  04E4  3AFF               	xorlw	255
  4667  04E5  3E01               	addlw	1
  4668  04E6  0008               	return
  4669  04E7                     l3030:	
  4670                           
  4671                           ;powerspy.c: 581: }
  4672                           ;powerspy.c: 582: if (z > ((100)<<1)) {
  4673  04E7  0878               	movf	sin@z+1,w
  4674  04E8  3A80               	xorlw	128
  4675  04E9  00F9               	movwf	??_sin
  4676  04EA  3080               	movlw	128
  4677  04EB  0279               	subwf	??_sin,w
  4678  04EC  1D03               	skipz
  4679  04ED  2CF0               	goto	u2845
  4680  04EE  30C9               	movlw	201
  4681  04EF  0277               	subwf	sin@z,w
  4682  04F0                     u2845:	
  4683  04F0  1C03               	skipc
  4684  04F1  2D01               	goto	l3038
  4685                           
  4686                           ;powerspy.c: 583: buff = z;
  4687  04F2  0878               	movf	sin@z+1,w
  4688  04F3  0020               	movlb	0	; select bank0
  4689  04F4  00A1               	movwf	sin@buff+1
  4690  04F5  0877               	movf	sin@z,w
  4691  04F6  00A0               	movwf	sin@buff
  4692                           
  4693                           ;powerspy.c: 584: buff -= ((100)<<1);
  4694  04F7  3038               	movlw	56
  4695  04F8  07A0               	addwf	sin@buff,f
  4696  04F9  30FF               	movlw	255
  4697  04FA  3DA1               	addwfc	sin@buff+1,f
  4698                           
  4699                           ;powerspy.c: 585: return -sin_((int8_t) buff);
  4700  04FB  0820               	movf	sin@buff,w
  4701  04FC  318F  27A4         	fcall	_sin_
  4702  04FE  3AFF               	xorlw	255
  4703  04FF  3E01               	addlw	1
  4704  0500  0008               	return
  4705  0501                     l3038:	
  4706                           
  4707                           ;powerspy.c: 586: }
  4708                           ;powerspy.c: 587: if (z > (100)) {
  4709  0501  0878               	movf	sin@z+1,w
  4710  0502  3A80               	xorlw	128
  4711  0503  00F9               	movwf	??_sin
  4712  0504  3080               	movlw	128
  4713  0505  0279               	subwf	??_sin,w
  4714  0506  1D03               	skipz
  4715  0507  2D0A               	goto	u2855
  4716  0508  3065               	movlw	101
  4717  0509  0277               	subwf	sin@z,w
  4718  050A                     u2855:	
  4719  050A  1C03               	skipc
  4720  050B  2D19               	goto	l3046
  4721                           
  4722                           ;powerspy.c: 588: buff = ((100)<<1);
  4723  050C  30C8               	movlw	200
  4724  050D  0020               	movlb	0	; select bank0
  4725  050E  00A0               	movwf	sin@buff
  4726  050F  3000               	movlw	0
  4727  0510  00A1               	movwf	sin@buff+1
  4728                           
  4729                           ;powerspy.c: 589: buff -= z;
  4730  0511  0877               	movf	sin@z,w
  4731  0512  02A0               	subwf	sin@buff,f
  4732  0513  0878               	movf	sin@z+1,w
  4733  0514  3BA1               	subwfb	sin@buff+1,f
  4734                           
  4735                           ;powerspy.c: 590: return sin_((int8_t) buff);
  4736  0515  0820               	movf	sin@buff,w
  4737  0516  318F  27A4         	fcall	_sin_
  4738  0518  0008               	return
  4739  0519                     l3046:	
  4740                           
  4741                           ;powerspy.c: 591: }
  4742                           ;powerspy.c: 594: return sin_((uint8_t) z);
  4743  0519  0877               	movf	sin@z,w
  4744  051A  318F  27A4         	fcall	_sin_
  4745  051C  0008               	return
  4746  051D                     __end_of_sin:	
  4747                           
  4748                           	psect	text30
  4749  0FA4                     __ptext30:	
  4750 ;; *************** function _sin_ *****************
  4751 ;; Defined at:
  4752 ;;		line 563 in file "powerspy.c"
  4753 ;; Parameters:    Size  Location     Type
  4754 ;;  z               1    wreg     char 
  4755 ;; Auto vars:     Size  Location     Type
  4756 ;;  z               1    6[COMMON] char 
  4757 ;; Return value:  Size  Location     Type
  4758 ;;                  1    wreg      char 
  4759 ;; Registers used:
  4760 ;;		wreg, status,2, status,0, pclath, cstack
  4761 ;; Tracked objects:
  4762 ;;		On entry : 0/0
  4763 ;;		On exit  : 0/0
  4764 ;;		Unchanged: 0/0
  4765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4766 ;;      Params:         0       0       0       0       0       0
  4767 ;;      Locals:         1       0       0       0       0       0
  4768 ;;      Temps:          0       0       0       0       0       0
  4769 ;;      Totals:         1       0       0       0       0       0
  4770 ;;Total ram usage:        1 bytes
  4771 ;; Hardware stack levels used:    1
  4772 ;; Hardware stack levels required when called:    2
  4773 ;; This function calls:
  4774 ;;		_eeprom_read
  4775 ;; This function is called by:
  4776 ;;		_sin
  4777 ;; This function uses a non-reentrant model
  4778 ;;
  4779                           
  4780                           
  4781                           ;psect for function _sin_
  4782  0FA4                     _sin_:	
  4783                           
  4784                           ;incstack = 0
  4785                           ; Regs used in _sin_: [wreg+status,2+status,0+pclath+cstack]
  4786                           ;sin_@z stored from wreg
  4787  0FA4  00F6               	movwf	sin_@z
  4788                           
  4789                           ;powerspy.c: 565: return eeprom_read(z);
  4790  0FA5  0876               	movf	sin_@z,w
  4791  0FA6  3187  278E         	fcall	_eeprom_read
  4792  0FA8  0008               	return
  4793  0FA9                     __end_of_sin_:	
  4794                           
  4795                           	psect	text31
  4796  078E                     __ptext31:	
  4797 ;; *************** function _eeprom_read *****************
  4798 ;; Defined at:
  4799 ;;		line 6 in file "/Applications/microchip/xc8/v1.37/sources/pic/eeread.c"
  4800 ;; Parameters:    Size  Location     Type
  4801 ;;  addr            1    wreg     unsigned char 
  4802 ;; Auto vars:     Size  Location     Type
  4803 ;;  addr            1    5[COMMON] unsigned char 
  4804 ;; Return value:  Size  Location     Type
  4805 ;;                  1    wreg      unsigned char 
  4806 ;; Registers used:
  4807 ;;		wreg, status,2, status,0
  4808 ;; Tracked objects:
  4809 ;;		On entry : 0/0
  4810 ;;		On exit  : 0/0
  4811 ;;		Unchanged: 0/0
  4812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4813 ;;      Params:         0       0       0       0       0       0
  4814 ;;      Locals:         1       0       0       0       0       0
  4815 ;;      Temps:          3       0       0       0       0       0
  4816 ;;      Totals:         4       0       0       0       0       0
  4817 ;;Total ram usage:        4 bytes
  4818 ;; Hardware stack levels used:    1
  4819 ;; Hardware stack levels required when called:    1
  4820 ;; This function calls:
  4821 ;;		Nothing
  4822 ;; This function is called by:
  4823 ;;		_sin_
  4824 ;; This function uses a non-reentrant model
  4825 ;;
  4826                           
  4827                           
  4828                           ;psect for function _eeprom_read
  4829  078E                     _eeprom_read:	
  4830                           
  4831                           ;incstack = 0
  4832                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  4833                           ;eeprom_read@addr stored from wreg
  4834  078E  00F5               	movwf	eeprom_read@addr
  4835  078F                     l522:	
  4836  078F  0064               	clrwdt	;# 
  4837  0790  0023               	movlb	3	; select bank3
  4838  0791  1895               	btfsc	21,1	;volsfr
  4839  0792  2F8F               	goto	l522
  4840  0793  0875               	movf	eeprom_read@addr,w
  4841  0794  00F2               	movwf	??_eeprom_read
  4842  0795  01F3               	clrf	??_eeprom_read+1
  4843  0796  0872               	movf	??_eeprom_read,w
  4844  0797  0091               	movwf	17	;volatile
  4845  0798  0873               	movf	??_eeprom_read+1,w
  4846  0799  0092               	movwf	18	;volatile
  4847  079A  303F               	movlw	63
  4848  079B  00F4               	movwf	??_eeprom_read+2
  4849  079C  0874               	movf	??_eeprom_read+2,w
  4850  079D  0595               	andwf	21,f	;volsfr
  4851  079E  1415               	bsf	21,0	;volsfr
  4852  079F  1003               	clrc
  4853  07A0  1815               	btfsc	21,0	;volsfr
  4854  07A1  1403               	setc
  4855  07A2  3000               	movlw	0
  4856  07A3  3D09               	addwfc	9,w
  4857  07A4  0813               	movf	19,w	;volatile
  4858  07A5  0008               	return
  4859  07A6                     __end_of_eeprom_read:	
  4860                           
  4861                           	psect	text32
  4862  0FF1                     __ptext32:	
  4863 ;; *************** function _abs *****************
  4864 ;; Defined at:
  4865 ;;		line 4 in file "/Applications/microchip/xc8/v1.37/sources/common/abs.c"
  4866 ;; Parameters:    Size  Location     Type
  4867 ;;  a               2   25[BANK0 ] int 
  4868 ;; Auto vars:     Size  Location     Type
  4869 ;;		None
  4870 ;; Return value:  Size  Location     Type
  4871 ;;                  2   25[BANK0 ] int 
  4872 ;; Registers used:
  4873 ;;		wreg, status,2, status,0
  4874 ;; Tracked objects:
  4875 ;;		On entry : 0/0
  4876 ;;		On exit  : 0/0
  4877 ;;		Unchanged: 0/0
  4878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4879 ;;      Params:         0       2       0       0       0       0
  4880 ;;      Locals:         0       0       0       0       0       0
  4881 ;;      Temps:          0       2       0       0       0       0
  4882 ;;      Totals:         0       4       0       0       0       0
  4883 ;;Total ram usage:        4 bytes
  4884 ;; Hardware stack levels used:    1
  4885 ;; Hardware stack levels required when called:    1
  4886 ;; This function calls:
  4887 ;;		Nothing
  4888 ;; This function is called by:
  4889 ;;		_main
  4890 ;; This function uses a non-reentrant model
  4891 ;;
  4892                           
  4893                           
  4894                           ;psect for function _abs
  4895  0FF1                     _abs:	
  4896                           
  4897                           ;incstack = 0
  4898                           ; Regs used in _abs: [wreg+status,2+status,0]
  4899  0FF1  0020               	movlb	0	; select bank0
  4900  0FF2  1FBA               	btfss	abs@a+1,7
  4901  0FF3  0008               	return
  4902  0FF4  0939               	comf	abs@a,w
  4903  0FF5  00BB               	movwf	??_abs
  4904  0FF6  093A               	comf	abs@a+1,w
  4905  0FF7  00BC               	movwf	??_abs+1
  4906  0FF8  0ABB               	incf	??_abs,f
  4907  0FF9  1903               	skipnz
  4908  0FFA  0ABC               	incf	??_abs+1,f
  4909  0FFB  083B               	movf	??_abs,w
  4910  0FFC  00B9               	movwf	?_abs
  4911  0FFD  083C               	movf	??_abs+1,w
  4912  0FFE  00BA               	movwf	?_abs+1
  4913  0FFF  0008               	return
  4914  1000                     __end_of_abs:	
  4915                           
  4916                           	psect	intentry
  4917  0004                     __pintentry:	
  4918 ;; *************** function _ISR *****************
  4919 ;; Defined at:
  4920 ;;		line 642 in file "powerspy.c"
  4921 ;; Parameters:    Size  Location     Type
  4922 ;;		None
  4923 ;; Auto vars:     Size  Location     Type
  4924 ;;		None
  4925 ;; Return value:  Size  Location     Type
  4926 ;;                  1    wreg      void 
  4927 ;; Registers used:
  4928 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4929 ;; Tracked objects:
  4930 ;;		On entry : 0/0
  4931 ;;		On exit  : 0/0
  4932 ;;		Unchanged: 0/0
  4933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4934 ;;      Params:         0       0       0       0       0       0
  4935 ;;      Locals:         0       0       0       0       0       0
  4936 ;;      Temps:          2       0       0       0       0       0
  4937 ;;      Totals:         2       0       0       0       0       0
  4938 ;;Total ram usage:        2 bytes
  4939 ;; Hardware stack levels used:    1
  4940 ;; This function calls:
  4941 ;;		Nothing
  4942 ;; This function is called by:
  4943 ;;		Interrupt level 1
  4944 ;; This function uses a non-reentrant model
  4945 ;;
  4946                           
  4947  0004                     _ISR:	
  4948                           
  4949                           ;incstack = 0
  4950                           ; Regs used in _ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  4951  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  4952  0005  3180               	pagesel	$
  4953  0006  0020               	movlb	0	; select bank0
  4954  0007  087F               	movf	127,w
  4955  0008  00F1               	movwf	??_ISR+1
  4956                           
  4957                           ;powerspy.c: 645: if (RCIE && RCIF) {
  4958  0009  0021               	movlb	1	; select bank1
  4959  000A  1E91               	btfss	17,5	;volatile
  4960  000B  2822               	goto	i1l2688
  4961  000C  0020               	movlb	0	; select bank0
  4962  000D  1E91               	btfss	17,5	;volatile
  4963  000E  2822               	goto	i1l2688
  4964                           
  4965                           ;powerspy.c: 646: receive_buff[buffpos] = RCREG;
  4966  000F  0023               	movlb	3	; select bank3
  4967  0010  0819               	movf	25,w	;volatile
  4968  0011  00F0               	movwf	??_ISR
  4969  0012  087A               	movf	_buffpos,w
  4970  0013  3EA0               	addlw	(low (_receive_buff| 0))& (0+255)
  4971  0014  0086               	movwf	6
  4972  0015  0187               	clrf	7
  4973  0016  0870               	movf	??_ISR,w
  4974  0017  0081               	movwf	1
  4975                           
  4976                           ;powerspy.c: 647: buffpos++;
  4977  0018  3001               	movlw	1
  4978  0019  00F0               	movwf	??_ISR
  4979  001A  0870               	movf	??_ISR,w
  4980  001B  07FA               	addwf	_buffpos,f
  4981                           
  4982                           ;powerspy.c: 648: buffpos %= 8;
  4983  001C  3007               	movlw	7
  4984  001D  00F0               	movwf	??_ISR
  4985  001E  0870               	movf	??_ISR,w
  4986  001F  05FA               	andwf	_buffpos,f
  4987                           
  4988                           ;powerspy.c: 649: RCIF = 0;
  4989  0020  0020               	movlb	0	; select bank0
  4990  0021  1291               	bcf	17,5	;volatile
  4991  0022                     i1l2688:	
  4992                           
  4993                           ;powerspy.c: 650: }
  4994                           ;powerspy.c: 653: if (TMR1IE && TMR1IF) {
  4995  0022  0021               	movlb	1	; select bank1
  4996  0023  1C11               	btfss	17,0	;volatile
  4997  0024  2829               	goto	i1l368
  4998  0025  0020               	movlb	0	; select bank0
  4999  0026  1C11               	btfss	17,0	;volatile
  5000  0027  2829               	goto	i1l368
  5001                           
  5002                           ;powerspy.c: 654: TMR1IF = 0;
  5003  0028  1011               	bcf	17,0	;volatile
  5004  0029                     i1l368:	
  5005                           
  5006                           ;powerspy.c: 655: }
  5007                           ;powerspy.c: 658: if (C1IE && C1IF) {
  5008  0029  0021               	movlb	1	; select bank1
  5009  002A  1E92               	btfss	18,5	;volatile
  5010  002B  2839               	goto	i1l369
  5011  002C  0020               	movlb	0	; select bank0
  5012  002D  1E92               	btfss	18,5	;volatile
  5013  002E  2839               	goto	i1l369
  5014                           
  5015                           ;powerspy.c: 659: if (!(flag & 0x01)) {
  5016  002F  1869               	btfsc	_flag,0	;volatile
  5017  0030  2838               	goto	i1l370
  5018                           
  5019                           ;powerspy.c: 660: volt_time = TMR1;
  5020  0031  0817               	movf	23,w	;volatile
  5021  0032  00E8               	movwf	_volt_time+1
  5022  0033  0816               	movf	22,w	;volatile
  5023  0034  00E7               	movwf	_volt_time
  5024                           
  5025                           ;powerspy.c: 661: if (flag & 0x02)
  5026  0035  18E9               	btfsc	_flag,1	;volatile
  5027                           
  5028                           ;powerspy.c: 662: flag |= 0x08;
  5029  0036  15E9               	bsf	_flag,3	;volatile
  5030                           
  5031                           ;powerspy.c: 663: flag |= 0x01;
  5032  0037  1469               	bsf	_flag,0	;volatile
  5033  0038                     i1l370:	
  5034                           
  5035                           ;powerspy.c: 664: }
  5036                           ;powerspy.c: 666: C1IF = 0;
  5037  0038  1292               	bcf	18,5	;volatile
  5038  0039                     i1l369:	
  5039                           
  5040                           ;powerspy.c: 667: }
  5041                           ;powerspy.c: 670: if (C2IE && C2IF) {
  5042  0039  0021               	movlb	1	; select bank1
  5043  003A  1F12               	btfss	18,6	;volatile
  5044  003B  2849               	goto	i1l372
  5045  003C  0020               	movlb	0	; select bank0
  5046  003D  1F12               	btfss	18,6	;volatile
  5047  003E  2849               	goto	i1l372
  5048                           
  5049                           ;powerspy.c: 671: if (!(flag & 0x02)) {
  5050  003F  18E9               	btfsc	_flag,1	;volatile
  5051  0040  2848               	goto	i1l373
  5052                           
  5053                           ;powerspy.c: 672: curr_time = TMR1;
  5054  0041  0817               	movf	23,w	;volatile
  5055  0042  00E4               	movwf	_curr_time+1
  5056  0043  0816               	movf	22,w	;volatile
  5057  0044  00E3               	movwf	_curr_time
  5058                           
  5059                           ;powerspy.c: 673: if (flag & 0x01)
  5060  0045  1869               	btfsc	_flag,0	;volatile
  5061                           
  5062                           ;powerspy.c: 674: flag |= 0x04;
  5063  0046  1569               	bsf	_flag,2	;volatile
  5064                           
  5065                           ;powerspy.c: 675: flag |= 0x02;
  5066  0047  14E9               	bsf	_flag,1	;volatile
  5067  0048                     i1l373:	
  5068                           
  5069                           ;powerspy.c: 676: }
  5070                           ;powerspy.c: 678: C2IF = 0;
  5071  0048  1312               	bcf	18,6	;volatile
  5072  0049                     i1l372:	
  5073                           
  5074                           ;powerspy.c: 679: }
  5075                           ;powerspy.c: 681: if (TMR2IE && TMR2IF) {
  5076  0049  0021               	movlb	1	; select bank1
  5077  004A  1C91               	btfss	17,1	;volatile
  5078  004B  2850               	goto	i1l376
  5079  004C  0020               	movlb	0	; select bank0
  5080  004D  1C91               	btfss	17,1	;volatile
  5081  004E  2850               	goto	i1l376
  5082                           
  5083                           ;powerspy.c: 682: TMR2IF = 0;
  5084  004F  1091               	bcf	17,1	;volatile
  5085  0050                     i1l376:	
  5086  0050  0871               	movf	??_ISR+1,w
  5087  0051  0020               	movlb	0	; select bank0
  5088  0052  00FF               	movwf	127
  5089  0053  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  5090  0054  0009               	retfie
  5091  0055                     __end_of_ISR:	
  5092  007E                     btemp	set	126	;btemp
  5093  007E                     int$flags	set	126
  5094  007E                     wtemp	set	126
  5095  007E                     wtemp0	set	126
  5096  0080                     wtemp1	set	128
  5097  0082                     wtemp2	set	130
  5098  0084                     wtemp3	set	132
  5099  0086                     wtemp4	set	134
  5100  0088                     wtemp5	set	136
  5101  007F                     wtemp6	set	127
  5102  007E                     ttemp	set	126
  5103  007E                     ttemp0	set	126
  5104  0081                     ttemp1	set	129
  5105  0084                     ttemp2	set	132
  5106  0087                     ttemp3	set	135
  5107  007F                     ttemp4	set	127
  5108  007E                     ltemp	set	126
  5109  007E                     ltemp0	set	126
  5110  0082                     ltemp1	set	130
  5111  0086                     ltemp2	set	134
  5112  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    10
    Data        4
    BSS         19
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     67      80
    BANK1            80      0       8
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___wmul
    _main->_deltaT
    _main->_sin
    _setUnit->_so
    _setLED->_sendColour
    _sendUInt8->__sendchar_
    _sendInt24->__sendchar_
    _readVdd->_adc
    _readCurrent->___wmul
    ___wmul->_readVdd
    ___tmul->___wmul
    ___tmul->_sin
    ___atdiv->___wmul
    ___atdiv->_sin
    _cos->_sin
    _sin->_sin_
    _sin_->_eeprom_read

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_setVal
    _setVal->___awdiv
    ___awdiv->_abs
    _readCurrent->___atdiv
    ___tmul->___wmul
    ___tmul->_cos
    ___atdiv->___tmul
    _cos->_sin
    _abs->___atdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                30    30      0   11262
                                             42 BANK0     25    25      0
                            ___atdiv
                            ___awdiv
                            ___awmod
                             ___tmul
                             ___wmul
                                _abs
                                _cos
                             _deltaT
                            _initADC
                             _initBT
                          _initCOMP1
                          _initCOMP2
                            _initFVR
                      _initMessaging
                        _initPWMTMR4
                           _initPins
                           _initTMR1
                        _readCurrent
                            _readVdd
                        _readVoltage
                          _sendInt24
                          _sendUInt8
                             _setLED
                            _setUnit
                             _setVal
                                _sin
 ---------------------------------------------------------------------------------
 (1) _setVal                                               4     2      2    1731
                                             38 BANK0      4     2      2
                            ___atdiv (ARG)
                            ___awdiv
                            ___awmod
                                _abs (ARG)
                                 _so
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     508
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     724
                                             29 BANK0      9     5      4
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (1) _setUnit                                              6     3      3     573
                                              5 COMMON     3     0      3
                                              0 BANK0      3     3      0
                                 _so
 ---------------------------------------------------------------------------------
 (2) _so                                                   3     3      0      90
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _setLED                                               3     1      2     878
                                              3 COMMON     3     1      2
                         _sendColour
 ---------------------------------------------------------------------------------
 (2) _sendColour                                           1     1      0     176
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _sendUInt8                                            1     1      0      44
                                              5 COMMON     1     1      0
                         __sendchar_
 ---------------------------------------------------------------------------------
 (1) _sendInt24                                            7     4      3     570
                                              5 COMMON     3     0      3
                                              0 BANK0      4     4      0
                         __sendchar_
 ---------------------------------------------------------------------------------
 (2) __sendchar_                                           3     3      0      22
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _readVoltage                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _readVdd                                              4     2      2     110
                                              4 COMMON     4     2      2
                                _adc
 ---------------------------------------------------------------------------------
 (1) _readCurrent                                          9     6      3    1746
                                             25 BANK0      9     6      3
                            ___atdiv
                             ___tmul
                             ___wmul
                                _adc
 ---------------------------------------------------------------------------------
 (2) _adc                                                  2     2      0     110
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              8 COMMON     2     2      0
                                              0 BANK0      4     0      4
                            _readVdd (ARG)
 ---------------------------------------------------------------------------------
 (2) ___tmul                                               9     3      6     516
                                              4 BANK0      9     3      6
                             ___wmul (ARG)
                                _cos (ARG)
                                _sin (ARG)
 ---------------------------------------------------------------------------------
 (2) ___atdiv                                             12     6      6     724
                                             13 BANK0     12     6      6
                             ___tmul (ARG)
                             ___wmul (ARG)
                                _cos (ARG)
                                _sin (ARG)
 ---------------------------------------------------------------------------------
 (1) _initTMR1                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initPins                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initPWMTMR4                                          1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initMessaging                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initFVR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initCOMP2                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initCOMP1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initBT                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _deltaT                                               8     4      4     344
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _cos                                                  2     0      2     650
                                              2 BANK0      2     0      2
                                _sin
 ---------------------------------------------------------------------------------
 (1) _sin                                                  5     3      2     554
                                              7 COMMON     3     1      2
                                              0 BANK0      2     2      0
                               _sin_
 ---------------------------------------------------------------------------------
 (2) _sin_                                                 1     1      0      62
                                              6 COMMON     1     1      0
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (3) _eeprom_read                                          4     4      0      31
                                              2 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _abs                                                  4     2      2     331
                                             25 BANK0      4     2      2
                            ___atdiv (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___atdiv
     ___tmul (ARG)
       ___wmul (ARG)
         _readVdd (ARG)
           _adc
       _cos (ARG)
         _sin
           _sin_
             _eeprom_read
       _sin (ARG)
         _sin_
           _eeprom_read
     ___wmul (ARG)
       _readVdd (ARG)
         _adc
     _cos (ARG)
       _sin
         _sin_
           _eeprom_read
     _sin (ARG)
       _sin_
         _eeprom_read
   ___awdiv
     _abs (ARG)
       ___atdiv (ARG)
         ___tmul (ARG)
           ___wmul (ARG)
             _readVdd (ARG)
               _adc
           _cos (ARG)
             _sin
               _sin_
                 _eeprom_read
           _sin (ARG)
             _sin_
               _eeprom_read
         ___wmul (ARG)
           _readVdd (ARG)
             _adc
         _cos (ARG)
           _sin
             _sin_
               _eeprom_read
         _sin (ARG)
           _sin_
             _eeprom_read
   ___awmod
   ___tmul
     ___wmul (ARG)
       _readVdd (ARG)
         _adc
     _cos (ARG)
       _sin
         _sin_
           _eeprom_read
     _sin (ARG)
       _sin_
         _eeprom_read
   ___wmul
     _readVdd (ARG)
       _adc
   _abs
     ___atdiv (ARG)
       ___tmul (ARG)
         ___wmul (ARG)
           _readVdd (ARG)
             _adc
         _cos (ARG)
           _sin
             _sin_
               _eeprom_read
         _sin (ARG)
           _sin_
             _eeprom_read
       ___wmul (ARG)
         _readVdd (ARG)
           _adc
       _cos (ARG)
         _sin
           _sin_
             _eeprom_read
       _sin (ARG)
         _sin_
           _eeprom_read
   _cos
     _sin
       _sin_
         _eeprom_read
   _deltaT
   _initADC
   _initBT
   _initCOMP1
   _initCOMP2
   _initFVR
   _initMessaging
   _initPWMTMR4
   _initPins
   _initTMR1
   _readCurrent
     ___atdiv
       ___tmul (ARG)
         ___wmul (ARG)
           _readVdd (ARG)
             _adc
         _cos (ARG)
           _sin
             _sin_
               _eeprom_read
         _sin (ARG)
           _sin_
             _eeprom_read
       ___wmul (ARG)
         _readVdd (ARG)
           _adc
       _cos (ARG)
         _sin
           _sin_
             _eeprom_read
       _sin (ARG)
         _sin_
           _eeprom_read
     ___tmul
       ___wmul (ARG)
         _readVdd (ARG)
           _adc
       _cos (ARG)
         _sin
           _sin_
             _eeprom_read
       _sin (ARG)
         _sin_
           _eeprom_read
     ___wmul
       _readVdd (ARG)
         _adc
     _adc
   _readVdd
     _adc
   _readVoltage
   _sendInt24
     __sendchar_
   _sendUInt8
     __sendchar_
   _setLED
     _sendColour
   _setUnit
     _so
   _setVal
     ___atdiv (ARG)
       ___tmul (ARG)
         ___wmul (ARG)
           _readVdd (ARG)
             _adc
         _cos (ARG)
           _sin
             _sin_
               _eeprom_read
         _sin (ARG)
           _sin_
             _eeprom_read
       ___wmul (ARG)
         _readVdd (ARG)
           _adc
       _cos (ARG)
         _sin
           _sin_
             _eeprom_read
       _sin (ARG)
         _sin_
           _eeprom_read
     ___awdiv (ARG)
       _abs (ARG)
         ___atdiv (ARG)
           ___tmul (ARG)
             ___wmul (ARG)
               _readVdd (ARG)
                 _adc
             _cos (ARG)
               _sin
                 _sin_
                   _eeprom_read
             _sin (ARG)
               _sin_
                 _eeprom_read
           ___wmul (ARG)
             _readVdd (ARG)
               _adc
           _cos (ARG)
             _sin
               _sin_
                 _eeprom_read
           _sin (ARG)
             _sin_
               _eeprom_read
     ___awmod (ARG)
     _abs (ARG)
       ___atdiv (ARG)
         ___tmul (ARG)
           ___wmul (ARG)
             _readVdd (ARG)
               _adc
           _cos (ARG)
             _sin
               _sin_
                 _eeprom_read
           _sin (ARG)
             _sin_
               _eeprom_read
         ___wmul (ARG)
           _readVdd (ARG)
             _adc
         _cos (ARG)
           _sin
             _sin_
               _eeprom_read
         _sin (ARG)
           _sin_
             _eeprom_read
     _so (ARG)
   _sin
     _sin_
       _eeprom_read

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      64       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     43      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       8       8       10.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      64      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Thu May 19 10:24:57 2016

            __CFG_CP$OFF 0000                       _RD 0CA8         ___atdiv@quotient 0036  
                     _WR 0CA9             ___awdiv@sign 0043                       _so 03E5  
    ___wmul@multiplicand 0022                      l311 0378                      l321 03DC  
                    l313 038C                      l315 03A0                      l307 0350  
                    l317 03B4                      l309 0364                      l334 04BD  
                    l255 0FB5                      l319 03C8                      l272 07BA  
                    ?_so 0070                      l522 078F                      l276 060E  
                    l380 031B                      l381 00BD                      l702 0460  
                    l608 077B                      l473 07E6                      l387 0319  
                    _GIE 005F                      _RA3 0063                      _RA4 0064  
                    _RB3 006B                      _RA6 0066                      _RA7 0067  
                    _PR2 001B             __CFG_CPD$OFF 0000                      _ISR 0004  
                    _adc 05C0                      _abs 0FF1                      _cos 0FB8  
                    _sin 04BD                      so@c 0074             ___awmod@sign 0078  
           __CFG_BORV$LO 0000                      wreg 0009                     ??_so 0072  
           __CFG_LVP$OFF 0000                     ?_ISR 0070                     ?_adc 0070  
                   ?_abs 0039                     _C1IE 0495                     l2020 05E8  
                   _C1IF 0095                     l2022 05F8                     _C2IE 0496  
                   l2016 05C8                     _C2IF 0096                     l2018 05D8  
                   l2034 03F9                     l2220 03A8                     l2212 0380  
                   l2204 0358                     l3030 04E7                     l3022 04CD  
                   l2224 03BC                     l2216 0394                     l2208 036C  
                   l2400 0547                     l3120 00D8                     l3104 00A0  
                   l2322 06ED                     l2410 0562                     l3052 0774  
                   l2228 03D0                     l3204 02FF                     l3046 0519  
                   l3038 0501                     l2326 06F5                     l2414 056A  
                   l2406 0559                     l2430 0622                     l2352 047B  
                   l2344 046E                     l2440 0634                     l3216 033D  
                   _C1ON 088F                     l2370 04B6                     l2362 04A1  
                   l2354 0488                     l2426 061B                     l2532 07B4  
                   l2452 0651                     l2444 0640                     l3172 020F  
                   _C2ON 089F                     l2366 04AB                     l2382 0528  
                   l2438 0628                     l3254 0305                     l3190 02A7  
                   l3166 01F8                     l2560 06D2                     l2448 0649  
                   l3184 0273                     l3178 0243                     l2388 0533  
                   l3196 02DB                     ?_cos 0022                     l2398 053B  
                   _ADFM 04F7                     ?_sin 0077                     _ADON 04E8  
                   _CHS0 04EA                     _CHS1 04EB                     _CHS2 04EC  
                   _CHS3 04ED                     _CHS4 04EE                     _BRGH 0CF2  
                   _CREN 0CEC                     u2025 053E                     u1420 05C6  
                   u2205 06C2                     u2045 0548                     u2125 062B  
                   u1510 05F6                     u2055 0552                     u1505 05EB  
                   u2065 055A                     u2145 063A                     u3017 00A8  
                   u1450 05D6                     u2155 0641                     u3027 0337  
                   u1540 0606                     u1445 05CB                     u3037 07EC  
                   u3047 060A                     u1535 05FB                     u1480 05E6  
                   u1554 0608                     u1475 05DB                     u1590 03F7  
                   u1584 03F0                     u1585 03EF                     u1925 047E  
                   u2825 04C6                     u1945 0489                     u1865 06F6  
                   u2905 0715                     u2835 04D6                     u1955 0498  
                   u1875 06FC                     u2915 0726                     _PEIE 005E  
                   u2845 04F0                     u1965 04A2                     u2925 069B  
                   u2855 050A                     u2935 06AE                     u2875 077C  
                   _RCIE 048D                     _RCIF 008D                     u2885 0781  
                   u2985 00F3                     _SCS0 04C8                     _SCS1 04C9  
                   _TMR1 0016                     _SPEN 0CEF                     _TRMT 0CF1  
                   _TXEN 0CF5                     _SYNC 0CF4                     _WPUB 020D  
            main@current 005B             __CFG_WRT$OFF 0000                     abs@a 0039  
                   _flag 0069             ?_initPWMTMR4 0070                     _main 007F  
                   _mode 006A                     _sin_ 0FA4                     fsr0h 0005  
                   fsr1h 0007                     fsr0l 0004                     indf0 0000  
                   indf1 0001                     fsr1l 0006                     btemp 007E  
                   sin@z 0077                     ltemp 007E                     start 0055  
                   ttemp 007E                     wtemp 007E            __CFG_IESO$OFF 0000  
            main@voltage 004D            __CFG_MCLRE$ON 0000                    ??_ISR 0070  
                  ??_adc 0072                    ??_abs 003B                    ??_cos 007A  
                  ??_sin 0079            __CFG_PLLEN$ON 0000             ?_readCurrent 0039  
           main@apparent 0060                    _DC1B0 149C                    _DC1B1 149D  
                  _ADCS0 04F4                    _ADCS1 04F5                    _ADCS2 04F6  
                  ?_main 0070          __end_of___atdiv 04BD          __end_of___awdiv 056F  
                  _ADRES 009B                    _EEADR 0191                    _BRG16 0CFB  
          __CFG_WDTE$OFF 0000                    ?_sin_ 0070          __end_of___awmod 0656  
        ___awdiv@divisor 003D                    _IRCF0 04CB                    _IRCF1 04CC  
                  _IRCF2 04CD                    _IRCF3 04CE                    _IOCIE 005B  
                  i1l370 0038                    i1l372 0049                    i1l373 0048  
                  i1l376 0050                    i1l368 0029                    i1l369 0039  
                  _FVREN 08BF          ___awdiv@counter 0042                    _RCREG 0199  
                  _SPBRG 019B                    _PORTA 000C                    _PORTB 000D  
                  _TRISA 008C                    _TRISB 008D                    _TXREG 019A  
           ?_readVoltage 0070             main@reactive 0053           __CFG_FCMEN$OFF 0000  
        __end_of_initADC 0FCC          __end_of_initFVR 0FB8          __end_of_readVdd 07D0  
                  cos@us 0022          __end_of_setUnit 0733           __CFG_BOREN$OFF 0000  
                  ltemp0 007E                    ltemp1 0082                    ltemp2 0086  
                  ltemp3 0080                    sin_@z 0076                    ttemp0 007E  
                  ttemp1 0081                    ttemp2 0084                    ttemp3 0087  
                  ttemp4 007F                    status 0003                    wtemp0 007E  
                  wtemp1 0080                    wtemp2 0082                    wtemp3 0084  
                  wtemp4 0086                    wtemp5 0088                    wtemp6 007F  
        __initialization 0057   __size_of_initMessaging 0006             __end_of_main 0343  
           __end_of_sin_ 0FA9                   ??_main 004A                   ??_sin_ 0076  
                 _C1NCH0 0890                   _C1NCH1 0891                   _C2NCH0 08A0  
                 _C1PCH0 0894                   _C2NCH1 08A1                   _C1PCH1 0895  
                 _C2PCH0 08A4                   _C2PCH1 08A5                   _C1INTP 0897  
                 _C2INTP 08A7                   _ADFVR0 08B8                   _ADFVR1 08B9  
                 _ADNREF 04F2                   _EEDATA 0193                   _CCPR1L 0291  
                 _EECON1 0195         ___awdiv@dividend 003F                   _ANSELA 018C  
                 _ANSELB 018D                   _IOCBN5 1CAD                   i1l2688 0022  
                 _FVRRDY 08BE                   _TMR1IE 0488                   _TMR1IF 0088  
                 _TMR2IE 0489                   _TMR2IF 0089                   _TMR4IF 0099  
                 _TMR1ON 00C0                   _TMR2ON 00E2                   _TMR4ON 20BA  
                 _SPLLEN 04CF           __CFG_PWRTE$OFF 0000     __size_of_eeprom_read 0018  
                 _nWPUEN 04AF                   adc@src 0073                   ___tmul 06E6  
                 ___wmul 0772                ??___atdiv 0033                ??___awdiv 0041  
              ??___awmod 0076                   _deltaT 06BC         __end_of_initTMR1 0FD7  
       __end_of_initPins 0753                   _initBT 07A6                   _setLED 07D0  
       ___awdiv@quotient 0044                   _setVal 0656          ___awmod@divisor 0072  
        ___awmod@counter 0077                ??_initADC 0072                ??_initFVR 0072  
                 so@data 0073                ??_readVdd 0076                ??_setUnit 0020  
          _initMessaging 0FA9  __end_of__initialization 007B          eeprom_read@addr 0075  
   __size_of_initPWMTMR4 001F           __pcstackCOMMON 0070             __pidataBANK0 0FA0  
             __end_of_so 0452     __size_of_readCurrent 0051           ?_initMessaging 0070  
   __size_of_readVoltage 0002       __size_of_initCOMP1 000D       __size_of_initCOMP2 000D  
             __pbssBANK0 0063               __pbssBANK1 00A0              sendColour@c 0072  
             __pmaintext 007F               __sendchar_ 07E2       __size_of_sendInt24 0032  
     __size_of_sendUInt8 000D                  ?___tmul 0024                  ?___wmul 0020  
           __sendchar_@c 0074                  _C1TSEL0 14F0                  _C1TSEL1 14F1  
                ?_deltaT 0072               __pintentry 0004                  _CCP1CON 0293  
                _CDAFVR0 08BA                  _CDAFVR1 08BB                  ?_initBT 0070  
                _CCP1SEL 08E8                  ?_setLED 0073                  _ADPREF0 04F0  
                _ADPREF1 04F1                  ?_setVal 0046                  _T1CKPS0 00C4  
                _T1CKPS1 00C5                  _T2CKPS0 00E0                  _T2CKPS1 00E1  
                _T4CKPS0 20B8                  _T4CKPS1 20B9                  _TMR1CS0 00C6  
                _TMR1CS1 00C7                  _RXDTSEL 08EF                  _TXCKSEL 08F0  
              ?_initTMR1 0070                ?_initPins 0070                  ___atdiv 0452  
                ___awdiv 051D                  ___awmod 0611          __size_of___tmul 0027  
        __size_of___wmul 001C          __size_of_deltaT 002A        __end_of_initCOMP1 0FE4  
      __end_of_initCOMP2 0FF1          __CFG_STVREN$OFF 0000          __size_of_initBT 0017  
        __size_of_setLED 0012          __size_of_setVal 0034                  __ptext1 0656  
                __ptext2 0611                  __ptext3 051D                  __ptext4 070D  
                __ptext5 03E5                  __ptext6 07D0                  __ptext7 0343  
                __ptext8 07F2                  __ptext9 068A                  _buffpos 007A  
        ??_initMessaging 0072                  _initADC 0FC2             __size_of_ISR 0051  
                _initFVR 0FAF             __size_of_adc 0051             __size_of_abs 000F  
                _readVdd 07BD             __size_of_cos 000A             __size_of_sin 0060  
                _reading 006B                  _readpos 007B         ___awmod@dividend 0074  
                _setUnit 070D        __end_of_sendInt24 06BC        __end_of_sendUInt8 07FF  
             _sendColour 0343     end_of_initialization 007B               ??_initTMR1 0072  
                setLED@b 0074                  setLED@g 0075                  setLED@r 0073  
             ??_initPins 0072                  sin@buff 0020                  setVal@i 0049  
                setVal@v 0046              ?__sendchar_ 0070             __pstringtext 07FF  
       __CFG_FOSC$INTOSC 0000                _TRISBbits 008D            ??_eeprom_read 0072  
          deltaT@tm_high 0074           __end_of___tmul 070D           __end_of___wmul 078E  
         __end_of_deltaT 06E6           __end_of_initBT 07BD           __end_of_setLED 07E2  
         __end_of_setVal 068A      start_initialization 0057              __end_of_ISR 0055  
            __end_of_adc 0611              __end_of_abs 1000              __end_of_cos 0FC2  
            __end_of_sin 051D      __size_of__sendchar_ 0010              ?_sendColour 0070  
          ??_initPWMTMR4 0072                 ??___tmul 007A                 ??___wmul 0078  
    __end_of_eeprom_read 07A6                 ??_deltaT 0076              __pdataBANK0 006C  
               ??_initBT 0072            ??_readCurrent 003C                 ??_setLED 0075  
               ??_setVal 0048           ___tmul@product 002A            ??_readVoltage 0072  
            __pbssCOMMON 007A                ___latbits 0001            __pcstackBANK0 0020  
      __size_of_initTMR1 000B               sendInt24@i 0075               sendUInt8@i 0075  
      __size_of_initPins 0020      __end_of_initPWMTMR4 0772                 ?___atdiv 002D  
               ?___awdiv 003D                 ?___awmod 0072      __size_of_sendColour 00A2  
         _i_u_diode_offs 006F                 ?_initADC 0070                 ?_initFVR 0070  
              _initCOMP1 0FD7                _initCOMP2 0FE4                 ?_readVdd 0074  
    __end_of_readCurrent 05C0                 ?_setUnit 0075                _curr_time 0063  
    __end_of_readVoltage 0004              __size_of_so 006D                 _T2OUTPS0 00E3  
               _T2OUTPS1 00E4                 _T2OUTPS2 00E5                 _T2OUTPS3 00E6  
              _sendInt24 068A                _sendUInt8 07F2           ___wmul@product 0078  
           _receive_buff 00A0              _eeprom_read 078E             ??__sendchar_ 0072  
               _GO_nDONE 04E9        ___wmul@multiplier 0020               ?_initCOMP1 0070  
             ?_initCOMP2 0070                main@angle 0056                main@bmode 0059  
  __end_of_initMessaging 0FAF      ___tmul@multiplicand 0027                _volt_time 0067  
           deltaT@tm_low 0072       __end_of__sendchar_ 07F2               ?_sendInt24 0075  
             ?_sendUInt8 0070              _initPWMTMR4 0753         __size_of___atdiv 006B  
       __size_of___awdiv 0052         __size_of___awmod 0045              _readCurrent 056F  
       __size_of_initADC 000A         __size_of_initFVR 0009              _readVoltage 0002  
       __size_of_readVdd 0013                 _main$840 005E         __size_of_setUnit 0026  
               __ptext10 07E2                 __ptext11 0002                 __ptext20 0753  
               __ptext12 07BD                 __ptext21 0FA9                 __ptext13 056F  
               __ptext30 0FA4                 __ptext22 0FAF                 __ptext14 05C0  
               __ptext31 078E                 __ptext23 0FE4                 __ptext15 0772  
               __ptext32 0FF1                 __ptext24 0FD7                 __ptext16 06E6  
               __ptext25 07A6                 __ptext17 0452                 __ptext26 0FC2  
               __ptext18 0FCC                 __ptext27 06BC                 __ptext19 0733  
               __ptext28 0FB8                 __ptext29 04BD             ??_sendColour 0072  
               _i_u_offs 006C                 _led_rest 0065                 _initTMR1 0FCC  
               _initPins 0733            __size_of_main 02C4            __size_of_sin_ 0005  
               int$flags 007E                 main@real 0050       __end_of_sendColour 03E5  
            ??_initCOMP1 0072              ??_initCOMP2 0072           _get_shift_byte 07FF  
               intlevel1 0000              ??_sendInt24 0020              ??_sendUInt8 0075  
      __CFG_CLKOUTEN$OFF 0000                 setUnit@u 0075        ___tmul@multiplier 0024  
 __end_of_get_shift_byte 0809         ___atdiv@dividend 0030          ___atdiv@divisor 002D  
        ___atdiv@counter 0034             ?_eeprom_read 0070             ___atdiv@sign 0035  
