

Microchip Technology PIC LITE Macro Assembler V1.36 build -262312587 
                                                                                               Thu Mar 31 19:56:18 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext,global,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	intentry,global,class=CODE,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	dabs	1,0x7E,2
    27  0000                     	;# 
    28  0001                     	;# 
    29  0002                     	;# 
    30  0003                     	;# 
    31  0004                     	;# 
    32  0005                     	;# 
    33  0006                     	;# 
    34  0007                     	;# 
    35  0008                     	;# 
    36  0009                     	;# 
    37  000A                     	;# 
    38  000B                     	;# 
    39  000C                     	;# 
    40  000D                     	;# 
    41  0011                     	;# 
    42  0012                     	;# 
    43  0013                     	;# 
    44  0014                     	;# 
    45  0015                     	;# 
    46  0016                     	;# 
    47  0016                     	;# 
    48  0017                     	;# 
    49  0018                     	;# 
    50  0019                     	;# 
    51  001A                     	;# 
    52  001B                     	;# 
    53  001C                     	;# 
    54  001E                     	;# 
    55  001F                     	;# 
    56  008C                     	;# 
    57  008D                     	;# 
    58  0091                     	;# 
    59  0092                     	;# 
    60  0093                     	;# 
    61  0094                     	;# 
    62  0095                     	;# 
    63  0096                     	;# 
    64  0097                     	;# 
    65  0098                     	;# 
    66  0099                     	;# 
    67  009A                     	;# 
    68  009B                     	;# 
    69  009B                     	;# 
    70  009C                     	;# 
    71  009D                     	;# 
    72  009E                     	;# 
    73  010C                     	;# 
    74  010D                     	;# 
    75  0111                     	;# 
    76  0112                     	;# 
    77  0113                     	;# 
    78  0114                     	;# 
    79  0115                     	;# 
    80  0116                     	;# 
    81  0117                     	;# 
    82  0118                     	;# 
    83  0119                     	;# 
    84  011A                     	;# 
    85  011B                     	;# 
    86  011D                     	;# 
    87  011E                     	;# 
    88  018C                     	;# 
    89  018D                     	;# 
    90  0191                     	;# 
    91  0191                     	;# 
    92  0192                     	;# 
    93  0193                     	;# 
    94  0193                     	;# 
    95  0193                     	;# 
    96  0194                     	;# 
    97  0195                     	;# 
    98  0196                     	;# 
    99  0199                     	;# 
   100  019A                     	;# 
   101  019B                     	;# 
   102  019B                     	;# 
   103  019B                     	;# 
   104  019B                     	;# 
   105  019C                     	;# 
   106  019C                     	;# 
   107  019D                     	;# 
   108  019E                     	;# 
   109  019F                     	;# 
   110  020C                     	;# 
   111  020D                     	;# 
   112  0211                     	;# 
   113  0211                     	;# 
   114  0212                     	;# 
   115  0212                     	;# 
   116  0213                     	;# 
   117  0213                     	;# 
   118  0214                     	;# 
   119  0214                     	;# 
   120  0215                     	;# 
   121  0215                     	;# 
   122  0215                     	;# 
   123  0216                     	;# 
   124  0216                     	;# 
   125  0217                     	;# 
   126  0217                     	;# 
   127  0219                     	;# 
   128  021A                     	;# 
   129  021B                     	;# 
   130  021C                     	;# 
   131  021D                     	;# 
   132  021E                     	;# 
   133  021F                     	;# 
   134  0291                     	;# 
   135  0291                     	;# 
   136  0292                     	;# 
   137  0293                     	;# 
   138  0294                     	;# 
   139  0295                     	;# 
   140  0295                     	;# 
   141  0296                     	;# 
   142  0298                     	;# 
   143  0298                     	;# 
   144  0299                     	;# 
   145  029A                     	;# 
   146  029B                     	;# 
   147  029C                     	;# 
   148  029C                     	;# 
   149  029D                     	;# 
   150  029E                     	;# 
   151  029E                     	;# 
   152  0311                     	;# 
   153  0311                     	;# 
   154  0312                     	;# 
   155  0313                     	;# 
   156  0318                     	;# 
   157  0318                     	;# 
   158  0319                     	;# 
   159  031A                     	;# 
   160  0394                     	;# 
   161  0395                     	;# 
   162  0396                     	;# 
   163  039A                     	;# 
   164  039C                     	;# 
   165  039D                     	;# 
   166  039E                     	;# 
   167  039F                     	;# 
   168  0415                     	;# 
   169  0416                     	;# 
   170  0417                     	;# 
   171  041C                     	;# 
   172  041D                     	;# 
   173  041E                     	;# 
   174  0FE4                     	;# 
   175  0FE5                     	;# 
   176  0FE6                     	;# 
   177  0FE7                     	;# 
   178  0FE8                     	;# 
   179  0FE9                     	;# 
   180  0FEA                     	;# 
   181  0FEB                     	;# 
   182  0FED                     	;# 
   183  0FEE                     	;# 
   184  0FEF                     	;# 
   185  0000                     	;# 
   186  0001                     	;# 
   187  0002                     	;# 
   188  0003                     	;# 
   189  0004                     	;# 
   190  0005                     	;# 
   191  0006                     	;# 
   192  0007                     	;# 
   193  0008                     	;# 
   194  0009                     	;# 
   195  000A                     	;# 
   196  000B                     	;# 
   197  000C                     	;# 
   198  000D                     	;# 
   199  0011                     	;# 
   200  0012                     	;# 
   201  0013                     	;# 
   202  0014                     	;# 
   203  0015                     	;# 
   204  0016                     	;# 
   205  0016                     	;# 
   206  0017                     	;# 
   207  0018                     	;# 
   208  0019                     	;# 
   209  001A                     	;# 
   210  001B                     	;# 
   211  001C                     	;# 
   212  001E                     	;# 
   213  001F                     	;# 
   214  008C                     	;# 
   215  008D                     	;# 
   216  0091                     	;# 
   217  0092                     	;# 
   218  0093                     	;# 
   219  0094                     	;# 
   220  0095                     	;# 
   221  0096                     	;# 
   222  0097                     	;# 
   223  0098                     	;# 
   224  0099                     	;# 
   225  009A                     	;# 
   226  009B                     	;# 
   227  009B                     	;# 
   228  009C                     	;# 
   229  009D                     	;# 
   230  009E                     	;# 
   231  010C                     	;# 
   232  010D                     	;# 
   233  0111                     	;# 
   234  0112                     	;# 
   235  0113                     	;# 
   236  0114                     	;# 
   237  0115                     	;# 
   238  0116                     	;# 
   239  0117                     	;# 
   240  0118                     	;# 
   241  0119                     	;# 
   242  011A                     	;# 
   243  011B                     	;# 
   244  011D                     	;# 
   245  011E                     	;# 
   246  018C                     	;# 
   247  018D                     	;# 
   248  0191                     	;# 
   249  0191                     	;# 
   250  0192                     	;# 
   251  0193                     	;# 
   252  0193                     	;# 
   253  0193                     	;# 
   254  0194                     	;# 
   255  0195                     	;# 
   256  0196                     	;# 
   257  0199                     	;# 
   258  019A                     	;# 
   259  019B                     	;# 
   260  019B                     	;# 
   261  019B                     	;# 
   262  019B                     	;# 
   263  019C                     	;# 
   264  019C                     	;# 
   265  019D                     	;# 
   266  019E                     	;# 
   267  019F                     	;# 
   268  020C                     	;# 
   269  020D                     	;# 
   270  0211                     	;# 
   271  0211                     	;# 
   272  0212                     	;# 
   273  0212                     	;# 
   274  0213                     	;# 
   275  0213                     	;# 
   276  0214                     	;# 
   277  0214                     	;# 
   278  0215                     	;# 
   279  0215                     	;# 
   280  0215                     	;# 
   281  0216                     	;# 
   282  0216                     	;# 
   283  0217                     	;# 
   284  0217                     	;# 
   285  0219                     	;# 
   286  021A                     	;# 
   287  021B                     	;# 
   288  021C                     	;# 
   289  021D                     	;# 
   290  021E                     	;# 
   291  021F                     	;# 
   292  0291                     	;# 
   293  0291                     	;# 
   294  0292                     	;# 
   295  0293                     	;# 
   296  0294                     	;# 
   297  0295                     	;# 
   298  0295                     	;# 
   299  0296                     	;# 
   300  0298                     	;# 
   301  0298                     	;# 
   302  0299                     	;# 
   303  029A                     	;# 
   304  029B                     	;# 
   305  029C                     	;# 
   306  029C                     	;# 
   307  029D                     	;# 
   308  029E                     	;# 
   309  029E                     	;# 
   310  0311                     	;# 
   311  0311                     	;# 
   312  0312                     	;# 
   313  0313                     	;# 
   314  0318                     	;# 
   315  0318                     	;# 
   316  0319                     	;# 
   317  031A                     	;# 
   318  0394                     	;# 
   319  0395                     	;# 
   320  0396                     	;# 
   321  039A                     	;# 
   322  039C                     	;# 
   323  039D                     	;# 
   324  039E                     	;# 
   325  039F                     	;# 
   326  0415                     	;# 
   327  0416                     	;# 
   328  0417                     	;# 
   329  041C                     	;# 
   330  041D                     	;# 
   331  041E                     	;# 
   332  0FE4                     	;# 
   333  0FE5                     	;# 
   334  0FE6                     	;# 
   335  0FE7                     	;# 
   336  0FE8                     	;# 
   337  0FE9                     	;# 
   338  0FEA                     	;# 
   339  0FEB                     	;# 
   340  0FED                     	;# 
   341  0FEE                     	;# 
   342  0FEF                     	;# 
   343  0000                     	;# 
   344  0001                     	;# 
   345  0002                     	;# 
   346  0003                     	;# 
   347  0004                     	;# 
   348  0005                     	;# 
   349  0006                     	;# 
   350  0007                     	;# 
   351  0008                     	;# 
   352  0009                     	;# 
   353  000A                     	;# 
   354  000B                     	;# 
   355  000C                     	;# 
   356  000D                     	;# 
   357  0011                     	;# 
   358  0012                     	;# 
   359  0013                     	;# 
   360  0014                     	;# 
   361  0015                     	;# 
   362  0016                     	;# 
   363  0016                     	;# 
   364  0017                     	;# 
   365  0018                     	;# 
   366  0019                     	;# 
   367  001A                     	;# 
   368  001B                     	;# 
   369  001C                     	;# 
   370  001E                     	;# 
   371  001F                     	;# 
   372  008C                     	;# 
   373  008D                     	;# 
   374  0091                     	;# 
   375  0092                     	;# 
   376  0093                     	;# 
   377  0094                     	;# 
   378  0095                     	;# 
   379  0096                     	;# 
   380  0097                     	;# 
   381  0098                     	;# 
   382  0099                     	;# 
   383  009A                     	;# 
   384  009B                     	;# 
   385  009B                     	;# 
   386  009C                     	;# 
   387  009D                     	;# 
   388  009E                     	;# 
   389  010C                     	;# 
   390  010D                     	;# 
   391  0111                     	;# 
   392  0112                     	;# 
   393  0113                     	;# 
   394  0114                     	;# 
   395  0115                     	;# 
   396  0116                     	;# 
   397  0117                     	;# 
   398  0118                     	;# 
   399  0119                     	;# 
   400  011A                     	;# 
   401  011B                     	;# 
   402  011D                     	;# 
   403  011E                     	;# 
   404  018C                     	;# 
   405  018D                     	;# 
   406  0191                     	;# 
   407  0191                     	;# 
   408  0192                     	;# 
   409  0193                     	;# 
   410  0193                     	;# 
   411  0193                     	;# 
   412  0194                     	;# 
   413  0195                     	;# 
   414  0196                     	;# 
   415  0199                     	;# 
   416  019A                     	;# 
   417  019B                     	;# 
   418  019B                     	;# 
   419  019B                     	;# 
   420  019B                     	;# 
   421  019C                     	;# 
   422  019C                     	;# 
   423  019D                     	;# 
   424  019E                     	;# 
   425  019F                     	;# 
   426  020C                     	;# 
   427  020D                     	;# 
   428  0211                     	;# 
   429  0211                     	;# 
   430  0212                     	;# 
   431  0212                     	;# 
   432  0213                     	;# 
   433  0213                     	;# 
   434  0214                     	;# 
   435  0214                     	;# 
   436  0215                     	;# 
   437  0215                     	;# 
   438  0215                     	;# 
   439  0216                     	;# 
   440  0216                     	;# 
   441  0217                     	;# 
   442  0217                     	;# 
   443  0219                     	;# 
   444  021A                     	;# 
   445  021B                     	;# 
   446  021C                     	;# 
   447  021D                     	;# 
   448  021E                     	;# 
   449  021F                     	;# 
   450  0291                     	;# 
   451  0291                     	;# 
   452  0292                     	;# 
   453  0293                     	;# 
   454  0294                     	;# 
   455  0295                     	;# 
   456  0295                     	;# 
   457  0296                     	;# 
   458  0298                     	;# 
   459  0298                     	;# 
   460  0299                     	;# 
   461  029A                     	;# 
   462  029B                     	;# 
   463  029C                     	;# 
   464  029C                     	;# 
   465  029D                     	;# 
   466  029E                     	;# 
   467  029E                     	;# 
   468  0311                     	;# 
   469  0311                     	;# 
   470  0312                     	;# 
   471  0313                     	;# 
   472  0318                     	;# 
   473  0318                     	;# 
   474  0319                     	;# 
   475  031A                     	;# 
   476  0394                     	;# 
   477  0395                     	;# 
   478  0396                     	;# 
   479  039A                     	;# 
   480  039C                     	;# 
   481  039D                     	;# 
   482  039E                     	;# 
   483  039F                     	;# 
   484  0415                     	;# 
   485  0416                     	;# 
   486  0417                     	;# 
   487  041C                     	;# 
   488  041D                     	;# 
   489  041E                     	;# 
   490  0FE4                     	;# 
   491  0FE5                     	;# 
   492  0FE6                     	;# 
   493  0FE7                     	;# 
   494  0FE8                     	;# 
   495  0FE9                     	;# 
   496  0FEA                     	;# 
   497  0FEB                     	;# 
   498  0FED                     	;# 
   499  0FEE                     	;# 
   500  0FEF                     	;# 
   501  0000                     	;# 
   502  0001                     	;# 
   503  0002                     	;# 
   504  0003                     	;# 
   505  0004                     	;# 
   506  0005                     	;# 
   507  0006                     	;# 
   508  0007                     	;# 
   509  0008                     	;# 
   510  0009                     	;# 
   511  000A                     	;# 
   512  000B                     	;# 
   513  000C                     	;# 
   514  000D                     	;# 
   515  0011                     	;# 
   516  0012                     	;# 
   517  0013                     	;# 
   518  0014                     	;# 
   519  0015                     	;# 
   520  0016                     	;# 
   521  0016                     	;# 
   522  0017                     	;# 
   523  0018                     	;# 
   524  0019                     	;# 
   525  001A                     	;# 
   526  001B                     	;# 
   527  001C                     	;# 
   528  001E                     	;# 
   529  001F                     	;# 
   530  008C                     	;# 
   531  008D                     	;# 
   532  0091                     	;# 
   533  0092                     	;# 
   534  0093                     	;# 
   535  0094                     	;# 
   536  0095                     	;# 
   537  0096                     	;# 
   538  0097                     	;# 
   539  0098                     	;# 
   540  0099                     	;# 
   541  009A                     	;# 
   542  009B                     	;# 
   543  009B                     	;# 
   544  009C                     	;# 
   545  009D                     	;# 
   546  009E                     	;# 
   547  010C                     	;# 
   548  010D                     	;# 
   549  0111                     	;# 
   550  0112                     	;# 
   551  0113                     	;# 
   552  0114                     	;# 
   553  0115                     	;# 
   554  0116                     	;# 
   555  0117                     	;# 
   556  0118                     	;# 
   557  0119                     	;# 
   558  011A                     	;# 
   559  011B                     	;# 
   560  011D                     	;# 
   561  011E                     	;# 
   562  018C                     	;# 
   563  018D                     	;# 
   564  0191                     	;# 
   565  0191                     	;# 
   566  0192                     	;# 
   567  0193                     	;# 
   568  0193                     	;# 
   569  0193                     	;# 
   570  0194                     	;# 
   571  0195                     	;# 
   572  0196                     	;# 
   573  0199                     	;# 
   574  019A                     	;# 
   575  019B                     	;# 
   576  019B                     	;# 
   577  019B                     	;# 
   578  019B                     	;# 
   579  019C                     	;# 
   580  019C                     	;# 
   581  019D                     	;# 
   582  019E                     	;# 
   583  019F                     	;# 
   584  020C                     	;# 
   585  020D                     	;# 
   586  0211                     	;# 
   587  0211                     	;# 
   588  0212                     	;# 
   589  0212                     	;# 
   590  0213                     	;# 
   591  0213                     	;# 
   592  0214                     	;# 
   593  0214                     	;# 
   594  0215                     	;# 
   595  0215                     	;# 
   596  0215                     	;# 
   597  0216                     	;# 
   598  0216                     	;# 
   599  0217                     	;# 
   600  0217                     	;# 
   601  0219                     	;# 
   602  021A                     	;# 
   603  021B                     	;# 
   604  021C                     	;# 
   605  021D                     	;# 
   606  021E                     	;# 
   607  021F                     	;# 
   608  0291                     	;# 
   609  0291                     	;# 
   610  0292                     	;# 
   611  0293                     	;# 
   612  0294                     	;# 
   613  0295                     	;# 
   614  0295                     	;# 
   615  0296                     	;# 
   616  0298                     	;# 
   617  0298                     	;# 
   618  0299                     	;# 
   619  029A                     	;# 
   620  029B                     	;# 
   621  029C                     	;# 
   622  029C                     	;# 
   623  029D                     	;# 
   624  029E                     	;# 
   625  029E                     	;# 
   626  0311                     	;# 
   627  0311                     	;# 
   628  0312                     	;# 
   629  0313                     	;# 
   630  0318                     	;# 
   631  0318                     	;# 
   632  0319                     	;# 
   633  031A                     	;# 
   634  0394                     	;# 
   635  0395                     	;# 
   636  0396                     	;# 
   637  039A                     	;# 
   638  039C                     	;# 
   639  039D                     	;# 
   640  039E                     	;# 
   641  039F                     	;# 
   642  0415                     	;# 
   643  0416                     	;# 
   644  0417                     	;# 
   645  041C                     	;# 
   646  041D                     	;# 
   647  041E                     	;# 
   648  0FE4                     	;# 
   649  0FE5                     	;# 
   650  0FE6                     	;# 
   651  0FE7                     	;# 
   652  0FE8                     	;# 
   653  0FE9                     	;# 
   654  0FEA                     	;# 
   655  0FEB                     	;# 
   656  0FED                     	;# 
   657  0FEE                     	;# 
   658  0FEF                     	;# 
   659                           
   660                           	psect	idataBANK0
   661  02E4                     __pidataBANK0:	
   662                           
   663                           ;initializer for main@F2917
   664  02E4  3465               	retlw	101
   665  02E5  3472               	retlw	114
   666  02E6  3472               	retlw	114
   667  02E7  346F               	retlw	111
   668  02E8  3472               	retlw	114
   669                           
   670                           ;initializer for _curr_time
   671  02E9  34FF               	retlw	255
   672  02EA  34FF               	retlw	255
   673  02EB  34FF               	retlw	255
   674                           
   675                           ;initializer for _delta_t
   676  02EC  34FF               	retlw	255
   677  02ED  34FF               	retlw	255
   678  02EE  34FF               	retlw	255
   679                           
   680                           ;initializer for _volt_time
   681  02EF  34FF               	retlw	255
   682  02F0  34FF               	retlw	255
   683  02F1  34FF               	retlw	255
   684                           
   685                           	psect	stringtext
   686  02D4                     __pstringtext:	
   687  02D4                     _get_shift_byte:	
   688  02D4  3481               	retlw	129
   689  02D5  34BD               	retlw	189
   690  02D6  34C8               	retlw	200
   691  02D7  3498               	retlw	152
   692  02D8  34B4               	retlw	180
   693  02D9  3492               	retlw	146
   694  02DA  3482               	retlw	130
   695  02DB  34B9               	retlw	185
   696  02DC  3480               	retlw	128
   697  02DD  3490               	retlw	144
   698  02DE                     __end_of_get_shift_byte:	
   699  000C                     _PORTA	set	12
   700  000D                     _PORTB	set	13
   701  001B                     _PR2	set	27
   702  0017                     _TMR1H	set	23
   703  0016                     _TMR1L	set	22
   704  0095                     _C1IF	set	149
   705  0096                     _C2IF	set	150
   706  005F                     _GIE	set	95
   707  005E                     _PEIE	set	94
   708  0063                     _RA3	set	99
   709  0064                     _RA4	set	100
   710  0066                     _RA6	set	102
   711  0067                     _RA7	set	103
   712  008D                     _RCIF	set	141
   713  00C4                     _T1CKPS0	set	196
   714  00C5                     _T1CKPS1	set	197
   715  00E0                     _T2CKPS0	set	224
   716  00E1                     _T2CKPS1	set	225
   717  00E3                     _T2OUTPS0	set	227
   718  00E4                     _T2OUTPS1	set	228
   719  00E5                     _T2OUTPS2	set	229
   720  00E6                     _T2OUTPS3	set	230
   721  00C6                     _TMR1CS0	set	198
   722  00C7                     _TMR1CS1	set	199
   723  0088                     _TMR1IF	set	136
   724  00C0                     _TMR1ON	set	192
   725  0089                     _TMR2IF	set	137
   726  00E2                     _TMR2ON	set	226
   727  0099                     _TMR4IF	set	153
   728  009C                     _ADRESH	set	156
   729  008C                     _TRISA	set	140
   730  008D                     _TRISB	set	141
   731  008D                     _TRISBbits	set	141
   732  04F4                     _ADCS0	set	1268
   733  04F5                     _ADCS1	set	1269
   734  04F6                     _ADCS2	set	1270
   735  04F7                     _ADFM	set	1271
   736  04F2                     _ADNREF	set	1266
   737  04E8                     _ADON	set	1256
   738  04F0                     _ADPREF0	set	1264
   739  04F1                     _ADPREF1	set	1265
   740  0495                     _C1IE	set	1173
   741  0496                     _C2IE	set	1174
   742  04EA                     _CHS0	set	1258
   743  04EB                     _CHS1	set	1259
   744  04EC                     _CHS2	set	1260
   745  04ED                     _CHS3	set	1261
   746  04EE                     _CHS4	set	1262
   747  04E9                     _GO_nDONE	set	1257
   748  04CB                     _IRCF0	set	1227
   749  04CC                     _IRCF1	set	1228
   750  04CD                     _IRCF2	set	1229
   751  04CE                     _IRCF3	set	1230
   752  048D                     _RCIE	set	1165
   753  04C8                     _SCS0	set	1224
   754  04C9                     _SCS1	set	1225
   755  04CF                     _SPLLEN	set	1231
   756  0488                     _TMR1IE	set	1160
   757  0489                     _TMR2IE	set	1161
   758  04AF                     _nWPUEN	set	1199
   759  0897                     _C1INTP	set	2199
   760  0890                     _C1NCH0	set	2192
   761  0891                     _C1NCH1	set	2193
   762  088F                     _C1ON	set	2191
   763  0894                     _C1PCH0	set	2196
   764  0895                     _C1PCH1	set	2197
   765  08A7                     _C2INTP	set	2215
   766  08A0                     _C2NCH0	set	2208
   767  08A1                     _C2NCH1	set	2209
   768  089F                     _C2ON	set	2207
   769  08A4                     _C2PCH0	set	2212
   770  08A5                     _C2PCH1	set	2213
   771  08E8                     _CCP1SEL	set	2280
   772  08BA                     _CDAFVR0	set	2234
   773  08BB                     _CDAFVR1	set	2235
   774  08BF                     _FVREN	set	2239
   775  08BE                     _FVRRDY	set	2238
   776  08EF                     _RXDTSEL	set	2287
   777  08F0                     _TXCKSEL	set	2288
   778  018C                     _ANSELA	set	396
   779  018D                     _ANSELB	set	397
   780  0199                     _RCREG	set	409
   781  019B                     _SPBRG	set	411
   782  019A                     _TXREG	set	410
   783  0CFB                     _BRG16	set	3323
   784  0CF2                     _BRGH	set	3314
   785  0CEC                     _CREN	set	3308
   786  0CEF                     _SPEN	set	3311
   787  0CF4                     _SYNC	set	3316
   788  0CF1                     _TRMT	set	3313
   789  0CF5                     _TXEN	set	3317
   790  020D                     _WPUB	set	525
   791  0293                     _CCP1CON	set	659
   792  0291                     _CCPR1L	set	657
   793  14F0                     _C1TSEL0	set	5360
   794  14F1                     _C1TSEL1	set	5361
   795  149C                     _DC1B0	set	5276
   796  149D                     _DC1B1	set	5277
   797  20B8                     _T4CKPS0	set	8376
   798  20B9                     _T4CKPS1	set	8377
   799  20BA                     _TMR4ON	set	8378
   800  02DE                     STR_1:	
   801  02DE  3465               	retlw	101	;'e'
   802  02DF  3472               	retlw	114	;'r'
   803  02E0  3472               	retlw	114	;'r'
   804  02E1  346F               	retlw	111	;'o'
   805  02E2  3472               	retlw	114	;'r'
   806  02E3  3400               	retlw	0
   807                           
   808                           ; #config settings
   809  0000                     
   810                           	psect	cinit
   811  0079                     start_initialization:	
   812  0079                     __initialization:	
   813                           
   814                           ; Clear objects allocated to BANK0
   815  0079  01C1               	clrf	__pbssBANK0& (0+127)
   816  007A  01C2               	clrf	(__pbssBANK0+1)& (0+127)
   817  007B  01C3               	clrf	(__pbssBANK0+2)& (0+127)
   818  007C  01C4               	clrf	(__pbssBANK0+3)& (0+127)
   819  007D  01C5               	clrf	(__pbssBANK0+4)& (0+127)
   820  007E  01C6               	clrf	(__pbssBANK0+5)& (0+127)
   821  007F  01C7               	clrf	(__pbssBANK0+6)& (0+127)
   822  0080  01C8               	clrf	(__pbssBANK0+7)& (0+127)
   823  0081  01C9               	clrf	(__pbssBANK0+8)& (0+127)
   824  0082  01CA               	clrf	(__pbssBANK0+9)& (0+127)
   825  0083  01CB               	clrf	(__pbssBANK0+10)& (0+127)
   826  0084  01CC               	clrf	(__pbssBANK0+11)& (0+127)
   827                           
   828                           ; Initialize objects allocated to BANK0
   829  0085  30E4               	movlw	low __pidataBANK0
   830  0086  0084               	movwf	4
   831  0087  3082               	movlw	(high __pidataBANK0)| (0+128)
   832  0088  0085               	movwf	5
   833  0089  3033               	movlw	low __pdataBANK0
   834  008A  0086               	movwf	6
   835  008B  3000               	movlw	high __pdataBANK0
   836  008C  0087               	movwf	7
   837  008D  300E               	movlw	14
   838  008E  3182  22FA         	fcall	init_ram
   839  0090                     end_of_initialization:	
   840                           ;End of C runtime variable initialization code
   841                           
   842  0090                     __end_of__initialization:	
   843  0090  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   844  0091  0020               	movlb	0
   845  0092  3180  2894         	ljmp	_main	;jump to C main() function
   846                           
   847                           	psect	bssBANK0
   848  0041                     __pbssBANK0:	
   849  0041                     _receive_buff:	
   850  0041                     	ds	8
   851  0049                     _led_rest:	
   852  0049                     	ds	2
   853  004B                     _buffpos:	
   854  004B                     	ds	1
   855  004C                     _readpos:	
   856  004C                     	ds	1
   857                           
   858                           	psect	dataBANK0
   859  0033                     __pdataBANK0:	
   860  0033                     main@F2917:	
   861  0033                     	ds	5
   862  0038                     _curr_time:	
   863  0038                     	ds	3
   864  003B                     _delta_t:	
   865  003B                     	ds	3
   866  003E                     _volt_time:	
   867  003E                     	ds	3
   868                           
   869                           	psect	inittext
   870  02FA                     init_ram:	
   871  02FA  00FE               	movwf	126
   872  02FB                     initloop:	
   873  02FB  0012               	moviw fsr0++
   874  02FC  001E               	movwi fsr1++
   875  02FD  0BFE               	decfsz	126,f
   876  02FE  2AFB               	goto	initloop
   877  02FF  3400               	retlw	0
   878                           
   879                           	psect	cstackCOMMON
   880  0070                     __pcstackCOMMON:	
   881  0070                     ?_charAvailable:	
   882  0070                     ?_readNext:	
   883                           ; 1 bytes @ 0x0
   884                           
   885  0070                     ?_sendInt8:	
   886                           ; 1 bytes @ 0x0
   887                           
   888  0070                     ?_initPins:	
   889                           ; 1 bytes @ 0x0
   890                           
   891  0070                     ?_initBT:	
   892                           ; 1 bytes @ 0x0
   893                           
   894  0070                     ?_deltaT:	
   895                           ; 1 bytes @ 0x0
   896                           
   897  0070                     ?_ISR:	
   898                           ; 1 bytes @ 0x0
   899                           
   900  0070                     ?_main:	
   901                           ; 1 bytes @ 0x0
   902                           
   903  0070                     ?_sendChar:	
   904                           ; 1 bytes @ 0x0
   905                           
   906  0070                     deltaT@tm_low:	
   907                           ; 1 bytes @ 0x0
   908                           
   909                           
   910                           ; 3 bytes @ 0x0
   911  0070                     	ds	3
   912  0073                     deltaT@tm_high:	
   913                           
   914                           ; 3 bytes @ 0x3
   915  0073                     	ds	3
   916  0076                     ??_deltaT:	
   917                           
   918                           ; 1 bytes @ 0x6
   919  0076                     	ds	6
   920  007C                     ??_ISR:	
   921                           
   922                           ; 1 bytes @ 0xC
   923  007C                     	ds	2
   924                           
   925                           	psect	cstackBANK0
   926  0020                     __pcstackBANK0:	
   927  0020                     ??_charAvailable:	
   928  0020                     ??_readNext:	
   929                           ; 1 bytes @ 0x0
   930                           
   931  0020                     ??_initPins:	
   932                           ; 1 bytes @ 0x0
   933                           
   934  0020                     ??_initBT:	
   935                           ; 1 bytes @ 0x0
   936                           
   937  0020                     ??_sendChar:	
   938                           ; 1 bytes @ 0x0
   939                           
   940  0020                     sendChar@c:	
   941                           ; 1 bytes @ 0x0
   942                           
   943                           
   944                           ; 1 bytes @ 0x0
   945  0020                     	ds	1
   946  0021                     ??_sendInt8:	
   947  0021                     ?_sendInt16:	
   948                           ; 1 bytes @ 0x1
   949                           
   950  0021                     ?_sendInt24:	
   951                           ; 1 bytes @ 0x1
   952                           
   953  0021                     ?_sendInt32:	
   954                           ; 1 bytes @ 0x1
   955                           
   956  0021                     ?_sendFloat:	
   957                           ; 1 bytes @ 0x1
   958                           
   959  0021                     ?_sendString:	
   960                           ; 1 bytes @ 0x1
   961                           
   962  0021                     readNext@ret:	
   963                           ; 1 bytes @ 0x1
   964                           
   965  0021                     sendInt8@i:	
   966                           ; 1 bytes @ 0x1
   967                           
   968  0021                     sendInt16@i:	
   969                           ; 1 bytes @ 0x1
   970                           
   971  0021                     sendString@val:	
   972                           ; 2 bytes @ 0x1
   973                           
   974  0021                     sendInt24@i:	
   975                           ; 2 bytes @ 0x1
   976                           
   977  0021                     sendFloat@f:	
   978                           ; 3 bytes @ 0x1
   979                           
   980  0021                     sendInt32@i:	
   981                           ; 3 bytes @ 0x1
   982                           
   983                           
   984                           ; 4 bytes @ 0x1
   985  0021                     	ds	2
   986  0023                     ??_sendInt16:	
   987  0023                     ??_sendString:	
   988                           ; 1 bytes @ 0x3
   989                           
   990                           
   991                           ; 1 bytes @ 0x3
   992  0023                     	ds	1
   993  0024                     ??_sendInt24:	
   994  0024                     ??_sendFloat:	
   995                           ; 1 bytes @ 0x4
   996                           
   997                           
   998                           ; 1 bytes @ 0x4
   999  0024                     	ds	1
  1000  0025                     ??_sendInt32:	
  1001                           
  1002                           ; 1 bytes @ 0x5
  1003  0025                     	ds	2
  1004  0027                     sendFloat@ptr:	
  1005                           
  1006                           ; 1 bytes @ 0x7
  1007  0027                     	ds	3
  1008  002A                     ??_main:	
  1009                           
  1010                           ; 1 bytes @ 0xA
  1011  002A                     	ds	3
  1012  002D                     main@err:	
  1013                           
  1014                           ; 5 bytes @ 0xD
  1015  002D                     	ds	5
  1016  0032                     main@cmd:	
  1017                           
  1018                           ; 1 bytes @ 0x12
  1019  0032                     	ds	1
  1020                           
  1021                           	psect	maintext
  1022  0094                     __pmaintext:	
  1023 ;;
  1024 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1025 ;;
  1026 ;; *************** function _main *****************
  1027 ;; Defined at:
  1028 ;;		line 588 in file "powerspy.c"
  1029 ;; Parameters:    Size  Location     Type
  1030 ;;		None
  1031 ;; Auto vars:     Size  Location     Type
  1032 ;;  err             5   13[BANK0 ] unsigned char [5]
  1033 ;;  cmd             1   18[BANK0 ] unsigned char 
  1034 ;; Return value:  Size  Location     Type
  1035 ;;                  1    wreg      void 
  1036 ;; Registers used:
  1037 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1038 ;; Tracked objects:
  1039 ;;		On entry : B1F/0
  1040 ;;		On exit  : 0/0
  1041 ;;		Unchanged: 0/0
  1042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1043 ;;      Params:         0       0       0       0       0       0
  1044 ;;      Locals:         0       6       0       0       0       0
  1045 ;;      Temps:          0       3       0       0       0       0
  1046 ;;      Totals:         0       9       0       0       0       0
  1047 ;;Total ram usage:        9 bytes
  1048 ;; Hardware stack levels required when called:    4
  1049 ;; This function calls:
  1050 ;;		_charAvailable
  1051 ;;		_initBT
  1052 ;;		_initPins
  1053 ;;		_readNext
  1054 ;;		_sendFloat
  1055 ;;		_sendInt16
  1056 ;;		_sendInt24
  1057 ;;		_sendInt32
  1058 ;;		_sendInt8
  1059 ;;		_sendString
  1060 ;; This function is called by:
  1061 ;;		Startup code after reset
  1062 ;; This function uses a non-reentrant model
  1063 ;;
  1064                           
  1065                           
  1066                           ;psect for function _main
  1067  0094                     _main:	
  1068                           
  1069                           ;powerspy.c: 589: char cmd;
  1070                           ;powerspy.c: 590: (GIE = 0);
  1071                           
  1072                           ;incstack = 0
  1073                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1074  0094  138B               	bcf	11,7	;volatile
  1075                           
  1076                           ;powerspy.c: 591: initPins();
  1077  0095  3182  2252  3180   	fcall	_initPins
  1078                           
  1079                           ;powerspy.c: 592: char err[] = {'e', 'r', 'r', 'o', 'r'};
  1080  0098  3033               	movlw	low main@F2917
  1081  0099  0086               	movwf	6
  1082  009A  3000               	movlw	high main@F2917
  1083  009B  0087               	movwf	7
  1084  009C  302D               	movlw	low main@err
  1085  009D  0084               	movwf	4
  1086  009E  3000               	movlw	high main@err
  1087  009F  0085               	movwf	5
  1088  00A0  3005               	movlw	5
  1089  00A1  0020               	movlb	0	; select bank0
  1090  00A2  00AA               	movwf	??_main
  1091  00A3                     u1430:	
  1092  00A3  0016               	moviw fsr1++
  1093  00A4  001A               	movwi fsr0++
  1094  00A5  0BAA               	decfsz	??_main,f
  1095  00A6  28A3               	goto	u1430
  1096                           
  1097                           ;powerspy.c: 600: initBT();
  1098  00A7  3182  226F  3180   	fcall	_initBT
  1099                           
  1100                           ;powerspy.c: 602: PEIE = 1;
  1101  00AA  170B               	bsf	11,6	;volatile
  1102                           
  1103                           ;powerspy.c: 603: GIE = 1;
  1104  00AB  178B               	bsf	11,7	;volatile
  1105  00AC                     l1880:	
  1106                           ;powerspy.c: 604: while (1) {
  1107                           
  1108                           
  1109                           ;powerspy.c: 605: if (charAvailable()) {
  1110  00AC  3182  22C2  3180   	fcall	_charAvailable
  1111  00AF  3A00               	xorlw	0
  1112  00B0  1903               	skipnz
  1113  00B1  28FB               	goto	l1896
  1114                           
  1115                           ;powerspy.c: 606: cmd = readNext();
  1116  00B2  3182  22AF  3180   	fcall	_readNext
  1117  00B5  0020               	movlb	0	; select bank0
  1118  00B6  00AA               	movwf	??_main
  1119  00B7  082A               	movf	??_main,w
  1120  00B8  00B2               	movwf	main@cmd
  1121                           
  1122                           ;powerspy.c: 607: switch (cmd) {
  1123  00B9  28F0               	goto	l1892
  1124  00BA                     l1884:	
  1125                           ;powerspy.c: 608: case 'g':
  1126                           
  1127                           
  1128                           ;powerspy.c: 609: sendInt8(0x11);
  1129  00BA  3011               	movlw	17
  1130  00BB  3182  229C  3180   	fcall	_sendInt8
  1131                           
  1132                           ;powerspy.c: 610: sendInt16(0x2222);
  1133  00BE  3022               	movlw	34
  1134  00BF  0020               	movlb	0	; select bank0
  1135  00C0  00A1               	movwf	sendInt16@i
  1136  00C1  3022               	movlw	34
  1137  00C2  00A2               	movwf	sendInt16@i+1
  1138  00C3  3182  2286  3180   	fcall	_sendInt16
  1139                           
  1140                           ;powerspy.c: 611: sendInt24(0x333333);
  1141  00C6  3033               	movlw	51
  1142  00C7  0020               	movlb	0	; select bank0
  1143  00C8  00A1               	movwf	sendInt24@i
  1144  00C9  3033               	movlw	51
  1145  00CA  00A2               	movwf	sendInt24@i+1
  1146  00CB  3033               	movlw	51
  1147  00CC  00A3               	movwf	sendInt24@i+2
  1148  00CD  3181  21F8  3180   	fcall	_sendInt24
  1149                           
  1150                           ;powerspy.c: 612: sendInt32(0x44444444);
  1151  00D0  3044               	movlw	68
  1152  00D1  0020               	movlb	0	; select bank0
  1153  00D2  00A4               	movwf	sendInt32@i+3
  1154  00D3  3044               	movlw	68
  1155  00D4  00A3               	movwf	sendInt32@i+2
  1156  00D5  3044               	movlw	68
  1157  00D6  00A2               	movwf	sendInt32@i+1
  1158  00D7  3044               	movlw	68
  1159  00D8  00A1               	movwf	sendInt32@i
  1160  00D9  3181  2167  3180   	fcall	_sendInt32
  1161                           
  1162                           ;powerspy.c: 613: sendFloat(3.141592);
  1163  00DC  3010               	movlw	16
  1164  00DD  0020               	movlb	0	; select bank0
  1165  00DE  00A1               	movwf	sendFloat@f
  1166  00DF  3049               	movlw	73
  1167  00E0  00A2               	movwf	sendFloat@f+1
  1168  00E1  3040               	movlw	64
  1169  00E2  00A3               	movwf	sendFloat@f+2
  1170  00E3  3181  21B7  3180   	fcall	_sendFloat
  1171                           
  1172                           ;powerspy.c: 616: break;
  1173                           
  1174                           ;powerspy.c: 615: case 0:
  1175                           
  1176                           ;powerspy.c: 614: break;
  1177  00E6  28F9               	goto	l1894
  1178  00E7                     l1888:	
  1179                           ;powerspy.c: 617: default:
  1180                           
  1181                           
  1182                           ;powerspy.c: 618: sendString("error");
  1183  00E7  30DE               	movlw	low (STR_1| (0+32768))
  1184  00E8  0020               	movlb	0	; select bank0
  1185  00E9  00A1               	movwf	sendString@val
  1186  00EA  3082               	movlw	high (STR_1| (0+32768))
  1187  00EB  00A2               	movwf	sendString@val+1
  1188  00EC  3182  222F  3180   	fcall	_sendString
  1189                           
  1190                           ;powerspy.c: 620: }
  1191                           
  1192                           ;powerspy.c: 619: break;
  1193  00EF  28F9               	goto	l1894
  1194  00F0                     l1892:	
  1195  00F0  0020               	movlb	0	; select bank0
  1196  00F1  0832               	movf	main@cmd,w
  1197                           
  1198                           ; Switch size 1, requested type "space"
  1199                           ; Number of cases is 2, Range of values is 0 to 103
  1200                           ; switch strategies available:
  1201                           ; Name         Instructions Cycles
  1202                           ; simple_byte            7     4 (average)
  1203                           ; direct_byte          214     6 (fixed)
  1204                           ; jumptable            260     6 (fixed)
  1205                           ;	Chosen strategy is simple_byte
  1206  00F2  3A00               	xorlw	0	; case 0
  1207  00F3  1903               	skipnz
  1208  00F4  28F9               	goto	l1894
  1209  00F5  3A67               	xorlw	103	; case 103
  1210  00F6  1903               	skipnz
  1211  00F7  28BA               	goto	l1884
  1212  00F8  28E7               	goto	l1888
  1213  00F9                     l1894:	
  1214                           
  1215                           ;powerspy.c: 621: cmd = 0;
  1216  00F9  0020               	movlb	0	; select bank0
  1217  00FA  01B2               	clrf	main@cmd
  1218  00FB                     l1896:	
  1219                           
  1220                           ;powerspy.c: 622: }
  1221                           ;powerspy.c: 623: _delay((unsigned long)((1000)*(32000000/4000.0)));
  1222  00FB  3029               	movlw	41
  1223  00FC  0020               	movlb	0	; select bank0
  1224  00FD  00AC               	movwf	??_main+2
  1225  00FE  3096               	movlw	150
  1226  00FF  00AB               	movwf	??_main+1
  1227  0100  30A6               	movlw	166
  1228  0101  00AA               	movwf	??_main
  1229  0102                     u1457:	
  1230  0102  0BAA               	decfsz	??_main,f
  1231  0103  2902               	goto	u1457
  1232  0104  0BAB               	decfsz	??_main+1,f
  1233  0105  2902               	goto	u1457
  1234  0106  0BAC               	decfsz	??_main+2,f
  1235  0107  2902               	goto	u1457
  1236  0108  28AC               	goto	l1880
  1237  0109                     __end_of_main:	
  1238                           
  1239                           	psect	text1
  1240  022F                     __ptext1:	
  1241 ;; *************** function _sendString *****************
  1242 ;; Defined at:
  1243 ;;		line 79 in file "message.c"
  1244 ;; Parameters:    Size  Location     Type
  1245 ;;  val             2    1[BANK0 ] PTR const unsigned char 
  1246 ;;		 -> STR_1(6), 
  1247 ;; Auto vars:     Size  Location     Type
  1248 ;;		None
  1249 ;; Return value:  Size  Location     Type
  1250 ;;                  1    wreg      void 
  1251 ;; Registers used:
  1252 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1253 ;; Tracked objects:
  1254 ;;		On entry : 0/0
  1255 ;;		On exit  : 0/0
  1256 ;;		Unchanged: 0/0
  1257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1258 ;;      Params:         0       2       0       0       0       0
  1259 ;;      Locals:         0       0       0       0       0       0
  1260 ;;      Temps:          0       1       0       0       0       0
  1261 ;;      Totals:         0       3       0       0       0       0
  1262 ;;Total ram usage:        3 bytes
  1263 ;; Hardware stack levels used:    1
  1264 ;; Hardware stack levels required when called:    3
  1265 ;; This function calls:
  1266 ;;		_sendChar
  1267 ;; This function is called by:
  1268 ;;		_main
  1269 ;; This function uses a non-reentrant model
  1270 ;;
  1271                           
  1272                           
  1273                           ;psect for function _sendString
  1274  022F                     _sendString:	
  1275                           
  1276                           ;message.c: 80: sendChar(2);
  1277                           
  1278                           ;incstack = 0
  1279                           ; Regs used in _sendString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1280  022F  3002               	movlw	2
  1281  0230  3182  22F2  3182   	fcall	_sendChar
  1282                           
  1283                           ;message.c: 81: sendChar('1');
  1284  0233  3031               	movlw	49
  1285  0234  3182  22F2  3182   	fcall	_sendChar
  1286  0237                     l1786:	
  1287                           ;message.c: 82: while (*val) {
  1288                           
  1289  0237  0020               	movlb	0	; select bank0
  1290  0238  0821               	movf	sendString@val,w
  1291  0239  0084               	movwf	4
  1292  023A  0822               	movf	sendString@val+1,w
  1293  023B  0085               	movwf	5
  1294  023C  0012               	moviw fsr0++
  1295  023D  1903               	btfsc	3,2
  1296  023E  2A4E               	goto	l1788
  1297                           
  1298                           ;message.c: 83: sendChar(*val);
  1299  023F  0020               	movlb	0	; select bank0
  1300  0240  0821               	movf	sendString@val,w
  1301  0241  0084               	movwf	4
  1302  0242  0822               	movf	sendString@val+1,w
  1303  0243  0085               	movwf	5
  1304  0244  0800               	movf	0,w	;code access
  1305  0245  3182  22F2  3182   	fcall	_sendChar
  1306                           
  1307                           ;message.c: 84: val++;
  1308  0248  3001               	movlw	1
  1309  0249  0020               	movlb	0	; select bank0
  1310  024A  07A1               	addwf	sendString@val,f
  1311  024B  3000               	movlw	0
  1312  024C  3DA2               	addwfc	sendString@val+1,f
  1313  024D  2A37               	goto	l1786
  1314  024E                     l1788:	
  1315                           
  1316                           ;message.c: 85: }
  1317                           ;message.c: 86: sendChar(3);
  1318  024E  3003               	movlw	3
  1319  024F  3182  22F2         	fcall	_sendChar
  1320  0251  0008               	return
  1321  0252                     __end_of_sendString:	
  1322                           
  1323                           	psect	text2
  1324  029C                     __ptext2:	
  1325 ;; *************** function _sendInt8 *****************
  1326 ;; Defined at:
  1327 ;;		line 36 in file "message.c"
  1328 ;; Parameters:    Size  Location     Type
  1329 ;;  i               1    wreg     char 
  1330 ;; Auto vars:     Size  Location     Type
  1331 ;;  i               1    1[BANK0 ] char 
  1332 ;; Return value:  Size  Location     Type
  1333 ;;                  1    wreg      void 
  1334 ;; Registers used:
  1335 ;;		wreg, status,2, status,0, pclath, cstack
  1336 ;; Tracked objects:
  1337 ;;		On entry : 0/0
  1338 ;;		On exit  : 0/0
  1339 ;;		Unchanged: 0/0
  1340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1341 ;;      Params:         0       0       0       0       0       0
  1342 ;;      Locals:         0       1       0       0       0       0
  1343 ;;      Temps:          0       0       0       0       0       0
  1344 ;;      Totals:         0       1       0       0       0       0
  1345 ;;Total ram usage:        1 bytes
  1346 ;; Hardware stack levels used:    1
  1347 ;; Hardware stack levels required when called:    3
  1348 ;; This function calls:
  1349 ;;		_sendChar
  1350 ;; This function is called by:
  1351 ;;		_main
  1352 ;; This function uses a non-reentrant model
  1353 ;;
  1354                           
  1355                           
  1356                           ;psect for function _sendInt8
  1357  029C                     _sendInt8:	
  1358                           
  1359                           ;incstack = 0
  1360                           ; Regs used in _sendInt8: [wreg+status,2+status,0+pclath+cstack]
  1361                           ;sendInt8@i stored from wreg
  1362  029C  0020               	movlb	0	; select bank0
  1363  029D  00A1               	movwf	sendInt8@i
  1364                           
  1365                           ;message.c: 37: sendChar(2);
  1366  029E  3002               	movlw	2
  1367  029F  3182  22F2  3182   	fcall	_sendChar
  1368                           
  1369                           ;message.c: 38: sendChar('2');
  1370  02A2  3032               	movlw	50
  1371  02A3  3182  22F2  3182   	fcall	_sendChar
  1372                           
  1373                           ;message.c: 39: sendChar(i);
  1374  02A6  0020               	movlb	0	; select bank0
  1375  02A7  0821               	movf	sendInt8@i,w
  1376  02A8  3182  22F2  3182   	fcall	_sendChar
  1377                           
  1378                           ;message.c: 40: sendChar(3);
  1379  02AB  3003               	movlw	3
  1380  02AC  3182  22F2         	fcall	_sendChar
  1381  02AE  0008               	return
  1382  02AF                     __end_of_sendInt8:	
  1383                           
  1384                           	psect	text3
  1385  0167                     __ptext3:	
  1386 ;; *************** function _sendInt32 *****************
  1387 ;; Defined at:
  1388 ;;		line 59 in file "message.c"
  1389 ;; Parameters:    Size  Location     Type
  1390 ;;  i               4    1[BANK0 ] long 
  1391 ;; Auto vars:     Size  Location     Type
  1392 ;;		None
  1393 ;; Return value:  Size  Location     Type
  1394 ;;                  1    wreg      void 
  1395 ;; Registers used:
  1396 ;;		wreg, status,2, status,0, pclath, cstack
  1397 ;; Tracked objects:
  1398 ;;		On entry : 0/0
  1399 ;;		On exit  : 0/0
  1400 ;;		Unchanged: 0/0
  1401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1402 ;;      Params:         0       4       0       0       0       0
  1403 ;;      Locals:         0       0       0       0       0       0
  1404 ;;      Temps:          0       5       0       0       0       0
  1405 ;;      Totals:         0       9       0       0       0       0
  1406 ;;Total ram usage:        9 bytes
  1407 ;; Hardware stack levels used:    1
  1408 ;; Hardware stack levels required when called:    3
  1409 ;; This function calls:
  1410 ;;		_sendChar
  1411 ;; This function is called by:
  1412 ;;		_main
  1413 ;; This function uses a non-reentrant model
  1414 ;;
  1415                           
  1416                           
  1417                           ;psect for function _sendInt32
  1418  0167                     _sendInt32:	
  1419                           
  1420                           ;message.c: 60: sendChar(2);
  1421                           
  1422                           ;incstack = 0
  1423                           ; Regs used in _sendInt32: [wreg+status,2+status,0+pclath+cstack]
  1424  0167  3002               	movlw	2
  1425  0168  3182  22F2  3181   	fcall	_sendChar
  1426                           
  1427                           ;message.c: 61: sendChar('5');
  1428  016B  3035               	movlw	53
  1429  016C  3182  22F2  3181   	fcall	_sendChar
  1430                           
  1431                           ;message.c: 62: sendChar((char) (i >> 24 & 0xff));
  1432  016F  0020               	movlb	0	; select bank0
  1433  0170  0821               	movf	sendInt32@i,w
  1434  0171  00A5               	movwf	??_sendInt32
  1435  0172  0822               	movf	sendInt32@i+1,w
  1436  0173  00A6               	movwf	??_sendInt32+1
  1437  0174  0823               	movf	sendInt32@i+2,w
  1438  0175  00A7               	movwf	??_sendInt32+2
  1439  0176  0824               	movf	sendInt32@i+3,w
  1440  0177  00A8               	movwf	??_sendInt32+3
  1441  0178  3018               	movlw	24
  1442  0179  00A9               	movwf	??_sendInt32+4
  1443  017A                     u1205:	
  1444  017A  37A8               	asrf	??_sendInt32+3,f
  1445  017B  0CA7               	rrf	??_sendInt32+2,f
  1446  017C  0CA6               	rrf	??_sendInt32+1,f
  1447  017D  0CA5               	rrf	??_sendInt32,f
  1448  017E  0BA9               	decfsz	??_sendInt32+4,f
  1449  017F  297A               	goto	u1205
  1450  0180  0825               	movf	??_sendInt32,w
  1451  0181  3182  22F2  3181   	fcall	_sendChar
  1452                           
  1453                           ;message.c: 63: sendChar((char) (i >> 16 & 0xff));
  1454  0184  0020               	movlb	0	; select bank0
  1455  0185  0821               	movf	sendInt32@i,w
  1456  0186  00A5               	movwf	??_sendInt32
  1457  0187  0822               	movf	sendInt32@i+1,w
  1458  0188  00A6               	movwf	??_sendInt32+1
  1459  0189  0823               	movf	sendInt32@i+2,w
  1460  018A  00A7               	movwf	??_sendInt32+2
  1461  018B  0824               	movf	sendInt32@i+3,w
  1462  018C  00A8               	movwf	??_sendInt32+3
  1463  018D  3010               	movlw	16
  1464  018E  00A9               	movwf	??_sendInt32+4
  1465  018F                     u1215:	
  1466  018F  37A8               	asrf	??_sendInt32+3,f
  1467  0190  0CA7               	rrf	??_sendInt32+2,f
  1468  0191  0CA6               	rrf	??_sendInt32+1,f
  1469  0192  0CA5               	rrf	??_sendInt32,f
  1470  0193  0BA9               	decfsz	??_sendInt32+4,f
  1471  0194  298F               	goto	u1215
  1472  0195  0825               	movf	??_sendInt32,w
  1473  0196  3182  22F2  3181   	fcall	_sendChar
  1474                           
  1475                           ;message.c: 64: sendChar((char) (i >> 8 & 0xff));
  1476  0199  0020               	movlb	0	; select bank0
  1477  019A  0821               	movf	sendInt32@i,w
  1478  019B  00A5               	movwf	??_sendInt32
  1479  019C  0822               	movf	sendInt32@i+1,w
  1480  019D  00A6               	movwf	??_sendInt32+1
  1481  019E  0823               	movf	sendInt32@i+2,w
  1482  019F  00A7               	movwf	??_sendInt32+2
  1483  01A0  0824               	movf	sendInt32@i+3,w
  1484  01A1  00A8               	movwf	??_sendInt32+3
  1485  01A2  3008               	movlw	8
  1486  01A3  00A9               	movwf	??_sendInt32+4
  1487  01A4                     u1225:	
  1488  01A4  37A8               	asrf	??_sendInt32+3,f
  1489  01A5  0CA7               	rrf	??_sendInt32+2,f
  1490  01A6  0CA6               	rrf	??_sendInt32+1,f
  1491  01A7  0CA5               	rrf	??_sendInt32,f
  1492  01A8  0BA9               	decfsz	??_sendInt32+4,f
  1493  01A9  29A4               	goto	u1225
  1494  01AA  0825               	movf	??_sendInt32,w
  1495  01AB  3182  22F2  3181   	fcall	_sendChar
  1496                           
  1497                           ;message.c: 65: sendChar((char) (i & 0xff));
  1498  01AE  0020               	movlb	0	; select bank0
  1499  01AF  0821               	movf	sendInt32@i,w
  1500  01B0  3182  22F2  3181   	fcall	_sendChar
  1501                           
  1502                           ;message.c: 66: sendChar(3);
  1503  01B3  3003               	movlw	3
  1504  01B4  3182  22F2         	fcall	_sendChar
  1505  01B6  0008               	return
  1506  01B7                     __end_of_sendInt32:	
  1507                           
  1508                           	psect	text4
  1509  01F8                     __ptext4:	
  1510 ;; *************** function _sendInt24 *****************
  1511 ;; Defined at:
  1512 ;;		line 50 in file "message.c"
  1513 ;; Parameters:    Size  Location     Type
  1514 ;;  i               3    1[BANK0 ] m
  1515 ;; Auto vars:     Size  Location     Type
  1516 ;;		None
  1517 ;; Return value:  Size  Location     Type
  1518 ;;                  1    wreg      void 
  1519 ;; Registers used:
  1520 ;;		wreg, status,2, status,0, pclath, cstack
  1521 ;; Tracked objects:
  1522 ;;		On entry : 0/0
  1523 ;;		On exit  : 0/0
  1524 ;;		Unchanged: 0/0
  1525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1526 ;;      Params:         0       3       0       0       0       0
  1527 ;;      Locals:         0       0       0       0       0       0
  1528 ;;      Temps:          0       4       0       0       0       0
  1529 ;;      Totals:         0       7       0       0       0       0
  1530 ;;Total ram usage:        7 bytes
  1531 ;; Hardware stack levels used:    1
  1532 ;; Hardware stack levels required when called:    3
  1533 ;; This function calls:
  1534 ;;		_sendChar
  1535 ;; This function is called by:
  1536 ;;		_main
  1537 ;; This function uses a non-reentrant model
  1538 ;;
  1539                           
  1540                           
  1541                           ;psect for function _sendInt24
  1542  01F8                     _sendInt24:	
  1543                           
  1544                           ;message.c: 51: sendChar(2);
  1545                           
  1546                           ;incstack = 0
  1547                           ; Regs used in _sendInt24: [wreg+status,2+status,0+pclath+cstack]
  1548  01F8  3002               	movlw	2
  1549  01F9  3182  22F2  3181   	fcall	_sendChar
  1550                           
  1551                           ;message.c: 52: sendChar('4');
  1552  01FC  3034               	movlw	52
  1553  01FD  3182  22F2  3181   	fcall	_sendChar
  1554                           
  1555                           ;message.c: 53: sendChar((char) (i >> 16 & 0xff));
  1556  0200  0020               	movlb	0	; select bank0
  1557  0201  0821               	movf	sendInt24@i,w
  1558  0202  00A4               	movwf	??_sendInt24
  1559  0203  0822               	movf	sendInt24@i+1,w
  1560  0204  00A5               	movwf	??_sendInt24+1
  1561  0205  0823               	movf	sendInt24@i+2,w
  1562  0206  00A6               	movwf	??_sendInt24+2
  1563  0207  3010               	movlw	16
  1564  0208  00A7               	movwf	??_sendInt24+3
  1565  0209                     u1185:	
  1566  0209  0D26               	rlf	??_sendInt24+2,w
  1567  020A  0CA6               	rrf	??_sendInt24+2,f
  1568  020B  0CA5               	rrf	??_sendInt24+1,f
  1569  020C  0CA4               	rrf	??_sendInt24,f
  1570  020D  0BA7               	decfsz	??_sendInt24+3,f
  1571  020E  2A09               	goto	u1185
  1572  020F  0824               	movf	??_sendInt24,w
  1573  0210  3182  22F2  3181   	fcall	_sendChar
  1574                           
  1575                           ;message.c: 54: sendChar((char) (i >> 8 & 0xff));
  1576  0213  0020               	movlb	0	; select bank0
  1577  0214  0821               	movf	sendInt24@i,w
  1578  0215  00A4               	movwf	??_sendInt24
  1579  0216  0822               	movf	sendInt24@i+1,w
  1580  0217  00A5               	movwf	??_sendInt24+1
  1581  0218  0823               	movf	sendInt24@i+2,w
  1582  0219  00A6               	movwf	??_sendInt24+2
  1583  021A  3008               	movlw	8
  1584  021B  00A7               	movwf	??_sendInt24+3
  1585  021C                     u1195:	
  1586  021C  0D26               	rlf	??_sendInt24+2,w
  1587  021D  0CA6               	rrf	??_sendInt24+2,f
  1588  021E  0CA5               	rrf	??_sendInt24+1,f
  1589  021F  0CA4               	rrf	??_sendInt24,f
  1590  0220  0BA7               	decfsz	??_sendInt24+3,f
  1591  0221  2A1C               	goto	u1195
  1592  0222  0824               	movf	??_sendInt24,w
  1593  0223  3182  22F2  3181   	fcall	_sendChar
  1594                           
  1595                           ;message.c: 55: sendChar((char) (i & 0xff));
  1596  0226  0020               	movlb	0	; select bank0
  1597  0227  0821               	movf	sendInt24@i,w
  1598  0228  3182  22F2  3181   	fcall	_sendChar
  1599                           
  1600                           ;message.c: 56: sendChar(3);
  1601  022B  3003               	movlw	3
  1602  022C  3182  22F2         	fcall	_sendChar
  1603  022E  0008               	return
  1604  022F                     __end_of_sendInt24:	
  1605                           
  1606                           	psect	text5
  1607  0286                     __ptext5:	
  1608 ;; *************** function _sendInt16 *****************
  1609 ;; Defined at:
  1610 ;;		line 42 in file "message.c"
  1611 ;; Parameters:    Size  Location     Type
  1612 ;;  i               2    1[BANK0 ] short 
  1613 ;; Auto vars:     Size  Location     Type
  1614 ;;		None
  1615 ;; Return value:  Size  Location     Type
  1616 ;;                  1    wreg      void 
  1617 ;; Registers used:
  1618 ;;		wreg, status,2, status,0, pclath, cstack
  1619 ;; Tracked objects:
  1620 ;;		On entry : 0/0
  1621 ;;		On exit  : 0/0
  1622 ;;		Unchanged: 0/0
  1623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1624 ;;      Params:         0       2       0       0       0       0
  1625 ;;      Locals:         0       0       0       0       0       0
  1626 ;;      Temps:          0       0       0       0       0       0
  1627 ;;      Totals:         0       2       0       0       0       0
  1628 ;;Total ram usage:        2 bytes
  1629 ;; Hardware stack levels used:    1
  1630 ;; Hardware stack levels required when called:    3
  1631 ;; This function calls:
  1632 ;;		_sendChar
  1633 ;; This function is called by:
  1634 ;;		_main
  1635 ;; This function uses a non-reentrant model
  1636 ;;
  1637                           
  1638                           
  1639                           ;psect for function _sendInt16
  1640  0286                     _sendInt16:	
  1641                           
  1642                           ;message.c: 43: sendChar(2);
  1643                           
  1644                           ;incstack = 0
  1645                           ; Regs used in _sendInt16: [wreg+status,2+status,0+pclath+cstack]
  1646  0286  3002               	movlw	2
  1647  0287  3182  22F2  3182   	fcall	_sendChar
  1648                           
  1649                           ;message.c: 44: sendChar('3');
  1650  028A  3033               	movlw	51
  1651  028B  3182  22F2  3182   	fcall	_sendChar
  1652                           
  1653                           ;message.c: 45: sendChar((char) (i >> 8 & 0xff));
  1654  028E  0020               	movlb	0	; select bank0
  1655  028F  0822               	movf	sendInt16@i+1,w
  1656  0290  3182  22F2  3182   	fcall	_sendChar
  1657                           
  1658                           ;message.c: 46: sendChar((char) (i & 0xff));
  1659  0293  0020               	movlb	0	; select bank0
  1660  0294  0821               	movf	sendInt16@i,w
  1661  0295  3182  22F2  3182   	fcall	_sendChar
  1662                           
  1663                           ;message.c: 47: sendChar(3);
  1664  0298  3003               	movlw	3
  1665  0299  3182  22F2         	fcall	_sendChar
  1666  029B  0008               	return
  1667  029C                     __end_of_sendInt16:	
  1668                           
  1669                           	psect	text6
  1670  01B7                     __ptext6:	
  1671 ;; *************** function _sendFloat *****************
  1672 ;; Defined at:
  1673 ;;		line 69 in file "message.c"
  1674 ;; Parameters:    Size  Location     Type
  1675 ;;  f               3    1[BANK0 ] float 
  1676 ;; Auto vars:     Size  Location     Type
  1677 ;;  ptr             1    7[BANK0 ] PTR unsigned um
  1678 ;;		 -> sendFloat@f(3), 
  1679 ;; Return value:  Size  Location     Type
  1680 ;;                  1    wreg      void 
  1681 ;; Registers used:
  1682 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1683 ;; Tracked objects:
  1684 ;;		On entry : 0/0
  1685 ;;		On exit  : 0/0
  1686 ;;		Unchanged: 0/0
  1687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1688 ;;      Params:         0       3       0       0       0       0
  1689 ;;      Locals:         0       1       0       0       0       0
  1690 ;;      Temps:          0       3       0       0       0       0
  1691 ;;      Totals:         0       7       0       0       0       0
  1692 ;;Total ram usage:        7 bytes
  1693 ;; Hardware stack levels used:    1
  1694 ;; Hardware stack levels required when called:    3
  1695 ;; This function calls:
  1696 ;;		_sendChar
  1697 ;; This function is called by:
  1698 ;;		_main
  1699 ;; This function uses a non-reentrant model
  1700 ;;
  1701                           
  1702                           
  1703                           ;psect for function _sendFloat
  1704  01B7                     _sendFloat:	
  1705                           
  1706                           ;message.c: 70: uint24_t *ptr = (uint24_t *) &f;
  1707                           
  1708                           ;incstack = 0
  1709                           ; Regs used in _sendFloat: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1710  01B7  3021               	movlw	(low (sendFloat@f| 0))& (0+255)
  1711  01B8  0020               	movlb	0	; select bank0
  1712  01B9  00A4               	movwf	??_sendFloat
  1713  01BA  0824               	movf	??_sendFloat,w
  1714  01BB  00A7               	movwf	sendFloat@ptr
  1715                           
  1716                           ;message.c: 71: sendChar(2);
  1717  01BC  3002               	movlw	2
  1718  01BD  3182  22F2  3181   	fcall	_sendChar
  1719                           
  1720                           ;message.c: 72: sendChar('6');
  1721  01C0  3036               	movlw	54
  1722  01C1  3182  22F2  3181   	fcall	_sendChar
  1723                           
  1724                           ;message.c: 73: sendChar((char) (*ptr >> 16 & 0xff));
  1725  01C4  0020               	movlb	0	; select bank0
  1726  01C5  0827               	movf	sendFloat@ptr,w
  1727  01C6  0086               	movwf	6
  1728  01C7  0187               	clrf	7
  1729  01C8  3F40               	moviw [0]fsr1
  1730  01C9  00A4               	movwf	??_sendFloat
  1731  01CA  3F41               	moviw [1]fsr1
  1732  01CB  00A5               	movwf	??_sendFloat+1
  1733  01CC  3F42               	moviw [2]fsr1
  1734  01CD  00A6               	movwf	??_sendFloat+2
  1735  01CE  3010               	movlw	16
  1736  01CF                     u1235:	
  1737  01CF  36A6               	lsrf	??_sendFloat+2,f
  1738  01D0  0CA5               	rrf	??_sendFloat+1,f
  1739  01D1  0CA4               	rrf	??_sendFloat,f
  1740  01D2  0B89               	decfsz	9,f
  1741  01D3  29CF               	goto	u1235
  1742  01D4  0824               	movf	??_sendFloat,w
  1743  01D5  3182  22F2  3181   	fcall	_sendChar
  1744                           
  1745                           ;message.c: 74: sendChar((char) (*ptr >> 8 & 0xff));
  1746  01D8  0020               	movlb	0	; select bank0
  1747  01D9  0827               	movf	sendFloat@ptr,w
  1748  01DA  0086               	movwf	6
  1749  01DB  0187               	clrf	7
  1750  01DC  3F40               	moviw [0]fsr1
  1751  01DD  00A4               	movwf	??_sendFloat
  1752  01DE  3F41               	moviw [1]fsr1
  1753  01DF  00A5               	movwf	??_sendFloat+1
  1754  01E0  3F42               	moviw [2]fsr1
  1755  01E1  00A6               	movwf	??_sendFloat+2
  1756  01E2  3008               	movlw	8
  1757  01E3                     u1245:	
  1758  01E3  36A6               	lsrf	??_sendFloat+2,f
  1759  01E4  0CA5               	rrf	??_sendFloat+1,f
  1760  01E5  0CA4               	rrf	??_sendFloat,f
  1761  01E6  0B89               	decfsz	9,f
  1762  01E7  29E3               	goto	u1245
  1763  01E8  0824               	movf	??_sendFloat,w
  1764  01E9  3182  22F2  3181   	fcall	_sendChar
  1765                           
  1766                           ;message.c: 75: sendChar((char) (*ptr & 0xff));
  1767  01EC  0020               	movlb	0	; select bank0
  1768  01ED  0827               	movf	sendFloat@ptr,w
  1769  01EE  0086               	movwf	6
  1770  01EF  0187               	clrf	7
  1771  01F0  0801               	movf	1,w
  1772  01F1  3182  22F2  3181   	fcall	_sendChar
  1773                           
  1774                           ;message.c: 76: sendChar(3);
  1775  01F4  3003               	movlw	3
  1776  01F5  3182  22F2         	fcall	_sendChar
  1777  01F7  0008               	return
  1778  01F8                     __end_of_sendFloat:	
  1779                           
  1780                           	psect	text7
  1781  02F2                     __ptext7:	
  1782 ;; *************** function _sendChar *****************
  1783 ;; Defined at:
  1784 ;;		line 31 in file "message.c"
  1785 ;; Parameters:    Size  Location     Type
  1786 ;;  c               1    wreg     unsigned char 
  1787 ;; Auto vars:     Size  Location     Type
  1788 ;;  c               1    0[BANK0 ] unsigned char 
  1789 ;; Return value:  Size  Location     Type
  1790 ;;                  1    wreg      void 
  1791 ;; Registers used:
  1792 ;;		wreg
  1793 ;; Tracked objects:
  1794 ;;		On entry : 0/0
  1795 ;;		On exit  : 0/0
  1796 ;;		Unchanged: 0/0
  1797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1798 ;;      Params:         0       0       0       0       0       0
  1799 ;;      Locals:         0       1       0       0       0       0
  1800 ;;      Temps:          0       0       0       0       0       0
  1801 ;;      Totals:         0       1       0       0       0       0
  1802 ;;Total ram usage:        1 bytes
  1803 ;; Hardware stack levels used:    1
  1804 ;; Hardware stack levels required when called:    2
  1805 ;; This function calls:
  1806 ;;		Nothing
  1807 ;; This function is called by:
  1808 ;;		_sendInt8
  1809 ;;		_sendInt16
  1810 ;;		_sendInt24
  1811 ;;		_sendInt32
  1812 ;;		_sendFloat
  1813 ;;		_sendString
  1814 ;; This function uses a non-reentrant model
  1815 ;;
  1816                           
  1817                           
  1818                           ;psect for function _sendChar
  1819  02F2                     _sendChar:	
  1820                           
  1821                           ;incstack = 0
  1822                           ; Regs used in _sendChar: [wreg]
  1823                           ;sendChar@c stored from wreg
  1824  02F2  0020               	movlb	0	; select bank0
  1825  02F3  00A0               	movwf	sendChar@c
  1826                           
  1827                           ;message.c: 32: TXREG = c;
  1828  02F4  0820               	movf	sendChar@c,w
  1829  02F5  0023               	movlb	3	; select bank3
  1830  02F6  009A               	movwf	26	;volatile
  1831  02F7                     l484:	
  1832                           ;message.c: 33: while (!TRMT);
  1833                           
  1834  02F7  189E               	btfsc	30,1	;volatile
  1835  02F8  0008               	return
  1836  02F9  2AF7               	goto	l484
  1837  02FA                     __end_of_sendChar:	
  1838                           
  1839                           	psect	text8
  1840  02AF                     __ptext8:	
  1841 ;; *************** function _readNext *****************
  1842 ;; Defined at:
  1843 ;;		line 24 in file "message.c"
  1844 ;; Parameters:    Size  Location     Type
  1845 ;;		None
  1846 ;; Auto vars:     Size  Location     Type
  1847 ;;  ret             1    1[BANK0 ] unsigned char 
  1848 ;; Return value:  Size  Location     Type
  1849 ;;                  1    wreg      unsigned char 
  1850 ;; Registers used:
  1851 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1852 ;; Tracked objects:
  1853 ;;		On entry : 0/0
  1854 ;;		On exit  : 0/0
  1855 ;;		Unchanged: 0/0
  1856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1857 ;;      Params:         0       0       0       0       0       0
  1858 ;;      Locals:         0       1       0       0       0       0
  1859 ;;      Temps:          0       1       0       0       0       0
  1860 ;;      Totals:         0       2       0       0       0       0
  1861 ;;Total ram usage:        2 bytes
  1862 ;; Hardware stack levels used:    1
  1863 ;; Hardware stack levels required when called:    2
  1864 ;; This function calls:
  1865 ;;		Nothing
  1866 ;; This function is called by:
  1867 ;;		_main
  1868 ;; This function uses a non-reentrant model
  1869 ;;
  1870                           
  1871                           
  1872                           ;psect for function _readNext
  1873  02AF                     _readNext:	
  1874                           
  1875                           ;message.c: 25: char ret = receive_buff[readpos];
  1876                           
  1877                           ;incstack = 0
  1878                           ; Regs used in _readNext: [wreg+fsr1l+fsr1h+status,2+status,0]
  1879  02AF  0020               	movlb	0	; select bank0
  1880  02B0  084C               	movf	_readpos,w
  1881  02B1  3E41               	addlw	(low (_receive_buff| 0))& (0+255)
  1882  02B2  0086               	movwf	6
  1883  02B3  0187               	clrf	7
  1884  02B4  0801               	movf	1,w
  1885  02B5  00A0               	movwf	??_readNext
  1886  02B6  0820               	movf	??_readNext,w
  1887  02B7  00A1               	movwf	readNext@ret
  1888                           
  1889                           ;message.c: 26: readpos++;
  1890  02B8  3001               	movlw	1
  1891  02B9  00A0               	movwf	??_readNext
  1892  02BA  0820               	movf	??_readNext,w
  1893  02BB  07CC               	addwf	_readpos,f
  1894                           
  1895                           ;message.c: 27: if (readpos == 8) readpos = 0;
  1896  02BC  3008               	movlw	8
  1897  02BD  064C               	xorwf	_readpos,w
  1898  02BE  1903               	btfsc	3,2
  1899  02BF  01CC               	clrf	_readpos
  1900                           
  1901                           ;message.c: 28: return ret;
  1902  02C0  0821               	movf	readNext@ret,w
  1903  02C1  0008               	return
  1904  02C2                     __end_of_readNext:	
  1905                           
  1906                           	psect	text9
  1907  0252                     __ptext9:	
  1908 ;; *************** function _initPins *****************
  1909 ;; Defined at:
  1910 ;;		line 49 in file "powerspy.c"
  1911 ;; Parameters:    Size  Location     Type
  1912 ;;		None
  1913 ;; Auto vars:     Size  Location     Type
  1914 ;;		None
  1915 ;; Return value:  Size  Location     Type
  1916 ;;                  1    wreg      void 
  1917 ;; Registers used:
  1918 ;;		wreg, status,2
  1919 ;; Tracked objects:
  1920 ;;		On entry : 0/0
  1921 ;;		On exit  : 0/0
  1922 ;;		Unchanged: 0/0
  1923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1924 ;;      Params:         0       0       0       0       0       0
  1925 ;;      Locals:         0       0       0       0       0       0
  1926 ;;      Temps:          0       0       0       0       0       0
  1927 ;;      Totals:         0       0       0       0       0       0
  1928 ;;Total ram usage:        0 bytes
  1929 ;; Hardware stack levels used:    1
  1930 ;; Hardware stack levels required when called:    2
  1931 ;; This function calls:
  1932 ;;		Nothing
  1933 ;; This function is called by:
  1934 ;;		_main
  1935 ;; This function uses a non-reentrant model
  1936 ;;
  1937                           
  1938                           
  1939                           ;psect for function _initPins
  1940  0252                     _initPins:	
  1941                           
  1942                           ;powerspy.c: 50: PORTA = 0b00000000;
  1943                           
  1944                           ;incstack = 0
  1945                           ; Regs used in _initPins: [wreg+status,2]
  1946  0252  0020               	movlb	0	; select bank0
  1947  0253  018C               	clrf	12	;volatile
  1948                           
  1949                           ;powerspy.c: 51: ANSELA = 0b00000111;
  1950  0254  3007               	movlw	7
  1951  0255  0023               	movlb	3	; select bank3
  1952  0256  008C               	movwf	12	;volatile
  1953                           
  1954                           ;powerspy.c: 52: TRISA = 0b00000111;
  1955  0257  3007               	movlw	7
  1956  0258  0021               	movlb	1	; select bank1
  1957  0259  008C               	movwf	12	;volatile
  1958                           
  1959                           ;powerspy.c: 54: PORTB = 0b00000000;
  1960  025A  0020               	movlb	0	; select bank0
  1961  025B  018D               	clrf	13	;volatile
  1962                           
  1963                           ;powerspy.c: 55: ANSELB = 0b00110000;
  1964  025C  3030               	movlw	48
  1965  025D  0023               	movlb	3	; select bank3
  1966  025E  008D               	movwf	13	;volatile
  1967                           
  1968                           ;powerspy.c: 56: TRISB = 0b00111010;
  1969  025F  303A               	movlw	58
  1970  0260  0021               	movlb	1	; select bank1
  1971  0261  008D               	movwf	13	;volatile
  1972                           
  1973                           ;powerspy.c: 58: nWPUEN = 0;
  1974  0262  1395               	bcf	21,7	;volatile
  1975                           
  1976                           ;powerspy.c: 59: WPUB = 0b00001000;
  1977  0263  3008               	movlw	8
  1978  0264  0024               	movlb	4	; select bank4
  1979  0265  008D               	movwf	13	;volatile
  1980                           
  1981                           ;powerspy.c: 63: SCS0 = 0;
  1982  0266  0021               	movlb	1	; select bank1
  1983  0267  1019               	bcf	25,0	;volatile
  1984                           
  1985                           ;powerspy.c: 64: SCS1 = 0;
  1986  0268  1099               	bcf	25,1	;volatile
  1987                           
  1988                           ;powerspy.c: 66: IRCF0 = 0;
  1989  0269  1199               	bcf	25,3	;volatile
  1990                           
  1991                           ;powerspy.c: 67: IRCF1 = 1;
  1992  026A  1619               	bsf	25,4	;volatile
  1993                           
  1994                           ;powerspy.c: 68: IRCF2 = 1;
  1995  026B  1699               	bsf	25,5	;volatile
  1996                           
  1997                           ;powerspy.c: 69: IRCF3 = 1;
  1998  026C  1719               	bsf	25,6	;volatile
  1999                           
  2000                           ;powerspy.c: 71: SPLLEN = 1;
  2001  026D  1799               	bsf	25,7	;volatile
  2002  026E  0008               	return
  2003  026F                     __end_of_initPins:	
  2004                           
  2005                           	psect	text10
  2006  026F                     __ptext10:	
  2007 ;; *************** function _initBT *****************
  2008 ;; Defined at:
  2009 ;;		line 315 in file "powerspy.c"
  2010 ;; Parameters:    Size  Location     Type
  2011 ;;		None
  2012 ;; Auto vars:     Size  Location     Type
  2013 ;;		None
  2014 ;; Return value:  Size  Location     Type
  2015 ;;                  1    wreg      void 
  2016 ;; Registers used:
  2017 ;;		wreg
  2018 ;; Tracked objects:
  2019 ;;		On entry : 0/0
  2020 ;;		On exit  : 0/0
  2021 ;;		Unchanged: 0/0
  2022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2023 ;;      Params:         0       0       0       0       0       0
  2024 ;;      Locals:         0       0       0       0       0       0
  2025 ;;      Temps:          0       0       0       0       0       0
  2026 ;;      Totals:         0       0       0       0       0       0
  2027 ;;Total ram usage:        0 bytes
  2028 ;; Hardware stack levels used:    1
  2029 ;; Hardware stack levels required when called:    2
  2030 ;; This function calls:
  2031 ;;		Nothing
  2032 ;; This function is called by:
  2033 ;;		_main
  2034 ;; This function uses a non-reentrant model
  2035 ;;
  2036                           
  2037                           
  2038                           ;psect for function _initBT
  2039  026F                     _initBT:	
  2040                           
  2041                           ;powerspy.c: 318: RXDTSEL = 0;
  2042                           
  2043                           ;incstack = 0
  2044                           ; Regs used in _initBT: [wreg]
  2045  026F  0022               	movlb	2	; select bank2
  2046  0270  139D               	bcf	29,7	;volatile
  2047                           
  2048                           ;powerspy.c: 319: TXCKSEL = 0;
  2049  0271  101E               	bcf	30,0	;volatile
  2050                           
  2051                           ;powerspy.c: 322: TXEN = 1;
  2052  0272  0023               	movlb	3	; select bank3
  2053  0273  169E               	bsf	30,5	;volatile
  2054                           
  2055                           ;powerspy.c: 323: SYNC = 0;
  2056  0274  121E               	bcf	30,4	;volatile
  2057                           
  2058                           ;powerspy.c: 324: SPEN = 1;
  2059  0275  179D               	bsf	29,7	;volatile
  2060                           
  2061                           ;powerspy.c: 327: CREN = 1;
  2062  0276  161D               	bsf	29,4	;volatile
  2063                           
  2064                           ;powerspy.c: 328: SYNC = 0;
  2065  0277  121E               	bcf	30,4	;volatile
  2066                           
  2067                           ;powerspy.c: 329: SPEN = 1;
  2068  0278  179D               	bsf	29,7	;volatile
  2069                           
  2070                           ;powerspy.c: 332: BRGH = 0;
  2071  0279  111E               	bcf	30,2	;volatile
  2072                           
  2073                           ;powerspy.c: 333: BRG16 = 0;
  2074  027A  119F               	bcf	31,3	;volatile
  2075                           
  2076                           ;powerspy.c: 334: SPBRG = 51;
  2077  027B  3033               	movlw	51
  2078  027C  009B               	movwf	27	;volatile
  2079  027D                     l1692:	
  2080                           ;powerspy.c: 336: while (RCIF) {
  2081                           
  2082  027D  0020               	movlb	0	; select bank0
  2083  027E  1E91               	btfss	17,5	;volatile
  2084  027F  2A83               	goto	l266
  2085                           
  2086                           ;powerspy.c: 337: RCREG;
  2087  0280  0023               	movlb	3	; select bank3
  2088  0281  0819               	movf	25,w	;volatile
  2089  0282  2A7D               	goto	l1692
  2090  0283                     l266:	
  2091                           
  2092                           ;powerspy.c: 338: }
  2093                           ;powerspy.c: 340: RCIE = 1;
  2094  0283  0021               	movlb	1	; select bank1
  2095  0284  1691               	bsf	17,5	;volatile
  2096  0285  0008               	return
  2097  0286                     __end_of_initBT:	
  2098                           
  2099                           	psect	text11
  2100  02C2                     __ptext11:	
  2101 ;; *************** function _charAvailable *****************
  2102 ;; Defined at:
  2103 ;;		line 17 in file "message.c"
  2104 ;; Parameters:    Size  Location     Type
  2105 ;;		None
  2106 ;; Auto vars:     Size  Location     Type
  2107 ;;		None
  2108 ;; Return value:  Size  Location     Type
  2109 ;;                  1    wreg      char 
  2110 ;; Registers used:
  2111 ;;		wreg, status,2, status,0
  2112 ;; Tracked objects:
  2113 ;;		On entry : 0/0
  2114 ;;		On exit  : 0/0
  2115 ;;		Unchanged: 0/0
  2116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2117 ;;      Params:         0       0       0       0       0       0
  2118 ;;      Locals:         0       0       0       0       0       0
  2119 ;;      Temps:          0       1       0       0       0       0
  2120 ;;      Totals:         0       1       0       0       0       0
  2121 ;;Total ram usage:        1 bytes
  2122 ;; Hardware stack levels used:    1
  2123 ;; Hardware stack levels required when called:    2
  2124 ;; This function calls:
  2125 ;;		Nothing
  2126 ;; This function is called by:
  2127 ;;		_main
  2128 ;; This function uses a non-reentrant model
  2129 ;;
  2130                           
  2131                           
  2132                           ;psect for function _charAvailable
  2133  02C2                     _charAvailable:	
  2134                           
  2135                           ;message.c: 18: if (buffpos < readpos) {
  2136                           
  2137                           ;incstack = 0
  2138                           ; Regs used in _charAvailable: [wreg+status,2+status,0]
  2139  02C2  0020               	movlb	0	; select bank0
  2140  02C3  084B               	movf	_buffpos,w
  2141  02C4  3A80               	xorlw	128
  2142  02C5  00A0               	movwf	??_charAvailable
  2143  02C6  084C               	movf	_readpos,w
  2144  02C7  3A80               	xorlw	128
  2145  02C8  02A0               	subwf	??_charAvailable,f
  2146  02C9  1803               	skipnc
  2147  02CA  2AD0               	goto	l1742
  2148                           
  2149                           ;message.c: 19: return 8 - readpos + buffpos;
  2150  02CB  034C               	decf	_readpos,w
  2151  02CC  3AFF               	xorlw	255
  2152  02CD  074B               	addwf	_buffpos,w
  2153  02CE  3E08               	addlw	8
  2154  02CF  0008               	return
  2155  02D0                     l1742:	
  2156                           
  2157                           ;message.c: 20: }
  2158                           ;message.c: 21: return buffpos - readpos;
  2159  02D0  034C               	decf	_readpos,w
  2160  02D1  3AFF               	xorlw	255
  2161  02D2  074B               	addwf	_buffpos,w
  2162  02D3  0008               	return
  2163  02D4                     __end_of_charAvailable:	
  2164                           
  2165                           	psect	intentry
  2166  0004                     __pintentry:	
  2167 ;; *************** function _ISR *****************
  2168 ;; Defined at:
  2169 ;;		line 547 in file "powerspy.c"
  2170 ;; Parameters:    Size  Location     Type
  2171 ;;		None
  2172 ;; Auto vars:     Size  Location     Type
  2173 ;;		None
  2174 ;; Return value:  Size  Location     Type
  2175 ;;                  1    wreg      void 
  2176 ;; Registers used:
  2177 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2178 ;; Tracked objects:
  2179 ;;		On entry : 0/0
  2180 ;;		On exit  : 0/0
  2181 ;;		Unchanged: 0/0
  2182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2183 ;;      Params:         0       0       0       0       0       0
  2184 ;;      Locals:         0       0       0       0       0       0
  2185 ;;      Temps:          2       0       0       0       0       0
  2186 ;;      Totals:         2       0       0       0       0       0
  2187 ;;Total ram usage:        2 bytes
  2188 ;; Hardware stack levels used:    1
  2189 ;; Hardware stack levels required when called:    1
  2190 ;; This function calls:
  2191 ;;		_deltaT
  2192 ;; This function is called by:
  2193 ;;		Interrupt level 1
  2194 ;; This function uses a non-reentrant model
  2195 ;;
  2196                           
  2197  0004                     _ISR:	
  2198                           
  2199                           ;incstack = 0
  2200                           ; Regs used in _ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2201  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2202  0005  3180               	pagesel	$
  2203  0006  0020               	movlb	0	; select bank0
  2204  0007  087F               	movf	127,w
  2205  0008  00FD               	movwf	??_ISR+1
  2206                           
  2207                           ;powerspy.c: 549: if (RCIE && RCIF) {
  2208  0009  0021               	movlb	1	; select bank1
  2209  000A  1E91               	btfss	17,5	;volatile
  2210  000B  2822               	goto	i1l1834
  2211  000C  0020               	movlb	0	; select bank0
  2212  000D  1E91               	btfss	17,5	;volatile
  2213  000E  2822               	goto	i1l1834
  2214                           
  2215                           ;powerspy.c: 550: receive_buff[buffpos] = RCREG;
  2216  000F  0023               	movlb	3	; select bank3
  2217  0010  0819               	movf	25,w	;volatile
  2218  0011  00FC               	movwf	??_ISR
  2219  0012  0020               	movlb	0	; select bank0
  2220  0013  084B               	movf	_buffpos,w
  2221  0014  3E41               	addlw	(low (_receive_buff| 0))& (0+255)
  2222  0015  0086               	movwf	6
  2223  0016  0187               	clrf	7
  2224  0017  087C               	movf	??_ISR,w
  2225  0018  0081               	movwf	1
  2226                           
  2227                           ;powerspy.c: 551: buffpos++;
  2228  0019  3001               	movlw	1
  2229  001A  00FC               	movwf	??_ISR
  2230  001B  087C               	movf	??_ISR,w
  2231  001C  07CB               	addwf	_buffpos,f
  2232                           
  2233                           ;powerspy.c: 552: if (buffpos == 8) buffpos = 0;
  2234  001D  3008               	movlw	8
  2235  001E  064B               	xorwf	_buffpos,w
  2236  001F  1903               	btfsc	3,2
  2237  0020  01CB               	clrf	_buffpos
  2238                           
  2239                           ;powerspy.c: 553: RCIF = 0;
  2240  0021  1291               	bcf	17,5	;volatile
  2241  0022                     i1l1834:	
  2242                           
  2243                           ;powerspy.c: 554: }
  2244                           ;powerspy.c: 557: if (TMR1IE && TMR1IF) {
  2245  0022  0021               	movlb	1	; select bank1
  2246  0023  1C11               	btfss	17,0	;volatile
  2247  0024  2829               	goto	i1l348
  2248  0025  0020               	movlb	0	; select bank0
  2249  0026  1C11               	btfss	17,0	;volatile
  2250  0027  2829               	goto	i1l348
  2251                           
  2252                           ;powerspy.c: 560: TMR1IF = 0;
  2253  0028  1011               	bcf	17,0	;volatile
  2254  0029                     i1l348:	
  2255                           
  2256                           ;powerspy.c: 561: }
  2257                           ;powerspy.c: 564: if (C1IE && C1IF) {
  2258  0029  0021               	movlb	1	; select bank1
  2259  002A  1E92               	btfss	18,5	;volatile
  2260  002B  284A               	goto	i1l1850
  2261  002C  0020               	movlb	0	; select bank0
  2262  002D  1E92               	btfss	18,5	;volatile
  2263  002E  284A               	goto	i1l1850
  2264                           
  2265                           ;powerspy.c: 565: volt_time = (TMR1H<<8|TMR1L);
  2266  002F  0816               	movf	22,w	;volatile
  2267  0030  00BE               	movwf	_volt_time
  2268  0031  0817               	movf	23,w	;volatile
  2269  0032  00BF               	movwf	_volt_time+1
  2270  0033  0D89               	rlf	9,f
  2271  0034  3B89               	subwfb	9,f
  2272  0035  0989               	comf	9,f
  2273  0036  00C0               	movwf	_volt_time+2
  2274                           
  2275                           ;powerspy.c: 566: if (curr_time >= 0) deltaT(curr_time, volt_time);
  2276  0037  1BBA               	btfsc	_curr_time+2,7
  2277  0038  2848               	goto	i1l1848
  2278  0039  0838               	movf	_curr_time,w
  2279  003A  00F0               	movwf	deltaT@tm_low
  2280  003B  0839               	movf	_curr_time+1,w
  2281  003C  00F1               	movwf	deltaT@tm_low+1
  2282  003D  083A               	movf	_curr_time+2,w
  2283  003E  00F2               	movwf	deltaT@tm_low+2
  2284  003F  083E               	movf	_volt_time,w
  2285  0040  00F3               	movwf	deltaT@tm_high
  2286  0041  083F               	movf	_volt_time+1,w
  2287  0042  00F4               	movwf	deltaT@tm_high+1
  2288  0043  0840               	movf	_volt_time+2,w
  2289  0044  00F5               	movwf	deltaT@tm_high+2
  2290  0045  3181  2109  3180   	fcall	_deltaT
  2291  0048                     i1l1848:	
  2292                           
  2293                           ;powerspy.c: 568: C1IF = 0;
  2294  0048  0020               	movlb	0	; select bank0
  2295  0049  1292               	bcf	18,5	;volatile
  2296  004A                     i1l1850:	
  2297                           
  2298                           ;powerspy.c: 569: }
  2299                           ;powerspy.c: 572: if (C2IE && C2IF) {
  2300  004A  0021               	movlb	1	; select bank1
  2301  004B  1F12               	btfss	18,6	;volatile
  2302  004C  286B               	goto	i1l1862
  2303  004D  0020               	movlb	0	; select bank0
  2304  004E  1F12               	btfss	18,6	;volatile
  2305  004F  286B               	goto	i1l1862
  2306                           
  2307                           ;powerspy.c: 573: curr_time = (TMR1H<<8|TMR1L);
  2308  0050  0816               	movf	22,w	;volatile
  2309  0051  00B8               	movwf	_curr_time
  2310  0052  0817               	movf	23,w	;volatile
  2311  0053  00B9               	movwf	_curr_time+1
  2312  0054  0D89               	rlf	9,f
  2313  0055  3B89               	subwfb	9,f
  2314  0056  0989               	comf	9,f
  2315  0057  00BA               	movwf	_curr_time+2
  2316                           
  2317                           ;powerspy.c: 574: if (volt_time >= 0) deltaT(volt_time, curr_time);
  2318  0058  1BC0               	btfsc	_volt_time+2,7
  2319  0059  2869               	goto	i1l1860
  2320  005A  083E               	movf	_volt_time,w
  2321  005B  00F0               	movwf	deltaT@tm_low
  2322  005C  083F               	movf	_volt_time+1,w
  2323  005D  00F1               	movwf	deltaT@tm_low+1
  2324  005E  0840               	movf	_volt_time+2,w
  2325  005F  00F2               	movwf	deltaT@tm_low+2
  2326  0060  0838               	movf	_curr_time,w
  2327  0061  00F3               	movwf	deltaT@tm_high
  2328  0062  0839               	movf	_curr_time+1,w
  2329  0063  00F4               	movwf	deltaT@tm_high+1
  2330  0064  083A               	movf	_curr_time+2,w
  2331  0065  00F5               	movwf	deltaT@tm_high+2
  2332  0066  3181  2109  3180   	fcall	_deltaT
  2333  0069                     i1l1860:	
  2334                           
  2335                           ;powerspy.c: 576: C2IF = 0;
  2336  0069  0020               	movlb	0	; select bank0
  2337  006A  1312               	bcf	18,6	;volatile
  2338  006B                     i1l1862:	
  2339                           
  2340                           ;powerspy.c: 577: }
  2341                           ;powerspy.c: 579: if (TMR2IE && TMR2IF) {
  2342  006B  0021               	movlb	1	; select bank1
  2343  006C  1C91               	btfss	17,1	;volatile
  2344  006D  2872               	goto	i1l354
  2345  006E  0020               	movlb	0	; select bank0
  2346  006F  1C91               	btfss	17,1	;volatile
  2347  0070  2872               	goto	i1l354
  2348                           
  2349                           ;powerspy.c: 581: TMR2IF = 0;
  2350  0071  1091               	bcf	17,1	;volatile
  2351  0072                     i1l354:	
  2352  0072  087D               	movf	??_ISR+1,w
  2353  0073  0020               	movlb	0	; select bank0
  2354  0074  00FF               	movwf	127
  2355  0075  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2356  0076  0009               	retfie
  2357  0077                     __end_of_ISR:	
  2358                           
  2359                           	psect	text13
  2360  0109                     __ptext13:	
  2361 ;; *************** function _deltaT *****************
  2362 ;; Defined at:
  2363 ;;		line 508 in file "powerspy.c"
  2364 ;; Parameters:    Size  Location     Type
  2365 ;;  tm_low          3    0[COMMON] m
  2366 ;;  tm_high         3    3[COMMON] m
  2367 ;; Auto vars:     Size  Location     Type
  2368 ;;		None
  2369 ;; Return value:  Size  Location     Type
  2370 ;;                  1    wreg      void 
  2371 ;; Registers used:
  2372 ;;		wreg, status,2, status,0
  2373 ;; Tracked objects:
  2374 ;;		On entry : 0/0
  2375 ;;		On exit  : 0/0
  2376 ;;		Unchanged: 0/0
  2377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2378 ;;      Params:         6       0       0       0       0       0
  2379 ;;      Locals:         0       0       0       0       0       0
  2380 ;;      Temps:          6       0       0       0       0       0
  2381 ;;      Totals:        12       0       0       0       0       0
  2382 ;;Total ram usage:       12 bytes
  2383 ;; Hardware stack levels used:    1
  2384 ;; This function calls:
  2385 ;;		Nothing
  2386 ;; This function is called by:
  2387 ;;		_ISR
  2388 ;; This function uses a non-reentrant model
  2389 ;;
  2390                           
  2391                           
  2392                           ;psect for function _deltaT
  2393  0109                     _deltaT:	
  2394                           
  2395                           ;powerspy.c: 509: (GIE = 0);
  2396                           
  2397                           ;incstack = 0
  2398                           ; Regs used in _deltaT: [wreg+status,2+status,0]
  2399  0109  138B               	bcf	11,7	;volatile
  2400                           
  2401                           ;powerspy.c: 510: volt_time = -1;
  2402  010A  30FF               	movlw	255
  2403  010B  0020               	movlb	0	; select bank0
  2404  010C  00BE               	movwf	_volt_time
  2405  010D  30FF               	movlw	255
  2406  010E  00BF               	movwf	_volt_time+1
  2407  010F  30FF               	movlw	255
  2408  0110  00C0               	movwf	_volt_time+2
  2409                           
  2410                           ;powerspy.c: 511: curr_time = -1;
  2411  0111  30FF               	movlw	255
  2412  0112  00B8               	movwf	_curr_time
  2413  0113  30FF               	movlw	255
  2414  0114  00B9               	movwf	_curr_time+1
  2415  0115  30FF               	movlw	255
  2416  0116  00BA               	movwf	_curr_time+2
  2417                           
  2418                           ;powerspy.c: 513: (GIE = 1);
  2419  0117  178B               	bsf	11,7	;volatile
  2420                           
  2421                           ;powerspy.c: 515: if (tm_low < tm_high) {
  2422  0118  0872               	movf	deltaT@tm_low+2,w
  2423  0119  3A80               	xorlw	128
  2424  011A  00F6               	movwf	??_deltaT
  2425  011B  0875               	movf	deltaT@tm_high+2,w
  2426  011C  3A80               	xorlw	128
  2427  011D  0276               	subwf	??_deltaT,w
  2428  011E  1D03               	skipz
  2429  011F  2926               	goto	u115_23
  2430  0120  0874               	movf	deltaT@tm_high+1,w
  2431  0121  0271               	subwf	deltaT@tm_low+1,w
  2432  0122  1D03               	skipz
  2433  0123  2926               	goto	u115_23
  2434  0124  0873               	movf	deltaT@tm_high,w
  2435  0125  0270               	subwf	deltaT@tm_low,w
  2436  0126                     u115_23:	
  2437  0126  1803               	skipnc
  2438  0127  2946               	goto	i1l1734
  2439                           
  2440                           ;powerspy.c: 516: delta_t = tm_high - tm_low;
  2441  0128  0873               	movf	deltaT@tm_high,w
  2442  0129  00F6               	movwf	??_deltaT
  2443  012A  0874               	movf	deltaT@tm_high+1,w
  2444  012B  00F7               	movwf	??_deltaT+1
  2445  012C  0875               	movf	deltaT@tm_high+2,w
  2446  012D  00F8               	movwf	??_deltaT+2
  2447  012E  0970               	comf	deltaT@tm_low,w
  2448  012F  00F9               	movwf	??_deltaT+3
  2449  0130  0971               	comf	deltaT@tm_low+1,w
  2450  0131  00FA               	movwf	??_deltaT+4
  2451  0132  0972               	comf	deltaT@tm_low+2,w
  2452  0133  00FB               	movwf	??_deltaT+5
  2453  0134  0AF9               	incf	??_deltaT+3,f
  2454  0135  1903               	skipnz
  2455  0136  0AFA               	incf	??_deltaT+4,f
  2456  0137  1903               	skipnz
  2457  0138  0AFB               	incf	??_deltaT+5,f
  2458  0139  0879               	movf	??_deltaT+3,w
  2459  013A  07F6               	addwf	??_deltaT,f
  2460  013B  087A               	movf	??_deltaT+4,w
  2461  013C  3DF7               	addwfc	??_deltaT+1,f
  2462  013D  087B               	movf	??_deltaT+5,w
  2463  013E  3DF8               	addwfc	??_deltaT+2,f
  2464  013F  0876               	movf	??_deltaT,w
  2465  0140  00BB               	movwf	_delta_t
  2466  0141  0877               	movf	??_deltaT+1,w
  2467  0142  00BC               	movwf	_delta_t+1
  2468  0143  0878               	movf	??_deltaT+2,w
  2469  0144  00BD               	movwf	_delta_t+2
  2470                           
  2471                           ;powerspy.c: 517: } else {
  2472  0145  0008               	return
  2473  0146                     i1l1734:	
  2474                           
  2475                           ;powerspy.c: 518: delta_t = 0x00ffff - tm_low + tm_high;
  2476  0146  0873               	movf	deltaT@tm_high,w
  2477  0147  00F6               	movwf	??_deltaT
  2478  0148  0874               	movf	deltaT@tm_high+1,w
  2479  0149  00F7               	movwf	??_deltaT+1
  2480  014A  0875               	movf	deltaT@tm_high+2,w
  2481  014B  00F8               	movwf	??_deltaT+2
  2482  014C  0970               	comf	deltaT@tm_low,w
  2483  014D  00F9               	movwf	??_deltaT+3
  2484  014E  0971               	comf	deltaT@tm_low+1,w
  2485  014F  00FA               	movwf	??_deltaT+4
  2486  0150  0972               	comf	deltaT@tm_low+2,w
  2487  0151  00FB               	movwf	??_deltaT+5
  2488  0152  0AF9               	incf	??_deltaT+3,f
  2489  0153  1903               	skipnz
  2490  0154  0AFA               	incf	??_deltaT+4,f
  2491  0155  1903               	skipnz
  2492  0156  0AFB               	incf	??_deltaT+5,f
  2493  0157  0879               	movf	??_deltaT+3,w
  2494  0158  07F6               	addwf	??_deltaT,f
  2495  0159  087A               	movf	??_deltaT+4,w
  2496  015A  3DF7               	addwfc	??_deltaT+1,f
  2497  015B  087B               	movf	??_deltaT+5,w
  2498  015C  3DF8               	addwfc	??_deltaT+2,f
  2499  015D  30FF               	movlw	255
  2500  015E  0776               	addwf	??_deltaT,w
  2501  015F  00BB               	movwf	_delta_t
  2502  0160  30FF               	movlw	255
  2503  0161  3D77               	addwfc	??_deltaT+1,w
  2504  0162  00BC               	movwf	_delta_t+1
  2505  0163  3000               	movlw	0
  2506  0164  3D78               	addwfc	??_deltaT+2,w
  2507  0165  00BD               	movwf	_delta_t+2
  2508  0166  0008               	return
  2509  0167                     __end_of_deltaT:	
  2510  007E                     btemp	set	126	;btemp
  2511  007E                     int$flags	set	126
  2512  007E                     wtemp	set	126
  2513  007E                     wtemp0	set	126
  2514  0080                     wtemp1	set	128
  2515  0082                     wtemp2	set	130
  2516  0084                     wtemp3	set	132
  2517  0086                     wtemp4	set	134
  2518  0088                     wtemp5	set	136
  2519  007F                     wtemp6	set	127
  2520  007E                     ttemp	set	126
  2521  007E                     ttemp0	set	126
  2522  0081                     ttemp1	set	129
  2523  0084                     ttemp2	set	132
  2524  0087                     ttemp3	set	135
  2525  007F                     ttemp4	set	127
  2526  007E                     ltemp	set	126
  2527  007E                     ltemp0	set	126
  2528  0082                     ltemp1	set	130
  2529  0086                     ltemp2	set	134
  2530  0080                     ltemp3	set	128


Data Sizes:
    Strings     6
    Constant    10
    Data        14
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     19      45
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    sendString@val	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    sendFloat@ptr	PTR unsigned um size(1) Largest target is 3
		 -> sendFloat@f(BANK0[3]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_deltaT

Critical Paths under _main in BANK0

    _main->_sendInt32
    _sendString->_sendChar
    _sendInt8->_sendChar
    _sendInt32->_sendChar
    _sendInt24->_sendChar
    _sendInt16->_sendChar
    _sendFloat->_sendChar

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0     802
                                             10 BANK0      9     9      0
                      _charAvailable
                             _initBT
                           _initPins
                           _readNext
                          _sendFloat
                          _sendInt16
                          _sendInt24
                          _sendInt32
                           _sendInt8
                         _sendString
 ---------------------------------------------------------------------------------
 (1) _sendString                                           3     1      2     120
                                              1 BANK0      3     1      2
                           _sendChar
 ---------------------------------------------------------------------------------
 (1) _sendInt8                                             1     1      0      44
                                              1 BANK0      1     1      0
                           _sendChar
 ---------------------------------------------------------------------------------
 (1) _sendInt32                                            9     5      4     163
                                              1 BANK0      9     5      4
                           _sendChar
 ---------------------------------------------------------------------------------
 (1) _sendInt24                                            7     4      3     141
                                              1 BANK0      7     4      3
                           _sendChar
 ---------------------------------------------------------------------------------
 (1) _sendInt16                                            2     0      2     119
                                              1 BANK0      2     0      2
                           _sendChar
 ---------------------------------------------------------------------------------
 (1) _sendFloat                                            7     4      3     167
                                              1 BANK0      7     4      3
                           _sendChar
 ---------------------------------------------------------------------------------
 (2) _sendChar                                             1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _readNext                                             2     2      0      23
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _initPins                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initBT                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _charAvailable                                        1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  2     2      0     344
                                             12 COMMON     2     2      0
                             _deltaT
 ---------------------------------------------------------------------------------
 (4) _deltaT                                              12     6      6     344
                                              0 COMMON    12     6      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _charAvailable
   _initBT
   _initPins
   _readNext
   _sendFloat
     _sendChar
   _sendInt16
     _sendChar
   _sendInt24
     _sendChar
   _sendInt32
     _sendChar
   _sendInt8
     _sendChar
   _sendString
     _sendChar

 _ISR (ROOT)
   _deltaT

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      3B       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     13      2D       6       56.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      3B      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Thu Mar 31 19:56:18 2016

            __CFG_CP$OFF 0000                      l266 0283                      l484 02F7  
                    _GIE 005F                      _RA3 0063                      _RA4 0064  
                    _RA6 0066                      _RA7 0067                      _PR2 001B  
           __CFG_CPD$OFF 0000                      _ISR 0004             __CFG_BORV$LO 0000  
                    wreg 0009             __CFG_LVP$OFF 0000                     ?_ISR 0070  
                   _C1IE 0495                     _C1IF 0095                     _C2IE 0496  
                   _C2IF 0096                     _C1ON 088F                     _C2ON 089F  
                   l1742 02D0                     l1692 027D                     l1880 00AC  
                   l1786 0237                     l1788 024E                     l1884 00BA  
                   l1892 00F0                     l1894 00F9                     l1888 00E7  
                   l1896 00FB                     _ADFM 04F7                     _ADON 04E8  
                   _CHS0 04EA                     _CHS1 04EB                     _CHS2 04EC  
                   _CHS3 04ED                     _CHS4 04EE                     STR_1 02DE  
                   _BRGH 0CF2                     _CREN 0CEC                     u1205 017A  
                   u1215 018F                     u1225 01A4                     u1235 01CF  
                   u1245 01E3                     u1430 00A3                     u1185 0209  
                   u1195 021C                     u1457 0102                     _PEIE 005E  
                   _RCIE 048D                     _RCIF 008D                     _SCS0 04C8  
                   _SCS1 04C9                     _SPEN 0CEF                     _TRMT 0CF1  
                   _TXEN 0CF5                     _SYNC 0CF4                     _WPUB 020D  
           __CFG_WRT$OFF 0000                     _main 0094                     fsr0h 0005  
                   fsr1h 0007                     fsr0l 0004                     indf0 0000  
                   indf1 0001                     fsr1l 0006                     btemp 007E  
                   ltemp 007E                     start 0077                     ttemp 007E  
                   wtemp 007E            __CFG_IESO$OFF 0000            __CFG_MCLRE$ON 0000  
                  ??_ISR 007C            __CFG_PLLEN$ON 0000                    _DC1B0 149C  
                  _DC1B1 149D                    _ADCS0 04F4                    _ADCS1 04F5  
                  _ADCS2 04F6                    ?_main 0070                    _BRG16 0CFB  
          __CFG_WDTE$OFF 0000                    _IRCF0 04CB                    _IRCF1 04CC  
                  _IRCF2 04CD                    _IRCF3 04CE                    i1l354 0072  
                  i1l348 0029                    _FVREN 08BF                    _RCREG 0199  
                  _TMR1H 0017                    _TMR1L 0016                    _SPBRG 019B  
                  _PORTA 000C                    _PORTB 000D                    _TRISA 008C  
                  _TRISB 008D                    _TXREG 019A           __CFG_FCMEN$OFF 0000  
         __CFG_BOREN$OFF 0000                    ltemp0 007E                    ltemp1 0082  
                  ltemp2 0086                    ltemp3 0080                    ttemp0 007E  
                  ttemp1 0081                    ttemp2 0084                    ttemp3 0087  
                  ttemp4 007F                    status 0003                    wtemp0 007E  
                  wtemp1 0080                    wtemp2 0082                    wtemp3 0084  
                  wtemp4 0086                    wtemp5 0088                    wtemp6 007F  
        __initialization 0079             __end_of_main 0109                   ??_main 002A  
                 _C1NCH0 0890                   _C1NCH1 0891                   _C2NCH0 08A0  
                 _C1PCH0 0894                   _C2NCH1 08A1                   _C1PCH1 0895  
                 _C2PCH0 08A4                   _C2PCH1 08A5                   _C1INTP 0897  
                 _C2INTP 08A7                   _ADNREF 04F2                   _ADRESH 009C  
                 _CCPR1L 0291                   _ANSELA 018C                   _ANSELB 018D  
                 i1l1734 0146                   i1l1850 004A                   i1l1834 0022  
                 i1l1860 0069                   i1l1862 006B                   i1l1848 0048  
                 u115_23 0126                   _FVRRDY 08BE                   _TMR1IE 0488  
                 _TMR1IF 0088                   _TMR2IE 0489                   _TMR2IF 0089  
                 _TMR4IF 0099                   _TMR1ON 00C0                   _TMR2ON 00E2  
                 _TMR4ON 20BA                   _SPLLEN 04CF           __CFG_PWRTE$OFF 0000  
            readNext@ret 0021                   _nWPUEN 04AF                   _deltaT 0109  
       __end_of_initPins 026F                   _initBT 026F         __end_of_readNext 02C2  
       __end_of_sendChar 02FA         __end_of_sendInt8 02AF  __end_of__initialization 0090  
         __pcstackCOMMON 0070             __pidataBANK0 02E4               __pbssBANK0 0041  
             __pmaintext 0094   __size_of_charAvailable 0012       __size_of_sendInt16 0016  
     __size_of_sendInt24 0037       __size_of_sendInt32 0050       __size_of_sendFloat 0041  
                _C1TSEL0 14F0                  _C1TSEL1 14F1                  ?_deltaT 0070  
             __pintentry 0004                  _CCP1CON 0293                  _CDAFVR0 08BA  
                _CDAFVR1 08BB                  ?_initBT 0070                  _CCP1SEL 08E8  
                _ADPREF0 04F0                  _ADPREF1 04F1                  _T1CKPS0 00C4  
                _T1CKPS1 00C5                  _T2CKPS0 00E0                  _T2CKPS1 00E1  
                _T4CKPS0 20B8                  _T4CKPS1 20B9                  _TMR1CS0 00C6  
                _TMR1CS1 00C7                  _RXDTSEL 08EF                  _TXCKSEL 08F0  
              ?_initPins 0070                ?_readNext 0070                ?_sendChar 0070  
              ?_sendInt8 0070          __size_of_deltaT 005E          __CFG_STVREN$OFF 0000  
        __size_of_initBT 0017                  _delta_t 003B                  __ptext1 022F  
                __ptext2 029C                  __ptext3 0167                  __ptext4 01F8  
                __ptext5 0286                  __ptext6 01B7                  __ptext7 02F2  
                __ptext8 02AF                  __ptext9 0252                  _buffpos 004B  
           __size_of_ISR 0073                  _readpos 004C            _charAvailable 02C2  
                main@cmd 0032        __end_of_sendInt16 029C        __end_of_sendInt24 022F  
      __end_of_sendInt32 01B7                  main@err 002D        __end_of_sendFloat 01F8  
   end_of_initialization 0090               _sendString 022F               ??_initPins 0020  
                init_ram 02FA               ??_readNext 0020                  initloop 02FB  
             ??_sendChar 0020               ??_sendInt8 0021             __pstringtext 02D4  
          sendString@val 0021         __CFG_FOSC$INTOSC 0000           ?_charAvailable 0070  
              _TRISBbits 008D            deltaT@tm_high 0073           __end_of_deltaT 0167  
         __end_of_initBT 0286      start_initialization 0079              __end_of_ISR 0077  
            ?_sendString 0021                 ??_deltaT 0076              __pdataBANK0 0033  
               ??_initBT 0020          ??_charAvailable 0020                ___latbits 0001  
          __pcstackBANK0 0020               sendInt32@i 0021               sendInt24@i 0021  
             sendInt16@i 0021        __size_of_initPins 001D        __size_of_readNext 0013  
           sendFloat@ptr 0027               sendFloat@f 0021        __size_of_sendChar 0008  
      __size_of_sendInt8 0013      __size_of_sendString 0023                _curr_time 0038  
               _T2OUTPS0 00E3                 _T2OUTPS1 00E4                 _T2OUTPS2 00E5  
               _T2OUTPS3 00E6                _sendInt32 0167                _sendInt24 01F8  
              _sendInt16 0286             _receive_buff 0041                _sendFloat 01B7  
               _GO_nDONE 04E9                main@F2917 0033                _volt_time 003E  
           deltaT@tm_low 0070               ?_sendInt32 0021               ?_sendInt24 0021  
             ?_sendInt16 0021               ?_sendFloat 0021                sendChar@c 0020  
              sendInt8@i 0021                 __ptext10 026F                 __ptext11 02C2  
               __ptext13 0109                 _led_rest 0049             ??_sendString 0023  
               _initPins 0252                 _readNext 02AF            __size_of_main 0075  
               _sendChar 02F2                 _sendInt8 029C                 int$flags 007E  
     __end_of_sendString 0252           _get_shift_byte 02D4                 intlevel1 0000  
            ??_sendInt32 0025              ??_sendInt24 0024              ??_sendInt16 0023  
            ??_sendFloat 0024        __CFG_CLKOUTEN$OFF 0000    __end_of_charAvailable 02D4  
 __end_of_get_shift_byte 02DE  
