

Microchip Technology PIC LITE Macro Assembler V1.36 build -262312587 
                                                                                               Tue May  3 17:44:38 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext,global,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	intentry,global,class=CODE,delta=2
    30                           	dabs	1,0x7E,2
    31  0000                     	;# 
    32  0001                     	;# 
    33  0002                     	;# 
    34  0003                     	;# 
    35  0004                     	;# 
    36  0005                     	;# 
    37  0006                     	;# 
    38  0007                     	;# 
    39  0008                     	;# 
    40  0009                     	;# 
    41  000A                     	;# 
    42  000B                     	;# 
    43  000C                     	;# 
    44  000D                     	;# 
    45  0011                     	;# 
    46  0012                     	;# 
    47  0013                     	;# 
    48  0014                     	;# 
    49  0015                     	;# 
    50  0016                     	;# 
    51  0016                     	;# 
    52  0017                     	;# 
    53  0018                     	;# 
    54  0019                     	;# 
    55  001A                     	;# 
    56  001B                     	;# 
    57  001C                     	;# 
    58  001E                     	;# 
    59  001F                     	;# 
    60  008C                     	;# 
    61  008D                     	;# 
    62  0091                     	;# 
    63  0092                     	;# 
    64  0093                     	;# 
    65  0094                     	;# 
    66  0095                     	;# 
    67  0096                     	;# 
    68  0097                     	;# 
    69  0098                     	;# 
    70  0099                     	;# 
    71  009A                     	;# 
    72  009B                     	;# 
    73  009B                     	;# 
    74  009C                     	;# 
    75  009D                     	;# 
    76  009E                     	;# 
    77  010C                     	;# 
    78  010D                     	;# 
    79  0111                     	;# 
    80  0112                     	;# 
    81  0113                     	;# 
    82  0114                     	;# 
    83  0115                     	;# 
    84  0116                     	;# 
    85  0117                     	;# 
    86  0118                     	;# 
    87  0119                     	;# 
    88  011A                     	;# 
    89  011B                     	;# 
    90  011D                     	;# 
    91  011E                     	;# 
    92  018C                     	;# 
    93  018D                     	;# 
    94  0191                     	;# 
    95  0191                     	;# 
    96  0192                     	;# 
    97  0193                     	;# 
    98  0193                     	;# 
    99  0193                     	;# 
   100  0194                     	;# 
   101  0195                     	;# 
   102  0196                     	;# 
   103  0199                     	;# 
   104  019A                     	;# 
   105  019B                     	;# 
   106  019B                     	;# 
   107  019B                     	;# 
   108  019B                     	;# 
   109  019C                     	;# 
   110  019C                     	;# 
   111  019D                     	;# 
   112  019E                     	;# 
   113  019F                     	;# 
   114  020C                     	;# 
   115  020D                     	;# 
   116  0211                     	;# 
   117  0211                     	;# 
   118  0212                     	;# 
   119  0212                     	;# 
   120  0213                     	;# 
   121  0213                     	;# 
   122  0214                     	;# 
   123  0214                     	;# 
   124  0215                     	;# 
   125  0215                     	;# 
   126  0215                     	;# 
   127  0216                     	;# 
   128  0216                     	;# 
   129  0217                     	;# 
   130  0217                     	;# 
   131  0219                     	;# 
   132  021A                     	;# 
   133  021B                     	;# 
   134  021C                     	;# 
   135  021D                     	;# 
   136  021E                     	;# 
   137  021F                     	;# 
   138  0291                     	;# 
   139  0291                     	;# 
   140  0292                     	;# 
   141  0293                     	;# 
   142  0294                     	;# 
   143  0295                     	;# 
   144  0295                     	;# 
   145  0296                     	;# 
   146  0298                     	;# 
   147  0298                     	;# 
   148  0299                     	;# 
   149  029A                     	;# 
   150  029B                     	;# 
   151  029C                     	;# 
   152  029C                     	;# 
   153  029D                     	;# 
   154  029E                     	;# 
   155  029E                     	;# 
   156  0311                     	;# 
   157  0311                     	;# 
   158  0312                     	;# 
   159  0313                     	;# 
   160  0318                     	;# 
   161  0318                     	;# 
   162  0319                     	;# 
   163  031A                     	;# 
   164  0394                     	;# 
   165  0395                     	;# 
   166  0396                     	;# 
   167  039A                     	;# 
   168  039C                     	;# 
   169  039D                     	;# 
   170  039E                     	;# 
   171  039F                     	;# 
   172  0415                     	;# 
   173  0416                     	;# 
   174  0417                     	;# 
   175  041C                     	;# 
   176  041D                     	;# 
   177  041E                     	;# 
   178  0FE4                     	;# 
   179  0FE5                     	;# 
   180  0FE6                     	;# 
   181  0FE7                     	;# 
   182  0FE8                     	;# 
   183  0FE9                     	;# 
   184  0FEA                     	;# 
   185  0FEB                     	;# 
   186  0FED                     	;# 
   187  0FEE                     	;# 
   188  0FEF                     	;# 
   189  0000                     	;# 
   190  0001                     	;# 
   191  0002                     	;# 
   192  0003                     	;# 
   193  0004                     	;# 
   194  0005                     	;# 
   195  0006                     	;# 
   196  0007                     	;# 
   197  0008                     	;# 
   198  0009                     	;# 
   199  000A                     	;# 
   200  000B                     	;# 
   201  000C                     	;# 
   202  000D                     	;# 
   203  0011                     	;# 
   204  0012                     	;# 
   205  0013                     	;# 
   206  0014                     	;# 
   207  0015                     	;# 
   208  0016                     	;# 
   209  0016                     	;# 
   210  0017                     	;# 
   211  0018                     	;# 
   212  0019                     	;# 
   213  001A                     	;# 
   214  001B                     	;# 
   215  001C                     	;# 
   216  001E                     	;# 
   217  001F                     	;# 
   218  008C                     	;# 
   219  008D                     	;# 
   220  0091                     	;# 
   221  0092                     	;# 
   222  0093                     	;# 
   223  0094                     	;# 
   224  0095                     	;# 
   225  0096                     	;# 
   226  0097                     	;# 
   227  0098                     	;# 
   228  0099                     	;# 
   229  009A                     	;# 
   230  009B                     	;# 
   231  009B                     	;# 
   232  009C                     	;# 
   233  009D                     	;# 
   234  009E                     	;# 
   235  010C                     	;# 
   236  010D                     	;# 
   237  0111                     	;# 
   238  0112                     	;# 
   239  0113                     	;# 
   240  0114                     	;# 
   241  0115                     	;# 
   242  0116                     	;# 
   243  0117                     	;# 
   244  0118                     	;# 
   245  0119                     	;# 
   246  011A                     	;# 
   247  011B                     	;# 
   248  011D                     	;# 
   249  011E                     	;# 
   250  018C                     	;# 
   251  018D                     	;# 
   252  0191                     	;# 
   253  0191                     	;# 
   254  0192                     	;# 
   255  0193                     	;# 
   256  0193                     	;# 
   257  0193                     	;# 
   258  0194                     	;# 
   259  0195                     	;# 
   260  0196                     	;# 
   261  0199                     	;# 
   262  019A                     	;# 
   263  019B                     	;# 
   264  019B                     	;# 
   265  019B                     	;# 
   266  019B                     	;# 
   267  019C                     	;# 
   268  019C                     	;# 
   269  019D                     	;# 
   270  019E                     	;# 
   271  019F                     	;# 
   272  020C                     	;# 
   273  020D                     	;# 
   274  0211                     	;# 
   275  0211                     	;# 
   276  0212                     	;# 
   277  0212                     	;# 
   278  0213                     	;# 
   279  0213                     	;# 
   280  0214                     	;# 
   281  0214                     	;# 
   282  0215                     	;# 
   283  0215                     	;# 
   284  0215                     	;# 
   285  0216                     	;# 
   286  0216                     	;# 
   287  0217                     	;# 
   288  0217                     	;# 
   289  0219                     	;# 
   290  021A                     	;# 
   291  021B                     	;# 
   292  021C                     	;# 
   293  021D                     	;# 
   294  021E                     	;# 
   295  021F                     	;# 
   296  0291                     	;# 
   297  0291                     	;# 
   298  0292                     	;# 
   299  0293                     	;# 
   300  0294                     	;# 
   301  0295                     	;# 
   302  0295                     	;# 
   303  0296                     	;# 
   304  0298                     	;# 
   305  0298                     	;# 
   306  0299                     	;# 
   307  029A                     	;# 
   308  029B                     	;# 
   309  029C                     	;# 
   310  029C                     	;# 
   311  029D                     	;# 
   312  029E                     	;# 
   313  029E                     	;# 
   314  0311                     	;# 
   315  0311                     	;# 
   316  0312                     	;# 
   317  0313                     	;# 
   318  0318                     	;# 
   319  0318                     	;# 
   320  0319                     	;# 
   321  031A                     	;# 
   322  0394                     	;# 
   323  0395                     	;# 
   324  0396                     	;# 
   325  039A                     	;# 
   326  039C                     	;# 
   327  039D                     	;# 
   328  039E                     	;# 
   329  039F                     	;# 
   330  0415                     	;# 
   331  0416                     	;# 
   332  0417                     	;# 
   333  041C                     	;# 
   334  041D                     	;# 
   335  041E                     	;# 
   336  0FE4                     	;# 
   337  0FE5                     	;# 
   338  0FE6                     	;# 
   339  0FE7                     	;# 
   340  0FE8                     	;# 
   341  0FE9                     	;# 
   342  0FEA                     	;# 
   343  0FEB                     	;# 
   344  0FED                     	;# 
   345  0FEE                     	;# 
   346  0FEF                     	;# 
   347  0000                     	;# 
   348  0001                     	;# 
   349  0002                     	;# 
   350  0003                     	;# 
   351  0004                     	;# 
   352  0005                     	;# 
   353  0006                     	;# 
   354  0007                     	;# 
   355  0008                     	;# 
   356  0009                     	;# 
   357  000A                     	;# 
   358  000B                     	;# 
   359  000C                     	;# 
   360  000D                     	;# 
   361  0011                     	;# 
   362  0012                     	;# 
   363  0013                     	;# 
   364  0014                     	;# 
   365  0015                     	;# 
   366  0016                     	;# 
   367  0016                     	;# 
   368  0017                     	;# 
   369  0018                     	;# 
   370  0019                     	;# 
   371  001A                     	;# 
   372  001B                     	;# 
   373  001C                     	;# 
   374  001E                     	;# 
   375  001F                     	;# 
   376  008C                     	;# 
   377  008D                     	;# 
   378  0091                     	;# 
   379  0092                     	;# 
   380  0093                     	;# 
   381  0094                     	;# 
   382  0095                     	;# 
   383  0096                     	;# 
   384  0097                     	;# 
   385  0098                     	;# 
   386  0099                     	;# 
   387  009A                     	;# 
   388  009B                     	;# 
   389  009B                     	;# 
   390  009C                     	;# 
   391  009D                     	;# 
   392  009E                     	;# 
   393  010C                     	;# 
   394  010D                     	;# 
   395  0111                     	;# 
   396  0112                     	;# 
   397  0113                     	;# 
   398  0114                     	;# 
   399  0115                     	;# 
   400  0116                     	;# 
   401  0117                     	;# 
   402  0118                     	;# 
   403  0119                     	;# 
   404  011A                     	;# 
   405  011B                     	;# 
   406  011D                     	;# 
   407  011E                     	;# 
   408  018C                     	;# 
   409  018D                     	;# 
   410  0191                     	;# 
   411  0191                     	;# 
   412  0192                     	;# 
   413  0193                     	;# 
   414  0193                     	;# 
   415  0193                     	;# 
   416  0194                     	;# 
   417  0195                     	;# 
   418  0196                     	;# 
   419  0199                     	;# 
   420  019A                     	;# 
   421  019B                     	;# 
   422  019B                     	;# 
   423  019B                     	;# 
   424  019B                     	;# 
   425  019C                     	;# 
   426  019C                     	;# 
   427  019D                     	;# 
   428  019E                     	;# 
   429  019F                     	;# 
   430  020C                     	;# 
   431  020D                     	;# 
   432  0211                     	;# 
   433  0211                     	;# 
   434  0212                     	;# 
   435  0212                     	;# 
   436  0213                     	;# 
   437  0213                     	;# 
   438  0214                     	;# 
   439  0214                     	;# 
   440  0215                     	;# 
   441  0215                     	;# 
   442  0215                     	;# 
   443  0216                     	;# 
   444  0216                     	;# 
   445  0217                     	;# 
   446  0217                     	;# 
   447  0219                     	;# 
   448  021A                     	;# 
   449  021B                     	;# 
   450  021C                     	;# 
   451  021D                     	;# 
   452  021E                     	;# 
   453  021F                     	;# 
   454  0291                     	;# 
   455  0291                     	;# 
   456  0292                     	;# 
   457  0293                     	;# 
   458  0294                     	;# 
   459  0295                     	;# 
   460  0295                     	;# 
   461  0296                     	;# 
   462  0298                     	;# 
   463  0298                     	;# 
   464  0299                     	;# 
   465  029A                     	;# 
   466  029B                     	;# 
   467  029C                     	;# 
   468  029C                     	;# 
   469  029D                     	;# 
   470  029E                     	;# 
   471  029E                     	;# 
   472  0311                     	;# 
   473  0311                     	;# 
   474  0312                     	;# 
   475  0313                     	;# 
   476  0318                     	;# 
   477  0318                     	;# 
   478  0319                     	;# 
   479  031A                     	;# 
   480  0394                     	;# 
   481  0395                     	;# 
   482  0396                     	;# 
   483  039A                     	;# 
   484  039C                     	;# 
   485  039D                     	;# 
   486  039E                     	;# 
   487  039F                     	;# 
   488  0415                     	;# 
   489  0416                     	;# 
   490  0417                     	;# 
   491  041C                     	;# 
   492  041D                     	;# 
   493  041E                     	;# 
   494  0FE4                     	;# 
   495  0FE5                     	;# 
   496  0FE6                     	;# 
   497  0FE7                     	;# 
   498  0FE8                     	;# 
   499  0FE9                     	;# 
   500  0FEA                     	;# 
   501  0FEB                     	;# 
   502  0FED                     	;# 
   503  0FEE                     	;# 
   504  0FEF                     	;# 
   505  0000                     	;# 
   506  0001                     	;# 
   507  0002                     	;# 
   508  0003                     	;# 
   509  0004                     	;# 
   510  0005                     	;# 
   511  0006                     	;# 
   512  0007                     	;# 
   513  0008                     	;# 
   514  0009                     	;# 
   515  000A                     	;# 
   516  000B                     	;# 
   517  000C                     	;# 
   518  000D                     	;# 
   519  0011                     	;# 
   520  0012                     	;# 
   521  0013                     	;# 
   522  0014                     	;# 
   523  0015                     	;# 
   524  0016                     	;# 
   525  0016                     	;# 
   526  0017                     	;# 
   527  0018                     	;# 
   528  0019                     	;# 
   529  001A                     	;# 
   530  001B                     	;# 
   531  001C                     	;# 
   532  001E                     	;# 
   533  001F                     	;# 
   534  008C                     	;# 
   535  008D                     	;# 
   536  0091                     	;# 
   537  0092                     	;# 
   538  0093                     	;# 
   539  0094                     	;# 
   540  0095                     	;# 
   541  0096                     	;# 
   542  0097                     	;# 
   543  0098                     	;# 
   544  0099                     	;# 
   545  009A                     	;# 
   546  009B                     	;# 
   547  009B                     	;# 
   548  009C                     	;# 
   549  009D                     	;# 
   550  009E                     	;# 
   551  010C                     	;# 
   552  010D                     	;# 
   553  0111                     	;# 
   554  0112                     	;# 
   555  0113                     	;# 
   556  0114                     	;# 
   557  0115                     	;# 
   558  0116                     	;# 
   559  0117                     	;# 
   560  0118                     	;# 
   561  0119                     	;# 
   562  011A                     	;# 
   563  011B                     	;# 
   564  011D                     	;# 
   565  011E                     	;# 
   566  018C                     	;# 
   567  018D                     	;# 
   568  0191                     	;# 
   569  0191                     	;# 
   570  0192                     	;# 
   571  0193                     	;# 
   572  0193                     	;# 
   573  0193                     	;# 
   574  0194                     	;# 
   575  0195                     	;# 
   576  0196                     	;# 
   577  0199                     	;# 
   578  019A                     	;# 
   579  019B                     	;# 
   580  019B                     	;# 
   581  019B                     	;# 
   582  019B                     	;# 
   583  019C                     	;# 
   584  019C                     	;# 
   585  019D                     	;# 
   586  019E                     	;# 
   587  019F                     	;# 
   588  020C                     	;# 
   589  020D                     	;# 
   590  0211                     	;# 
   591  0211                     	;# 
   592  0212                     	;# 
   593  0212                     	;# 
   594  0213                     	;# 
   595  0213                     	;# 
   596  0214                     	;# 
   597  0214                     	;# 
   598  0215                     	;# 
   599  0215                     	;# 
   600  0215                     	;# 
   601  0216                     	;# 
   602  0216                     	;# 
   603  0217                     	;# 
   604  0217                     	;# 
   605  0219                     	;# 
   606  021A                     	;# 
   607  021B                     	;# 
   608  021C                     	;# 
   609  021D                     	;# 
   610  021E                     	;# 
   611  021F                     	;# 
   612  0291                     	;# 
   613  0291                     	;# 
   614  0292                     	;# 
   615  0293                     	;# 
   616  0294                     	;# 
   617  0295                     	;# 
   618  0295                     	;# 
   619  0296                     	;# 
   620  0298                     	;# 
   621  0298                     	;# 
   622  0299                     	;# 
   623  029A                     	;# 
   624  029B                     	;# 
   625  029C                     	;# 
   626  029C                     	;# 
   627  029D                     	;# 
   628  029E                     	;# 
   629  029E                     	;# 
   630  0311                     	;# 
   631  0311                     	;# 
   632  0312                     	;# 
   633  0313                     	;# 
   634  0318                     	;# 
   635  0318                     	;# 
   636  0319                     	;# 
   637  031A                     	;# 
   638  0394                     	;# 
   639  0395                     	;# 
   640  0396                     	;# 
   641  039A                     	;# 
   642  039C                     	;# 
   643  039D                     	;# 
   644  039E                     	;# 
   645  039F                     	;# 
   646  0415                     	;# 
   647  0416                     	;# 
   648  0417                     	;# 
   649  041C                     	;# 
   650  041D                     	;# 
   651  041E                     	;# 
   652  0FE4                     	;# 
   653  0FE5                     	;# 
   654  0FE6                     	;# 
   655  0FE7                     	;# 
   656  0FE8                     	;# 
   657  0FE9                     	;# 
   658  0FEA                     	;# 
   659  0FEB                     	;# 
   660  0FED                     	;# 
   661  0FEE                     	;# 
   662  0FEF                     	;# 
   663                           
   664                           	psect	idataBANK0
   665  02D7                     __pidataBANK0:	
   666                           
   667                           ;initializer for _curr_time
   668  02D7  34FF               	retlw	255
   669  02D8  34FF               	retlw	255
   670                           
   671                           ;initializer for _volt_time
   672  02D9  34FF               	retlw	255
   673  02DA  34FF               	retlw	255
   674                           
   675                           	psect	stringtext
   676  027D                     __pstringtext:	
   677  027D                     _get_shift_byte:	
   678  027D  3481               	retlw	129
   679  027E  34BD               	retlw	189
   680  027F  34C8               	retlw	200
   681  0280  3498               	retlw	152
   682  0281  34B4               	retlw	180
   683  0282  3492               	retlw	146
   684  0283  3482               	retlw	130
   685  0284  34B9               	retlw	185
   686  0285  3480               	retlw	128
   687  0286  3490               	retlw	144
   688  0287                     __end_of_get_shift_byte:	
   689  0016                     _TMR1	set	22
   690  000C                     _PORTA	set	12
   691  000D                     _PORTB	set	13
   692  001B                     _PR2	set	27
   693  0095                     _C1IF	set	149
   694  0096                     _C2IF	set	150
   695  005F                     _GIE	set	95
   696  005E                     _PEIE	set	94
   697  0063                     _RA3	set	99
   698  0064                     _RA4	set	100
   699  0066                     _RA6	set	102
   700  0067                     _RA7	set	103
   701  008D                     _RCIF	set	141
   702  00C4                     _T1CKPS0	set	196
   703  00C5                     _T1CKPS1	set	197
   704  00E0                     _T2CKPS0	set	224
   705  00E1                     _T2CKPS1	set	225
   706  00E3                     _T2OUTPS0	set	227
   707  00E4                     _T2OUTPS1	set	228
   708  00E5                     _T2OUTPS2	set	229
   709  00E6                     _T2OUTPS3	set	230
   710  00C6                     _TMR1CS0	set	198
   711  00C7                     _TMR1CS1	set	199
   712  0088                     _TMR1IF	set	136
   713  00C0                     _TMR1ON	set	192
   714  0089                     _TMR2IF	set	137
   715  00E2                     _TMR2ON	set	226
   716  0099                     _TMR4IF	set	153
   717  009C                     _ADRESH	set	156
   718  008C                     _TRISA	set	140
   719  008D                     _TRISB	set	141
   720  008D                     _TRISBbits	set	141
   721  04F4                     _ADCS0	set	1268
   722  04F5                     _ADCS1	set	1269
   723  04F6                     _ADCS2	set	1270
   724  04F7                     _ADFM	set	1271
   725  04F2                     _ADNREF	set	1266
   726  04E8                     _ADON	set	1256
   727  04F0                     _ADPREF0	set	1264
   728  04F1                     _ADPREF1	set	1265
   729  0495                     _C1IE	set	1173
   730  0496                     _C2IE	set	1174
   731  04EA                     _CHS0	set	1258
   732  04EB                     _CHS1	set	1259
   733  04EC                     _CHS2	set	1260
   734  04ED                     _CHS3	set	1261
   735  04EE                     _CHS4	set	1262
   736  04E9                     _GO_nDONE	set	1257
   737  04CB                     _IRCF0	set	1227
   738  04CC                     _IRCF1	set	1228
   739  04CD                     _IRCF2	set	1229
   740  04CE                     _IRCF3	set	1230
   741  048D                     _RCIE	set	1165
   742  04C8                     _SCS0	set	1224
   743  04C9                     _SCS1	set	1225
   744  04CF                     _SPLLEN	set	1231
   745  0488                     _TMR1IE	set	1160
   746  0489                     _TMR2IE	set	1161
   747  04AF                     _nWPUEN	set	1199
   748  0897                     _C1INTP	set	2199
   749  0890                     _C1NCH0	set	2192
   750  0891                     _C1NCH1	set	2193
   751  088F                     _C1ON	set	2191
   752  0894                     _C1PCH0	set	2196
   753  0895                     _C1PCH1	set	2197
   754  08A7                     _C2INTP	set	2215
   755  08A0                     _C2NCH0	set	2208
   756  08A1                     _C2NCH1	set	2209
   757  089F                     _C2ON	set	2207
   758  08A4                     _C2PCH0	set	2212
   759  08A5                     _C2PCH1	set	2213
   760  08E8                     _CCP1SEL	set	2280
   761  08BA                     _CDAFVR0	set	2234
   762  08BB                     _CDAFVR1	set	2235
   763  08BF                     _FVREN	set	2239
   764  08BE                     _FVRRDY	set	2238
   765  08EF                     _RXDTSEL	set	2287
   766  08F0                     _TXCKSEL	set	2288
   767  018C                     _ANSELA	set	396
   768  018D                     _ANSELB	set	397
   769  0199                     _RCREG	set	409
   770  019B                     _SPBRG	set	411
   771  019A                     _TXREG	set	410
   772  0CFB                     _BRG16	set	3323
   773  0CF2                     _BRGH	set	3314
   774  0CEC                     _CREN	set	3308
   775  0CEF                     _SPEN	set	3311
   776  0CF4                     _SYNC	set	3316
   777  0CF1                     _TRMT	set	3313
   778  0CF5                     _TXEN	set	3317
   779  020D                     _WPUB	set	525
   780  0293                     _CCP1CON	set	659
   781  0291                     _CCPR1L	set	657
   782  14F0                     _C1TSEL0	set	5360
   783  14F1                     _C1TSEL1	set	5361
   784  149C                     _DC1B0	set	5276
   785  149D                     _DC1B1	set	5277
   786  20B8                     _T4CKPS0	set	8376
   787  20B9                     _T4CKPS1	set	8377
   788  20BA                     _TMR4ON	set	8378
   789  0287                     STR_1:	
   790  0287  3464               	retlw	100	;'d'
   791  0288  3469               	retlw	105	;'i'
   792  0289  3466               	retlw	102	;'f'
   793  028A  3466               	retlw	102	;'f'
   794  028B  342F               	retlw	47	;'/'
   795  028C  3475               	retlw	117	;'u'
   796  028D  3473               	retlw	115	;'s'
   797  028E  3400               	retlw	0
   798                           
   799                           ; #config settings
   800  0000                     
   801                           	psect	cinit
   802  0057                     start_initialization:	
   803  0057                     __initialization:	
   804                           
   805                           ; Clear objects allocated to COMMON
   806  0057  01FA               	clrf	__pbssCOMMON& (0+127)
   807  0058  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   808                           
   809                           ; Clear objects allocated to BANK0
   810  0059  3020               	movlw	low __pbssBANK0
   811  005A  0084               	movwf	4
   812  005B  3000               	movlw	high __pbssBANK0
   813  005C  0085               	movwf	5
   814  005D  3024               	movlw	36
   815  005E  3182  22CB  3180   	fcall	clear_ram0
   816                           
   817                           ; Initialize objects allocated to BANK0
   818  0061  3182  22D7  3180   	fcall	__pidataBANK0	;fetch initializer
   819  0064  00CE               	movwf	__pdataBANK0& (0+127)
   820  0065  3182  22D8  3180   	fcall	__pidataBANK0+1	;fetch initializer
   821  0068  00CF               	movwf	(__pdataBANK0+1)& (0+127)
   822  0069  3182  22D9  3180   	fcall	__pidataBANK0+2	;fetch initializer
   823  006C  00D0               	movwf	(__pdataBANK0+2)& (0+127)
   824  006D  3182  22DA         	fcall	__pidataBANK0+3	;fetch initializer
   825  006F  00D1               	movwf	(__pdataBANK0+3)& (0+127)
   826  0070                     end_of_initialization:	
   827                           ;End of C runtime variable initialization code
   828                           
   829  0070                     __end_of__initialization:	
   830  0070  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   831  0071  0020               	movlb	0
   832  0072  3180  2874         	ljmp	_main	;jump to C main() function
   833                           
   834                           	psect	bssCOMMON
   835  007A                     __pbssCOMMON:	
   836  007A                     _buffpos:	
   837  007A                     	ds	1
   838  007B                     _readpos:	
   839  007B                     	ds	1
   840                           
   841                           	psect	bssBANK0
   842  0020                     __pbssBANK0:	
   843  0020                     _receive_buff:	
   844  0020                     	ds	32
   845  0040                     _led_rest:	
   846  0040                     	ds	2
   847  0042                     _flag:	
   848  0042                     	ds	1
   849  0043                     _reading:	
   850  0043                     	ds	1
   851                           
   852                           	psect	dataBANK0
   853  004E                     __pdataBANK0:	
   854  004E                     _curr_time:	
   855  004E                     	ds	2
   856  0050                     _volt_time:	
   857  0050                     	ds	2
   858                           
   859                           	psect	clrtext
   860  02CB                     clear_ram0:	
   861                           ;	Called with FSR0 containing the base address, and
   862                           ;	WREG with the size to clear
   863                           
   864  02CB  0064               	clrwdt	;clear the watchdog before getting into this loop
   865  02CC                     clrloop0:	
   866  02CC  0180               	clrf	0	;clear RAM location pointed to by FSR
   867  02CD  3101               	addfsr 0,1
   868  02CE  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   869  02CF  2ACC               	goto	clrloop0	;have we reached the end yet?
   870  02D0  3400               	retlw	0	;all done for this memory range, return
   871                           
   872                           	psect	cstackCOMMON
   873  0070                     __pcstackCOMMON:	
   874  0070                     ?_initMessaging:	
   875  0070                     ?_initPins:	
   876                           ; 1 bytes @ 0x0
   877                           
   878  0070                     ?_initADC:	
   879                           ; 1 bytes @ 0x0
   880                           
   881  0070                     ?_initTMR1:	
   882                           ; 1 bytes @ 0x0
   883                           
   884  0070                     ?_initFVR:	
   885                           ; 1 bytes @ 0x0
   886                           
   887  0070                     ?_initPWMTMR4:	
   888                           ; 1 bytes @ 0x0
   889                           
   890  0070                     ?_initCOMP1:	
   891                           ; 1 bytes @ 0x0
   892                           
   893  0070                     ?_initCOMP2:	
   894                           ; 1 bytes @ 0x0
   895                           
   896  0070                     ?_initBT:	
   897                           ; 1 bytes @ 0x0
   898                           
   899  0070                     ?_ISR:	
   900                           ; 1 bytes @ 0x0
   901                           
   902  0070                     ??_ISR:	
   903                           ; 1 bytes @ 0x0
   904                           
   905  0070                     ?_main:	
   906                           ; 1 bytes @ 0x0
   907                           
   908  0070                     ?__sendchar_:	
   909                           ; 1 bytes @ 0x0
   910                           
   911                           
   912                           ; 1 bytes @ 0x0
   913  0070                     	ds	2
   914  0072                     ??_initMessaging:	
   915  0072                     ??_initPins:	
   916                           ; 1 bytes @ 0x2
   917                           
   918  0072                     ??_initADC:	
   919                           ; 1 bytes @ 0x2
   920                           
   921  0072                     ??_initTMR1:	
   922                           ; 1 bytes @ 0x2
   923                           
   924  0072                     ??_initFVR:	
   925                           ; 1 bytes @ 0x2
   926                           
   927  0072                     ??_initPWMTMR4:	
   928                           ; 1 bytes @ 0x2
   929                           
   930  0072                     ??_initCOMP1:	
   931                           ; 1 bytes @ 0x2
   932                           
   933  0072                     ??_initCOMP2:	
   934                           ; 1 bytes @ 0x2
   935                           
   936  0072                     ??_initBT:	
   937                           ; 1 bytes @ 0x2
   938                           
   939  0072                     ??__sendchar_:	
   940                           ; 1 bytes @ 0x2
   941                           
   942  0072                     ?_deltaT:	
   943                           ; 1 bytes @ 0x2
   944                           
   945  0072                     ?___lmul:	
   946                           ; 2 bytes @ 0x2
   947                           
   948  0072                     ?___lldiv:	
   949                           ; 4 bytes @ 0x2
   950                           
   951  0072                     __sendchar_@c:	
   952                           ; 4 bytes @ 0x2
   953                           
   954  0072                     deltaT@tm_low:	
   955                           ; 1 bytes @ 0x2
   956                           
   957  0072                     ___lmul@multiplier:	
   958                           ; 2 bytes @ 0x2
   959                           
   960  0072                     ___lldiv@divisor:	
   961                           ; 4 bytes @ 0x2
   962                           
   963                           
   964                           ; 4 bytes @ 0x2
   965  0072                     	ds	1
   966  0073                     ?_sendString:	
   967  0073                     ?_sendInt32:	
   968                           ; 1 bytes @ 0x3
   969                           
   970  0073                     sendString@val:	
   971                           ; 1 bytes @ 0x3
   972                           
   973  0073                     sendInt32@i:	
   974                           ; 2 bytes @ 0x3
   975                           
   976                           
   977                           ; 4 bytes @ 0x3
   978  0073                     	ds	1
   979  0074                     deltaT@tm_high:	
   980                           
   981                           ; 2 bytes @ 0x4
   982  0074                     	ds	1
   983  0075                     ??_sendString:	
   984                           
   985                           ; 1 bytes @ 0x5
   986  0075                     	ds	1
   987  0076                     ??_deltaT:	
   988  0076                     ___lmul@multiplicand:	
   989                           ; 1 bytes @ 0x6
   990                           
   991  0076                     ___lldiv@dividend:	
   992                           ; 4 bytes @ 0x6
   993                           
   994                           
   995                           ; 4 bytes @ 0x6
   996  0076                     	ds	4
   997  007A                     ??_main:	
   998  007A                     ??___lmul:	
   999                           ; 1 bytes @ 0xA
  1000                           
  1001                           
  1002                           	psect	cstackBANK0
  1003  0044                     __pcstackBANK0:	
  1004                           ; 1 bytes @ 0xA
  1005                           
  1006  0044                     ??_sendInt32:	
  1007  0044                     ??___lldiv:	
  1008                           ; 1 bytes @ 0x0
  1009                           
  1010  0044                     deltaT@res:	
  1011                           ; 1 bytes @ 0x0
  1012                           
  1013  0044                     ___lmul@product:	
  1014                           ; 2 bytes @ 0x0
  1015                           
  1016                           
  1017                           ; 4 bytes @ 0x0
  1018  0044                     	ds	1
  1019  0045                     ___lldiv@quotient:	
  1020                           
  1021                           ; 4 bytes @ 0x1
  1022  0045                     	ds	4
  1023  0049                     ___lldiv@counter:	
  1024                           
  1025                           ; 1 bytes @ 0x5
  1026  0049                     	ds	1
  1027  004A                     main@diff:	
  1028                           
  1029                           ; 4 bytes @ 0x6
  1030  004A                     	ds	4
  1031                           
  1032                           	psect	maintext
  1033  0074                     __pmaintext:	
  1034 ;;
  1035 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1036 ;;
  1037 ;; *************** function _main *****************
  1038 ;; Defined at:
  1039 ;;		line 613 in file "powerspy.c"
  1040 ;; Parameters:    Size  Location     Type
  1041 ;;		None
  1042 ;; Auto vars:     Size  Location     Type
  1043 ;;  diff            4    6[BANK0 ] unsigned long 
  1044 ;;  i               1    0        char 
  1045 ;; Return value:  Size  Location     Type
  1046 ;;                  1    wreg      void 
  1047 ;; Registers used:
  1048 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1049 ;; Tracked objects:
  1050 ;;		On entry : B1F/0
  1051 ;;		On exit  : 0/0
  1052 ;;		Unchanged: 0/0
  1053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1054 ;;      Params:         0       0       0       0       0       0
  1055 ;;      Locals:         0       4       0       0       0       0
  1056 ;;      Temps:          0       0       0       0       0       0
  1057 ;;      Totals:         0       4       0       0       0       0
  1058 ;;Total ram usage:        4 bytes
  1059 ;; Hardware stack levels required when called:    3
  1060 ;; This function calls:
  1061 ;;		___lldiv
  1062 ;;		___lmul
  1063 ;;		_deltaT
  1064 ;;		_initADC
  1065 ;;		_initBT
  1066 ;;		_initCOMP1
  1067 ;;		_initCOMP2
  1068 ;;		_initFVR
  1069 ;;		_initMessaging
  1070 ;;		_initPWMTMR4
  1071 ;;		_initPins
  1072 ;;		_initTMR1
  1073 ;;		_sendInt32
  1074 ;;		_sendString
  1075 ;; This function is called by:
  1076 ;;		Startup code after reset
  1077 ;; This function uses a non-reentrant model
  1078 ;;
  1079                           
  1080                           
  1081                           ;psect for function _main
  1082  0074                     _main:	
  1083                           
  1084                           ;powerspy.c: 615: int8_t i;
  1085                           ;powerspy.c: 616: uint32_t diff;
  1086                           ;powerspy.c: 618: PEIE = 0;
  1087                           
  1088                           ;incstack = 0
  1089                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1090  0074  130B               	bcf	11,6	;volatile
  1091                           
  1092                           ;powerspy.c: 619: GIE = 0;
  1093  0075  138B               	bcf	11,7	;volatile
  1094                           
  1095                           ;powerspy.c: 621: initPins();
  1096  0076  3182  2249  3180   	fcall	_initPins
  1097                           
  1098                           ;powerspy.c: 622: initADC();
  1099  0079  3182  22B4  3180   	fcall	_initADC
  1100                           
  1101                           ;powerspy.c: 623: initTMR1();
  1102  007C  3182  22A9  3180   	fcall	_initTMR1
  1103                           
  1104                           ;powerspy.c: 624: initFVR();
  1105  007F  3182  22C4  3180   	fcall	_initFVR
  1106                           
  1107                           ;powerspy.c: 625: initPWMTMR4();
  1108  0082  3182  222A  3180   	fcall	_initPWMTMR4
  1109                           
  1110                           ;powerspy.c: 626: initCOMP1();
  1111  0085  3182  229C  3180   	fcall	_initCOMP1
  1112                           
  1113                           ;powerspy.c: 627: initCOMP2();
  1114  0088  3182  228F  3180   	fcall	_initCOMP2
  1115                           
  1116                           ;powerspy.c: 628: initBT();
  1117  008B  3182  2266  3180   	fcall	_initBT
  1118                           
  1119                           ;powerspy.c: 629: initMessaging();
  1120  008E  3182  22D1  3180   	fcall	_initMessaging
  1121                           
  1122                           ;powerspy.c: 631: PEIE = 1;
  1123  0091  170B               	bsf	11,6	;volatile
  1124                           
  1125                           ;powerspy.c: 632: GIE = 1;
  1126  0092  178B               	bsf	11,7	;volatile
  1127  0093                     l2332:	
  1128                           ;powerspy.c: 634: while (1) {
  1129                           
  1130                           
  1131                           ;powerspy.c: 636: if ((flag & 0x02) && (flag & 0x01)) {
  1132  0093  0020               	movlb	0	; select bank0
  1133  0094  18C2               	btfsc	_flag,1
  1134  0095  1C42               	btfss	_flag,0
  1135  0096  2893               	goto	l2332
  1136                           
  1137                           ;powerspy.c: 637: if (flag & 0x04) {
  1138  0097  1D42               	btfss	_flag,2
  1139  0098  28A1               	goto	l344
  1140                           
  1141                           ;powerspy.c: 638: diff = deltaT(volt_time, curr_time);
  1142  0099  0851               	movf	_volt_time+1,w
  1143  009A  00F3               	movwf	deltaT@tm_low+1
  1144  009B  0850               	movf	_volt_time,w
  1145  009C  00F2               	movwf	deltaT@tm_low
  1146  009D  084F               	movf	_curr_time+1,w
  1147  009E  00F5               	movwf	deltaT@tm_high+1
  1148  009F  084E               	movf	_curr_time,w
  1149  00A0  28AA               	goto	L2
  1150  00A1                     l344:	
  1151                           ;powerspy.c: 639: } else if (flag & 0x08) {
  1152                           
  1153  00A1  1DC2               	btfss	_flag,3
  1154  00A2  28B5               	goto	l2342
  1155                           
  1156                           ;powerspy.c: 640: diff = deltaT(curr_time, volt_time);
  1157  00A3  084F               	movf	_curr_time+1,w
  1158  00A4  00F3               	movwf	deltaT@tm_low+1
  1159  00A5  084E               	movf	_curr_time,w
  1160  00A6  00F2               	movwf	deltaT@tm_low
  1161  00A7  0851               	movf	_volt_time+1,w
  1162  00A8  00F5               	movwf	deltaT@tm_high+1
  1163  00A9  0850               	movf	_volt_time,w
  1164  00AA                     L2:	
  1165  00AA  00F4               	movwf	deltaT@tm_high
  1166  00AB  3181  21A4  3180   	fcall	_deltaT
  1167  00AE  0872               	movf	?_deltaT,w
  1168  00AF  0020               	movlb	0	; select bank0
  1169  00B0  00CA               	movwf	main@diff
  1170  00B1  0873               	movf	?_deltaT+1,w
  1171  00B2  00CB               	movwf	main@diff+1
  1172  00B3  01CC               	clrf	main@diff+2
  1173  00B4  01CD               	clrf	main@diff+3
  1174  00B5                     l2342:	
  1175                           
  1176                           ;powerspy.c: 641: }
  1177                           ;powerspy.c: 642: flag = 0;
  1178  00B5  01C2               	clrf	_flag
  1179                           
  1180                           ;powerspy.c: 644: diff *= 125;
  1181  00B6  3000               	movlw	0
  1182  00B7  00F5               	movwf	___lmul@multiplier+3
  1183  00B8  3000               	movlw	0
  1184  00B9  00F4               	movwf	___lmul@multiplier+2
  1185  00BA  3000               	movlw	0
  1186  00BB  00F3               	movwf	___lmul@multiplier+1
  1187  00BC  307D               	movlw	125
  1188  00BD  00F2               	movwf	___lmul@multiplier
  1189  00BE  084D               	movf	main@diff+3,w
  1190  00BF  00F9               	movwf	___lmul@multiplicand+3
  1191  00C0  084C               	movf	main@diff+2,w
  1192  00C1  00F8               	movwf	___lmul@multiplicand+2
  1193  00C2  084B               	movf	main@diff+1,w
  1194  00C3  00F7               	movwf	___lmul@multiplicand+1
  1195  00C4  084A               	movf	main@diff,w
  1196  00C5  00F6               	movwf	___lmul@multiplicand
  1197  00C6  3181  21D8  3180   	fcall	___lmul
  1198  00C9  0875               	movf	?___lmul+3,w
  1199  00CA  0020               	movlb	0	; select bank0
  1200  00CB  00CD               	movwf	main@diff+3
  1201  00CC  0874               	movf	?___lmul+2,w
  1202  00CD  00CC               	movwf	main@diff+2
  1203  00CE  0873               	movf	?___lmul+1,w
  1204  00CF  00CB               	movwf	main@diff+1
  1205  00D0  0872               	movf	?___lmul,w
  1206  00D1  00CA               	movwf	main@diff
  1207                           
  1208                           ;powerspy.c: 645: diff /= 1000;
  1209  00D2  3000               	movlw	0
  1210  00D3  00F5               	movwf	___lldiv@divisor+3
  1211  00D4  3000               	movlw	0
  1212  00D5  00F4               	movwf	___lldiv@divisor+2
  1213  00D6  3003               	movlw	3
  1214  00D7  00F3               	movwf	___lldiv@divisor+1
  1215  00D8  30E8               	movlw	232
  1216  00D9  00F2               	movwf	___lldiv@divisor
  1217  00DA  084D               	movf	main@diff+3,w
  1218  00DB  00F9               	movwf	___lldiv@dividend+3
  1219  00DC  084C               	movf	main@diff+2,w
  1220  00DD  00F8               	movwf	___lldiv@dividend+2
  1221  00DE  084B               	movf	main@diff+1,w
  1222  00DF  00F7               	movwf	___lldiv@dividend+1
  1223  00E0  084A               	movf	main@diff,w
  1224  00E1  00F6               	movwf	___lldiv@dividend
  1225  00E2  3181  2102  3180   	fcall	___lldiv
  1226  00E5  0875               	movf	?___lldiv+3,w
  1227  00E6  0020               	movlb	0	; select bank0
  1228  00E7  00CD               	movwf	main@diff+3
  1229  00E8  0874               	movf	?___lldiv+2,w
  1230  00E9  00CC               	movwf	main@diff+2
  1231  00EA  0873               	movf	?___lldiv+1,w
  1232  00EB  00CB               	movwf	main@diff+1
  1233  00EC  0872               	movf	?___lldiv,w
  1234  00ED  00CA               	movwf	main@diff
  1235                           
  1236                           ;powerspy.c: 646: sendString("diff/us");
  1237  00EE  3087               	movlw	low (STR_1| (0+32768))
  1238  00EF  00F3               	movwf	sendString@val
  1239  00F0  3082               	movlw	high (STR_1| (0+32768))
  1240  00F1  00F4               	movwf	sendString@val+1
  1241  00F2  3182  220A  3180   	fcall	_sendString
  1242                           
  1243                           ;powerspy.c: 647: sendInt32(diff);
  1244  00F5  0020               	movlb	0	; select bank0
  1245  00F6  084D               	movf	main@diff+3,w
  1246  00F7  00F6               	movwf	sendInt32@i+3
  1247  00F8  084C               	movf	main@diff+2,w
  1248  00F9  00F5               	movwf	sendInt32@i+2
  1249  00FA  084B               	movf	main@diff+1,w
  1250  00FB  00F4               	movwf	sendInt32@i+1
  1251  00FC  084A               	movf	main@diff,w
  1252  00FD  00F3               	movwf	sendInt32@i
  1253  00FE  3181  2155  3180   	fcall	_sendInt32
  1254  0101  2893               	goto	l2332
  1255  0102                     __end_of_main:	
  1256                           
  1257                           	psect	text1
  1258  020A                     __ptext1:	
  1259 ;; *************** function _sendString *****************
  1260 ;; Defined at:
  1261 ;;		line 212 in file "message.c"
  1262 ;; Parameters:    Size  Location     Type
  1263 ;;  val             2    3[COMMON] PTR unsigned char 
  1264 ;;		 -> STR_1(8), 
  1265 ;; Auto vars:     Size  Location     Type
  1266 ;;		None
  1267 ;; Return value:  Size  Location     Type
  1268 ;;                  1    wreg      void 
  1269 ;; Registers used:
  1270 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1271 ;; Tracked objects:
  1272 ;;		On entry : 0/0
  1273 ;;		On exit  : 0/0
  1274 ;;		Unchanged: 0/0
  1275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1276 ;;      Params:         2       0       0       0       0       0
  1277 ;;      Locals:         0       0       0       0       0       0
  1278 ;;      Temps:          1       0       0       0       0       0
  1279 ;;      Totals:         3       0       0       0       0       0
  1280 ;;Total ram usage:        3 bytes
  1281 ;; Hardware stack levels used:    1
  1282 ;; Hardware stack levels required when called:    2
  1283 ;; This function calls:
  1284 ;;		__sendchar_
  1285 ;; This function is called by:
  1286 ;;		_main
  1287 ;; This function uses a non-reentrant model
  1288 ;;
  1289                           
  1290                           
  1291                           ;psect for function _sendString
  1292  020A                     _sendString:	
  1293                           
  1294                           ;message.c: 214: _sendchar_(2);
  1295                           
  1296                           ;incstack = 0
  1297                           ; Regs used in _sendString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1298  020A  3002               	movlw	2
  1299  020B  3182  22BD  3182   	fcall	__sendchar_
  1300                           
  1301                           ;message.c: 215: _sendchar_('1');
  1302  020E  3031               	movlw	49
  1303  020F  3182  22BD  3182   	fcall	__sendchar_
  1304  0212                     l2032:	
  1305                           ;message.c: 216: while (*val) {
  1306                           
  1307  0212  0873               	movf	sendString@val,w
  1308  0213  0084               	movwf	4
  1309  0214  0874               	movf	sendString@val+1,w
  1310  0215  0085               	movwf	5
  1311  0216  0012               	moviw fsr0++
  1312  0217  1903               	btfsc	3,2
  1313  0218  2A26               	goto	l2034
  1314                           
  1315                           ;message.c: 217: _sendchar_(*val);
  1316  0219  0873               	movf	sendString@val,w
  1317  021A  0084               	movwf	4
  1318  021B  0874               	movf	sendString@val+1,w
  1319  021C  0085               	movwf	5
  1320  021D  0800               	movf	0,w	;code access
  1321  021E  3182  22BD  3182   	fcall	__sendchar_
  1322                           
  1323                           ;message.c: 218: val++;
  1324  0221  3001               	movlw	1
  1325  0222  07F3               	addwf	sendString@val,f
  1326  0223  3000               	movlw	0
  1327  0224  3DF4               	addwfc	sendString@val+1,f
  1328  0225  2A12               	goto	l2032
  1329  0226                     l2034:	
  1330                           
  1331                           ;message.c: 219: }
  1332                           ;message.c: 220: _sendchar_(3);
  1333  0226  3003               	movlw	3
  1334  0227  3182  22BD         	fcall	__sendchar_
  1335  0229  0008               	return
  1336  022A                     __end_of_sendString:	
  1337                           
  1338                           	psect	text2
  1339  0155                     __ptext2:	
  1340 ;; *************** function _sendInt32 *****************
  1341 ;; Defined at:
  1342 ;;		line 190 in file "message.c"
  1343 ;; Parameters:    Size  Location     Type
  1344 ;;  i               4    3[COMMON] long 
  1345 ;; Auto vars:     Size  Location     Type
  1346 ;;		None
  1347 ;; Return value:  Size  Location     Type
  1348 ;;                  1    wreg      void 
  1349 ;; Registers used:
  1350 ;;		wreg, status,2, status,0, pclath, cstack
  1351 ;; Tracked objects:
  1352 ;;		On entry : 0/0
  1353 ;;		On exit  : 0/0
  1354 ;;		Unchanged: 0/0
  1355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1356 ;;      Params:         4       0       0       0       0       0
  1357 ;;      Locals:         0       0       0       0       0       0
  1358 ;;      Temps:          0       5       0       0       0       0
  1359 ;;      Totals:         4       5       0       0       0       0
  1360 ;;Total ram usage:        9 bytes
  1361 ;; Hardware stack levels used:    1
  1362 ;; Hardware stack levels required when called:    2
  1363 ;; This function calls:
  1364 ;;		__sendchar_
  1365 ;; This function is called by:
  1366 ;;		_main
  1367 ;; This function uses a non-reentrant model
  1368 ;;
  1369                           
  1370                           
  1371                           ;psect for function _sendInt32
  1372  0155                     _sendInt32:	
  1373                           
  1374                           ;message.c: 192: _sendchar_(2);
  1375                           
  1376                           ;incstack = 0
  1377                           ; Regs used in _sendInt32: [wreg+status,2+status,0+pclath+cstack]
  1378  0155  3002               	movlw	2
  1379  0156  3182  22BD  3181   	fcall	__sendchar_
  1380                           
  1381                           ;message.c: 193: _sendchar_('5');
  1382  0159  3035               	movlw	53
  1383  015A  3182  22BD  3181   	fcall	__sendchar_
  1384                           
  1385                           ;message.c: 194: _sendchar_((char) (i >> 24 & 0xff));
  1386  015D  0873               	movf	sendInt32@i,w
  1387  015E  0020               	movlb	0	; select bank0
  1388  015F  00C4               	movwf	??_sendInt32
  1389  0160  0874               	movf	sendInt32@i+1,w
  1390  0161  00C5               	movwf	??_sendInt32+1
  1391  0162  0875               	movf	sendInt32@i+2,w
  1392  0163  00C6               	movwf	??_sendInt32+2
  1393  0164  0876               	movf	sendInt32@i+3,w
  1394  0165  00C7               	movwf	??_sendInt32+3
  1395  0166  3018               	movlw	24
  1396  0167  00C8               	movwf	??_sendInt32+4
  1397  0168                     u1905:	
  1398  0168  37C7               	asrf	??_sendInt32+3,f
  1399  0169  0CC6               	rrf	??_sendInt32+2,f
  1400  016A  0CC5               	rrf	??_sendInt32+1,f
  1401  016B  0CC4               	rrf	??_sendInt32,f
  1402  016C  0BC8               	decfsz	??_sendInt32+4,f
  1403  016D  2968               	goto	u1905
  1404  016E  0844               	movf	??_sendInt32,w
  1405  016F  3182  22BD  3181   	fcall	__sendchar_
  1406                           
  1407                           ;message.c: 195: _sendchar_((char) (i >> 16 & 0xff));
  1408  0172  0873               	movf	sendInt32@i,w
  1409  0173  0020               	movlb	0	; select bank0
  1410  0174  00C4               	movwf	??_sendInt32
  1411  0175  0874               	movf	sendInt32@i+1,w
  1412  0176  00C5               	movwf	??_sendInt32+1
  1413  0177  0875               	movf	sendInt32@i+2,w
  1414  0178  00C6               	movwf	??_sendInt32+2
  1415  0179  0876               	movf	sendInt32@i+3,w
  1416  017A  00C7               	movwf	??_sendInt32+3
  1417  017B  3010               	movlw	16
  1418  017C  00C8               	movwf	??_sendInt32+4
  1419  017D                     u1915:	
  1420  017D  37C7               	asrf	??_sendInt32+3,f
  1421  017E  0CC6               	rrf	??_sendInt32+2,f
  1422  017F  0CC5               	rrf	??_sendInt32+1,f
  1423  0180  0CC4               	rrf	??_sendInt32,f
  1424  0181  0BC8               	decfsz	??_sendInt32+4,f
  1425  0182  297D               	goto	u1915
  1426  0183  0844               	movf	??_sendInt32,w
  1427  0184  3182  22BD  3181   	fcall	__sendchar_
  1428                           
  1429                           ;message.c: 196: _sendchar_((char) (i >> 8 & 0xff));
  1430  0187  0873               	movf	sendInt32@i,w
  1431  0188  0020               	movlb	0	; select bank0
  1432  0189  00C4               	movwf	??_sendInt32
  1433  018A  0874               	movf	sendInt32@i+1,w
  1434  018B  00C5               	movwf	??_sendInt32+1
  1435  018C  0875               	movf	sendInt32@i+2,w
  1436  018D  00C6               	movwf	??_sendInt32+2
  1437  018E  0876               	movf	sendInt32@i+3,w
  1438  018F  00C7               	movwf	??_sendInt32+3
  1439  0190  3008               	movlw	8
  1440  0191  00C8               	movwf	??_sendInt32+4
  1441  0192                     u1925:	
  1442  0192  37C7               	asrf	??_sendInt32+3,f
  1443  0193  0CC6               	rrf	??_sendInt32+2,f
  1444  0194  0CC5               	rrf	??_sendInt32+1,f
  1445  0195  0CC4               	rrf	??_sendInt32,f
  1446  0196  0BC8               	decfsz	??_sendInt32+4,f
  1447  0197  2992               	goto	u1925
  1448  0198  0844               	movf	??_sendInt32,w
  1449  0199  3182  22BD  3181   	fcall	__sendchar_
  1450                           
  1451                           ;message.c: 197: _sendchar_((char) (i & 0xff));
  1452  019C  0873               	movf	sendInt32@i,w
  1453  019D  3182  22BD  3181   	fcall	__sendchar_
  1454                           
  1455                           ;message.c: 198: _sendchar_(3);
  1456  01A0  3003               	movlw	3
  1457  01A1  3182  22BD         	fcall	__sendchar_
  1458  01A3  0008               	return
  1459  01A4                     __end_of_sendInt32:	
  1460                           
  1461                           	psect	text3
  1462  02BD                     __ptext3:	
  1463 ;; *************** function __sendchar_ *****************
  1464 ;; Defined at:
  1465 ;;		line 153 in file "message.c"
  1466 ;; Parameters:    Size  Location     Type
  1467 ;;  c               1    wreg     unsigned char 
  1468 ;; Auto vars:     Size  Location     Type
  1469 ;;  c               1    2[COMMON] unsigned char 
  1470 ;; Return value:  Size  Location     Type
  1471 ;;                  1    wreg      void 
  1472 ;; Registers used:
  1473 ;;		wreg
  1474 ;; Tracked objects:
  1475 ;;		On entry : 0/0
  1476 ;;		On exit  : 0/0
  1477 ;;		Unchanged: 0/0
  1478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1479 ;;      Params:         0       0       0       0       0       0
  1480 ;;      Locals:         1       0       0       0       0       0
  1481 ;;      Temps:          0       0       0       0       0       0
  1482 ;;      Totals:         1       0       0       0       0       0
  1483 ;;Total ram usage:        1 bytes
  1484 ;; Hardware stack levels used:    1
  1485 ;; Hardware stack levels required when called:    1
  1486 ;; This function calls:
  1487 ;;		Nothing
  1488 ;; This function is called by:
  1489 ;;		_sendInt32
  1490 ;;		_sendString
  1491 ;;		_sendInt8
  1492 ;;		_sendInt16
  1493 ;;		_sendInt24
  1494 ;;		_sendFloat
  1495 ;; This function uses a non-reentrant model
  1496 ;;
  1497                           
  1498                           
  1499                           ;psect for function __sendchar_
  1500  02BD                     __sendchar_:	
  1501                           
  1502                           ;incstack = 0
  1503                           ; Regs used in __sendchar_: [wreg]
  1504                           ;__sendchar_@c stored from wreg
  1505  02BD  00F2               	movwf	__sendchar_@c
  1506                           
  1507                           ;message.c: 155: TXREG = c;
  1508  02BE  0872               	movf	__sendchar_@c,w
  1509  02BF  0023               	movlb	3	; select bank3
  1510  02C0  009A               	movwf	26	;volatile
  1511  02C1                     l515:	
  1512                           ;message.c: 156: while (!TRMT);
  1513                           
  1514  02C1  189E               	btfsc	30,1	;volatile
  1515  02C2  0008               	return
  1516  02C3  2AC1               	goto	l515
  1517  02C4                     __end_of__sendchar_:	
  1518                           
  1519                           	psect	text4
  1520  02A9                     __ptext4:	
  1521 ;; *************** function _initTMR1 *****************
  1522 ;; Defined at:
  1523 ;;		line 140 in file "powerspy.c"
  1524 ;; Parameters:    Size  Location     Type
  1525 ;;		None
  1526 ;; Auto vars:     Size  Location     Type
  1527 ;;		None
  1528 ;; Return value:  Size  Location     Type
  1529 ;;                  1    wreg      void 
  1530 ;; Registers used:
  1531 ;;		None
  1532 ;; Tracked objects:
  1533 ;;		On entry : 0/0
  1534 ;;		On exit  : 0/0
  1535 ;;		Unchanged: 0/0
  1536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1537 ;;      Params:         0       0       0       0       0       0
  1538 ;;      Locals:         0       0       0       0       0       0
  1539 ;;      Temps:          0       0       0       0       0       0
  1540 ;;      Totals:         0       0       0       0       0       0
  1541 ;;Total ram usage:        0 bytes
  1542 ;; Hardware stack levels used:    1
  1543 ;; Hardware stack levels required when called:    1
  1544 ;; This function calls:
  1545 ;;		Nothing
  1546 ;; This function is called by:
  1547 ;;		_main
  1548 ;; This function uses a non-reentrant model
  1549 ;;
  1550                           
  1551                           
  1552                           ;psect for function _initTMR1
  1553  02A9                     _initTMR1:	
  1554                           
  1555                           ;powerspy.c: 153: TMR1CS0 = 0;
  1556                           
  1557                           ;incstack = 0
  1558                           ; Regs used in _initTMR1: []
  1559  02A9  0020               	movlb	0	; select bank0
  1560  02AA  1318               	bcf	24,6	;volatile
  1561                           
  1562                           ;powerspy.c: 154: TMR1CS1 = 0;
  1563  02AB  1398               	bcf	24,7	;volatile
  1564                           
  1565                           ;powerspy.c: 158: T1CKPS0 = 1;
  1566  02AC  1618               	bsf	24,4	;volatile
  1567                           
  1568                           ;powerspy.c: 159: T1CKPS1 = 0;
  1569  02AD  1298               	bcf	24,5	;volatile
  1570                           
  1571                           ;powerspy.c: 161: TMR1IE = 1;
  1572  02AE  0021               	movlb	1	; select bank1
  1573  02AF  1411               	bsf	17,0	;volatile
  1574                           
  1575                           ;powerspy.c: 162: TMR1IF = 0;
  1576  02B0  0020               	movlb	0	; select bank0
  1577  02B1  1011               	bcf	17,0	;volatile
  1578                           
  1579                           ;powerspy.c: 164: TMR1ON = 1;
  1580  02B2  1418               	bsf	24,0	;volatile
  1581  02B3  0008               	return
  1582  02B4                     __end_of_initTMR1:	
  1583                           
  1584                           	psect	text5
  1585  0249                     __ptext5:	
  1586 ;; *************** function _initPins *****************
  1587 ;; Defined at:
  1588 ;;		line 43 in file "powerspy.c"
  1589 ;; Parameters:    Size  Location     Type
  1590 ;;		None
  1591 ;; Auto vars:     Size  Location     Type
  1592 ;;		None
  1593 ;; Return value:  Size  Location     Type
  1594 ;;                  1    wreg      void 
  1595 ;; Registers used:
  1596 ;;		wreg, status,2
  1597 ;; Tracked objects:
  1598 ;;		On entry : 0/0
  1599 ;;		On exit  : 0/0
  1600 ;;		Unchanged: 0/0
  1601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1602 ;;      Params:         0       0       0       0       0       0
  1603 ;;      Locals:         0       0       0       0       0       0
  1604 ;;      Temps:          0       0       0       0       0       0
  1605 ;;      Totals:         0       0       0       0       0       0
  1606 ;;Total ram usage:        0 bytes
  1607 ;; Hardware stack levels used:    1
  1608 ;; Hardware stack levels required when called:    1
  1609 ;; This function calls:
  1610 ;;		Nothing
  1611 ;; This function is called by:
  1612 ;;		_main
  1613 ;; This function uses a non-reentrant model
  1614 ;;
  1615                           
  1616                           
  1617                           ;psect for function _initPins
  1618  0249                     _initPins:	
  1619                           
  1620                           ;powerspy.c: 45: PORTA = 0b00000000;
  1621                           
  1622                           ;incstack = 0
  1623                           ; Regs used in _initPins: [wreg+status,2]
  1624  0249  0020               	movlb	0	; select bank0
  1625  024A  018C               	clrf	12	;volatile
  1626                           
  1627                           ;powerspy.c: 46: ANSELA = 0b00000111;
  1628  024B  3007               	movlw	7
  1629  024C  0023               	movlb	3	; select bank3
  1630  024D  008C               	movwf	12	;volatile
  1631                           
  1632                           ;powerspy.c: 47: TRISA = 0b00000111;
  1633  024E  3007               	movlw	7
  1634  024F  0021               	movlb	1	; select bank1
  1635  0250  008C               	movwf	12	;volatile
  1636                           
  1637                           ;powerspy.c: 49: PORTB = 0b00000000;
  1638  0251  0020               	movlb	0	; select bank0
  1639  0252  018D               	clrf	13	;volatile
  1640                           
  1641                           ;powerspy.c: 50: ANSELB = 0b00110000;
  1642  0253  3030               	movlw	48
  1643  0254  0023               	movlb	3	; select bank3
  1644  0255  008D               	movwf	13	;volatile
  1645                           
  1646                           ;powerspy.c: 51: TRISB = 0b00111010;
  1647  0256  303A               	movlw	58
  1648  0257  0021               	movlb	1	; select bank1
  1649  0258  008D               	movwf	13	;volatile
  1650                           
  1651                           ;powerspy.c: 53: nWPUEN = 0;
  1652  0259  1395               	bcf	21,7	;volatile
  1653                           
  1654                           ;powerspy.c: 54: WPUB = 0b00001000;
  1655  025A  3008               	movlw	8
  1656  025B  0024               	movlb	4	; select bank4
  1657  025C  008D               	movwf	13	;volatile
  1658                           
  1659                           ;powerspy.c: 58: SCS0 = 0;
  1660  025D  0021               	movlb	1	; select bank1
  1661  025E  1019               	bcf	25,0	;volatile
  1662                           
  1663                           ;powerspy.c: 59: SCS1 = 0;
  1664  025F  1099               	bcf	25,1	;volatile
  1665                           
  1666                           ;powerspy.c: 61: IRCF0 = 0;
  1667  0260  1199               	bcf	25,3	;volatile
  1668                           
  1669                           ;powerspy.c: 62: IRCF1 = 1;
  1670  0261  1619               	bsf	25,4	;volatile
  1671                           
  1672                           ;powerspy.c: 63: IRCF2 = 1;
  1673  0262  1699               	bsf	25,5	;volatile
  1674                           
  1675                           ;powerspy.c: 64: IRCF3 = 1;
  1676  0263  1719               	bsf	25,6	;volatile
  1677                           
  1678                           ;powerspy.c: 66: SPLLEN = 1;
  1679  0264  1799               	bsf	25,7	;volatile
  1680  0265  0008               	return
  1681  0266                     __end_of_initPins:	
  1682                           
  1683                           	psect	text6
  1684  022A                     __ptext6:	
  1685 ;; *************** function _initPWMTMR4 *****************
  1686 ;; Defined at:
  1687 ;;		line 192 in file "powerspy.c"
  1688 ;; Parameters:    Size  Location     Type
  1689 ;;		None
  1690 ;; Auto vars:     Size  Location     Type
  1691 ;;		None
  1692 ;; Return value:  Size  Location     Type
  1693 ;;                  1    wreg      void 
  1694 ;; Registers used:
  1695 ;;		wreg, status,2, status,0
  1696 ;; Tracked objects:
  1697 ;;		On entry : 0/0
  1698 ;;		On exit  : 0/0
  1699 ;;		Unchanged: 0/0
  1700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1701 ;;      Params:         0       0       0       0       0       0
  1702 ;;      Locals:         0       0       0       0       0       0
  1703 ;;      Temps:          1       0       0       0       0       0
  1704 ;;      Totals:         1       0       0       0       0       0
  1705 ;;Total ram usage:        1 bytes
  1706 ;; Hardware stack levels used:    1
  1707 ;; Hardware stack levels required when called:    1
  1708 ;; This function calls:
  1709 ;;		Nothing
  1710 ;; This function is called by:
  1711 ;;		_main
  1712 ;; This function uses a non-reentrant model
  1713 ;;
  1714                           
  1715                           
  1716                           ;psect for function _initPWMTMR4
  1717  022A                     _initPWMTMR4:	
  1718                           
  1719                           ;powerspy.c: 196: CCP1SEL = 1;
  1720                           
  1721                           ;incstack = 0
  1722                           ; Regs used in _initPWMTMR4: [wreg+status,2+status,0]
  1723  022A  0022               	movlb	2	; select bank2
  1724  022B  141D               	bsf	29,0	;volatile
  1725                           
  1726                           ;powerspy.c: 199: TRISBbits.TRISB0 = 1;
  1727  022C  0021               	movlb	1	; select bank1
  1728  022D  140D               	bsf	13,0	;volatile
  1729                           
  1730                           ;powerspy.c: 202: PR2 = 0xff;
  1731  022E  30FF               	movlw	255
  1732  022F  0020               	movlb	0	; select bank0
  1733  0230  009B               	movwf	27	;volatile
  1734                           
  1735                           ;powerspy.c: 203: CCP1CON = 0b00110000;
  1736  0231  3030               	movlw	48
  1737  0232  0025               	movlb	5	; select bank5
  1738  0233  0093               	movwf	19	;volatile
  1739                           
  1740                           ;powerspy.c: 206: CCP1CON |= 0b00001100;
  1741  0234  300C               	movlw	12
  1742  0235  00F2               	movwf	??_initPWMTMR4
  1743  0236  0872               	movf	??_initPWMTMR4,w
  1744  0237  0493               	iorwf	19,f	;volatile
  1745                           
  1746                           ;powerspy.c: 212: CCPR1L = 0x8E;
  1747  0238  308E               	movlw	142
  1748  0239  0091               	movwf	17	;volatile
  1749                           
  1750                           ;powerspy.c: 215: DC1B0 = 0;
  1751  023A  1213               	bcf	19,4	;volatile
  1752                           
  1753                           ;powerspy.c: 216: DC1B1 = 0;
  1754  023B  1293               	bcf	19,5	;volatile
  1755                           
  1756                           ;powerspy.c: 219: C1TSEL0 = 1;
  1757  023C  141E               	bsf	30,0	;volatile
  1758                           
  1759                           ;powerspy.c: 220: C1TSEL1 = 0;
  1760  023D  109E               	bcf	30,1	;volatile
  1761                           
  1762                           ;powerspy.c: 221: TMR4IF = 0;
  1763  023E  0020               	movlb	0	; select bank0
  1764  023F  1093               	bcf	19,1	;volatile
  1765                           
  1766                           ;powerspy.c: 224: T4CKPS0 = 0;
  1767  0240  0028               	movlb	8	; select bank8
  1768  0241  1017               	bcf	23,0	;volatile
  1769                           
  1770                           ;powerspy.c: 225: T4CKPS1 = 0;
  1771  0242  1097               	bcf	23,1	;volatile
  1772                           
  1773                           ;powerspy.c: 227: TMR4ON = 1;
  1774  0243  1517               	bsf	23,2	;volatile
  1775                           
  1776                           ;powerspy.c: 231: TMR4IF = 0;
  1777  0244  0020               	movlb	0	; select bank0
  1778  0245  1093               	bcf	19,1	;volatile
  1779                           
  1780                           ;powerspy.c: 233: TRISBbits.TRISB0 = 0;
  1781  0246  0021               	movlb	1	; select bank1
  1782  0247  100D               	bcf	13,0	;volatile
  1783  0248  0008               	return
  1784  0249                     __end_of_initPWMTMR4:	
  1785                           
  1786                           	psect	text7
  1787  02D1                     __ptext7:	
  1788 ;; *************** function _initMessaging *****************
  1789 ;; Defined at:
  1790 ;;		line 16 in file "message.c"
  1791 ;; Parameters:    Size  Location     Type
  1792 ;;		None
  1793 ;; Auto vars:     Size  Location     Type
  1794 ;;		None
  1795 ;; Return value:  Size  Location     Type
  1796 ;;                  1    wreg      void 
  1797 ;; Registers used:
  1798 ;;		status,2
  1799 ;; Tracked objects:
  1800 ;;		On entry : 0/0
  1801 ;;		On exit  : 0/0
  1802 ;;		Unchanged: 0/0
  1803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1804 ;;      Params:         0       0       0       0       0       0
  1805 ;;      Locals:         0       0       0       0       0       0
  1806 ;;      Temps:          0       0       0       0       0       0
  1807 ;;      Totals:         0       0       0       0       0       0
  1808 ;;Total ram usage:        0 bytes
  1809 ;; Hardware stack levels used:    1
  1810 ;; Hardware stack levels required when called:    1
  1811 ;; This function calls:
  1812 ;;		Nothing
  1813 ;; This function is called by:
  1814 ;;		_main
  1815 ;; This function uses a non-reentrant model
  1816 ;;
  1817                           
  1818                           
  1819                           ;psect for function _initMessaging
  1820  02D1                     _initMessaging:	
  1821                           
  1822                           ;message.c: 18: buffpos = -1;
  1823                           
  1824                           ;incstack = 0
  1825                           ; Regs used in _initMessaging: [status,2]
  1826  02D1  01FA               	clrf	_buffpos
  1827  02D2  03FA               	decf	_buffpos,f
  1828                           
  1829                           ;message.c: 19: readpos = 0;
  1830  02D3  01FB               	clrf	_readpos
  1831                           
  1832                           ;message.c: 20: reading = 0;
  1833  02D4  0020               	movlb	0	; select bank0
  1834  02D5  01C3               	clrf	_reading
  1835  02D6  0008               	return
  1836  02D7                     __end_of_initMessaging:	
  1837                           
  1838                           	psect	text8
  1839  02C4                     __ptext8:	
  1840 ;; *************** function _initFVR *****************
  1841 ;; Defined at:
  1842 ;;		line 170 in file "powerspy.c"
  1843 ;; Parameters:    Size  Location     Type
  1844 ;;		None
  1845 ;; Auto vars:     Size  Location     Type
  1846 ;;		None
  1847 ;; Return value:  Size  Location     Type
  1848 ;;                  1    wreg      void 
  1849 ;; Registers used:
  1850 ;;		None
  1851 ;; Tracked objects:
  1852 ;;		On entry : 0/0
  1853 ;;		On exit  : 0/0
  1854 ;;		Unchanged: 0/0
  1855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1856 ;;      Params:         0       0       0       0       0       0
  1857 ;;      Locals:         0       0       0       0       0       0
  1858 ;;      Temps:          0       0       0       0       0       0
  1859 ;;      Totals:         0       0       0       0       0       0
  1860 ;;Total ram usage:        0 bytes
  1861 ;; Hardware stack levels used:    1
  1862 ;; Hardware stack levels required when called:    1
  1863 ;; This function calls:
  1864 ;;		Nothing
  1865 ;; This function is called by:
  1866 ;;		_main
  1867 ;; This function uses a non-reentrant model
  1868 ;;
  1869                           
  1870                           
  1871                           ;psect for function _initFVR
  1872  02C4                     _initFVR:	
  1873                           
  1874                           ;powerspy.c: 181: CDAFVR0 = 0;
  1875                           
  1876                           ;incstack = 0
  1877                           ; Regs used in _initFVR: []
  1878  02C4  0022               	movlb	2	; select bank2
  1879  02C5  1117               	bcf	23,2	;volatile
  1880                           
  1881                           ;powerspy.c: 182: CDAFVR1 = 0;
  1882  02C6  1197               	bcf	23,3	;volatile
  1883                           
  1884                           ;powerspy.c: 183: FVREN = 1;
  1885  02C7  1797               	bsf	23,7	;volatile
  1886  02C8                     l233:	
  1887                           ;powerspy.c: 184: while (!FVRRDY);
  1888                           
  1889  02C8  1B17               	btfsc	23,6	;volatile
  1890  02C9  0008               	return
  1891  02CA  2AC8               	goto	l233
  1892  02CB                     __end_of_initFVR:	
  1893                           
  1894                           	psect	text9
  1895  028F                     __ptext9:	
  1896 ;; *************** function _initCOMP2 *****************
  1897 ;; Defined at:
  1898 ;;		line 285 in file "powerspy.c"
  1899 ;; Parameters:    Size  Location     Type
  1900 ;;		None
  1901 ;; Auto vars:     Size  Location     Type
  1902 ;;		None
  1903 ;; Return value:  Size  Location     Type
  1904 ;;                  1    wreg      void 
  1905 ;; Registers used:
  1906 ;;		None
  1907 ;; Tracked objects:
  1908 ;;		On entry : 0/0
  1909 ;;		On exit  : 0/0
  1910 ;;		Unchanged: 0/0
  1911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1912 ;;      Params:         0       0       0       0       0       0
  1913 ;;      Locals:         0       0       0       0       0       0
  1914 ;;      Temps:          0       0       0       0       0       0
  1915 ;;      Totals:         0       0       0       0       0       0
  1916 ;;Total ram usage:        0 bytes
  1917 ;; Hardware stack levels used:    1
  1918 ;; Hardware stack levels required when called:    1
  1919 ;; This function calls:
  1920 ;;		Nothing
  1921 ;; This function is called by:
  1922 ;;		_main
  1923 ;; This function uses a non-reentrant model
  1924 ;;
  1925                           
  1926                           
  1927                           ;psect for function _initCOMP2
  1928  028F                     _initCOMP2:	
  1929                           
  1930                           ;powerspy.c: 290: C2NCH0 = 0;
  1931                           
  1932                           ;incstack = 0
  1933                           ; Regs used in _initCOMP2: []
  1934  028F  0022               	movlb	2	; select bank2
  1935  0290  1014               	bcf	20,0	;volatile
  1936                           
  1937                           ;powerspy.c: 291: C2NCH1 = 0;
  1938  0291  1094               	bcf	20,1	;volatile
  1939                           
  1940                           ;powerspy.c: 304: C2PCH0 = 0;
  1941  0292  1214               	bcf	20,4	;volatile
  1942                           
  1943                           ;powerspy.c: 305: C2PCH1 = 0;
  1944  0293  1294               	bcf	20,5	;volatile
  1945                           
  1946                           ;powerspy.c: 308: C2INTP = 1;
  1947  0294  1794               	bsf	20,7	;volatile
  1948                           
  1949                           ;powerspy.c: 309: C2IE = 1;
  1950  0295  0021               	movlb	1	; select bank1
  1951  0296  1712               	bsf	18,6	;volatile
  1952                           
  1953                           ;powerspy.c: 310: C2IF = 0;
  1954  0297  0020               	movlb	0	; select bank0
  1955  0298  1312               	bcf	18,6	;volatile
  1956                           
  1957                           ;powerspy.c: 311: C2ON = 1;
  1958  0299  0022               	movlb	2	; select bank2
  1959  029A  1793               	bsf	19,7	;volatile
  1960  029B  0008               	return
  1961  029C                     __end_of_initCOMP2:	
  1962                           
  1963                           	psect	text10
  1964  029C                     __ptext10:	
  1965 ;; *************** function _initCOMP1 *****************
  1966 ;; Defined at:
  1967 ;;		line 251 in file "powerspy.c"
  1968 ;; Parameters:    Size  Location     Type
  1969 ;;		None
  1970 ;; Auto vars:     Size  Location     Type
  1971 ;;		None
  1972 ;; Return value:  Size  Location     Type
  1973 ;;                  1    wreg      void 
  1974 ;; Registers used:
  1975 ;;		None
  1976 ;; Tracked objects:
  1977 ;;		On entry : 0/0
  1978 ;;		On exit  : 0/0
  1979 ;;		Unchanged: 0/0
  1980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1981 ;;      Params:         0       0       0       0       0       0
  1982 ;;      Locals:         0       0       0       0       0       0
  1983 ;;      Temps:          0       0       0       0       0       0
  1984 ;;      Totals:         0       0       0       0       0       0
  1985 ;;Total ram usage:        0 bytes
  1986 ;; Hardware stack levels used:    1
  1987 ;; Hardware stack levels required when called:    1
  1988 ;; This function calls:
  1989 ;;		Nothing
  1990 ;; This function is called by:
  1991 ;;		_main
  1992 ;; This function uses a non-reentrant model
  1993 ;;
  1994                           
  1995                           
  1996                           ;psect for function _initCOMP1
  1997  029C                     _initCOMP1:	
  1998                           
  1999                           ;powerspy.c: 256: C1NCH0 = 1;
  2000                           
  2001                           ;incstack = 0
  2002                           ; Regs used in _initCOMP1: []
  2003  029C  0022               	movlb	2	; select bank2
  2004  029D  1412               	bsf	18,0	;volatile
  2005                           
  2006                           ;powerspy.c: 257: C1NCH1 = 0;
  2007  029E  1092               	bcf	18,1	;volatile
  2008                           
  2009                           ;powerspy.c: 271: C1PCH0 = 0;
  2010  029F  1212               	bcf	18,4	;volatile
  2011                           
  2012                           ;powerspy.c: 272: C1PCH1 = 1;
  2013  02A0  1692               	bsf	18,5	;volatile
  2014                           
  2015                           ;powerspy.c: 275: C1INTP = 1;
  2016  02A1  1792               	bsf	18,7	;volatile
  2017                           
  2018                           ;powerspy.c: 276: C1IE = 1;
  2019  02A2  0021               	movlb	1	; select bank1
  2020  02A3  1692               	bsf	18,5	;volatile
  2021                           
  2022                           ;powerspy.c: 277: C1IF = 0;
  2023  02A4  0020               	movlb	0	; select bank0
  2024  02A5  1292               	bcf	18,5	;volatile
  2025                           
  2026                           ;powerspy.c: 278: C1ON = 1;
  2027  02A6  0022               	movlb	2	; select bank2
  2028  02A7  1791               	bsf	17,7	;volatile
  2029  02A8  0008               	return
  2030  02A9                     __end_of_initCOMP1:	
  2031                           
  2032                           	psect	text11
  2033  0266                     __ptext11:	
  2034 ;; *************** function _initBT *****************
  2035 ;; Defined at:
  2036 ;;		line 318 in file "powerspy.c"
  2037 ;; Parameters:    Size  Location     Type
  2038 ;;		None
  2039 ;; Auto vars:     Size  Location     Type
  2040 ;;		None
  2041 ;; Return value:  Size  Location     Type
  2042 ;;                  1    wreg      void 
  2043 ;; Registers used:
  2044 ;;		wreg
  2045 ;; Tracked objects:
  2046 ;;		On entry : 0/0
  2047 ;;		On exit  : 0/0
  2048 ;;		Unchanged: 0/0
  2049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2050 ;;      Params:         0       0       0       0       0       0
  2051 ;;      Locals:         0       0       0       0       0       0
  2052 ;;      Temps:          0       0       0       0       0       0
  2053 ;;      Totals:         0       0       0       0       0       0
  2054 ;;Total ram usage:        0 bytes
  2055 ;; Hardware stack levels used:    1
  2056 ;; Hardware stack levels required when called:    1
  2057 ;; This function calls:
  2058 ;;		Nothing
  2059 ;; This function is called by:
  2060 ;;		_main
  2061 ;; This function uses a non-reentrant model
  2062 ;;
  2063                           
  2064                           
  2065                           ;psect for function _initBT
  2066  0266                     _initBT:	
  2067                           
  2068                           ;powerspy.c: 322: RXDTSEL = 0;
  2069                           
  2070                           ;incstack = 0
  2071                           ; Regs used in _initBT: [wreg]
  2072  0266  0022               	movlb	2	; select bank2
  2073  0267  139D               	bcf	29,7	;volatile
  2074                           
  2075                           ;powerspy.c: 323: TXCKSEL = 0;
  2076  0268  101E               	bcf	30,0	;volatile
  2077                           
  2078                           ;powerspy.c: 326: TXEN = 1;
  2079  0269  0023               	movlb	3	; select bank3
  2080  026A  169E               	bsf	30,5	;volatile
  2081                           
  2082                           ;powerspy.c: 327: SYNC = 0;
  2083  026B  121E               	bcf	30,4	;volatile
  2084                           
  2085                           ;powerspy.c: 328: SPEN = 1;
  2086  026C  179D               	bsf	29,7	;volatile
  2087                           
  2088                           ;powerspy.c: 331: CREN = 1;
  2089  026D  161D               	bsf	29,4	;volatile
  2090                           
  2091                           ;powerspy.c: 332: SYNC = 0;
  2092  026E  121E               	bcf	30,4	;volatile
  2093                           
  2094                           ;powerspy.c: 333: SPEN = 1;
  2095  026F  179D               	bsf	29,7	;volatile
  2096                           
  2097                           ;powerspy.c: 336: BRGH = 0;
  2098  0270  111E               	bcf	30,2	;volatile
  2099                           
  2100                           ;powerspy.c: 337: BRG16 = 0;
  2101  0271  119F               	bcf	31,3	;volatile
  2102                           
  2103                           ;powerspy.c: 338: SPBRG = 51;
  2104  0272  3033               	movlw	51
  2105  0273  009B               	movwf	27	;volatile
  2106  0274                     l1972:	
  2107                           ;powerspy.c: 340: while (RCIF) {
  2108                           
  2109  0274  0020               	movlb	0	; select bank0
  2110  0275  1E91               	btfss	17,5	;volatile
  2111  0276  2A7A               	goto	l250
  2112                           
  2113                           ;powerspy.c: 341: RCREG;
  2114  0277  0023               	movlb	3	; select bank3
  2115  0278  0819               	movf	25,w	;volatile
  2116  0279  2A74               	goto	l1972
  2117  027A                     l250:	
  2118                           
  2119                           ;powerspy.c: 342: }
  2120                           ;powerspy.c: 344: RCIE = 1;
  2121  027A  0021               	movlb	1	; select bank1
  2122  027B  1691               	bsf	17,5	;volatile
  2123  027C  0008               	return
  2124  027D                     __end_of_initBT:	
  2125                           
  2126                           	psect	text12
  2127  02B4                     __ptext12:	
  2128 ;; *************** function _initADC *****************
  2129 ;; Defined at:
  2130 ;;		line 73 in file "powerspy.c"
  2131 ;; Parameters:    Size  Location     Type
  2132 ;;		None
  2133 ;; Auto vars:     Size  Location     Type
  2134 ;;		None
  2135 ;; Return value:  Size  Location     Type
  2136 ;;                  1    wreg      void 
  2137 ;; Registers used:
  2138 ;;		None
  2139 ;; Tracked objects:
  2140 ;;		On entry : 0/0
  2141 ;;		On exit  : 0/0
  2142 ;;		Unchanged: 0/0
  2143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2144 ;;      Params:         0       0       0       0       0       0
  2145 ;;      Locals:         0       0       0       0       0       0
  2146 ;;      Temps:          0       0       0       0       0       0
  2147 ;;      Totals:         0       0       0       0       0       0
  2148 ;;Total ram usage:        0 bytes
  2149 ;; Hardware stack levels used:    1
  2150 ;; Hardware stack levels required when called:    1
  2151 ;; This function calls:
  2152 ;;		Nothing
  2153 ;; This function is called by:
  2154 ;;		_main
  2155 ;; This function uses a non-reentrant model
  2156 ;;
  2157                           
  2158                           
  2159                           ;psect for function _initADC
  2160  02B4                     _initADC:	
  2161                           
  2162                           ;powerspy.c: 77: ADFM = 0;
  2163                           
  2164                           ;incstack = 0
  2165                           ; Regs used in _initADC: []
  2166  02B4  0021               	movlb	1	; select bank1
  2167  02B5  139E               	bcf	30,7	;volatile
  2168                           
  2169                           ;powerspy.c: 81: ADCS0 = 0;
  2170  02B6  121E               	bcf	30,4	;volatile
  2171                           
  2172                           ;powerspy.c: 82: ADCS1 = 1;
  2173  02B7  169E               	bsf	30,5	;volatile
  2174                           
  2175                           ;powerspy.c: 83: ADCS2 = 1;
  2176  02B8  171E               	bsf	30,6	;volatile
  2177                           
  2178                           ;powerspy.c: 87: ADPREF0 = 0;
  2179  02B9  101E               	bcf	30,0	;volatile
  2180                           
  2181                           ;powerspy.c: 88: ADPREF1 = 0;
  2182  02BA  109E               	bcf	30,1	;volatile
  2183                           
  2184                           ;powerspy.c: 89: ADNREF = 0;
  2185  02BB  111E               	bcf	30,2	;volatile
  2186  02BC  0008               	return
  2187  02BD                     __end_of_initADC:	
  2188                           
  2189                           	psect	text13
  2190  01A4                     __ptext13:	
  2191 ;; *************** function _deltaT *****************
  2192 ;; Defined at:
  2193 ;;		line 522 in file "powerspy.c"
  2194 ;; Parameters:    Size  Location     Type
  2195 ;;  tm_low          2    2[COMMON] unsigned short 
  2196 ;;  tm_high         2    4[COMMON] unsigned short 
  2197 ;; Auto vars:     Size  Location     Type
  2198 ;;  res             2    0[BANK0 ] unsigned short 
  2199 ;; Return value:  Size  Location     Type
  2200 ;;                  2    2[COMMON] unsigned short 
  2201 ;; Registers used:
  2202 ;;		wreg, status,2, status,0
  2203 ;; Tracked objects:
  2204 ;;		On entry : 0/0
  2205 ;;		On exit  : 0/0
  2206 ;;		Unchanged: 0/0
  2207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2208 ;;      Params:         4       0       0       0       0       0
  2209 ;;      Locals:         0       2       0       0       0       0
  2210 ;;      Temps:          4       0       0       0       0       0
  2211 ;;      Totals:         8       2       0       0       0       0
  2212 ;;Total ram usage:       10 bytes
  2213 ;; Hardware stack levels used:    1
  2214 ;; Hardware stack levels required when called:    1
  2215 ;; This function calls:
  2216 ;;		Nothing
  2217 ;; This function is called by:
  2218 ;;		_main
  2219 ;; This function uses a non-reentrant model
  2220 ;;
  2221                           
  2222                           
  2223                           ;psect for function _deltaT
  2224  01A4                     _deltaT:	
  2225                           
  2226                           ;powerspy.c: 524: uint16_t res;
  2227                           ;powerspy.c: 526: GIE = 0;
  2228                           
  2229                           ;incstack = 0
  2230                           ; Regs used in _deltaT: [wreg+status,2+status,0]
  2231  01A4  138B               	bcf	11,7	;volatile
  2232                           
  2233                           ;powerspy.c: 527: volt_time = 0;
  2234  01A5  0020               	movlb	0	; select bank0
  2235  01A6  01D0               	clrf	_volt_time
  2236  01A7  01D1               	clrf	_volt_time+1
  2237                           
  2238                           ;powerspy.c: 528: curr_time = 0;
  2239  01A8  01CE               	clrf	_curr_time
  2240  01A9  01CF               	clrf	_curr_time+1
  2241                           
  2242                           ;powerspy.c: 529: GIE = 1;
  2243  01AA  178B               	bsf	11,7	;volatile
  2244                           
  2245                           ;powerspy.c: 531: if (tm_low < tm_high) {
  2246  01AB  0875               	movf	deltaT@tm_high+1,w
  2247  01AC  0273               	subwf	deltaT@tm_low+1,w
  2248  01AD  1D03               	skipz
  2249  01AE  29B1               	goto	u1895
  2250  01AF  0874               	movf	deltaT@tm_high,w
  2251  01B0  0272               	subwf	deltaT@tm_low,w
  2252  01B1                     u1895:	
  2253  01B1  1803               	skipnc
  2254  01B2  29C0               	goto	l2280
  2255                           
  2256                           ;powerspy.c: 532: res = tm_high - tm_low;
  2257  01B3  0972               	comf	deltaT@tm_low,w
  2258  01B4  00F6               	movwf	??_deltaT
  2259  01B5  0973               	comf	deltaT@tm_low+1,w
  2260  01B6  00F7               	movwf	??_deltaT+1
  2261  01B7  0AF6               	incf	??_deltaT,f
  2262  01B8  1903               	skipnz
  2263  01B9  0AF7               	incf	??_deltaT+1,f
  2264  01BA  0874               	movf	deltaT@tm_high,w
  2265  01BB  0776               	addwf	??_deltaT,w
  2266  01BC  00C4               	movwf	deltaT@res
  2267  01BD  0875               	movf	deltaT@tm_high+1,w
  2268  01BE  3D77               	addwfc	??_deltaT+1,w
  2269  01BF  29D2               	goto	L3
  2270  01C0                     l2280:	
  2271                           ;powerspy.c: 533: } else {
  2272                           
  2273                           
  2274                           ;powerspy.c: 534: res = 0xffff - tm_low + tm_high;
  2275  01C0  0972               	comf	deltaT@tm_low,w
  2276  01C1  00F6               	movwf	??_deltaT
  2277  01C2  0973               	comf	deltaT@tm_low+1,w
  2278  01C3  00F7               	movwf	??_deltaT+1
  2279  01C4  0AF6               	incf	??_deltaT,f
  2280  01C5  1903               	skipnz
  2281  01C6  0AF7               	incf	??_deltaT+1,f
  2282  01C7  0874               	movf	deltaT@tm_high,w
  2283  01C8  0776               	addwf	??_deltaT,w
  2284  01C9  00F8               	movwf	??_deltaT+2
  2285  01CA  0875               	movf	deltaT@tm_high+1,w
  2286  01CB  3D77               	addwfc	??_deltaT+1,w
  2287  01CC  00F9               	movwf	??_deltaT+3
  2288  01CD  0878               	movf	??_deltaT+2,w
  2289  01CE  3EFF               	addlw	255
  2290  01CF  00C4               	movwf	deltaT@res
  2291  01D0  30FF               	movlw	255
  2292  01D1  3D79               	addwfc	??_deltaT+3,w
  2293  01D2                     L3:	
  2294  01D2  00C5               	movwf	deltaT@res+1
  2295                           
  2296                           ;powerspy.c: 535: }
  2297                           ;powerspy.c: 537: return res;
  2298  01D3  0845               	movf	deltaT@res+1,w
  2299  01D4  00F3               	movwf	?_deltaT+1
  2300  01D5  0844               	movf	deltaT@res,w
  2301  01D6  00F2               	movwf	?_deltaT
  2302  01D7  0008               	return
  2303  01D8                     __end_of_deltaT:	
  2304                           
  2305                           	psect	text14
  2306  01D8                     __ptext14:	
  2307 ;; *************** function ___lmul *****************
  2308 ;; Defined at:
  2309 ;;		line 15 in file "/Applications/microchip/xc8/v1.36/sources/common/Umul32.c"
  2310 ;; Parameters:    Size  Location     Type
  2311 ;;  multiplier      4    2[COMMON] unsigned long 
  2312 ;;  multiplicand    4    6[COMMON] unsigned long 
  2313 ;; Auto vars:     Size  Location     Type
  2314 ;;  product         4    0[BANK0 ] unsigned long 
  2315 ;; Return value:  Size  Location     Type
  2316 ;;                  4    2[COMMON] unsigned long 
  2317 ;; Registers used:
  2318 ;;		wreg, status,2, status,0
  2319 ;; Tracked objects:
  2320 ;;		On entry : 0/0
  2321 ;;		On exit  : 0/0
  2322 ;;		Unchanged: 0/0
  2323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2324 ;;      Params:         8       0       0       0       0       0
  2325 ;;      Locals:         0       4       0       0       0       0
  2326 ;;      Temps:          0       0       0       0       0       0
  2327 ;;      Totals:         8       4       0       0       0       0
  2328 ;;Total ram usage:       12 bytes
  2329 ;; Hardware stack levels used:    1
  2330 ;; Hardware stack levels required when called:    1
  2331 ;; This function calls:
  2332 ;;		Nothing
  2333 ;; This function is called by:
  2334 ;;		_main
  2335 ;; This function uses a non-reentrant model
  2336 ;;
  2337                           
  2338                           
  2339                           ;psect for function ___lmul
  2340  01D8                     ___lmul:	
  2341                           
  2342                           ;incstack = 0
  2343                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  2344  01D8  3000               	movlw	0
  2345  01D9  0020               	movlb	0	; select bank0
  2346  01DA  00C7               	movwf	___lmul@product+3
  2347  01DB  3000               	movlw	0
  2348  01DC  00C6               	movwf	___lmul@product+2
  2349  01DD  3000               	movlw	0
  2350  01DE  00C5               	movwf	___lmul@product+1
  2351  01DF  3000               	movlw	0
  2352  01E0  00C4               	movwf	___lmul@product
  2353  01E1                     l2058:	
  2354  01E1  1C72               	btfss	___lmul@multiplier,0
  2355  01E2  29EC               	goto	l2062
  2356  01E3  0876               	movf	___lmul@multiplicand,w
  2357  01E4  0020               	movlb	0	; select bank0
  2358  01E5  07C4               	addwf	___lmul@product,f
  2359  01E6  0877               	movf	___lmul@multiplicand+1,w
  2360  01E7  3DC5               	addwfc	___lmul@product+1,f
  2361  01E8  0878               	movf	___lmul@multiplicand+2,w
  2362  01E9  3DC6               	addwfc	___lmul@product+2,f
  2363  01EA  0879               	movf	___lmul@multiplicand+3,w
  2364  01EB  3DC7               	addwfc	___lmul@product+3,f
  2365  01EC                     l2062:	
  2366  01EC  3001               	movlw	1
  2367  01ED                     u1535:	
  2368  01ED  35F6               	lslf	___lmul@multiplicand,f
  2369  01EE  0DF7               	rlf	___lmul@multiplicand+1,f
  2370  01EF  0DF8               	rlf	___lmul@multiplicand+2,f
  2371  01F0  0DF9               	rlf	___lmul@multiplicand+3,f
  2372  01F1  0B89               	decfsz	9,f
  2373  01F2  29ED               	goto	u1535
  2374  01F3  3001               	movlw	1
  2375  01F4                     u1545:	
  2376  01F4  36F5               	lsrf	___lmul@multiplier+3,f
  2377  01F5  0CF4               	rrf	___lmul@multiplier+2,f
  2378  01F6  0CF3               	rrf	___lmul@multiplier+1,f
  2379  01F7  0CF2               	rrf	___lmul@multiplier,f
  2380  01F8  0B89               	decfsz	9,f
  2381  01F9  29F4               	goto	u1545
  2382  01FA  0875               	movf	___lmul@multiplier+3,w
  2383  01FB  0474               	iorwf	___lmul@multiplier+2,w
  2384  01FC  0473               	iorwf	___lmul@multiplier+1,w
  2385  01FD  0472               	iorwf	___lmul@multiplier,w
  2386  01FE  1D03               	skipz
  2387  01FF  29E1               	goto	l2058
  2388  0200  0020               	movlb	0	; select bank0
  2389  0201  0847               	movf	___lmul@product+3,w
  2390  0202  00F5               	movwf	?___lmul+3
  2391  0203  0846               	movf	___lmul@product+2,w
  2392  0204  00F4               	movwf	?___lmul+2
  2393  0205  0845               	movf	___lmul@product+1,w
  2394  0206  00F3               	movwf	?___lmul+1
  2395  0207  0844               	movf	___lmul@product,w
  2396  0208  00F2               	movwf	?___lmul
  2397  0209  0008               	return
  2398  020A                     __end_of___lmul:	
  2399                           
  2400                           	psect	text15
  2401  0102                     __ptext15:	
  2402 ;; *************** function ___lldiv *****************
  2403 ;; Defined at:
  2404 ;;		line 6 in file "/Applications/microchip/xc8/v1.36/sources/common/lldiv.c"
  2405 ;; Parameters:    Size  Location     Type
  2406 ;;  divisor         4    2[COMMON] unsigned long 
  2407 ;;  dividend        4    6[COMMON] unsigned long 
  2408 ;; Auto vars:     Size  Location     Type
  2409 ;;  quotient        4    1[BANK0 ] unsigned long 
  2410 ;;  counter         1    5[BANK0 ] unsigned char 
  2411 ;; Return value:  Size  Location     Type
  2412 ;;                  4    2[COMMON] unsigned long 
  2413 ;; Registers used:
  2414 ;;		wreg, status,2, status,0
  2415 ;; Tracked objects:
  2416 ;;		On entry : 0/0
  2417 ;;		On exit  : 0/0
  2418 ;;		Unchanged: 0/0
  2419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2420 ;;      Params:         8       0       0       0       0       0
  2421 ;;      Locals:         0       5       0       0       0       0
  2422 ;;      Temps:          0       1       0       0       0       0
  2423 ;;      Totals:         8       6       0       0       0       0
  2424 ;;Total ram usage:       14 bytes
  2425 ;; Hardware stack levels used:    1
  2426 ;; Hardware stack levels required when called:    1
  2427 ;; This function calls:
  2428 ;;		Nothing
  2429 ;; This function is called by:
  2430 ;;		_main
  2431 ;; This function uses a non-reentrant model
  2432 ;;
  2433                           
  2434                           
  2435                           ;psect for function ___lldiv
  2436  0102                     ___lldiv:	
  2437                           
  2438                           ;incstack = 0
  2439                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2440  0102  3000               	movlw	0
  2441  0103  0020               	movlb	0	; select bank0
  2442  0104  00C8               	movwf	___lldiv@quotient+3
  2443  0105  3000               	movlw	0
  2444  0106  00C7               	movwf	___lldiv@quotient+2
  2445  0107  3000               	movlw	0
  2446  0108  00C6               	movwf	___lldiv@quotient+1
  2447  0109  3000               	movlw	0
  2448  010A  00C5               	movwf	___lldiv@quotient
  2449  010B  0875               	movf	___lldiv@divisor+3,w
  2450  010C  0474               	iorwf	___lldiv@divisor+2,w
  2451  010D  0473               	iorwf	___lldiv@divisor+1,w
  2452  010E  0472               	iorwf	___lldiv@divisor,w
  2453  010F  1903               	skipnz
  2454  0110  294C               	goto	l2308
  2455  0111  01C9               	clrf	___lldiv@counter
  2456  0112  0AC9               	incf	___lldiv@counter,f
  2457  0113                     l2294:	
  2458  0113  1BF5               	btfsc	___lldiv@divisor+3,7
  2459  0114  2921               	goto	l2296
  2460  0115  3001               	movlw	1
  2461  0116                     u1945:	
  2462  0116  35F2               	lslf	___lldiv@divisor,f
  2463  0117  0DF3               	rlf	___lldiv@divisor+1,f
  2464  0118  0DF4               	rlf	___lldiv@divisor+2,f
  2465  0119  0DF5               	rlf	___lldiv@divisor+3,f
  2466  011A  0B89               	decfsz	9,f
  2467  011B  2916               	goto	u1945
  2468  011C  3001               	movlw	1
  2469  011D  00C4               	movwf	??___lldiv
  2470  011E  0844               	movf	??___lldiv,w
  2471  011F  07C9               	addwf	___lldiv@counter,f
  2472  0120  2913               	goto	l2294
  2473  0121                     l2296:	
  2474  0121  3001               	movlw	1
  2475  0122                     u1965:	
  2476  0122  35C5               	lslf	___lldiv@quotient,f
  2477  0123  0DC6               	rlf	___lldiv@quotient+1,f
  2478  0124  0DC7               	rlf	___lldiv@quotient+2,f
  2479  0125  0DC8               	rlf	___lldiv@quotient+3,f
  2480  0126  0B89               	decfsz	9,f
  2481  0127  2922               	goto	u1965
  2482  0128  0875               	movf	___lldiv@divisor+3,w
  2483  0129  0279               	subwf	___lldiv@dividend+3,w
  2484  012A  1D03               	skipz
  2485  012B  2936               	goto	u1975
  2486  012C  0874               	movf	___lldiv@divisor+2,w
  2487  012D  0278               	subwf	___lldiv@dividend+2,w
  2488  012E  1D03               	skipz
  2489  012F  2936               	goto	u1975
  2490  0130  0873               	movf	___lldiv@divisor+1,w
  2491  0131  0277               	subwf	___lldiv@dividend+1,w
  2492  0132  1D03               	skipz
  2493  0133  2936               	goto	u1975
  2494  0134  0872               	movf	___lldiv@divisor,w
  2495  0135  0276               	subwf	___lldiv@dividend,w
  2496  0136                     u1975:	
  2497  0136  1C03               	skipc
  2498  0137  2941               	goto	l2304
  2499  0138  0872               	movf	___lldiv@divisor,w
  2500  0139  02F6               	subwf	___lldiv@dividend,f
  2501  013A  0873               	movf	___lldiv@divisor+1,w
  2502  013B  3BF7               	subwfb	___lldiv@dividend+1,f
  2503  013C  0874               	movf	___lldiv@divisor+2,w
  2504  013D  3BF8               	subwfb	___lldiv@dividend+2,f
  2505  013E  0875               	movf	___lldiv@divisor+3,w
  2506  013F  3BF9               	subwfb	___lldiv@dividend+3,f
  2507  0140  1445               	bsf	___lldiv@quotient,0
  2508  0141                     l2304:	
  2509  0141  3001               	movlw	1
  2510  0142                     u1985:	
  2511  0142  36F5               	lsrf	___lldiv@divisor+3,f
  2512  0143  0CF4               	rrf	___lldiv@divisor+2,f
  2513  0144  0CF3               	rrf	___lldiv@divisor+1,f
  2514  0145  0CF2               	rrf	___lldiv@divisor,f
  2515  0146  0B89               	decfsz	9,f
  2516  0147  2942               	goto	u1985
  2517  0148  3001               	movlw	1
  2518  0149  02C9               	subwf	___lldiv@counter,f
  2519  014A  1D03               	btfss	3,2
  2520  014B  2921               	goto	l2296
  2521  014C                     l2308:	
  2522  014C  0848               	movf	___lldiv@quotient+3,w
  2523  014D  00F5               	movwf	?___lldiv+3
  2524  014E  0847               	movf	___lldiv@quotient+2,w
  2525  014F  00F4               	movwf	?___lldiv+2
  2526  0150  0846               	movf	___lldiv@quotient+1,w
  2527  0151  00F3               	movwf	?___lldiv+1
  2528  0152  0845               	movf	___lldiv@quotient,w
  2529  0153  00F2               	movwf	?___lldiv
  2530  0154  0008               	return
  2531  0155                     __end_of___lldiv:	
  2532                           
  2533                           	psect	intentry
  2534  0004                     __pintentry:	
  2535 ;; *************** function _ISR *****************
  2536 ;; Defined at:
  2537 ;;		line 567 in file "powerspy.c"
  2538 ;; Parameters:    Size  Location     Type
  2539 ;;		None
  2540 ;; Auto vars:     Size  Location     Type
  2541 ;;		None
  2542 ;; Return value:  Size  Location     Type
  2543 ;;                  1    wreg      void 
  2544 ;; Registers used:
  2545 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2546 ;; Tracked objects:
  2547 ;;		On entry : 0/0
  2548 ;;		On exit  : 0/0
  2549 ;;		Unchanged: 0/0
  2550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2551 ;;      Params:         0       0       0       0       0       0
  2552 ;;      Locals:         0       0       0       0       0       0
  2553 ;;      Temps:          2       0       0       0       0       0
  2554 ;;      Totals:         2       0       0       0       0       0
  2555 ;;Total ram usage:        2 bytes
  2556 ;; Hardware stack levels used:    1
  2557 ;; This function calls:
  2558 ;;		Nothing
  2559 ;; This function is called by:
  2560 ;;		Interrupt level 1
  2561 ;; This function uses a non-reentrant model
  2562 ;;
  2563                           
  2564  0004                     _ISR:	
  2565                           
  2566                           ;incstack = 0
  2567                           ; Regs used in _ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  2568  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2569  0005  3180               	pagesel	$
  2570  0006  0020               	movlb	0	; select bank0
  2571  0007  087F               	movf	127,w
  2572  0008  00F1               	movwf	??_ISR+1
  2573                           
  2574                           ;powerspy.c: 570: if (RCIE && RCIF) {
  2575  0009  0021               	movlb	1	; select bank1
  2576  000A  1E91               	btfss	17,5	;volatile
  2577  000B  2822               	goto	i1l2136
  2578  000C  0020               	movlb	0	; select bank0
  2579  000D  1E91               	btfss	17,5	;volatile
  2580  000E  2822               	goto	i1l2136
  2581                           
  2582                           ;powerspy.c: 571: receive_buff[buffpos] = RCREG;
  2583  000F  0023               	movlb	3	; select bank3
  2584  0010  0819               	movf	25,w	;volatile
  2585  0011  00F0               	movwf	??_ISR
  2586  0012  087A               	movf	_buffpos,w
  2587  0013  3E20               	addlw	(low (_receive_buff| 0))& (0+255)
  2588  0014  0086               	movwf	6
  2589  0015  0187               	clrf	7
  2590  0016  0870               	movf	??_ISR,w
  2591  0017  0081               	movwf	1
  2592                           
  2593                           ;powerspy.c: 572: buffpos++;
  2594  0018  3001               	movlw	1
  2595  0019  00F0               	movwf	??_ISR
  2596  001A  0870               	movf	??_ISR,w
  2597  001B  07FA               	addwf	_buffpos,f
  2598                           
  2599                           ;powerspy.c: 573: buffpos %= 32;
  2600  001C  301F               	movlw	31
  2601  001D  00F0               	movwf	??_ISR
  2602  001E  0870               	movf	??_ISR,w
  2603  001F  05FA               	andwf	_buffpos,f
  2604                           
  2605                           ;powerspy.c: 574: RCIF = 0;
  2606  0020  0020               	movlb	0	; select bank0
  2607  0021  1291               	bcf	17,5	;volatile
  2608  0022                     i1l2136:	
  2609                           
  2610                           ;powerspy.c: 575: }
  2611                           ;powerspy.c: 578: if (TMR1IE && TMR1IF) {
  2612  0022  0021               	movlb	1	; select bank1
  2613  0023  1C11               	btfss	17,0	;volatile
  2614  0024  2829               	goto	i1l331
  2615  0025  0020               	movlb	0	; select bank0
  2616  0026  1C11               	btfss	17,0	;volatile
  2617  0027  2829               	goto	i1l331
  2618                           
  2619                           ;powerspy.c: 579: TMR1IF = 0;
  2620  0028  1011               	bcf	17,0	;volatile
  2621  0029                     i1l331:	
  2622                           
  2623                           ;powerspy.c: 580: }
  2624                           ;powerspy.c: 583: if (C1IE && C1IF) {
  2625  0029  0021               	movlb	1	; select bank1
  2626  002A  1E92               	btfss	18,5	;volatile
  2627  002B  2839               	goto	i1l332
  2628  002C  0020               	movlb	0	; select bank0
  2629  002D  1E92               	btfss	18,5	;volatile
  2630  002E  2839               	goto	i1l332
  2631                           
  2632                           ;powerspy.c: 584: if (!(flag & 0x01)) {
  2633  002F  1842               	btfsc	_flag,0
  2634  0030  2838               	goto	i1l333
  2635                           
  2636                           ;powerspy.c: 585: volt_time = TMR1;
  2637  0031  0817               	movf	23,w	;volatile
  2638  0032  00D1               	movwf	_volt_time+1
  2639  0033  0816               	movf	22,w	;volatile
  2640  0034  00D0               	movwf	_volt_time
  2641                           
  2642                           ;powerspy.c: 586: if (flag & 0x02)
  2643  0035  18C2               	btfsc	_flag,1
  2644                           
  2645                           ;powerspy.c: 587: flag |= 0x08;
  2646  0036  15C2               	bsf	_flag,3
  2647                           
  2648                           ;powerspy.c: 588: flag |= 0x01;
  2649  0037  1442               	bsf	_flag,0
  2650  0038                     i1l333:	
  2651                           
  2652                           ;powerspy.c: 589: }
  2653                           ;powerspy.c: 591: C1IF = 0;
  2654  0038  1292               	bcf	18,5	;volatile
  2655  0039                     i1l332:	
  2656                           
  2657                           ;powerspy.c: 592: }
  2658                           ;powerspy.c: 595: if (C2IE && C2IF) {
  2659  0039  0021               	movlb	1	; select bank1
  2660  003A  1F12               	btfss	18,6	;volatile
  2661  003B  2849               	goto	i1l335
  2662  003C  0020               	movlb	0	; select bank0
  2663  003D  1F12               	btfss	18,6	;volatile
  2664  003E  2849               	goto	i1l335
  2665                           
  2666                           ;powerspy.c: 596: if (!(flag & 0x02)) {
  2667  003F  18C2               	btfsc	_flag,1
  2668  0040  2848               	goto	i1l336
  2669                           
  2670                           ;powerspy.c: 597: curr_time = TMR1;
  2671  0041  0817               	movf	23,w	;volatile
  2672  0042  00CF               	movwf	_curr_time+1
  2673  0043  0816               	movf	22,w	;volatile
  2674  0044  00CE               	movwf	_curr_time
  2675                           
  2676                           ;powerspy.c: 598: if (flag & 0x01)
  2677  0045  1842               	btfsc	_flag,0
  2678                           
  2679                           ;powerspy.c: 599: flag |= 0x04;
  2680  0046  1542               	bsf	_flag,2
  2681                           
  2682                           ;powerspy.c: 600: flag |= 0x02;
  2683  0047  14C2               	bsf	_flag,1
  2684  0048                     i1l336:	
  2685                           
  2686                           ;powerspy.c: 601: }
  2687                           ;powerspy.c: 602: C2IF = 0;
  2688  0048  1312               	bcf	18,6	;volatile
  2689  0049                     i1l335:	
  2690                           
  2691                           ;powerspy.c: 603: }
  2692                           ;powerspy.c: 605: if (TMR2IE && TMR2IF) {
  2693  0049  0021               	movlb	1	; select bank1
  2694  004A  1C91               	btfss	17,1	;volatile
  2695  004B  2850               	goto	i1l339
  2696  004C  0020               	movlb	0	; select bank0
  2697  004D  1C91               	btfss	17,1	;volatile
  2698  004E  2850               	goto	i1l339
  2699                           
  2700                           ;powerspy.c: 606: TMR2IF = 0;
  2701  004F  1091               	bcf	17,1	;volatile
  2702  0050                     i1l339:	
  2703  0050  0871               	movf	??_ISR+1,w
  2704  0051  0020               	movlb	0	; select bank0
  2705  0052  00FF               	movwf	127
  2706  0053  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2707  0054  0009               	retfie
  2708  0055                     __end_of_ISR:	
  2709  007E                     btemp	set	126	;btemp
  2710  007E                     int$flags	set	126
  2711  007E                     wtemp	set	126
  2712  007E                     wtemp0	set	126
  2713  0080                     wtemp1	set	128
  2714  0082                     wtemp2	set	130
  2715  0084                     wtemp3	set	132
  2716  0086                     wtemp4	set	134
  2717  0088                     wtemp5	set	136
  2718  007F                     wtemp6	set	127
  2719  007E                     ttemp	set	126
  2720  007E                     ttemp0	set	126
  2721  0081                     ttemp1	set	129
  2722  0084                     ttemp2	set	132
  2723  0087                     ttemp3	set	135
  2724  007F                     ttemp4	set	127
  2725  007E                     ltemp	set	126
  2726  007E                     ltemp0	set	126
  2727  0082                     ltemp1	set	130
  2728  0086                     ltemp2	set	134
  2729  0080                     ltemp3	set	128


Data Sizes:
    Strings     8
    Constant    10
    Data        4
    BSS         38
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     10      50
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    sendString@val	PTR unsigned char  size(2) Largest target is 8
		 -> STR_1(CODE[8]), 


Critical Paths under _main in COMMON

    _main->___lldiv
    _main->___lmul
    _main->_deltaT
    _sendString->__sendchar_
    _sendInt32->__sendchar_

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___lldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    1488
                                              6 BANK0      4     4      0
                            ___lldiv
                             ___lmul
                             _deltaT
                            _initADC
                             _initBT
                          _initCOMP1
                          _initCOMP2
                            _initFVR
                      _initMessaging
                        _initPWMTMR4
                           _initPins
                           _initTMR1
                          _sendInt32
                         _sendString
 ---------------------------------------------------------------------------------
 (1) _sendString                                           3     1      2     120
                                              3 COMMON     3     1      2
                         __sendchar_
 ---------------------------------------------------------------------------------
 (1) _sendInt32                                            9     5      4     211
                                              3 COMMON     4     0      4
                                              0 BANK0      5     5      0
                         __sendchar_
 ---------------------------------------------------------------------------------
 (2) __sendchar_                                           1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initTMR1                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initPins                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initPWMTMR4                                          1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initMessaging                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initFVR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initCOMP2                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initCOMP1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initBT                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _deltaT                                              10     6      4     483
                                              2 COMMON     8     4      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     198
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             14     6      8     371
                                              2 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lldiv
   ___lmul
   _deltaT
   _initADC
   _initBT
   _initCOMP1
   _initCOMP2
   _initFVR
   _initMessaging
   _initPWMTMR4
   _initPins
   _initTMR1
   _sendInt32
     __sendchar_
   _sendString
     __sendchar_

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      3E       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      A      32       6       62.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      3E      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Tue May  3 17:44:38 2016

            __CFG_CP$OFF 0000                      l233 02C8                      l250 027A  
                    l344 00A1                      l515 02C1                      _GIE 005F  
                    _RA3 0063                      _RA4 0064                      _RA6 0066  
                    _RA7 0067                      _PR2 001B             __CFG_CPD$OFF 0000  
                    _ISR 0004             __CFG_BORV$LO 0000                      wreg 0009  
           __CFG_LVP$OFF 0000                     ?_ISR 0070                     _C1IE 0495  
                   _C1IF 0095                     _C2IE 0496                     l2032 0212  
                   _C2IF 0096                     l2034 0226                     l2062 01EC  
                   l2304 0141                     l2058 01E1                     l2308 014C  
                   l2332 0093                     l2342 00B5                     l2280 01C0  
                   _C1ON 088F                     _C2ON 089F                     l2294 0113  
                   l2296 0121                     l1972 0274                     _ADFM 04F7  
                   _ADON 04E8                     _CHS0 04EA                     _CHS1 04EB  
                   _CHS2 04EC                     _CHS3 04ED                     _CHS4 04EE  
                   STR_1 0287                     _BRGH 0CF2                     _CREN 0CEC  
                   u1535 01ED                     u1545 01F4                     u1905 0168  
                   u1915 017D                     u1925 0192                     u1945 0116  
                   _PEIE 005E                     u1965 0122                     u1975 0136  
                   u1895 01B1                     u1985 0142                     _RCIE 048D  
                   _RCIF 008D                     _SCS0 04C8                     _SCS1 04C9  
                   _TMR1 0016                     _SPEN 0CEF                     _TRMT 0CF1  
                   _TXEN 0CF5                     _SYNC 0CF4                     _WPUB 020D  
           __CFG_WRT$OFF 0000                     _flag 0042             ?_initPWMTMR4 0070  
                   _main 0074                     fsr0h 0005                     fsr1h 0007  
                   fsr0l 0004                     indf0 0000                     indf1 0001  
                   fsr1l 0006                     btemp 007E                     ltemp 007E  
                   start 0055                     ttemp 007E                     wtemp 007E  
          __CFG_IESO$OFF 0000            __CFG_MCLRE$ON 0000                    ??_ISR 0070  
          __CFG_PLLEN$ON 0000                    _DC1B0 149C                    _DC1B1 149D  
                  _ADCS0 04F4                    _ADCS1 04F5                    _ADCS2 04F6  
                  ?_main 0070                    _BRG16 0CFB            __CFG_WDTE$OFF 0000  
        __end_of___lldiv 0155                    _IRCF0 04CB                    _IRCF1 04CC  
                  _IRCF2 04CD                    _IRCF3 04CE                    i1l331 0029  
                  i1l332 0039                    i1l333 0038                    i1l335 0049  
                  i1l336 0048                    i1l339 0050                    _FVREN 08BF  
                  _RCREG 0199                    _SPBRG 019B                    _PORTA 000C  
                  _PORTB 000D                    _TRISA 008C                    _TRISB 008D  
                  _TXREG 019A      ___lmul@multiplicand 0076           __CFG_FCMEN$OFF 0000  
        __end_of_initADC 02BD          __end_of_initFVR 02CB           __CFG_BOREN$OFF 0000  
                  ltemp0 007E                    ltemp1 0082                    ltemp2 0086  
                  ltemp3 0080                    ttemp0 007E                    ttemp1 0081  
                  ttemp2 0084                    ttemp3 0087                    ttemp4 007F  
                  status 0003                    wtemp0 007E                    wtemp1 0080  
                  wtemp2 0082                    wtemp3 0084                    wtemp4 0086  
                  wtemp5 0088                    wtemp6 007F          __initialization 0057  
 __size_of_initMessaging 0006             __end_of_main 0102                   ??_main 007A  
                 _C1NCH0 0890                   _C1NCH1 0891                   _C2NCH0 08A0  
                 _C1PCH0 0894                   _C2NCH1 08A1                   _C1PCH1 0895  
                 _C2PCH0 08A4                   _C2PCH1 08A5                   _C1INTP 0897  
                 _C2INTP 08A7                   _ADNREF 04F2                   _ADRESH 009C  
                 _CCPR1L 0291                   _ANSELA 018C                   _ANSELB 018D  
                 i1l2136 0022                   _FVRRDY 08BE                   _TMR1IE 0488  
                 _TMR1IF 0088                   _TMR2IE 0489                   _TMR2IF 0089  
                 _TMR4IF 0099                   _TMR1ON 00C0                   _TMR2ON 00E2  
                 _TMR4ON 20BA                   _SPLLEN 04CF           __CFG_PWRTE$OFF 0000  
                 _nWPUEN 04AF                   ___lmul 01D8                ??___lldiv 0044  
                 _deltaT 01A4         __end_of_initTMR1 02B4         __end_of_initPins 0266  
                 _initBT 0266                ??_initADC 0072                ??_initFVR 0072  
          _initMessaging 02D1  __end_of__initialization 0070     __size_of_initPWMTMR4 001F  
         __pcstackCOMMON 0070             __pidataBANK0 02D7           ?_initMessaging 0070  
     __size_of_initCOMP1 000D       __size_of_initCOMP2 000D               __pbssBANK0 0020  
             __pmaintext 0074               __sendchar_ 02BD                  ?___lmul 0072  
     __size_of_sendInt32 004F             __sendchar_@c 0072                  _C1TSEL0 14F0  
                _C1TSEL1 14F1                  ?_deltaT 0072               __pintentry 0004  
                _CCP1CON 0293                  _CDAFVR0 08BA                  _CDAFVR1 08BB  
                ?_initBT 0070                  _CCP1SEL 08E8                  _ADPREF0 04F0  
                _ADPREF1 04F1           ___lmul@product 0044                  _T1CKPS0 00C4  
                _T1CKPS1 00C5                  _T2CKPS0 00E0                  _T2CKPS1 00E1  
                _T4CKPS0 20B8                  _T4CKPS1 20B9                  _TMR1CS0 00C6  
                _TMR1CS1 00C7                  _RXDTSEL 08EF                  _TXCKSEL 08F0  
              ?_initTMR1 0070                ?_initPins 0070          __size_of___lmul 0032  
                ___lldiv 0102          __size_of_deltaT 0034        __end_of_initCOMP1 02A9  
      __end_of_initCOMP2 029C          __CFG_STVREN$OFF 0000          __size_of_initBT 0017  
                __ptext1 020A                  __ptext2 0155                  __ptext3 02BD  
                __ptext4 02A9                  __ptext5 0249                  __ptext6 022A  
                __ptext7 02D1                  __ptext8 02C4                  __ptext9 028F  
                _buffpos 007A          ??_initMessaging 0072                  _initADC 02B4  
           __size_of_ISR 0051                  _initFVR 02C4                  _reading 0043  
                _readpos 007B        __end_of_sendInt32 01A4                  clrloop0 02CC  
   end_of_initialization 0070               ??_initTMR1 0072               _sendString 020A  
             ??_initPins 0072          ___lldiv@divisor 0072          ___lldiv@counter 0049  
            ?__sendchar_ 0070             __pstringtext 027D            sendString@val 0073  
       __CFG_FOSC$INTOSC 0000                _TRISBbits 008D           __end_of___lmul 020A  
          deltaT@tm_high 0074           __end_of_deltaT 01D8           __end_of_initBT 027D  
    start_initialization 0057              __end_of_ISR 0055      __size_of__sendchar_ 0007  
            ?_sendString 0073            ??_initPWMTMR4 0072                 ??___lmul 007A  
               ??_deltaT 0076              __pdataBANK0 004E                 ??_initBT 0072  
            __pbssCOMMON 007A                ___latbits 0001            __pcstackBANK0 0044  
      __size_of_initTMR1 000B               sendInt32@i 0073        __size_of_initPins 001D  
    __end_of_initPWMTMR4 0249                 ?___lldiv 0072      __size_of_sendString 0020  
               ?_initADC 0070                 ?_initFVR 0070                _initCOMP1 029C  
              _initCOMP2 028F                _curr_time 004E                 _T2OUTPS0 00E3  
               _T2OUTPS1 00E4                 _T2OUTPS2 00E5                 _T2OUTPS3 00E6  
              _sendInt32 0155             _receive_buff 0020                deltaT@res 0044  
              clear_ram0 02CB             ??__sendchar_ 0072                 _GO_nDONE 04E9  
             ?_initCOMP1 0070               ?_initCOMP2 0070    __end_of_initMessaging 02D7  
              _volt_time 0050             deltaT@tm_low 0072        ___lmul@multiplier 0072  
     __end_of__sendchar_ 02C4               ?_sendInt32 0073              _initPWMTMR4 022A  
       __size_of___lldiv 0053         __size_of_initADC 0009         __size_of_initFVR 0007  
               __ptext10 029C                 __ptext11 0266                 __ptext12 02B4  
               __ptext13 01A4                 __ptext14 01D8                 __ptext15 0102  
               _led_rest 0040                 _initTMR1 02A9             ??_sendString 0075  
               _initPins 0249            __size_of_main 008E                 int$flags 007E  
               main@diff 004A              ??_initCOMP1 0072              ??_initCOMP2 0072  
     __end_of_sendString 022A           _get_shift_byte 027D                 intlevel1 0000  
            ??_sendInt32 0044         ___lldiv@dividend 0076        __CFG_CLKOUTEN$OFF 0000  
       ___lldiv@quotient 0045   __end_of_get_shift_byte 0287  
