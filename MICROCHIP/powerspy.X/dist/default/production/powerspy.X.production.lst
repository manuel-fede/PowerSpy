

Microchip Technology PIC LITE Macro Assembler V1.36 build -262312587 
                                                                                               Sun May  8 18:00:54 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	stringtext,global,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	text31,local,class=CODE,merge=1,delta=2
    48                           	psect	text32,local,class=CODE,merge=1,delta=2
    49                           	psect	text33,local,class=CODE,merge=1,delta=2
    50                           	psect	text34,local,class=CODE,merge=1,delta=2
    51                           	psect	text35,local,class=CODE,merge=1,delta=2
    52                           	psect	text36,local,class=CODE,merge=1,delta=2
    53                           	psect	intentry,global,class=CODE,delta=2
    54                           	dabs	1,0x7E,2
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  008C                     	;# 
    85  008D                     	;# 
    86  0091                     	;# 
    87  0092                     	;# 
    88  0093                     	;# 
    89  0094                     	;# 
    90  0095                     	;# 
    91  0096                     	;# 
    92  0097                     	;# 
    93  0098                     	;# 
    94  0099                     	;# 
    95  009A                     	;# 
    96  009B                     	;# 
    97  009B                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009E                     	;# 
   101  010C                     	;# 
   102  010D                     	;# 
   103  0111                     	;# 
   104  0112                     	;# 
   105  0113                     	;# 
   106  0114                     	;# 
   107  0115                     	;# 
   108  0116                     	;# 
   109  0117                     	;# 
   110  0118                     	;# 
   111  0119                     	;# 
   112  011A                     	;# 
   113  011B                     	;# 
   114  011D                     	;# 
   115  011E                     	;# 
   116  018C                     	;# 
   117  018D                     	;# 
   118  0191                     	;# 
   119  0191                     	;# 
   120  0192                     	;# 
   121  0193                     	;# 
   122  0193                     	;# 
   123  0193                     	;# 
   124  0194                     	;# 
   125  0195                     	;# 
   126  0196                     	;# 
   127  0199                     	;# 
   128  019A                     	;# 
   129  019B                     	;# 
   130  019B                     	;# 
   131  019B                     	;# 
   132  019B                     	;# 
   133  019C                     	;# 
   134  019C                     	;# 
   135  019D                     	;# 
   136  019E                     	;# 
   137  019F                     	;# 
   138  020C                     	;# 
   139  020D                     	;# 
   140  0211                     	;# 
   141  0211                     	;# 
   142  0212                     	;# 
   143  0212                     	;# 
   144  0213                     	;# 
   145  0213                     	;# 
   146  0214                     	;# 
   147  0214                     	;# 
   148  0215                     	;# 
   149  0215                     	;# 
   150  0215                     	;# 
   151  0216                     	;# 
   152  0216                     	;# 
   153  0217                     	;# 
   154  0217                     	;# 
   155  0219                     	;# 
   156  021A                     	;# 
   157  021B                     	;# 
   158  021C                     	;# 
   159  021D                     	;# 
   160  021E                     	;# 
   161  021F                     	;# 
   162  0291                     	;# 
   163  0291                     	;# 
   164  0292                     	;# 
   165  0293                     	;# 
   166  0294                     	;# 
   167  0295                     	;# 
   168  0295                     	;# 
   169  0296                     	;# 
   170  0298                     	;# 
   171  0298                     	;# 
   172  0299                     	;# 
   173  029A                     	;# 
   174  029B                     	;# 
   175  029C                     	;# 
   176  029C                     	;# 
   177  029D                     	;# 
   178  029E                     	;# 
   179  029E                     	;# 
   180  0311                     	;# 
   181  0311                     	;# 
   182  0312                     	;# 
   183  0313                     	;# 
   184  0318                     	;# 
   185  0318                     	;# 
   186  0319                     	;# 
   187  031A                     	;# 
   188  0394                     	;# 
   189  0395                     	;# 
   190  0396                     	;# 
   191  039A                     	;# 
   192  039C                     	;# 
   193  039D                     	;# 
   194  039E                     	;# 
   195  039F                     	;# 
   196  0415                     	;# 
   197  0416                     	;# 
   198  0417                     	;# 
   199  041C                     	;# 
   200  041D                     	;# 
   201  041E                     	;# 
   202  0FE4                     	;# 
   203  0FE5                     	;# 
   204  0FE6                     	;# 
   205  0FE7                     	;# 
   206  0FE8                     	;# 
   207  0FE9                     	;# 
   208  0FEA                     	;# 
   209  0FEB                     	;# 
   210  0FED                     	;# 
   211  0FEE                     	;# 
   212  0FEF                     	;# 
   213  0000                     	;# 
   214  0001                     	;# 
   215  0002                     	;# 
   216  0003                     	;# 
   217  0004                     	;# 
   218  0005                     	;# 
   219  0006                     	;# 
   220  0007                     	;# 
   221  0008                     	;# 
   222  0009                     	;# 
   223  000A                     	;# 
   224  000B                     	;# 
   225  000C                     	;# 
   226  000D                     	;# 
   227  0011                     	;# 
   228  0012                     	;# 
   229  0013                     	;# 
   230  0014                     	;# 
   231  0015                     	;# 
   232  0016                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001C                     	;# 
   240  001E                     	;# 
   241  001F                     	;# 
   242  008C                     	;# 
   243  008D                     	;# 
   244  0091                     	;# 
   245  0092                     	;# 
   246  0093                     	;# 
   247  0094                     	;# 
   248  0095                     	;# 
   249  0096                     	;# 
   250  0097                     	;# 
   251  0098                     	;# 
   252  0099                     	;# 
   253  009A                     	;# 
   254  009B                     	;# 
   255  009B                     	;# 
   256  009C                     	;# 
   257  009D                     	;# 
   258  009E                     	;# 
   259  010C                     	;# 
   260  010D                     	;# 
   261  0111                     	;# 
   262  0112                     	;# 
   263  0113                     	;# 
   264  0114                     	;# 
   265  0115                     	;# 
   266  0116                     	;# 
   267  0117                     	;# 
   268  0118                     	;# 
   269  0119                     	;# 
   270  011A                     	;# 
   271  011B                     	;# 
   272  011D                     	;# 
   273  011E                     	;# 
   274  018C                     	;# 
   275  018D                     	;# 
   276  0191                     	;# 
   277  0191                     	;# 
   278  0192                     	;# 
   279  0193                     	;# 
   280  0193                     	;# 
   281  0193                     	;# 
   282  0194                     	;# 
   283  0195                     	;# 
   284  0196                     	;# 
   285  0199                     	;# 
   286  019A                     	;# 
   287  019B                     	;# 
   288  019B                     	;# 
   289  019B                     	;# 
   290  019B                     	;# 
   291  019C                     	;# 
   292  019C                     	;# 
   293  019D                     	;# 
   294  019E                     	;# 
   295  019F                     	;# 
   296  020C                     	;# 
   297  020D                     	;# 
   298  0211                     	;# 
   299  0211                     	;# 
   300  0212                     	;# 
   301  0212                     	;# 
   302  0213                     	;# 
   303  0213                     	;# 
   304  0214                     	;# 
   305  0214                     	;# 
   306  0215                     	;# 
   307  0215                     	;# 
   308  0215                     	;# 
   309  0216                     	;# 
   310  0216                     	;# 
   311  0217                     	;# 
   312  0217                     	;# 
   313  0219                     	;# 
   314  021A                     	;# 
   315  021B                     	;# 
   316  021C                     	;# 
   317  021D                     	;# 
   318  021E                     	;# 
   319  021F                     	;# 
   320  0291                     	;# 
   321  0291                     	;# 
   322  0292                     	;# 
   323  0293                     	;# 
   324  0294                     	;# 
   325  0295                     	;# 
   326  0295                     	;# 
   327  0296                     	;# 
   328  0298                     	;# 
   329  0298                     	;# 
   330  0299                     	;# 
   331  029A                     	;# 
   332  029B                     	;# 
   333  029C                     	;# 
   334  029C                     	;# 
   335  029D                     	;# 
   336  029E                     	;# 
   337  029E                     	;# 
   338  0311                     	;# 
   339  0311                     	;# 
   340  0312                     	;# 
   341  0313                     	;# 
   342  0318                     	;# 
   343  0318                     	;# 
   344  0319                     	;# 
   345  031A                     	;# 
   346  0394                     	;# 
   347  0395                     	;# 
   348  0396                     	;# 
   349  039A                     	;# 
   350  039C                     	;# 
   351  039D                     	;# 
   352  039E                     	;# 
   353  039F                     	;# 
   354  0415                     	;# 
   355  0416                     	;# 
   356  0417                     	;# 
   357  041C                     	;# 
   358  041D                     	;# 
   359  041E                     	;# 
   360  0FE4                     	;# 
   361  0FE5                     	;# 
   362  0FE6                     	;# 
   363  0FE7                     	;# 
   364  0FE8                     	;# 
   365  0FE9                     	;# 
   366  0FEA                     	;# 
   367  0FEB                     	;# 
   368  0FED                     	;# 
   369  0FEE                     	;# 
   370  0FEF                     	;# 
   371  0000                     	;# 
   372  0001                     	;# 
   373  0002                     	;# 
   374  0003                     	;# 
   375  0004                     	;# 
   376  0005                     	;# 
   377  0006                     	;# 
   378  0007                     	;# 
   379  0008                     	;# 
   380  0009                     	;# 
   381  000A                     	;# 
   382  000B                     	;# 
   383  000C                     	;# 
   384  000D                     	;# 
   385  0011                     	;# 
   386  0012                     	;# 
   387  0013                     	;# 
   388  0014                     	;# 
   389  0015                     	;# 
   390  0016                     	;# 
   391  0016                     	;# 
   392  0017                     	;# 
   393  0018                     	;# 
   394  0019                     	;# 
   395  001A                     	;# 
   396  001B                     	;# 
   397  001C                     	;# 
   398  001E                     	;# 
   399  001F                     	;# 
   400  008C                     	;# 
   401  008D                     	;# 
   402  0091                     	;# 
   403  0092                     	;# 
   404  0093                     	;# 
   405  0094                     	;# 
   406  0095                     	;# 
   407  0096                     	;# 
   408  0097                     	;# 
   409  0098                     	;# 
   410  0099                     	;# 
   411  009A                     	;# 
   412  009B                     	;# 
   413  009B                     	;# 
   414  009C                     	;# 
   415  009D                     	;# 
   416  009E                     	;# 
   417  010C                     	;# 
   418  010D                     	;# 
   419  0111                     	;# 
   420  0112                     	;# 
   421  0113                     	;# 
   422  0114                     	;# 
   423  0115                     	;# 
   424  0116                     	;# 
   425  0117                     	;# 
   426  0118                     	;# 
   427  0119                     	;# 
   428  011A                     	;# 
   429  011B                     	;# 
   430  011D                     	;# 
   431  011E                     	;# 
   432  018C                     	;# 
   433  018D                     	;# 
   434  0191                     	;# 
   435  0191                     	;# 
   436  0192                     	;# 
   437  0193                     	;# 
   438  0193                     	;# 
   439  0193                     	;# 
   440  0194                     	;# 
   441  0195                     	;# 
   442  0196                     	;# 
   443  0199                     	;# 
   444  019A                     	;# 
   445  019B                     	;# 
   446  019B                     	;# 
   447  019B                     	;# 
   448  019B                     	;# 
   449  019C                     	;# 
   450  019C                     	;# 
   451  019D                     	;# 
   452  019E                     	;# 
   453  019F                     	;# 
   454  020C                     	;# 
   455  020D                     	;# 
   456  0211                     	;# 
   457  0211                     	;# 
   458  0212                     	;# 
   459  0212                     	;# 
   460  0213                     	;# 
   461  0213                     	;# 
   462  0214                     	;# 
   463  0214                     	;# 
   464  0215                     	;# 
   465  0215                     	;# 
   466  0215                     	;# 
   467  0216                     	;# 
   468  0216                     	;# 
   469  0217                     	;# 
   470  0217                     	;# 
   471  0219                     	;# 
   472  021A                     	;# 
   473  021B                     	;# 
   474  021C                     	;# 
   475  021D                     	;# 
   476  021E                     	;# 
   477  021F                     	;# 
   478  0291                     	;# 
   479  0291                     	;# 
   480  0292                     	;# 
   481  0293                     	;# 
   482  0294                     	;# 
   483  0295                     	;# 
   484  0295                     	;# 
   485  0296                     	;# 
   486  0298                     	;# 
   487  0298                     	;# 
   488  0299                     	;# 
   489  029A                     	;# 
   490  029B                     	;# 
   491  029C                     	;# 
   492  029C                     	;# 
   493  029D                     	;# 
   494  029E                     	;# 
   495  029E                     	;# 
   496  0311                     	;# 
   497  0311                     	;# 
   498  0312                     	;# 
   499  0313                     	;# 
   500  0318                     	;# 
   501  0318                     	;# 
   502  0319                     	;# 
   503  031A                     	;# 
   504  0394                     	;# 
   505  0395                     	;# 
   506  0396                     	;# 
   507  039A                     	;# 
   508  039C                     	;# 
   509  039D                     	;# 
   510  039E                     	;# 
   511  039F                     	;# 
   512  0415                     	;# 
   513  0416                     	;# 
   514  0417                     	;# 
   515  041C                     	;# 
   516  041D                     	;# 
   517  041E                     	;# 
   518  0FE4                     	;# 
   519  0FE5                     	;# 
   520  0FE6                     	;# 
   521  0FE7                     	;# 
   522  0FE8                     	;# 
   523  0FE9                     	;# 
   524  0FEA                     	;# 
   525  0FEB                     	;# 
   526  0FED                     	;# 
   527  0FEE                     	;# 
   528  0FEF                     	;# 
   529  0000                     	;# 
   530  0001                     	;# 
   531  0002                     	;# 
   532  0003                     	;# 
   533  0004                     	;# 
   534  0005                     	;# 
   535  0006                     	;# 
   536  0007                     	;# 
   537  0008                     	;# 
   538  0009                     	;# 
   539  000A                     	;# 
   540  000B                     	;# 
   541  000C                     	;# 
   542  000D                     	;# 
   543  0011                     	;# 
   544  0012                     	;# 
   545  0013                     	;# 
   546  0014                     	;# 
   547  0015                     	;# 
   548  0016                     	;# 
   549  0016                     	;# 
   550  0017                     	;# 
   551  0018                     	;# 
   552  0019                     	;# 
   553  001A                     	;# 
   554  001B                     	;# 
   555  001C                     	;# 
   556  001E                     	;# 
   557  001F                     	;# 
   558  008C                     	;# 
   559  008D                     	;# 
   560  0091                     	;# 
   561  0092                     	;# 
   562  0093                     	;# 
   563  0094                     	;# 
   564  0095                     	;# 
   565  0096                     	;# 
   566  0097                     	;# 
   567  0098                     	;# 
   568  0099                     	;# 
   569  009A                     	;# 
   570  009B                     	;# 
   571  009B                     	;# 
   572  009C                     	;# 
   573  009D                     	;# 
   574  009E                     	;# 
   575  010C                     	;# 
   576  010D                     	;# 
   577  0111                     	;# 
   578  0112                     	;# 
   579  0113                     	;# 
   580  0114                     	;# 
   581  0115                     	;# 
   582  0116                     	;# 
   583  0117                     	;# 
   584  0118                     	;# 
   585  0119                     	;# 
   586  011A                     	;# 
   587  011B                     	;# 
   588  011D                     	;# 
   589  011E                     	;# 
   590  018C                     	;# 
   591  018D                     	;# 
   592  0191                     	;# 
   593  0191                     	;# 
   594  0192                     	;# 
   595  0193                     	;# 
   596  0193                     	;# 
   597  0193                     	;# 
   598  0194                     	;# 
   599  0195                     	;# 
   600  0196                     	;# 
   601  0199                     	;# 
   602  019A                     	;# 
   603  019B                     	;# 
   604  019B                     	;# 
   605  019B                     	;# 
   606  019B                     	;# 
   607  019C                     	;# 
   608  019C                     	;# 
   609  019D                     	;# 
   610  019E                     	;# 
   611  019F                     	;# 
   612  020C                     	;# 
   613  020D                     	;# 
   614  0211                     	;# 
   615  0211                     	;# 
   616  0212                     	;# 
   617  0212                     	;# 
   618  0213                     	;# 
   619  0213                     	;# 
   620  0214                     	;# 
   621  0214                     	;# 
   622  0215                     	;# 
   623  0215                     	;# 
   624  0215                     	;# 
   625  0216                     	;# 
   626  0216                     	;# 
   627  0217                     	;# 
   628  0217                     	;# 
   629  0219                     	;# 
   630  021A                     	;# 
   631  021B                     	;# 
   632  021C                     	;# 
   633  021D                     	;# 
   634  021E                     	;# 
   635  021F                     	;# 
   636  0291                     	;# 
   637  0291                     	;# 
   638  0292                     	;# 
   639  0293                     	;# 
   640  0294                     	;# 
   641  0295                     	;# 
   642  0295                     	;# 
   643  0296                     	;# 
   644  0298                     	;# 
   645  0298                     	;# 
   646  0299                     	;# 
   647  029A                     	;# 
   648  029B                     	;# 
   649  029C                     	;# 
   650  029C                     	;# 
   651  029D                     	;# 
   652  029E                     	;# 
   653  029E                     	;# 
   654  0311                     	;# 
   655  0311                     	;# 
   656  0312                     	;# 
   657  0313                     	;# 
   658  0318                     	;# 
   659  0318                     	;# 
   660  0319                     	;# 
   661  031A                     	;# 
   662  0394                     	;# 
   663  0395                     	;# 
   664  0396                     	;# 
   665  039A                     	;# 
   666  039C                     	;# 
   667  039D                     	;# 
   668  039E                     	;# 
   669  039F                     	;# 
   670  0415                     	;# 
   671  0416                     	;# 
   672  0417                     	;# 
   673  041C                     	;# 
   674  041D                     	;# 
   675  041E                     	;# 
   676  0FE4                     	;# 
   677  0FE5                     	;# 
   678  0FE6                     	;# 
   679  0FE7                     	;# 
   680  0FE8                     	;# 
   681  0FE9                     	;# 
   682  0FEA                     	;# 
   683  0FEB                     	;# 
   684  0FED                     	;# 
   685  0FEE                     	;# 
   686  0FEF                     	;# 
   687                           
   688                           	psect	idataBANK1
   689  0B85                     __pidataBANK1:	
   690                           
   691                           ;initializer for _i_u_offs
   692  0B85  3400               	retlw	0
   693  0B86  3448               	retlw	72
   694  0B87  34C1               	retlw	193
   695                           
   696                           ;initializer for _curr_time
   697  0B88  34FF               	retlw	255
   698  0B89  34FF               	retlw	255
   699                           
   700                           ;initializer for _volt_time
   701  0B8A  34FF               	retlw	255
   702  0B8B  34FF               	retlw	255
   703                           
   704                           	psect	stringtext
   705  07DF                     __pstringtext:	
   706  07DF                     _get_shift_byte:	
   707  07DF  3481               	retlw	129
   708  07E0  34BD               	retlw	189
   709  07E1  34C8               	retlw	200
   710  07E2  3498               	retlw	152
   711  07E3  34B4               	retlw	180
   712  07E4  3492               	retlw	146
   713  07E5  3482               	retlw	130
   714  07E6  34B9               	retlw	185
   715  07E7  3480               	retlw	128
   716  07E8  3490               	retlw	144
   717  07E9                     __end_of_get_shift_byte:	
   718  07E9                     sin@coeff_a:	
   719  07E9  34F4               	retlw	244
   720  07EA  344A               	retlw	74
   721  07EB  3448               	retlw	72
   722  07EC  3495               	retlw	149
   723  07ED  3495               	retlw	149
   724  07EE  34C7               	retlw	199
   725  07EF  34C1               	retlw	193
   726  07F0  34DC               	retlw	220
   727  07F1  3445               	retlw	69
   728  07F2  34DC               	retlw	220
   729  07F3  346D               	retlw	109
   730  07F4  34C3               	retlw	195
   731  07F5  34B3               	retlw	179
   732  07F6  3433               	retlw	51
   733  07F7  3440               	retlw	64
   734  07F8                     __end_ofsin@coeff_a:	
   735  07F8                     sin@coeff_b:	
   736  07F8  3434               	retlw	52
   737  07F9  3401               	retlw	1
   738  07FA  3448               	retlw	72
   739  07FB  349D               	retlw	157
   740  07FC  34B0               	retlw	176
   741  07FD  3445               	retlw	69
   742  07FE  3400               	retlw	0
   743  07FF  34DA               	retlw	218
   744  0800  3442               	retlw	66
   745  0801  3400               	retlw	0
   746  0802  3480               	retlw	128
   747  0803  343F               	retlw	63
   748  0804                     __end_ofsin@coeff_b:	
   749  0016                     _TMR1	set	22
   750  000C                     _PORTA	set	12
   751  000D                     _PORTB	set	13
   752  001B                     _PR2	set	27
   753  0095                     _C1IF	set	149
   754  0096                     _C2IF	set	150
   755  005F                     _GIE	set	95
   756  005E                     _PEIE	set	94
   757  0063                     _RA3	set	99
   758  0064                     _RA4	set	100
   759  0066                     _RA6	set	102
   760  0067                     _RA7	set	103
   761  008D                     _RCIF	set	141
   762  00C4                     _T1CKPS0	set	196
   763  00C5                     _T1CKPS1	set	197
   764  00E0                     _T2CKPS0	set	224
   765  00E1                     _T2CKPS1	set	225
   766  00E3                     _T2OUTPS0	set	227
   767  00E4                     _T2OUTPS1	set	228
   768  00E5                     _T2OUTPS2	set	229
   769  00E6                     _T2OUTPS3	set	230
   770  00C6                     _TMR1CS0	set	198
   771  00C7                     _TMR1CS1	set	199
   772  0088                     _TMR1IF	set	136
   773  00C0                     _TMR1ON	set	192
   774  0089                     _TMR2IF	set	137
   775  00E2                     _TMR2ON	set	226
   776  0099                     _TMR4IF	set	153
   777  008C                     _TRISA	set	140
   778  008D                     _TRISB	set	141
   779  008D                     _TRISBbits	set	141
   780  009B                     _ADRES	set	155
   781  04F4                     _ADCS0	set	1268
   782  04F5                     _ADCS1	set	1269
   783  04F6                     _ADCS2	set	1270
   784  04F7                     _ADFM	set	1271
   785  04F2                     _ADNREF	set	1266
   786  04E8                     _ADON	set	1256
   787  04F0                     _ADPREF0	set	1264
   788  04F1                     _ADPREF1	set	1265
   789  0495                     _C1IE	set	1173
   790  0496                     _C2IE	set	1174
   791  04EA                     _CHS0	set	1258
   792  04EB                     _CHS1	set	1259
   793  04EC                     _CHS2	set	1260
   794  04ED                     _CHS3	set	1261
   795  04EE                     _CHS4	set	1262
   796  04E9                     _GO_nDONE	set	1257
   797  04CB                     _IRCF0	set	1227
   798  04CC                     _IRCF1	set	1228
   799  04CD                     _IRCF2	set	1229
   800  04CE                     _IRCF3	set	1230
   801  048D                     _RCIE	set	1165
   802  04C8                     _SCS0	set	1224
   803  04C9                     _SCS1	set	1225
   804  04CF                     _SPLLEN	set	1231
   805  0488                     _TMR1IE	set	1160
   806  0489                     _TMR2IE	set	1161
   807  04AF                     _nWPUEN	set	1199
   808  08B8                     _ADFVR0	set	2232
   809  08B9                     _ADFVR1	set	2233
   810  0897                     _C1INTP	set	2199
   811  0890                     _C1NCH0	set	2192
   812  0891                     _C1NCH1	set	2193
   813  088F                     _C1ON	set	2191
   814  0894                     _C1PCH0	set	2196
   815  0895                     _C1PCH1	set	2197
   816  08A7                     _C2INTP	set	2215
   817  08A0                     _C2NCH0	set	2208
   818  08A1                     _C2NCH1	set	2209
   819  089F                     _C2ON	set	2207
   820  08A4                     _C2PCH0	set	2212
   821  08A5                     _C2PCH1	set	2213
   822  08E8                     _CCP1SEL	set	2280
   823  08BA                     _CDAFVR0	set	2234
   824  08BB                     _CDAFVR1	set	2235
   825  08BF                     _FVREN	set	2239
   826  08BE                     _FVRRDY	set	2238
   827  08EF                     _RXDTSEL	set	2287
   828  08F0                     _TXCKSEL	set	2288
   829  018C                     _ANSELA	set	396
   830  018D                     _ANSELB	set	397
   831  0199                     _RCREG	set	409
   832  019B                     _SPBRG	set	411
   833  019A                     _TXREG	set	410
   834  0CFB                     _BRG16	set	3323
   835  0CF2                     _BRGH	set	3314
   836  0CEC                     _CREN	set	3308
   837  0CEF                     _SPEN	set	3311
   838  0CF4                     _SYNC	set	3316
   839  0CF1                     _TRMT	set	3313
   840  0CF5                     _TXEN	set	3317
   841  020D                     _WPUB	set	525
   842  0293                     _CCP1CON	set	659
   843  0291                     _CCPR1L	set	657
   844  14F0                     _C1TSEL0	set	5360
   845  14F1                     _C1TSEL1	set	5361
   846  149C                     _DC1B0	set	5276
   847  149D                     _DC1B1	set	5277
   848  20B8                     _T4CKPS0	set	8376
   849  20B9                     _T4CKPS1	set	8377
   850  20BA                     _TMR4ON	set	8378
   851  0804                     STR_3:	
   852  0804  3463               	retlw	99	;'c'
   853  0805  3475               	retlw	117	;'u'
   854  0806  3472               	retlw	114	;'r'
   855  0807  3472               	retlw	114	;'r'
   856  0808  3465               	retlw	101	;'e'
   857  0809  346E               	retlw	110	;'n'
   858  080A  3474               	retlw	116	;'t'
   859  080B  342F               	retlw	47	;'/'
   860  080C  3461               	retlw	97	;'a'
   861  080D  346D               	retlw	109	;'m'
   862  080E  3470               	retlw	112	;'p'
   863  080F  3465               	retlw	101	;'e'
   864  0810  3472               	retlw	114	;'r'
   865  0811  3465               	retlw	101	;'e'
   866  0812  3400               	retlw	0
   867  0813                     STR_2:	
   868  0813  3461               	retlw	97	;'a'
   869  0814  346E               	retlw	110	;'n'
   870  0815  3467               	retlw	103	;'g'
   871  0816  346C               	retlw	108	;'l'
   872  0817  3465               	retlw	101	;'e'
   873  0818  342F               	retlw	47	;'/'
   874  0819  3472               	retlw	114	;'r'
   875  081A  3461               	retlw	97	;'a'
   876  081B  3464               	retlw	100	;'d'
   877  081C  3400               	retlw	0
   878  081D                     STR_1:	
   879  081D  3464               	retlw	100	;'d'
   880  081E  3469               	retlw	105	;'i'
   881  081F  3466               	retlw	102	;'f'
   882  0820  3466               	retlw	102	;'f'
   883  0821  342F               	retlw	47	;'/'
   884  0822  3475               	retlw	117	;'u'
   885  0823  3473               	retlw	115	;'s'
   886  0824  3400               	retlw	0
   887                           
   888                           ; #config settings
   889  0000                     
   890                           	psect	cinit
   891  0067                     start_initialization:	
   892  0067                     __initialization:	
   893                           
   894                           ; Clear objects allocated to COMMON
   895  0067  01FA               	clrf	__pbssCOMMON& (0+127)
   896  0068  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   897                           
   898                           ; Clear objects allocated to BANK0
   899  0069  01ED               	clrf	__pbssBANK0& (0+127)
   900                           
   901                           ; Clear objects allocated to BANK1
   902  006A  30A0               	movlw	low __pbssBANK1
   903  006B  0084               	movwf	4
   904  006C  3000               	movlw	high __pbssBANK1
   905  006D  0085               	movwf	5
   906  006E  3025               	movlw	37
   907  006F  318B  2378  3180   	fcall	clear_ram0
   908                           
   909                           ; Initialize objects allocated to BANK1
   910  0072  3085               	movlw	low __pidataBANK1
   911  0073  0084               	movwf	4
   912  0074  308B               	movlw	(high __pidataBANK1)| (0+128)
   913  0075  0085               	movwf	5
   914  0076  30E2               	movlw	low __pdataBANK1
   915  0077  0086               	movwf	6
   916  0078  3000               	movlw	high __pdataBANK1
   917  0079  0087               	movwf	7
   918  007A  3007               	movlw	7
   919  007B  318B  2372         	fcall	init_ram
   920  007D                     end_of_initialization:	
   921                           ;End of C runtime variable initialization code
   922                           
   923  007D                     __end_of__initialization:	
   924  007D  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   925  007E  0020               	movlb	0
   926  007F  3180  2881         	ljmp	_main	;jump to C main() function
   927                           
   928                           	psect	bssCOMMON
   929  007A                     __pbssCOMMON:	
   930  007A                     _buffpos:	
   931  007A                     	ds	1
   932  007B                     _readpos:	
   933  007B                     	ds	1
   934                           
   935                           	psect	bssBANK0
   936  006D                     __pbssBANK0:	
   937  006D                     _reading:	
   938  006D                     	ds	1
   939                           
   940                           	psect	bssBANK1
   941  00A0                     __pbssBANK1:	
   942  00A0                     _receive_buff:	
   943  00A0                     	ds	32
   944  00C0                     _errno:	
   945  00C0                     	ds	2
   946  00C2                     _led_rest:	
   947  00C2                     	ds	2
   948  00C4                     _flag:	
   949  00C4                     	ds	1
   950                           
   951                           	psect	dataBANK1
   952  00E2                     __pdataBANK1:	
   953  00E2                     _i_u_offs:	
   954  00E2                     	ds	3
   955  00E5                     _curr_time:	
   956  00E5                     	ds	2
   957  00E7                     _volt_time:	
   958  00E7                     	ds	2
   959                           
   960                           	psect	clrtext
   961  0B78                     clear_ram0:	
   962                           ;	Called with FSR0 containing the base address, and
   963                           ;	WREG with the size to clear
   964                           
   965  0B78  0064               	clrwdt	;clear the watchdog before getting into this loop
   966  0B79                     clrloop0:	
   967  0B79  0180               	clrf	0	;clear RAM location pointed to by FSR
   968  0B7A  3101               	addfsr 0,1
   969  0B7B  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   970  0B7C  2B79               	goto	clrloop0	;have we reached the end yet?
   971  0B7D  3400               	retlw	0	;all done for this memory range, return
   972                           
   973                           	psect	inittext
   974  0B72                     init_ram:	
   975  0B72  00FE               	movwf	126
   976  0B73                     initloop:	
   977  0B73  0012               	moviw fsr0++
   978  0B74  001E               	movwi fsr1++
   979  0B75  0BFE               	decfsz	126,f
   980  0B76  2B73               	goto	initloop
   981  0B77  3400               	retlw	0
   982                           
   983                           	psect	cstackBANK1
   984  00C5                     __pcstackBANK1:	
   985  00C5                     sin@y:	
   986                           
   987                           ; 3 bytes @ 0x0
   988  00C5                     	ds	3
   989  00C8                     _sin$987:	
   990                           
   991                           ; 3 bytes @ 0x3
   992  00C8                     	ds	3
   993  00CB                     sin@x2:	
   994                           
   995                           ; 3 bytes @ 0x6
   996  00CB                     	ds	3
   997  00CE                     sin@sgn:	
   998                           
   999                           ; 1 bytes @ 0x9
  1000  00CE                     	ds	1
  1001  00CF                     _cos$986:	
  1002                           
  1003                           ; 3 bytes @ 0xA
  1004  00CF                     	ds	3
  1005  00D2                     main@angle:	
  1006                           
  1007                           ; 3 bytes @ 0xD
  1008  00D2                     	ds	3
  1009  00D5                     _main$981:	
  1010                           
  1011                           ; 3 bytes @ 0x10
  1012  00D5                     	ds	3
  1013  00D8                     _main$982:	
  1014                           
  1015                           ; 3 bytes @ 0x13
  1016  00D8                     	ds	3
  1017  00DB                     main@diff_:	
  1018                           
  1019                           ; 3 bytes @ 0x16
  1020  00DB                     	ds	3
  1021  00DE                     main@diff:	
  1022                           
  1023                           ; 4 bytes @ 0x19
  1024  00DE                     	ds	4
  1025                           
  1026                           	psect	cstackCOMMON
  1027  0070                     __pcstackCOMMON:	
  1028  0070                     ?_initMessaging:	
  1029  0070                     ?_initPins:	
  1030                           ; 1 bytes @ 0x0
  1031                           
  1032  0070                     ?_initADC:	
  1033                           ; 1 bytes @ 0x0
  1034                           
  1035  0070                     ?_initTMR1:	
  1036                           ; 1 bytes @ 0x0
  1037                           
  1038  0070                     ?_initFVR:	
  1039                           ; 1 bytes @ 0x0
  1040                           
  1041  0070                     ?_initPWMTMR4:	
  1042                           ; 1 bytes @ 0x0
  1043                           
  1044  0070                     ?_initCOMP1:	
  1045                           ; 1 bytes @ 0x0
  1046                           
  1047  0070                     ?_initCOMP2:	
  1048                           ; 1 bytes @ 0x0
  1049                           
  1050  0070                     ?_initBT:	
  1051                           ; 1 bytes @ 0x0
  1052                           
  1053  0070                     ?_adc:	
  1054                           ; 1 bytes @ 0x0
  1055                           
  1056  0070                     ?_ISR:	
  1057                           ; 1 bytes @ 0x0
  1058                           
  1059  0070                     ??_ISR:	
  1060                           ; 1 bytes @ 0x0
  1061                           
  1062  0070                     ?_main:	
  1063                           ; 1 bytes @ 0x0
  1064                           
  1065  0070                     ?__sendchar_:	
  1066                           ; 1 bytes @ 0x0
  1067                           
  1068                           
  1069                           ; 1 bytes @ 0x0
  1070  0070                     	ds	2
  1071  0072                     ?___ftge:	
  1072  0072                     ??_initMessaging:	
  1073                           ; 1 bit 
  1074                           
  1075  0072                     ??_initPins:	
  1076                           ; 1 bytes @ 0x2
  1077                           
  1078  0072                     ??_initADC:	
  1079                           ; 1 bytes @ 0x2
  1080                           
  1081  0072                     ??_initTMR1:	
  1082                           ; 1 bytes @ 0x2
  1083                           
  1084  0072                     ??_initFVR:	
  1085                           ; 1 bytes @ 0x2
  1086                           
  1087  0072                     ??_initPWMTMR4:	
  1088                           ; 1 bytes @ 0x2
  1089                           
  1090  0072                     ??_initCOMP1:	
  1091                           ; 1 bytes @ 0x2
  1092                           
  1093  0072                     ??_initCOMP2:	
  1094                           ; 1 bytes @ 0x2
  1095                           
  1096  0072                     ??_initBT:	
  1097                           ; 1 bytes @ 0x2
  1098                           
  1099  0072                     ??_adc:	
  1100                           ; 1 bytes @ 0x2
  1101                           
  1102  0072                     ??__sendchar_:	
  1103                           ; 1 bytes @ 0x2
  1104                           
  1105  0072                     ?_deltaT:	
  1106                           ; 1 bytes @ 0x2
  1107                           
  1108  0072                     ?___wmul:	
  1109                           ; 2 bytes @ 0x2
  1110                           
  1111  0072                     ?___ftpack:	
  1112                           ; 2 bytes @ 0x2
  1113                           
  1114  0072                     ?_frexp:	
  1115                           ; 3 bytes @ 0x2
  1116                           
  1117  0072                     ?___lmul:	
  1118                           ; 3 bytes @ 0x2
  1119                           
  1120  0072                     ?___fttol:	
  1121                           ; 4 bytes @ 0x2
  1122                           
  1123  0072                     ?___lldiv:	
  1124                           ; 4 bytes @ 0x2
  1125                           
  1126  0072                     __sendchar_@c:	
  1127                           ; 4 bytes @ 0x2
  1128                           
  1129  0072                     deltaT@tm_low:	
  1130                           ; 1 bytes @ 0x2
  1131                           
  1132  0072                     ___wmul@multiplier:	
  1133                           ; 2 bytes @ 0x2
  1134                           
  1135  0072                     ___ftpack@arg:	
  1136                           ; 2 bytes @ 0x2
  1137                           
  1138  0072                     ___ftge@ff1:	
  1139                           ; 3 bytes @ 0x2
  1140                           
  1141  0072                     ___fttol@f1:	
  1142                           ; 3 bytes @ 0x2
  1143                           
  1144  0072                     frexp@value:	
  1145                           ; 3 bytes @ 0x2
  1146                           
  1147  0072                     ___lmul@multiplier:	
  1148                           ; 3 bytes @ 0x2
  1149                           
  1150  0072                     ___lldiv@divisor:	
  1151                           ; 4 bytes @ 0x2
  1152                           
  1153                           
  1154                           ; 4 bytes @ 0x2
  1155  0072                     	ds	1
  1156  0073                     ?_sendString:	
  1157  0073                     ?_sendInt32:	
  1158                           ; 1 bytes @ 0x3
  1159                           
  1160  0073                     adc@src:	
  1161                           ; 1 bytes @ 0x3
  1162                           
  1163  0073                     sendString@val:	
  1164                           ; 1 bytes @ 0x3
  1165                           
  1166  0073                     sendInt32@i:	
  1167                           ; 2 bytes @ 0x3
  1168                           
  1169                           
  1170                           ; 4 bytes @ 0x3
  1171  0073                     	ds	1
  1172  0074                     deltaT@tm_high:	
  1173  0074                     ___wmul@multiplicand:	
  1174                           ; 2 bytes @ 0x4
  1175                           
  1176                           
  1177                           ; 2 bytes @ 0x4
  1178  0074                     	ds	1
  1179  0075                     ??_sendString:	
  1180  0075                     ___ftpack@exp:	
  1181                           ; 1 bytes @ 0x5
  1182                           
  1183  0075                     frexp@eptr:	
  1184                           ; 1 bytes @ 0x5
  1185                           
  1186  0075                     ___ftge@ff2:	
  1187                           ; 1 bytes @ 0x5
  1188                           
  1189                           
  1190                           ; 3 bytes @ 0x5
  1191  0075                     	ds	1
  1192  0076                     ??_frexp:	
  1193  0076                     ??_deltaT:	
  1194                           ; 1 bytes @ 0x6
  1195                           
  1196  0076                     ??___wmul:	
  1197                           ; 1 bytes @ 0x6
  1198                           
  1199  0076                     ??___fttol:	
  1200                           ; 1 bytes @ 0x6
  1201                           
  1202  0076                     ___ftpack@sign:	
  1203                           ; 1 bytes @ 0x6
  1204                           
  1205  0076                     ___wmul@product:	
  1206                           ; 1 bytes @ 0x6
  1207                           
  1208  0076                     ___lmul@multiplicand:	
  1209                           ; 2 bytes @ 0x6
  1210                           
  1211  0076                     ___lldiv@dividend:	
  1212                           ; 4 bytes @ 0x6
  1213                           
  1214                           
  1215                           ; 4 bytes @ 0x6
  1216  0076                     	ds	1
  1217  0077                     ??___ftpack:	
  1218                           
  1219                           ; 1 bytes @ 0x7
  1220  0077                     	ds	3
  1221  007A                     ??_cos:	
  1222  007A                     ??_eval_poly:	
  1223                           ; 1 bytes @ 0xA
  1224                           
  1225  007A                     ??_readCurrent:	
  1226                           ; 1 bytes @ 0xA
  1227                           
  1228  007A                     ??_readVdd:	
  1229                           ; 1 bytes @ 0xA
  1230                           
  1231  007A                     ??_main:	
  1232                           ; 1 bytes @ 0xA
  1233                           
  1234  007A                     ??___lmul:	
  1235                           ; 1 bytes @ 0xA
  1236                           
  1237  007A                     ??___ftneg:	
  1238                           ; 1 bytes @ 0xA
  1239                           
  1240  007A                     ??___ftsub:	
  1241                           ; 1 bytes @ 0xA
  1242                           
  1243                           
  1244                           	psect	cstackBANK0
  1245  0020                     __pcstackBANK0:	
  1246                           ; 1 bytes @ 0xA
  1247                           
  1248  0020                     ??_sendInt32:	
  1249  0020                     ??___ftge:	
  1250                           ; 1 bytes @ 0x0
  1251                           
  1252  0020                     ??___lldiv:	
  1253                           ; 1 bytes @ 0x0
  1254                           
  1255  0020                     ?___lltoft:	
  1256                           ; 1 bytes @ 0x0
  1257                           
  1258  0020                     ?___lwtoft:	
  1259                           ; 3 bytes @ 0x0
  1260                           
  1261  0020                     ___fttol@sign1:	
  1262                           ; 3 bytes @ 0x0
  1263                           
  1264  0020                     deltaT@res:	
  1265                           ; 1 bytes @ 0x0
  1266                           
  1267  0020                     ___lwtoft@c:	
  1268                           ; 2 bytes @ 0x0
  1269                           
  1270  0020                     ___lmul@product:	
  1271                           ; 2 bytes @ 0x0
  1272                           
  1273  0020                     ___lltoft@c:	
  1274                           ; 4 bytes @ 0x0
  1275                           
  1276                           
  1277                           ; 4 bytes @ 0x0
  1278  0020                     	ds	1
  1279  0021                     ___fttol@lval:	
  1280  0021                     ___lldiv@quotient:	
  1281                           ; 4 bytes @ 0x1
  1282                           
  1283                           
  1284                           ; 4 bytes @ 0x1
  1285  0021                     	ds	2
  1286  0023                     ??___lwtoft:	
  1287                           
  1288                           ; 1 bytes @ 0x3
  1289  0023                     	ds	1
  1290  0024                     ??___lltoft:	
  1291  0024                     ?___ftmul:	
  1292                           ; 1 bytes @ 0x4
  1293                           
  1294  0024                     ___ftmul@f1:	
  1295                           ; 3 bytes @ 0x4
  1296                           
  1297                           
  1298                           ; 3 bytes @ 0x4
  1299  0024                     	ds	1
  1300  0025                     ___fttol@exp1:	
  1301  0025                     ___lldiv@counter:	
  1302                           ; 1 bytes @ 0x5
  1303                           
  1304  0025                     ___lltoft@exp:	
  1305                           ; 1 bytes @ 0x5
  1306                           
  1307                           
  1308                           ; 1 bytes @ 0x5
  1309  0025                     	ds	1
  1310  0026                     ?___altoft:	
  1311  0026                     ___altoft@c:	
  1312                           ; 3 bytes @ 0x6
  1313                           
  1314                           
  1315                           ; 4 bytes @ 0x6
  1316  0026                     	ds	1
  1317  0027                     ___ftmul@f2:	
  1318                           
  1319                           ; 3 bytes @ 0x7
  1320  0027                     	ds	3
  1321  002A                     ??___altoft:	
  1322  002A                     ??___ftmul:	
  1323                           ; 1 bytes @ 0xA
  1324                           
  1325                           
  1326                           ; 1 bytes @ 0xA
  1327  002A                     	ds	2
  1328  002C                     ___altoft@exp:	
  1329                           
  1330                           ; 1 bytes @ 0xC
  1331  002C                     	ds	1
  1332  002D                     ___altoft@sign:	
  1333                           
  1334                           ; 1 bytes @ 0xD
  1335  002D                     	ds	1
  1336  002E                     ___ftmul@exp:	
  1337                           
  1338                           ; 1 bytes @ 0xE
  1339  002E                     	ds	1
  1340  002F                     ___ftmul@f3_as_product:	
  1341                           
  1342                           ; 3 bytes @ 0xF
  1343  002F                     	ds	3
  1344  0032                     ___ftmul@cntr:	
  1345                           
  1346                           ; 1 bytes @ 0x12
  1347  0032                     	ds	1
  1348  0033                     ___ftmul@sign:	
  1349                           
  1350                           ; 1 bytes @ 0x13
  1351  0033                     	ds	1
  1352  0034                     ?___ftdiv:	
  1353  0034                     ___ftdiv@f2:	
  1354                           ; 3 bytes @ 0x14
  1355                           
  1356                           
  1357                           ; 3 bytes @ 0x14
  1358  0034                     	ds	3
  1359  0037                     ___ftdiv@f1:	
  1360                           
  1361                           ; 3 bytes @ 0x17
  1362  0037                     	ds	3
  1363  003A                     ??___ftdiv:	
  1364                           
  1365                           ; 1 bytes @ 0x1A
  1366  003A                     	ds	4
  1367  003E                     ___ftdiv@cntr:	
  1368                           
  1369                           ; 1 bytes @ 0x1E
  1370  003E                     	ds	1
  1371  003F                     ___ftdiv@f3:	
  1372                           
  1373                           ; 3 bytes @ 0x1F
  1374  003F                     	ds	3
  1375  0042                     ___ftdiv@exp:	
  1376                           
  1377                           ; 1 bytes @ 0x22
  1378  0042                     	ds	1
  1379  0043                     ___ftdiv@sign:	
  1380                           
  1381                           ; 1 bytes @ 0x23
  1382  0043                     	ds	1
  1383  0044                     ?_readVdd:	
  1384                           
  1385                           ; 3 bytes @ 0x24
  1386  0044                     	ds	3
  1387  0047                     ?___ftneg:	
  1388  0047                     ___ftneg@f1:	
  1389                           ; 3 bytes @ 0x27
  1390                           
  1391                           
  1392                           ; 3 bytes @ 0x27
  1393  0047                     	ds	3
  1394  004A                     ?___ftadd:	
  1395  004A                     ___ftadd@f1:	
  1396                           ; 3 bytes @ 0x2A
  1397                           
  1398                           
  1399                           ; 3 bytes @ 0x2A
  1400  004A                     	ds	3
  1401  004D                     ___ftadd@f2:	
  1402                           
  1403                           ; 3 bytes @ 0x2D
  1404  004D                     	ds	3
  1405  0050                     ??___ftadd:	
  1406                           
  1407                           ; 1 bytes @ 0x30
  1408  0050                     	ds	4
  1409  0054                     ___ftadd@sign:	
  1410                           
  1411                           ; 1 bytes @ 0x34
  1412  0054                     	ds	1
  1413  0055                     ___ftadd@exp2:	
  1414                           
  1415                           ; 1 bytes @ 0x35
  1416  0055                     	ds	1
  1417  0056                     ___ftadd@exp1:	
  1418                           
  1419                           ; 1 bytes @ 0x36
  1420  0056                     	ds	1
  1421  0057                     ?_floor:	
  1422  0057                     ?_eval_poly:	
  1423                           ; 3 bytes @ 0x37
  1424                           
  1425  0057                     ?_readCurrent:	
  1426                           ; 3 bytes @ 0x37
  1427                           
  1428  0057                     eval_poly@x:	
  1429                           ; 3 bytes @ 0x37
  1430                           
  1431  0057                     floor@x:	
  1432                           ; 3 bytes @ 0x37
  1433                           
  1434                           
  1435                           ; 3 bytes @ 0x37
  1436  0057                     	ds	3
  1437  005A                     ??_floor:	
  1438  005A                     eval_poly@d:	
  1439                           ; 1 bytes @ 0x3A
  1440                           
  1441  005A                     _readCurrent$980:	
  1442                           ; 2 bytes @ 0x3A
  1443                           
  1444                           
  1445                           ; 3 bytes @ 0x3A
  1446  005A                     	ds	1
  1447  005B                     floor@i:	
  1448                           
  1449                           ; 3 bytes @ 0x3B
  1450  005B                     	ds	1
  1451  005C                     eval_poly@n:	
  1452                           
  1453                           ; 2 bytes @ 0x3C
  1454  005C                     	ds	1
  1455  005D                     ?_sendFloat:	
  1456  005D                     sendFloat@f:	
  1457                           ; 1 bytes @ 0x3D
  1458                           
  1459                           
  1460                           ; 3 bytes @ 0x3D
  1461  005D                     	ds	1
  1462  005E                     floor@expon:	
  1463  005E                     eval_poly@res:	
  1464                           ; 2 bytes @ 0x3E
  1465                           
  1466                           
  1467                           ; 3 bytes @ 0x3E
  1468  005E                     	ds	2
  1469  0060                     ??_sendFloat:	
  1470  0060                     ?___ftsub:	
  1471                           ; 1 bytes @ 0x40
  1472                           
  1473  0060                     ___ftsub@f2:	
  1474                           ; 3 bytes @ 0x40
  1475                           
  1476                           
  1477                           ; 3 bytes @ 0x40
  1478  0060                     	ds	3
  1479  0063                     sendFloat@ptr:	
  1480  0063                     ___ftsub@f1:	
  1481                           ; 1 bytes @ 0x43
  1482                           
  1483                           
  1484                           ; 3 bytes @ 0x43
  1485  0063                     	ds	3
  1486  0066                     ?_sin:	
  1487  0066                     sin@f:	
  1488                           ; 3 bytes @ 0x46
  1489                           
  1490                           
  1491                           ; 3 bytes @ 0x46
  1492  0066                     	ds	3
  1493  0069                     ??_sin:	
  1494                           
  1495                           ; 1 bytes @ 0x49
  1496  0069                     	ds	1
  1497  006A                     ?_cos:	
  1498  006A                     cos@f:	
  1499                           ; 3 bytes @ 0x4A
  1500                           
  1501                           
  1502                           ; 3 bytes @ 0x4A
  1503  006A                     	ds	3
  1504                           
  1505                           	psect	maintext
  1506  0081                     __pmaintext:	
  1507 ;;
  1508 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1509 ;;
  1510 ;; *************** function _main *****************
  1511 ;; Defined at:
  1512 ;;		line 633 in file "powerspy.c"
  1513 ;; Parameters:    Size  Location     Type
  1514 ;;		None
  1515 ;; Auto vars:     Size  Location     Type
  1516 ;;  diff            4   25[BANK1 ] unsigned long 
  1517 ;;  diff_           3   22[BANK1 ] float 
  1518 ;;  angle           3   13[BANK1 ] float 
  1519 ;; Return value:  Size  Location     Type
  1520 ;;                  1    wreg      void 
  1521 ;; Registers used:
  1522 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1523 ;; Tracked objects:
  1524 ;;		On entry : B1F/0
  1525 ;;		On exit  : 0/0
  1526 ;;		Unchanged: 0/0
  1527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1528 ;;      Params:         0       0       0       0       0       0
  1529 ;;      Locals:         0       0      16       0       0       0
  1530 ;;      Temps:          0       0       0       0       0       0
  1531 ;;      Totals:         0       0      16       0       0       0
  1532 ;;Total ram usage:       16 bytes
  1533 ;; Hardware stack levels required when called:    6
  1534 ;; This function calls:
  1535 ;;		___ftdiv
  1536 ;;		___ftmul
  1537 ;;		___ftneg
  1538 ;;		___lldiv
  1539 ;;		___lltoft
  1540 ;;		___lmul
  1541 ;;		_cos
  1542 ;;		_deltaT
  1543 ;;		_initADC
  1544 ;;		_initBT
  1545 ;;		_initCOMP1
  1546 ;;		_initCOMP2
  1547 ;;		_initFVR
  1548 ;;		_initMessaging
  1549 ;;		_initPWMTMR4
  1550 ;;		_initPins
  1551 ;;		_initTMR1
  1552 ;;		_readCurrent
  1553 ;;		_readVdd
  1554 ;;		_sendFloat
  1555 ;;		_sendInt32
  1556 ;;		_sendString
  1557 ;; This function is called by:
  1558 ;;		Startup code after reset
  1559 ;; This function uses a non-reentrant model
  1560 ;;
  1561                           
  1562                           
  1563                           ;psect for function _main
  1564  0081                     _main:	
  1565                           
  1566                           ;powerspy.c: 635: uint32_t diff;
  1567                           ;powerspy.c: 636: float angle;
  1568                           ;powerspy.c: 637: float diff_;
  1569                           ;powerspy.c: 639: PEIE = 0;
  1570                           
  1571                           ;incstack = 0
  1572                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1573  0081  130B               	bcf	11,6	;volatile
  1574                           
  1575                           ;powerspy.c: 640: GIE = 0;
  1576  0082  138B               	bcf	11,7	;volatile
  1577                           
  1578                           ;powerspy.c: 642: initPins();
  1579  0083  318C  2414  3180   	fcall	_initPins
  1580                           
  1581                           ;powerspy.c: 643: initFVR();
  1582  0086  318B  2395  3180   	fcall	_initFVR
  1583                           
  1584                           ;powerspy.c: 644: initADC();
  1585  0089  318B  239E  3180   	fcall	_initADC
  1586                           
  1587                           ;powerspy.c: 645: initTMR1();
  1588  008C  318B  23A8  3180   	fcall	_initTMR1
  1589                           
  1590                           ;powerspy.c: 646: initPWMTMR4();
  1591  008F  318C  244F  3180   	fcall	_initPWMTMR4
  1592                           
  1593                           ;powerspy.c: 647: initCOMP1();
  1594  0092  318B  23B3  3180   	fcall	_initCOMP1
  1595                           
  1596                           ;powerspy.c: 648: initCOMP2();
  1597  0095  318B  23C0  3180   	fcall	_initCOMP2
  1598                           
  1599                           ;powerspy.c: 649: initBT();
  1600  0098  318B  23E2  3180   	fcall	_initBT
  1601                           
  1602                           ;powerspy.c: 650: initMessaging();
  1603  009B  318B  236C  3180   	fcall	_initMessaging
  1604                           
  1605                           ;powerspy.c: 652: PEIE = 1;
  1606  009E  170B               	bsf	11,6	;volatile
  1607                           
  1608                           ;powerspy.c: 653: GIE = 1;
  1609  009F  178B               	bsf	11,7	;volatile
  1610                           
  1611                           ;powerspy.c: 655: i_u_offs = -readVdd()* 5.0 / 2.0;
  1612  00A0  318D  2555  3180   	fcall	_readVdd
  1613  00A3  0020               	movlb	0	; select bank0
  1614  00A4  0844               	movf	?_readVdd,w
  1615  00A5  00C7               	movwf	___ftneg@f1
  1616  00A6  0845               	movf	?_readVdd+1,w
  1617  00A7  00C8               	movwf	___ftneg@f1+1
  1618  00A8  0846               	movf	?_readVdd+2,w
  1619  00A9  00C9               	movwf	___ftneg@f1+2
  1620  00AA  318B  238C  3180   	fcall	___ftneg
  1621  00AD  0020               	movlb	0	; select bank0
  1622  00AE  0847               	movf	?___ftneg,w
  1623  00AF  0021               	movlb	1	; select bank1
  1624  00B0  00D5               	movwf	_main$981^(0+128)
  1625  00B1  0020               	movlb	0	; select bank0
  1626  00B2  0848               	movf	?___ftneg+1,w
  1627  00B3  0021               	movlb	1	; select bank1
  1628  00B4  00D6               	movwf	(_main$981+1)^(0+128)
  1629  00B5  0020               	movlb	0	; select bank0
  1630  00B6  0849               	movf	?___ftneg+2,w
  1631  00B7  0021               	movlb	1	; select bank1
  1632  00B8  00D7               	movwf	(_main$981+2)^(0+128)
  1633                           
  1634                           ;powerspy.c: 655: i_u_offs = -readVdd()* 5.0 / 2.0;
  1635  00B9  3000               	movlw	0
  1636  00BA  0020               	movlb	0	; select bank0
  1637  00BB  00B4               	movwf	___ftdiv@f2
  1638  00BC  3000               	movlw	0
  1639  00BD  00B5               	movwf	___ftdiv@f2+1
  1640  00BE  3040               	movlw	64
  1641  00BF  00B6               	movwf	___ftdiv@f2+2
  1642  00C0  3000               	movlw	0
  1643  00C1  00A4               	movwf	___ftmul@f1
  1644  00C2  30A0               	movlw	160
  1645  00C3  00A5               	movwf	___ftmul@f1+1
  1646  00C4  3040               	movlw	64
  1647  00C5  00A6               	movwf	___ftmul@f1+2
  1648  00C6  0021               	movlb	1	; select bank1
  1649  00C7  0855               	movf	_main$981^(0+128),w
  1650  00C8  0020               	movlb	0	; select bank0
  1651  00C9  00A7               	movwf	___ftmul@f2
  1652  00CA  0021               	movlb	1	; select bank1
  1653  00CB  0856               	movf	(_main$981+1)^(0+128),w
  1654  00CC  0020               	movlb	0	; select bank0
  1655  00CD  00A8               	movwf	___ftmul@f2+1
  1656  00CE  0021               	movlb	1	; select bank1
  1657  00CF  0857               	movf	(_main$981+2)^(0+128),w
  1658  00D0  0020               	movlb	0	; select bank0
  1659  00D1  00A9               	movwf	___ftmul@f2+2
  1660  00D2  3184  249D  3180   	fcall	___ftmul
  1661  00D5  0020               	movlb	0	; select bank0
  1662  00D6  0824               	movf	?___ftmul,w
  1663  00D7  00B7               	movwf	___ftdiv@f1
  1664  00D8  0825               	movf	?___ftmul+1,w
  1665  00D9  00B8               	movwf	___ftdiv@f1+1
  1666  00DA  0826               	movf	?___ftmul+2,w
  1667  00DB  00B9               	movwf	___ftdiv@f1+2
  1668  00DC  3185  2551  3180   	fcall	___ftdiv
  1669  00DF  0020               	movlb	0	; select bank0
  1670  00E0  0834               	movf	?___ftdiv,w
  1671  00E1  0021               	movlb	1	; select bank1
  1672  00E2  00E2               	movwf	_i_u_offs^(0+128)
  1673  00E3  0020               	movlb	0	; select bank0
  1674  00E4  0835               	movf	?___ftdiv+1,w
  1675  00E5  0021               	movlb	1	; select bank1
  1676  00E6  00E3               	movwf	(_i_u_offs+1)^(0+128)
  1677  00E7  0020               	movlb	0	; select bank0
  1678  00E8  0836               	movf	?___ftdiv+2,w
  1679  00E9  0021               	movlb	1	; select bank1
  1680  00EA  00E4               	movwf	(_i_u_offs+2)^(0+128)
  1681  00EB                     l4280:	
  1682                           ;powerspy.c: 657: while (1) {
  1683                           
  1684                           
  1685                           ;powerspy.c: 659: if ((flag & 0x02) && (flag & 0x01)) {
  1686  00EB  0021               	movlb	1	; select bank1
  1687  00EC  18C4               	btfsc	_flag^(0+128),1
  1688  00ED  1C44               	btfss	_flag^(0+128),0
  1689  00EE  2A0E               	goto	l4314
  1690                           
  1691                           ;powerspy.c: 660: if (flag & 0x04)
  1692  00EF  1D44               	btfss	_flag^(0+128),2
  1693  00F0  28F9               	goto	l358
  1694                           
  1695                           ;powerspy.c: 661: diff = deltaT(volt_time, curr_time);
  1696  00F1  0868               	movf	(_volt_time+1)^(0+128),w
  1697  00F2  00F3               	movwf	deltaT@tm_low+1
  1698  00F3  0867               	movf	_volt_time^(0+128),w
  1699  00F4  00F2               	movwf	deltaT@tm_low
  1700  00F5  0866               	movf	(_curr_time+1)^(0+128),w
  1701  00F6  00F5               	movwf	deltaT@tm_high+1
  1702  00F7  0865               	movf	_curr_time^(0+128),w
  1703  00F8  2902               	goto	L2
  1704  00F9                     l358:	
  1705                           
  1706                           ;powerspy.c: 662: else if (flag & 0x08)
  1707  00F9  1DC4               	btfss	_flag^(0+128),3
  1708  00FA  290D               	goto	l4290
  1709                           
  1710                           ;powerspy.c: 663: diff = deltaT(curr_time, volt_time);
  1711  00FB  0866               	movf	(_curr_time+1)^(0+128),w
  1712  00FC  00F3               	movwf	deltaT@tm_low+1
  1713  00FD  0865               	movf	_curr_time^(0+128),w
  1714  00FE  00F2               	movwf	deltaT@tm_low
  1715  00FF  0868               	movf	(_volt_time+1)^(0+128),w
  1716  0100  00F5               	movwf	deltaT@tm_high+1
  1717  0101  0867               	movf	_volt_time^(0+128),w
  1718  0102                     L2:	
  1719  0102  00F4               	movwf	deltaT@tm_high
  1720  0103  318D  251F  3180   	fcall	_deltaT
  1721  0106  0872               	movf	?_deltaT,w
  1722  0107  0021               	movlb	1	; select bank1
  1723  0108  00DE               	movwf	main@diff^(0+128)
  1724  0109  0873               	movf	?_deltaT+1,w
  1725  010A  00DF               	movwf	(main@diff^(0+128)+1)
  1726  010B  01E0               	clrf	(main@diff^(0+128)+2)
  1727  010C  01E1               	clrf	(main@diff^(0+128)+3)
  1728  010D                     l4290:	
  1729                           
  1730                           ;powerspy.c: 665: flag = 0;
  1731  010D  01C4               	clrf	_flag^(0+128)
  1732                           
  1733                           ;powerspy.c: 667: diff *= 125;
  1734  010E  3000               	movlw	0
  1735  010F  00F5               	movwf	___lmul@multiplier+3
  1736  0110  3000               	movlw	0
  1737  0111  00F4               	movwf	___lmul@multiplier+2
  1738  0112  3000               	movlw	0
  1739  0113  00F3               	movwf	___lmul@multiplier+1
  1740  0114  307D               	movlw	125
  1741  0115  00F2               	movwf	___lmul@multiplier
  1742  0116  0861               	movf	(main@diff+3)^(0+128),w
  1743  0117  00F9               	movwf	___lmul@multiplicand+3
  1744  0118  0860               	movf	(main@diff+2)^(0+128),w
  1745  0119  00F8               	movwf	___lmul@multiplicand+2
  1746  011A  085F               	movf	(main@diff+1)^(0+128),w
  1747  011B  00F7               	movwf	___lmul@multiplicand+1
  1748  011C  085E               	movf	main@diff^(0+128),w
  1749  011D  00F6               	movwf	___lmul@multiplicand
  1750  011E  318C  24B8  3180   	fcall	___lmul
  1751  0121  0875               	movf	?___lmul+3,w
  1752  0122  0021               	movlb	1	; select bank1
  1753  0123  00E1               	movwf	(main@diff+3)^(0+128)
  1754  0124  0874               	movf	?___lmul+2,w
  1755  0125  00E0               	movwf	(main@diff+2)^(0+128)
  1756  0126  0873               	movf	?___lmul+1,w
  1757  0127  00DF               	movwf	(main@diff+1)^(0+128)
  1758  0128  0872               	movf	?___lmul,w
  1759  0129  00DE               	movwf	main@diff^(0+128)
  1760                           
  1761                           ;powerspy.c: 668: diff /= 1000;
  1762  012A  3000               	movlw	0
  1763  012B  00F5               	movwf	___lldiv@divisor+3
  1764  012C  3000               	movlw	0
  1765  012D  00F4               	movwf	___lldiv@divisor+2
  1766  012E  3003               	movlw	3
  1767  012F  00F3               	movwf	___lldiv@divisor+1
  1768  0130  30E8               	movlw	232
  1769  0131  00F2               	movwf	___lldiv@divisor
  1770  0132  0861               	movf	(main@diff+3)^(0+128),w
  1771  0133  00F9               	movwf	___lldiv@dividend+3
  1772  0134  0860               	movf	(main@diff+2)^(0+128),w
  1773  0135  00F8               	movwf	___lldiv@dividend+2
  1774  0136  085F               	movf	(main@diff+1)^(0+128),w
  1775  0137  00F7               	movwf	___lldiv@dividend+1
  1776  0138  085E               	movf	main@diff^(0+128),w
  1777  0139  00F6               	movwf	___lldiv@dividend
  1778  013A  318E  26E9  3180   	fcall	___lldiv
  1779  013D  0875               	movf	?___lldiv+3,w
  1780  013E  0021               	movlb	1	; select bank1
  1781  013F  00E1               	movwf	(main@diff+3)^(0+128)
  1782  0140  0874               	movf	?___lldiv+2,w
  1783  0141  00E0               	movwf	(main@diff+2)^(0+128)
  1784  0142  0873               	movf	?___lldiv+1,w
  1785  0143  00DF               	movwf	(main@diff+1)^(0+128)
  1786  0144  0872               	movf	?___lldiv,w
  1787  0145  00DE               	movwf	main@diff^(0+128)
  1788                           
  1789                           ;powerspy.c: 669: sendString("diff/us");
  1790  0146  301D               	movlw	low (STR_1| (0+32768))
  1791  0147  00F3               	movwf	sendString@val
  1792  0148  3088               	movlw	high (STR_1| (0+32768))
  1793  0149  00F4               	movwf	sendString@val+1
  1794  014A  318C  246E  3180   	fcall	_sendString
  1795                           
  1796                           ;powerspy.c: 670: sendInt32(diff);
  1797  014D  0021               	movlb	1	; select bank1
  1798  014E  0861               	movf	(main@diff+3)^(0+128),w
  1799  014F  00F6               	movwf	sendInt32@i+3
  1800  0150  0860               	movf	(main@diff+2)^(0+128),w
  1801  0151  00F5               	movwf	sendInt32@i+2
  1802  0152  085F               	movf	(main@diff+1)^(0+128),w
  1803  0153  00F4               	movwf	sendInt32@i+1
  1804  0154  085E               	movf	main@diff^(0+128),w
  1805  0155  00F3               	movwf	sendInt32@i
  1806  0156  318E  2649  3180   	fcall	_sendInt32
  1807                           
  1808                           ;powerspy.c: 672: diff_ = (float) diff;
  1809  0159  0021               	movlb	1	; select bank1
  1810  015A  0861               	movf	(main@diff+3)^(0+128),w
  1811  015B  0020               	movlb	0	; select bank0
  1812  015C  00A3               	movwf	___lltoft@c+3
  1813  015D  0021               	movlb	1	; select bank1
  1814  015E  0860               	movf	(main@diff+2)^(0+128),w
  1815  015F  0020               	movlb	0	; select bank0
  1816  0160  00A2               	movwf	___lltoft@c+2
  1817  0161  0021               	movlb	1	; select bank1
  1818  0162  085F               	movf	(main@diff+1)^(0+128),w
  1819  0163  0020               	movlb	0	; select bank0
  1820  0164  00A1               	movwf	___lltoft@c+1
  1821  0165  0021               	movlb	1	; select bank1
  1822  0166  085E               	movf	main@diff^(0+128),w
  1823  0167  0020               	movlb	0	; select bank0
  1824  0168  00A0               	movwf	___lltoft@c
  1825  0169  318C  248E  3180   	fcall	___lltoft
  1826  016C  0020               	movlb	0	; select bank0
  1827  016D  0820               	movf	?___lltoft,w
  1828  016E  0021               	movlb	1	; select bank1
  1829  016F  00DB               	movwf	main@diff_^(0+128)
  1830  0170  0020               	movlb	0	; select bank0
  1831  0171  0821               	movf	?___lltoft+1,w
  1832  0172  0021               	movlb	1	; select bank1
  1833  0173  00DC               	movwf	(main@diff_+1)^(0+128)
  1834  0174  0020               	movlb	0	; select bank0
  1835  0175  0822               	movf	?___lltoft+2,w
  1836  0176  0021               	movlb	1	; select bank1
  1837  0177  00DD               	movwf	(main@diff_+2)^(0+128)
  1838                           
  1839                           ;powerspy.c: 673: diff_ /= 1000;
  1840  0178  3000               	movlw	0
  1841  0179  0020               	movlb	0	; select bank0
  1842  017A  00B4               	movwf	___ftdiv@f2
  1843  017B  307A               	movlw	122
  1844  017C  00B5               	movwf	___ftdiv@f2+1
  1845  017D  3044               	movlw	68
  1846  017E  00B6               	movwf	___ftdiv@f2+2
  1847  017F  0021               	movlb	1	; select bank1
  1848  0180  085B               	movf	main@diff_^(0+128),w
  1849  0181  0020               	movlb	0	; select bank0
  1850  0182  00B7               	movwf	___ftdiv@f1
  1851  0183  0021               	movlb	1	; select bank1
  1852  0184  085C               	movf	(main@diff_+1)^(0+128),w
  1853  0185  0020               	movlb	0	; select bank0
  1854  0186  00B8               	movwf	___ftdiv@f1+1
  1855  0187  0021               	movlb	1	; select bank1
  1856  0188  085D               	movf	(main@diff_+2)^(0+128),w
  1857  0189  0020               	movlb	0	; select bank0
  1858  018A  00B9               	movwf	___ftdiv@f1+2
  1859  018B  3185  2551  3180   	fcall	___ftdiv
  1860  018E  0020               	movlb	0	; select bank0
  1861  018F  0834               	movf	?___ftdiv,w
  1862  0190  0021               	movlb	1	; select bank1
  1863  0191  00DB               	movwf	main@diff_^(0+128)
  1864  0192  0020               	movlb	0	; select bank0
  1865  0193  0835               	movf	?___ftdiv+1,w
  1866  0194  0021               	movlb	1	; select bank1
  1867  0195  00DC               	movwf	(main@diff_+1)^(0+128)
  1868  0196  0020               	movlb	0	; select bank0
  1869  0197  0836               	movf	?___ftdiv+2,w
  1870  0198  0021               	movlb	1	; select bank1
  1871  0199  00DD               	movwf	(main@diff_+2)^(0+128)
  1872                           
  1873                           ;powerspy.c: 674: diff_ /= 1000;
  1874  019A  3000               	movlw	0
  1875  019B  0020               	movlb	0	; select bank0
  1876  019C  00B4               	movwf	___ftdiv@f2
  1877  019D  307A               	movlw	122
  1878  019E  00B5               	movwf	___ftdiv@f2+1
  1879  019F  3044               	movlw	68
  1880  01A0  00B6               	movwf	___ftdiv@f2+2
  1881  01A1  0021               	movlb	1	; select bank1
  1882  01A2  085B               	movf	main@diff_^(0+128),w
  1883  01A3  0020               	movlb	0	; select bank0
  1884  01A4  00B7               	movwf	___ftdiv@f1
  1885  01A5  0021               	movlb	1	; select bank1
  1886  01A6  085C               	movf	(main@diff_+1)^(0+128),w
  1887  01A7  0020               	movlb	0	; select bank0
  1888  01A8  00B8               	movwf	___ftdiv@f1+1
  1889  01A9  0021               	movlb	1	; select bank1
  1890  01AA  085D               	movf	(main@diff_+2)^(0+128),w
  1891  01AB  0020               	movlb	0	; select bank0
  1892  01AC  00B9               	movwf	___ftdiv@f1+2
  1893  01AD  3185  2551  3180   	fcall	___ftdiv
  1894  01B0  0020               	movlb	0	; select bank0
  1895  01B1  0834               	movf	?___ftdiv,w
  1896  01B2  0021               	movlb	1	; select bank1
  1897  01B3  00DB               	movwf	main@diff_^(0+128)
  1898  01B4  0020               	movlb	0	; select bank0
  1899  01B5  0835               	movf	?___ftdiv+1,w
  1900  01B6  0021               	movlb	1	; select bank1
  1901  01B7  00DC               	movwf	(main@diff_+1)^(0+128)
  1902  01B8  0020               	movlb	0	; select bank0
  1903  01B9  0836               	movf	?___ftdiv+2,w
  1904  01BA  0021               	movlb	1	; select bank1
  1905  01BB  00DD               	movwf	(main@diff_+2)^(0+128)
  1906                           
  1907                           ;powerspy.c: 675: angle = cos(2*3.14159265358979323846*50*diff_);
  1908  01BC  3014               	movlw	20
  1909  01BD  0020               	movlb	0	; select bank0
  1910  01BE  00A4               	movwf	___ftmul@f1
  1911  01BF  309D               	movlw	157
  1912  01C0  00A5               	movwf	___ftmul@f1+1
  1913  01C1  3043               	movlw	67
  1914  01C2  00A6               	movwf	___ftmul@f1+2
  1915  01C3  0021               	movlb	1	; select bank1
  1916  01C4  085B               	movf	main@diff_^(0+128),w
  1917  01C5  0020               	movlb	0	; select bank0
  1918  01C6  00A7               	movwf	___ftmul@f2
  1919  01C7  0021               	movlb	1	; select bank1
  1920  01C8  085C               	movf	(main@diff_+1)^(0+128),w
  1921  01C9  0020               	movlb	0	; select bank0
  1922  01CA  00A8               	movwf	___ftmul@f2+1
  1923  01CB  0021               	movlb	1	; select bank1
  1924  01CC  085D               	movf	(main@diff_+2)^(0+128),w
  1925  01CD  0020               	movlb	0	; select bank0
  1926  01CE  00A9               	movwf	___ftmul@f2+2
  1927  01CF  3184  249D  3180   	fcall	___ftmul
  1928  01D2  0020               	movlb	0	; select bank0
  1929  01D3  0824               	movf	?___ftmul,w
  1930  01D4  0021               	movlb	1	; select bank1
  1931  01D5  00D8               	movwf	_main$982^(0+128)
  1932  01D6  0020               	movlb	0	; select bank0
  1933  01D7  0825               	movf	?___ftmul+1,w
  1934  01D8  0021               	movlb	1	; select bank1
  1935  01D9  00D9               	movwf	(_main$982+1)^(0+128)
  1936  01DA  0020               	movlb	0	; select bank0
  1937  01DB  0826               	movf	?___ftmul+2,w
  1938  01DC  0021               	movlb	1	; select bank1
  1939  01DD  00DA               	movwf	(_main$982+2)^(0+128)
  1940                           
  1941                           ;powerspy.c: 675: angle = cos(2*3.14159265358979323846*50*diff_);
  1942  01DE  0858               	movf	_main$982^(0+128),w
  1943  01DF  0020               	movlb	0	; select bank0
  1944  01E0  00EA               	movwf	cos@f
  1945  01E1  0021               	movlb	1	; select bank1
  1946  01E2  0859               	movf	(_main$982+1)^(0+128),w
  1947  01E3  0020               	movlb	0	; select bank0
  1948  01E4  00EB               	movwf	cos@f+1
  1949  01E5  0021               	movlb	1	; select bank1
  1950  01E6  085A               	movf	(_main$982+2)^(0+128),w
  1951  01E7  0020               	movlb	0	; select bank0
  1952  01E8  00EC               	movwf	cos@f+2
  1953  01E9  3187  2706  3180   	fcall	_cos
  1954  01EC  0020               	movlb	0	; select bank0
  1955  01ED  086A               	movf	?_cos,w
  1956  01EE  0021               	movlb	1	; select bank1
  1957  01EF  00D2               	movwf	main@angle^(0+128)
  1958  01F0  0020               	movlb	0	; select bank0
  1959  01F1  086B               	movf	?_cos+1,w
  1960  01F2  0021               	movlb	1	; select bank1
  1961  01F3  00D3               	movwf	(main@angle+1)^(0+128)
  1962  01F4  0020               	movlb	0	; select bank0
  1963  01F5  086C               	movf	?_cos+2,w
  1964  01F6  0021               	movlb	1	; select bank1
  1965  01F7  00D4               	movwf	(main@angle+2)^(0+128)
  1966                           
  1967                           ;powerspy.c: 676: sendString("angle/rad");
  1968  01F8  3013               	movlw	low (STR_2| (0+32768))
  1969  01F9  00F3               	movwf	sendString@val
  1970  01FA  3088               	movlw	high (STR_2| (0+32768))
  1971  01FB  00F4               	movwf	sendString@val+1
  1972  01FC  318C  246E  3180   	fcall	_sendString
  1973                           
  1974                           ;powerspy.c: 677: sendFloat(angle);
  1975  01FF  0021               	movlb	1	; select bank1
  1976  0200  0852               	movf	main@angle^(0+128),w
  1977  0201  0020               	movlb	0	; select bank0
  1978  0202  00DD               	movwf	sendFloat@f
  1979  0203  0021               	movlb	1	; select bank1
  1980  0204  0853               	movf	(main@angle+1)^(0+128),w
  1981  0205  0020               	movlb	0	; select bank0
  1982  0206  00DE               	movwf	sendFloat@f+1
  1983  0207  0021               	movlb	1	; select bank1
  1984  0208  0854               	movf	(main@angle+2)^(0+128),w
  1985  0209  0020               	movlb	0	; select bank0
  1986  020A  00DF               	movwf	sendFloat@f+2
  1987  020B  318E  2608  3180   	fcall	_sendFloat
  1988  020E                     l4314:	
  1989                           
  1990                           ;powerspy.c: 678: }
  1991                           ;powerspy.c: 680: sendString("current/ampere");
  1992  020E  3004               	movlw	low (STR_3| (0+32768))
  1993  020F  00F3               	movwf	sendString@val
  1994  0210  3088               	movlw	high (STR_3| (0+32768))
  1995  0211  00F4               	movwf	sendString@val+1
  1996  0212  318C  246E  3180   	fcall	_sendString
  1997                           
  1998                           ;powerspy.c: 681: sendFloat(readCurrent());
  1999  0215  3187  277A  3180   	fcall	_readCurrent
  2000  0218  0020               	movlb	0	; select bank0
  2001  0219  0857               	movf	?_readCurrent,w
  2002  021A  00DD               	movwf	sendFloat@f
  2003  021B  0858               	movf	?_readCurrent+1,w
  2004  021C  00DE               	movwf	sendFloat@f+1
  2005  021D  0859               	movf	?_readCurrent+2,w
  2006  021E  00DF               	movwf	sendFloat@f+2
  2007  021F  318E  2608  3180   	fcall	_sendFloat
  2008  0222  28EB               	goto	l4280
  2009  0223                     __end_of_main:	
  2010                           
  2011                           	psect	text1
  2012  0C6E                     __ptext1:	
  2013 ;; *************** function _sendString *****************
  2014 ;; Defined at:
  2015 ;;		line 212 in file "message.c"
  2016 ;; Parameters:    Size  Location     Type
  2017 ;;  val             2    3[COMMON] PTR unsigned char 
  2018 ;;		 -> STR_3(15), STR_2(10), STR_1(8), 
  2019 ;; Auto vars:     Size  Location     Type
  2020 ;;		None
  2021 ;; Return value:  Size  Location     Type
  2022 ;;                  1    wreg      void 
  2023 ;; Registers used:
  2024 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2025 ;; Tracked objects:
  2026 ;;		On entry : 0/0
  2027 ;;		On exit  : 0/0
  2028 ;;		Unchanged: 0/0
  2029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2030 ;;      Params:         2       0       0       0       0       0
  2031 ;;      Locals:         0       0       0       0       0       0
  2032 ;;      Temps:          1       0       0       0       0       0
  2033 ;;      Totals:         3       0       0       0       0       0
  2034 ;;Total ram usage:        3 bytes
  2035 ;; Hardware stack levels used:    1
  2036 ;; Hardware stack levels required when called:    2
  2037 ;; This function calls:
  2038 ;;		__sendchar_
  2039 ;; This function is called by:
  2040 ;;		_main
  2041 ;; This function uses a non-reentrant model
  2042 ;;
  2043                           
  2044                           
  2045                           ;psect for function _sendString
  2046  0C6E                     _sendString:	
  2047                           
  2048                           ;message.c: 214: _sendchar_(2);
  2049                           
  2050                           ;incstack = 0
  2051                           ; Regs used in _sendString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2052  0C6E  3002               	movlw	2
  2053  0C6F  318B  237E  318C   	fcall	__sendchar_
  2054                           
  2055                           ;message.c: 215: _sendchar_('1');
  2056  0C72  3031               	movlw	49
  2057  0C73  318B  237E  318C   	fcall	__sendchar_
  2058  0C76                     l4100:	
  2059                           ;message.c: 216: while (*val) {
  2060                           
  2061  0C76  0873               	movf	sendString@val,w
  2062  0C77  0084               	movwf	4
  2063  0C78  0874               	movf	sendString@val+1,w
  2064  0C79  0085               	movwf	5
  2065  0C7A  0012               	moviw fsr0++
  2066  0C7B  1903               	btfsc	3,2
  2067  0C7C  2C8A               	goto	l4102
  2068                           
  2069                           ;message.c: 217: _sendchar_(*val);
  2070  0C7D  0873               	movf	sendString@val,w
  2071  0C7E  0084               	movwf	4
  2072  0C7F  0874               	movf	sendString@val+1,w
  2073  0C80  0085               	movwf	5
  2074  0C81  0800               	movf	0,w	;code access
  2075  0C82  318B  237E  318C   	fcall	__sendchar_
  2076                           
  2077                           ;message.c: 218: val++;
  2078  0C85  3001               	movlw	1
  2079  0C86  07F3               	addwf	sendString@val,f
  2080  0C87  3000               	movlw	0
  2081  0C88  3DF4               	addwfc	sendString@val+1,f
  2082  0C89  2C76               	goto	l4100
  2083  0C8A                     l4102:	
  2084                           
  2085                           ;message.c: 219: }
  2086                           ;message.c: 220: _sendchar_(3);
  2087  0C8A  3003               	movlw	3
  2088  0C8B  318B  237E         	fcall	__sendchar_
  2089  0C8D  0008               	return
  2090  0C8E                     __end_of_sendString:	
  2091                           
  2092                           	psect	text2
  2093  0E49                     __ptext2:	
  2094 ;; *************** function _sendInt32 *****************
  2095 ;; Defined at:
  2096 ;;		line 190 in file "message.c"
  2097 ;; Parameters:    Size  Location     Type
  2098 ;;  i               4    3[COMMON] long 
  2099 ;; Auto vars:     Size  Location     Type
  2100 ;;		None
  2101 ;; Return value:  Size  Location     Type
  2102 ;;                  1    wreg      void 
  2103 ;; Registers used:
  2104 ;;		wreg, status,2, status,0, pclath, cstack
  2105 ;; Tracked objects:
  2106 ;;		On entry : 0/0
  2107 ;;		On exit  : 0/0
  2108 ;;		Unchanged: 0/0
  2109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2110 ;;      Params:         4       0       0       0       0       0
  2111 ;;      Locals:         0       0       0       0       0       0
  2112 ;;      Temps:          0       5       0       0       0       0
  2113 ;;      Totals:         4       5       0       0       0       0
  2114 ;;Total ram usage:        9 bytes
  2115 ;; Hardware stack levels used:    1
  2116 ;; Hardware stack levels required when called:    2
  2117 ;; This function calls:
  2118 ;;		__sendchar_
  2119 ;; This function is called by:
  2120 ;;		_main
  2121 ;; This function uses a non-reentrant model
  2122 ;;
  2123                           
  2124                           
  2125                           ;psect for function _sendInt32
  2126  0E49                     _sendInt32:	
  2127                           
  2128                           ;message.c: 192: _sendchar_(2);
  2129                           
  2130                           ;incstack = 0
  2131                           ; Regs used in _sendInt32: [wreg+status,2+status,0+pclath+cstack]
  2132  0E49  3002               	movlw	2
  2133  0E4A  318B  237E  318E   	fcall	__sendchar_
  2134                           
  2135                           ;message.c: 193: _sendchar_('5');
  2136  0E4D  3035               	movlw	53
  2137  0E4E  318B  237E  318E   	fcall	__sendchar_
  2138                           
  2139                           ;message.c: 194: _sendchar_((char) (i >> 24 & 0xff));
  2140  0E51  0873               	movf	sendInt32@i,w
  2141  0E52  0020               	movlb	0	; select bank0
  2142  0E53  00A0               	movwf	??_sendInt32
  2143  0E54  0874               	movf	sendInt32@i+1,w
  2144  0E55  00A1               	movwf	??_sendInt32+1
  2145  0E56  0875               	movf	sendInt32@i+2,w
  2146  0E57  00A2               	movwf	??_sendInt32+2
  2147  0E58  0876               	movf	sendInt32@i+3,w
  2148  0E59  00A3               	movwf	??_sendInt32+3
  2149  0E5A  3018               	movlw	24
  2150  0E5B  00A4               	movwf	??_sendInt32+4
  2151  0E5C                     u5285:	
  2152  0E5C  37A3               	asrf	??_sendInt32+3,f
  2153  0E5D  0CA2               	rrf	??_sendInt32+2,f
  2154  0E5E  0CA1               	rrf	??_sendInt32+1,f
  2155  0E5F  0CA0               	rrf	??_sendInt32,f
  2156  0E60  0BA4               	decfsz	??_sendInt32+4,f
  2157  0E61  2E5C               	goto	u5285
  2158  0E62  0820               	movf	??_sendInt32,w
  2159  0E63  318B  237E  318E   	fcall	__sendchar_
  2160                           
  2161                           ;message.c: 195: _sendchar_((char) (i >> 16 & 0xff));
  2162  0E66  0873               	movf	sendInt32@i,w
  2163  0E67  0020               	movlb	0	; select bank0
  2164  0E68  00A0               	movwf	??_sendInt32
  2165  0E69  0874               	movf	sendInt32@i+1,w
  2166  0E6A  00A1               	movwf	??_sendInt32+1
  2167  0E6B  0875               	movf	sendInt32@i+2,w
  2168  0E6C  00A2               	movwf	??_sendInt32+2
  2169  0E6D  0876               	movf	sendInt32@i+3,w
  2170  0E6E  00A3               	movwf	??_sendInt32+3
  2171  0E6F  3010               	movlw	16
  2172  0E70  00A4               	movwf	??_sendInt32+4
  2173  0E71                     u5295:	
  2174  0E71  37A3               	asrf	??_sendInt32+3,f
  2175  0E72  0CA2               	rrf	??_sendInt32+2,f
  2176  0E73  0CA1               	rrf	??_sendInt32+1,f
  2177  0E74  0CA0               	rrf	??_sendInt32,f
  2178  0E75  0BA4               	decfsz	??_sendInt32+4,f
  2179  0E76  2E71               	goto	u5295
  2180  0E77  0820               	movf	??_sendInt32,w
  2181  0E78  318B  237E  318E   	fcall	__sendchar_
  2182                           
  2183                           ;message.c: 196: _sendchar_((char) (i >> 8 & 0xff));
  2184  0E7B  0873               	movf	sendInt32@i,w
  2185  0E7C  0020               	movlb	0	; select bank0
  2186  0E7D  00A0               	movwf	??_sendInt32
  2187  0E7E  0874               	movf	sendInt32@i+1,w
  2188  0E7F  00A1               	movwf	??_sendInt32+1
  2189  0E80  0875               	movf	sendInt32@i+2,w
  2190  0E81  00A2               	movwf	??_sendInt32+2
  2191  0E82  0876               	movf	sendInt32@i+3,w
  2192  0E83  00A3               	movwf	??_sendInt32+3
  2193  0E84  3008               	movlw	8
  2194  0E85  00A4               	movwf	??_sendInt32+4
  2195  0E86                     u5305:	
  2196  0E86  37A3               	asrf	??_sendInt32+3,f
  2197  0E87  0CA2               	rrf	??_sendInt32+2,f
  2198  0E88  0CA1               	rrf	??_sendInt32+1,f
  2199  0E89  0CA0               	rrf	??_sendInt32,f
  2200  0E8A  0BA4               	decfsz	??_sendInt32+4,f
  2201  0E8B  2E86               	goto	u5305
  2202  0E8C  0820               	movf	??_sendInt32,w
  2203  0E8D  318B  237E  318E   	fcall	__sendchar_
  2204                           
  2205                           ;message.c: 197: _sendchar_((char) (i & 0xff));
  2206  0E90  0873               	movf	sendInt32@i,w
  2207  0E91  318B  237E  318E   	fcall	__sendchar_
  2208                           
  2209                           ;message.c: 198: _sendchar_(3);
  2210  0E94  3003               	movlw	3
  2211  0E95  318B  237E         	fcall	__sendchar_
  2212  0E97  0008               	return
  2213  0E98                     __end_of_sendInt32:	
  2214                           
  2215                           	psect	text3
  2216  0E08                     __ptext3:	
  2217 ;; *************** function _sendFloat *****************
  2218 ;; Defined at:
  2219 ;;		line 201 in file "message.c"
  2220 ;; Parameters:    Size  Location     Type
  2221 ;;  f               3   61[BANK0 ] float 
  2222 ;; Auto vars:     Size  Location     Type
  2223 ;;  ptr             1   67[BANK0 ] PTR unsigned um
  2224 ;;		 -> sendFloat@f(3), 
  2225 ;; Return value:  Size  Location     Type
  2226 ;;                  1    wreg      void 
  2227 ;; Registers used:
  2228 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2229 ;; Tracked objects:
  2230 ;;		On entry : 0/0
  2231 ;;		On exit  : 0/0
  2232 ;;		Unchanged: 0/0
  2233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2234 ;;      Params:         0       3       0       0       0       0
  2235 ;;      Locals:         0       1       0       0       0       0
  2236 ;;      Temps:          0       3       0       0       0       0
  2237 ;;      Totals:         0       7       0       0       0       0
  2238 ;;Total ram usage:        7 bytes
  2239 ;; Hardware stack levels used:    1
  2240 ;; Hardware stack levels required when called:    2
  2241 ;; This function calls:
  2242 ;;		__sendchar_
  2243 ;; This function is called by:
  2244 ;;		_main
  2245 ;; This function uses a non-reentrant model
  2246 ;;
  2247                           
  2248                           
  2249                           ;psect for function _sendFloat
  2250  0E08                     _sendFloat:	
  2251                           
  2252                           ;message.c: 203: uint24_t *ptr = (uint24_t *) & f;
  2253                           
  2254                           ;incstack = 0
  2255                           ; Regs used in _sendFloat: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2256  0E08  305D               	movlw	(low (sendFloat@f| 0))& (0+255)
  2257  0E09  0020               	movlb	0	; select bank0
  2258  0E0A  00E0               	movwf	??_sendFloat
  2259  0E0B  0860               	movf	??_sendFloat,w
  2260  0E0C  00E3               	movwf	sendFloat@ptr
  2261                           
  2262                           ;message.c: 204: _sendchar_(2);
  2263  0E0D  3002               	movlw	2
  2264  0E0E  318B  237E  318E   	fcall	__sendchar_
  2265                           
  2266                           ;message.c: 205: _sendchar_('6');
  2267  0E11  3036               	movlw	54
  2268  0E12  318B  237E  318E   	fcall	__sendchar_
  2269                           
  2270                           ;message.c: 206: _sendchar_((char) (*ptr >> 16 & 0xff));
  2271  0E15  0020               	movlb	0	; select bank0
  2272  0E16  0863               	movf	sendFloat@ptr,w
  2273  0E17  0086               	movwf	6
  2274  0E18  0187               	clrf	7
  2275  0E19  3F40               	moviw [0]fsr1
  2276  0E1A  00E0               	movwf	??_sendFloat
  2277  0E1B  3F41               	moviw [1]fsr1
  2278  0E1C  00E1               	movwf	??_sendFloat+1
  2279  0E1D  3F42               	moviw [2]fsr1
  2280  0E1E  00E2               	movwf	??_sendFloat+2
  2281  0E1F  3010               	movlw	16
  2282  0E20                     u5325:	
  2283  0E20  36E2               	lsrf	??_sendFloat+2,f
  2284  0E21  0CE1               	rrf	??_sendFloat+1,f
  2285  0E22  0CE0               	rrf	??_sendFloat,f
  2286  0E23  0B89               	decfsz	9,f
  2287  0E24  2E20               	goto	u5325
  2288  0E25  0860               	movf	??_sendFloat,w
  2289  0E26  318B  237E  318E   	fcall	__sendchar_
  2290                           
  2291                           ;message.c: 207: _sendchar_((char) (*ptr >> 8 & 0xff));
  2292  0E29  0020               	movlb	0	; select bank0
  2293  0E2A  0863               	movf	sendFloat@ptr,w
  2294  0E2B  0086               	movwf	6
  2295  0E2C  0187               	clrf	7
  2296  0E2D  3F40               	moviw [0]fsr1
  2297  0E2E  00E0               	movwf	??_sendFloat
  2298  0E2F  3F41               	moviw [1]fsr1
  2299  0E30  00E1               	movwf	??_sendFloat+1
  2300  0E31  3F42               	moviw [2]fsr1
  2301  0E32  00E2               	movwf	??_sendFloat+2
  2302  0E33  3008               	movlw	8
  2303  0E34                     u5335:	
  2304  0E34  36E2               	lsrf	??_sendFloat+2,f
  2305  0E35  0CE1               	rrf	??_sendFloat+1,f
  2306  0E36  0CE0               	rrf	??_sendFloat,f
  2307  0E37  0B89               	decfsz	9,f
  2308  0E38  2E34               	goto	u5335
  2309  0E39  0860               	movf	??_sendFloat,w
  2310  0E3A  318B  237E  318E   	fcall	__sendchar_
  2311                           
  2312                           ;message.c: 208: _sendchar_((char) (*ptr & 0xff));
  2313  0E3D  0020               	movlb	0	; select bank0
  2314  0E3E  0863               	movf	sendFloat@ptr,w
  2315  0E3F  0086               	movwf	6
  2316  0E40  0187               	clrf	7
  2317  0E41  0801               	movf	1,w
  2318  0E42  318B  237E  318E   	fcall	__sendchar_
  2319                           
  2320                           ;message.c: 209: _sendchar_(3);
  2321  0E45  3003               	movlw	3
  2322  0E46  318B  237E         	fcall	__sendchar_
  2323  0E48  0008               	return
  2324  0E49                     __end_of_sendFloat:	
  2325                           
  2326                           	psect	text4
  2327  0B7E                     __ptext4:	
  2328 ;; *************** function __sendchar_ *****************
  2329 ;; Defined at:
  2330 ;;		line 153 in file "message.c"
  2331 ;; Parameters:    Size  Location     Type
  2332 ;;  c               1    wreg     unsigned char 
  2333 ;; Auto vars:     Size  Location     Type
  2334 ;;  c               1    2[COMMON] unsigned char 
  2335 ;; Return value:  Size  Location     Type
  2336 ;;                  1    wreg      void 
  2337 ;; Registers used:
  2338 ;;		wreg
  2339 ;; Tracked objects:
  2340 ;;		On entry : 0/0
  2341 ;;		On exit  : 0/0
  2342 ;;		Unchanged: 0/0
  2343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2344 ;;      Params:         0       0       0       0       0       0
  2345 ;;      Locals:         1       0       0       0       0       0
  2346 ;;      Temps:          0       0       0       0       0       0
  2347 ;;      Totals:         1       0       0       0       0       0
  2348 ;;Total ram usage:        1 bytes
  2349 ;; Hardware stack levels used:    1
  2350 ;; Hardware stack levels required when called:    1
  2351 ;; This function calls:
  2352 ;;		Nothing
  2353 ;; This function is called by:
  2354 ;;		_sendInt32
  2355 ;;		_sendFloat
  2356 ;;		_sendString
  2357 ;;		_sendInt8
  2358 ;;		_sendInt16
  2359 ;;		_sendInt24
  2360 ;; This function uses a non-reentrant model
  2361 ;;
  2362                           
  2363                           
  2364                           ;psect for function __sendchar_
  2365  0B7E                     __sendchar_:	
  2366                           
  2367                           ;incstack = 0
  2368                           ; Regs used in __sendchar_: [wreg]
  2369                           ;__sendchar_@c stored from wreg
  2370  0B7E  00F2               	movwf	__sendchar_@c
  2371                           
  2372                           ;message.c: 155: TXREG = c;
  2373  0B7F  0872               	movf	__sendchar_@c,w
  2374  0B80  0023               	movlb	3	; select bank3
  2375  0B81  009A               	movwf	26	;volatile
  2376  0B82                     l529:	
  2377                           ;message.c: 156: while (!TRMT);
  2378                           
  2379  0B82  189E               	btfsc	30,1	;volatile
  2380  0B83  0008               	return
  2381  0B84  2B82               	goto	l529
  2382  0B85                     __end_of__sendchar_:	
  2383                           
  2384                           	psect	text5
  2385  0D55                     __ptext5:	
  2386 ;; *************** function _readVdd *****************
  2387 ;; Defined at:
  2388 ;;		line 434 in file "powerspy.c"
  2389 ;; Parameters:    Size  Location     Type
  2390 ;;		None
  2391 ;; Auto vars:     Size  Location     Type
  2392 ;;		None
  2393 ;; Return value:  Size  Location     Type
  2394 ;;                  3   36[BANK0 ] float 
  2395 ;; Registers used:
  2396 ;;		wreg, status,2, status,0, pclath, cstack
  2397 ;; Tracked objects:
  2398 ;;		On entry : 0/0
  2399 ;;		On exit  : 0/0
  2400 ;;		Unchanged: 0/0
  2401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2402 ;;      Params:         0       3       0       0       0       0
  2403 ;;      Locals:         0       0       0       0       0       0
  2404 ;;      Temps:          0       0       0       0       0       0
  2405 ;;      Totals:         0       3       0       0       0       0
  2406 ;;Total ram usage:        3 bytes
  2407 ;; Hardware stack levels used:    1
  2408 ;; Hardware stack levels required when called:    3
  2409 ;; This function calls:
  2410 ;;		___ftdiv
  2411 ;;		___ftmul
  2412 ;;		___lwtoft
  2413 ;;		_adc
  2414 ;; This function is called by:
  2415 ;;		_main
  2416 ;; This function uses a non-reentrant model
  2417 ;;
  2418                           
  2419                           
  2420                           ;psect for function _readVdd
  2421  0D55                     _readVdd:	
  2422                           
  2423                           ;powerspy.c: 436: ADFM = 1;
  2424                           
  2425                           ;incstack = 0
  2426                           ; Regs used in _readVdd: [wreg+status,2+status,0+pclath+cstack]
  2427  0D55  0021               	movlb	1	; select bank1
  2428  0D56  179E               	bsf	30,7	;volatile
  2429                           
  2430                           ;powerspy.c: 437: adc(0b00011111);
  2431  0D57  301F               	movlw	31
  2432  0D58  318E  2698  318D   	fcall	_adc
  2433                           
  2434                           ;powerspy.c: 439: return (1024.0 / ADRES) * 1.024;
  2435  0D5B  3012               	movlw	18
  2436  0D5C  0020               	movlb	0	; select bank0
  2437  0D5D  00A4               	movwf	___ftmul@f1
  2438  0D5E  3083               	movlw	131
  2439  0D5F  00A5               	movwf	___ftmul@f1+1
  2440  0D60  303F               	movlw	63
  2441  0D61  00A6               	movwf	___ftmul@f1+2
  2442  0D62  0021               	movlb	1	; select bank1
  2443  0D63  081C               	movf	28,w	;volatile
  2444  0D64  0020               	movlb	0	; select bank0
  2445  0D65  00A1               	movwf	___lwtoft@c+1
  2446  0D66  0021               	movlb	1	; select bank1
  2447  0D67  081B               	movf	27,w	;volatile
  2448  0D68  0020               	movlb	0	; select bank0
  2449  0D69  00A0               	movwf	___lwtoft@c
  2450  0D6A  318B  23CD  318D   	fcall	___lwtoft
  2451  0D6D  0020               	movlb	0	; select bank0
  2452  0D6E  0820               	movf	?___lwtoft,w
  2453  0D6F  00B4               	movwf	___ftdiv@f2
  2454  0D70  0821               	movf	?___lwtoft+1,w
  2455  0D71  00B5               	movwf	___ftdiv@f2+1
  2456  0D72  0822               	movf	?___lwtoft+2,w
  2457  0D73  00B6               	movwf	___ftdiv@f2+2
  2458  0D74  3000               	movlw	0
  2459  0D75  00B7               	movwf	___ftdiv@f1
  2460  0D76  3080               	movlw	128
  2461  0D77  00B8               	movwf	___ftdiv@f1+1
  2462  0D78  3044               	movlw	68
  2463  0D79  00B9               	movwf	___ftdiv@f1+2
  2464  0D7A  3185  2551  318D   	fcall	___ftdiv
  2465  0D7D  0020               	movlb	0	; select bank0
  2466  0D7E  0834               	movf	?___ftdiv,w
  2467  0D7F  00A7               	movwf	___ftmul@f2
  2468  0D80  0835               	movf	?___ftdiv+1,w
  2469  0D81  00A8               	movwf	___ftmul@f2+1
  2470  0D82  0836               	movf	?___ftdiv+2,w
  2471  0D83  00A9               	movwf	___ftmul@f2+2
  2472  0D84  3184  249D         	fcall	___ftmul
  2473  0D86  0020               	movlb	0	; select bank0
  2474  0D87  0824               	movf	?___ftmul,w
  2475  0D88  00C4               	movwf	?_readVdd
  2476  0D89  0825               	movf	?___ftmul+1,w
  2477  0D8A  00C5               	movwf	?_readVdd+1
  2478  0D8B  0826               	movf	?___ftmul+2,w
  2479  0D8C  00C6               	movwf	?_readVdd+2
  2480  0D8D  0008               	return
  2481  0D8E                     __end_of_readVdd:	
  2482                           
  2483                           	psect	text6
  2484  077A                     __ptext6:	
  2485 ;; *************** function _readCurrent *****************
  2486 ;; Defined at:
  2487 ;;		line 420 in file "powerspy.c"
  2488 ;; Parameters:    Size  Location     Type
  2489 ;;		None
  2490 ;; Auto vars:     Size  Location     Type
  2491 ;;		None
  2492 ;; Return value:  Size  Location     Type
  2493 ;;                  3   55[BANK0 ] float 
  2494 ;; Registers used:
  2495 ;;		wreg, status,2, status,0, pclath, cstack
  2496 ;; Tracked objects:
  2497 ;;		On entry : 0/0
  2498 ;;		On exit  : 0/0
  2499 ;;		Unchanged: 0/0
  2500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2501 ;;      Params:         0       3       0       0       0       0
  2502 ;;      Locals:         0       3       0       0       0       0
  2503 ;;      Temps:          0       0       0       0       0       0
  2504 ;;      Totals:         0       6       0       0       0       0
  2505 ;;Total ram usage:        6 bytes
  2506 ;; Hardware stack levels used:    1
  2507 ;; Hardware stack levels required when called:    3
  2508 ;; This function calls:
  2509 ;;		___ftadd
  2510 ;;		___ftdiv
  2511 ;;		___ftmul
  2512 ;;		___lwtoft
  2513 ;;		_adc
  2514 ;; This function is called by:
  2515 ;;		_main
  2516 ;; This function uses a non-reentrant model
  2517 ;;
  2518                           
  2519                           
  2520                           ;psect for function _readCurrent
  2521  077A                     _readCurrent:	
  2522                           
  2523                           ;powerspy.c: 428: ADFM = 1;
  2524                           
  2525                           ;incstack = 0
  2526                           ; Regs used in _readCurrent: [wreg+status,2+status,0+pclath+cstack]
  2527  077A  0021               	movlb	1	; select bank1
  2528  077B  179E               	bsf	30,7	;volatile
  2529                           
  2530                           ;powerspy.c: 429: adc(7);
  2531  077C  3007               	movlw	7
  2532  077D  318E  2698  3187   	fcall	_adc
  2533                           
  2534                           ;powerspy.c: 431: return (ADRES * 5.0 / 1024.0) * 5.0 + i_u_offs;
  2535  0780  3000               	movlw	0
  2536  0781  0020               	movlb	0	; select bank0
  2537  0782  00B4               	movwf	___ftdiv@f2
  2538  0783  3080               	movlw	128
  2539  0784  00B5               	movwf	___ftdiv@f2+1
  2540  0785  3044               	movlw	68
  2541  0786  00B6               	movwf	___ftdiv@f2+2
  2542  0787  3000               	movlw	0
  2543  0788  00A4               	movwf	___ftmul@f1
  2544  0789  30A0               	movlw	160
  2545  078A  00A5               	movwf	___ftmul@f1+1
  2546  078B  3040               	movlw	64
  2547  078C  00A6               	movwf	___ftmul@f1+2
  2548  078D  0021               	movlb	1	; select bank1
  2549  078E  081C               	movf	28,w	;volatile
  2550  078F  0020               	movlb	0	; select bank0
  2551  0790  00A1               	movwf	___lwtoft@c+1
  2552  0791  0021               	movlb	1	; select bank1
  2553  0792  081B               	movf	27,w	;volatile
  2554  0793  0020               	movlb	0	; select bank0
  2555  0794  00A0               	movwf	___lwtoft@c
  2556  0795  318B  23CD  3187   	fcall	___lwtoft
  2557  0798  0020               	movlb	0	; select bank0
  2558  0799  0820               	movf	?___lwtoft,w
  2559  079A  00A7               	movwf	___ftmul@f2
  2560  079B  0821               	movf	?___lwtoft+1,w
  2561  079C  00A8               	movwf	___ftmul@f2+1
  2562  079D  0822               	movf	?___lwtoft+2,w
  2563  079E  00A9               	movwf	___ftmul@f2+2
  2564  079F  3184  249D  3187   	fcall	___ftmul
  2565  07A2  0020               	movlb	0	; select bank0
  2566  07A3  0824               	movf	?___ftmul,w
  2567  07A4  00B7               	movwf	___ftdiv@f1
  2568  07A5  0825               	movf	?___ftmul+1,w
  2569  07A6  00B8               	movwf	___ftdiv@f1+1
  2570  07A7  0826               	movf	?___ftmul+2,w
  2571  07A8  00B9               	movwf	___ftdiv@f1+2
  2572  07A9  3185  2551  3187   	fcall	___ftdiv
  2573  07AC  0020               	movlb	0	; select bank0
  2574  07AD  0834               	movf	?___ftdiv,w
  2575  07AE  00DA               	movwf	_readCurrent$980
  2576  07AF  0835               	movf	?___ftdiv+1,w
  2577  07B0  00DB               	movwf	_readCurrent$980+1
  2578  07B1  0836               	movf	?___ftdiv+2,w
  2579  07B2  00DC               	movwf	_readCurrent$980+2
  2580                           
  2581                           ;powerspy.c: 431: return (ADRES * 5.0 / 1024.0) * 5.0 + i_u_offs;
  2582  07B3  0021               	movlb	1	; select bank1
  2583  07B4  0862               	movf	_i_u_offs^(0+128),w
  2584  07B5  0020               	movlb	0	; select bank0
  2585  07B6  00CA               	movwf	___ftadd@f1
  2586  07B7  0021               	movlb	1	; select bank1
  2587  07B8  0863               	movf	(_i_u_offs+1)^(0+128),w
  2588  07B9  0020               	movlb	0	; select bank0
  2589  07BA  00CB               	movwf	___ftadd@f1+1
  2590  07BB  0021               	movlb	1	; select bank1
  2591  07BC  0864               	movf	(_i_u_offs+2)^(0+128),w
  2592  07BD  0020               	movlb	0	; select bank0
  2593  07BE  00CC               	movwf	___ftadd@f1+2
  2594  07BF  3000               	movlw	0
  2595  07C0  00A4               	movwf	___ftmul@f1
  2596  07C1  30A0               	movlw	160
  2597  07C2  00A5               	movwf	___ftmul@f1+1
  2598  07C3  3040               	movlw	64
  2599  07C4  00A6               	movwf	___ftmul@f1+2
  2600  07C5  085A               	movf	_readCurrent$980,w
  2601  07C6  00A7               	movwf	___ftmul@f2
  2602  07C7  085B               	movf	_readCurrent$980+1,w
  2603  07C8  00A8               	movwf	___ftmul@f2+1
  2604  07C9  085C               	movf	_readCurrent$980+2,w
  2605  07CA  00A9               	movwf	___ftmul@f2+2
  2606  07CB  3184  249D  3187   	fcall	___ftmul
  2607  07CE  0020               	movlb	0	; select bank0
  2608  07CF  0824               	movf	?___ftmul,w
  2609  07D0  00CD               	movwf	___ftadd@f2
  2610  07D1  0825               	movf	?___ftmul+1,w
  2611  07D2  00CE               	movwf	___ftadd@f2+1
  2612  07D3  0826               	movf	?___ftmul+2,w
  2613  07D4  00CF               	movwf	___ftadd@f2+2
  2614  07D5  3183  23A7         	fcall	___ftadd
  2615  07D7  0020               	movlb	0	; select bank0
  2616  07D8  084A               	movf	?___ftadd,w
  2617  07D9  00D7               	movwf	?_readCurrent
  2618  07DA  084B               	movf	?___ftadd+1,w
  2619  07DB  00D8               	movwf	?_readCurrent+1
  2620  07DC  084C               	movf	?___ftadd+2,w
  2621  07DD  00D9               	movwf	?_readCurrent+2
  2622  07DE  0008               	return
  2623  07DF                     __end_of_readCurrent:	
  2624                           
  2625                           	psect	text7
  2626  0E98                     __ptext7:	
  2627 ;; *************** function _adc *****************
  2628 ;; Defined at:
  2629 ;;		line 366 in file "powerspy.c"
  2630 ;; Parameters:    Size  Location     Type
  2631 ;;  src             1    wreg     const char 
  2632 ;; Auto vars:     Size  Location     Type
  2633 ;;  src             1    3[COMMON] const char 
  2634 ;; Return value:  Size  Location     Type
  2635 ;;                  1    wreg      void 
  2636 ;; Registers used:
  2637 ;;		wreg, status,2, status,0
  2638 ;; Tracked objects:
  2639 ;;		On entry : 0/0
  2640 ;;		On exit  : 0/0
  2641 ;;		Unchanged: 0/0
  2642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2643 ;;      Params:         0       0       0       0       0       0
  2644 ;;      Locals:         1       0       0       0       0       0
  2645 ;;      Temps:          1       0       0       0       0       0
  2646 ;;      Totals:         2       0       0       0       0       0
  2647 ;;Total ram usage:        2 bytes
  2648 ;; Hardware stack levels used:    1
  2649 ;; Hardware stack levels required when called:    1
  2650 ;; This function calls:
  2651 ;;		Nothing
  2652 ;; This function is called by:
  2653 ;;		_readCurrent
  2654 ;;		_readVdd
  2655 ;; This function uses a non-reentrant model
  2656 ;;
  2657                           
  2658                           
  2659                           ;psect for function _adc
  2660  0E98                     _adc:	
  2661                           
  2662                           ;incstack = 0
  2663                           ; Regs used in _adc: [wreg+status,2+status,0]
  2664                           ;adc@src stored from wreg
  2665  0E98  00F3               	movwf	adc@src
  2666                           
  2667                           ;powerspy.c: 389: CHS0 = (bit) (src >> 0) & 0x01;
  2668  0E99  1C73               	btfss	adc@src,0
  2669  0E9A  2E9E               	goto	u3110
  2670  0E9B  0021               	movlb	1	; select bank1
  2671  0E9C  151D               	bsf	29,2	;volatile
  2672  0E9D  2EA0               	goto	l2818
  2673  0E9E                     u3110:	
  2674  0E9E  0021               	movlb	1	; select bank1
  2675  0E9F  111D               	bcf	29,2	;volatile
  2676  0EA0                     l2818:	
  2677                           
  2678                           ;powerspy.c: 390: CHS1 = (bit) (src >> 1) & 0x01;
  2679  0EA0  0873               	movf	adc@src,w
  2680  0EA1  00F2               	movwf	??_adc
  2681  0EA2  3001               	movlw	1
  2682  0EA3                     u3135:	
  2683  0EA3  1003               	clrc
  2684  0EA4  1BF2               	btfsc	??_adc,7
  2685  0EA5  1403               	setc
  2686  0EA6  0CF2               	rrf	??_adc,f
  2687  0EA7  0B89               	decfsz	9,f
  2688  0EA8  2EA3               	goto	u3135
  2689  0EA9  1C72               	btfss	??_adc,0
  2690  0EAA  2EAE               	goto	u3140
  2691  0EAB  0021               	movlb	1	; select bank1
  2692  0EAC  159D               	bsf	29,3	;volatile
  2693  0EAD  2EB0               	goto	l2820
  2694  0EAE                     u3140:	
  2695  0EAE  0021               	movlb	1	; select bank1
  2696  0EAF  119D               	bcf	29,3	;volatile
  2697  0EB0                     l2820:	
  2698                           
  2699                           ;powerspy.c: 391: CHS2 = (bit) (src >> 2) & 0x01;
  2700  0EB0  0873               	movf	adc@src,w
  2701  0EB1  00F2               	movwf	??_adc
  2702  0EB2  3002               	movlw	2
  2703  0EB3                     u3165:	
  2704  0EB3  1003               	clrc
  2705  0EB4  1BF2               	btfsc	??_adc,7
  2706  0EB5  1403               	setc
  2707  0EB6  0CF2               	rrf	??_adc,f
  2708  0EB7  0B89               	decfsz	9,f
  2709  0EB8  2EB3               	goto	u3165
  2710  0EB9  1C72               	btfss	??_adc,0
  2711  0EBA  2EBE               	goto	u3170
  2712  0EBB  0021               	movlb	1	; select bank1
  2713  0EBC  161D               	bsf	29,4	;volatile
  2714  0EBD  2EC0               	goto	l2822
  2715  0EBE                     u3170:	
  2716  0EBE  0021               	movlb	1	; select bank1
  2717  0EBF  121D               	bcf	29,4	;volatile
  2718  0EC0                     l2822:	
  2719                           
  2720                           ;powerspy.c: 392: CHS3 = (bit) (src >> 3) & 0x01;
  2721  0EC0  0873               	movf	adc@src,w
  2722  0EC1  00F2               	movwf	??_adc
  2723  0EC2  3003               	movlw	3
  2724  0EC3                     u3195:	
  2725  0EC3  1003               	clrc
  2726  0EC4  1BF2               	btfsc	??_adc,7
  2727  0EC5  1403               	setc
  2728  0EC6  0CF2               	rrf	??_adc,f
  2729  0EC7  0B89               	decfsz	9,f
  2730  0EC8  2EC3               	goto	u3195
  2731  0EC9  1C72               	btfss	??_adc,0
  2732  0ECA  2ECE               	goto	u3200
  2733  0ECB  0021               	movlb	1	; select bank1
  2734  0ECC  169D               	bsf	29,5	;volatile
  2735  0ECD  2ED0               	goto	l2824
  2736  0ECE                     u3200:	
  2737  0ECE  0021               	movlb	1	; select bank1
  2738  0ECF  129D               	bcf	29,5	;volatile
  2739  0ED0                     l2824:	
  2740                           
  2741                           ;powerspy.c: 393: CHS4 = (bit) (src >> 4) & 0x01;
  2742  0ED0  0873               	movf	adc@src,w
  2743  0ED1  00F2               	movwf	??_adc
  2744  0ED2  3004               	movlw	4
  2745  0ED3                     u3225:	
  2746  0ED3  1003               	clrc
  2747  0ED4  1BF2               	btfsc	??_adc,7
  2748  0ED5  1403               	setc
  2749  0ED6  0CF2               	rrf	??_adc,f
  2750  0ED7  0B89               	decfsz	9,f
  2751  0ED8  2ED3               	goto	u3225
  2752  0ED9  1C72               	btfss	??_adc,0
  2753  0EDA  2EDE               	goto	u3230
  2754  0EDB  0021               	movlb	1	; select bank1
  2755  0EDC  171D               	bsf	29,6	;volatile
  2756  0EDD  2EE0               	goto	u3244
  2757  0EDE                     u3230:	
  2758  0EDE  0021               	movlb	1	; select bank1
  2759  0EDF  131D               	bcf	29,6	;volatile
  2760  0EE0                     u3244:	
  2761                           
  2762                           ;powerspy.c: 395: _delay((unsigned long)((5)*(32000000/4000000.0)));
  2763  0EE0  300D               	movlw	13
  2764  0EE1  00F2               	movwf	??_adc
  2765  0EE2                     u5747:	
  2766  0EE2  0BF2               	decfsz	??_adc,f
  2767  0EE3  2EE2               	goto	u5747
  2768                           
  2769                           ;powerspy.c: 398: GO_nDONE = 1;
  2770  0EE4  0021               	movlb	1	; select bank1
  2771  0EE5  149D               	bsf	29,1	;volatile
  2772  0EE6                     l266:	
  2773                           ;powerspy.c: 399: while (GO_nDONE);
  2774                           
  2775  0EE6  1C9D               	btfss	29,1	;volatile
  2776  0EE7  0008               	return
  2777  0EE8  2EE6               	goto	l266
  2778  0EE9                     __end_of_adc:	
  2779                           
  2780                           	psect	text8
  2781  0BCD                     __ptext8:	
  2782 ;; *************** function ___lwtoft *****************
  2783 ;; Defined at:
  2784 ;;		line 28 in file "/Applications/microchip/xc8/v1.36/sources/common/lwtoft.c"
  2785 ;; Parameters:    Size  Location     Type
  2786 ;;  c               2    0[BANK0 ] unsigned int 
  2787 ;; Auto vars:     Size  Location     Type
  2788 ;;		None
  2789 ;; Return value:  Size  Location     Type
  2790 ;;                  3    0[BANK0 ] float 
  2791 ;; Registers used:
  2792 ;;		wreg, status,2, status,0, pclath, cstack
  2793 ;; Tracked objects:
  2794 ;;		On entry : 0/0
  2795 ;;		On exit  : 0/0
  2796 ;;		Unchanged: 0/0
  2797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2798 ;;      Params:         0       3       0       0       0       0
  2799 ;;      Locals:         0       0       0       0       0       0
  2800 ;;      Temps:          0       1       0       0       0       0
  2801 ;;      Totals:         0       4       0       0       0       0
  2802 ;;Total ram usage:        4 bytes
  2803 ;; Hardware stack levels used:    1
  2804 ;; Hardware stack levels required when called:    2
  2805 ;; This function calls:
  2806 ;;		___ftpack
  2807 ;; This function is called by:
  2808 ;;		_readCurrent
  2809 ;;		_readVdd
  2810 ;; This function uses a non-reentrant model
  2811 ;;
  2812                           
  2813                           
  2814                           ;psect for function ___lwtoft
  2815  0BCD                     ___lwtoft:	
  2816                           
  2817                           ;incstack = 0
  2818                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  2819  0BCD  0020               	movlb	0	; select bank0
  2820  0BCE  0820               	movf	___lwtoft@c,w
  2821  0BCF  00F2               	movwf	___ftpack@arg
  2822  0BD0  0821               	movf	___lwtoft@c+1,w
  2823  0BD1  00F3               	movwf	___ftpack@arg+1
  2824  0BD2  01F4               	clrf	___ftpack@arg+2
  2825  0BD3  308E               	movlw	142
  2826  0BD4  00A3               	movwf	??___lwtoft
  2827  0BD5  0823               	movf	??___lwtoft,w
  2828  0BD6  00F5               	movwf	___ftpack@exp
  2829  0BD7  01F6               	clrf	___ftpack@sign
  2830  0BD8  318F  279C         	fcall	___ftpack
  2831  0BDA  0872               	movf	?___ftpack,w
  2832  0BDB  0020               	movlb	0	; select bank0
  2833  0BDC  00A0               	movwf	?___lwtoft
  2834  0BDD  0873               	movf	?___ftpack+1,w
  2835  0BDE  00A1               	movwf	?___lwtoft+1
  2836  0BDF  0874               	movf	?___ftpack+2,w
  2837  0BE0  00A2               	movwf	?___lwtoft+2
  2838  0BE1  0008               	return
  2839  0BE2                     __end_of___lwtoft:	
  2840                           
  2841                           	psect	text9
  2842  0BA8                     __ptext9:	
  2843 ;; *************** function _initTMR1 *****************
  2844 ;; Defined at:
  2845 ;;		line 144 in file "powerspy.c"
  2846 ;; Parameters:    Size  Location     Type
  2847 ;;		None
  2848 ;; Auto vars:     Size  Location     Type
  2849 ;;		None
  2850 ;; Return value:  Size  Location     Type
  2851 ;;                  1    wreg      void 
  2852 ;; Registers used:
  2853 ;;		None
  2854 ;; Tracked objects:
  2855 ;;		On entry : 0/0
  2856 ;;		On exit  : 0/0
  2857 ;;		Unchanged: 0/0
  2858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2859 ;;      Params:         0       0       0       0       0       0
  2860 ;;      Locals:         0       0       0       0       0       0
  2861 ;;      Temps:          0       0       0       0       0       0
  2862 ;;      Totals:         0       0       0       0       0       0
  2863 ;;Total ram usage:        0 bytes
  2864 ;; Hardware stack levels used:    1
  2865 ;; Hardware stack levels required when called:    1
  2866 ;; This function calls:
  2867 ;;		Nothing
  2868 ;; This function is called by:
  2869 ;;		_main
  2870 ;; This function uses a non-reentrant model
  2871 ;;
  2872                           
  2873                           
  2874                           ;psect for function _initTMR1
  2875  0BA8                     _initTMR1:	
  2876                           
  2877                           ;powerspy.c: 157: TMR1CS0 = 0;
  2878                           
  2879                           ;incstack = 0
  2880                           ; Regs used in _initTMR1: []
  2881  0BA8  0020               	movlb	0	; select bank0
  2882  0BA9  1318               	bcf	24,6	;volatile
  2883                           
  2884                           ;powerspy.c: 158: TMR1CS1 = 0;
  2885  0BAA  1398               	bcf	24,7	;volatile
  2886                           
  2887                           ;powerspy.c: 162: T1CKPS0 = 1;
  2888  0BAB  1618               	bsf	24,4	;volatile
  2889                           
  2890                           ;powerspy.c: 163: T1CKPS1 = 0;
  2891  0BAC  1298               	bcf	24,5	;volatile
  2892                           
  2893                           ;powerspy.c: 165: TMR1IE = 1;
  2894  0BAD  0021               	movlb	1	; select bank1
  2895  0BAE  1411               	bsf	17,0	;volatile
  2896                           
  2897                           ;powerspy.c: 166: TMR1IF = 0;
  2898  0BAF  0020               	movlb	0	; select bank0
  2899  0BB0  1011               	bcf	17,0	;volatile
  2900                           
  2901                           ;powerspy.c: 168: TMR1ON = 1;
  2902  0BB1  1418               	bsf	24,0	;volatile
  2903  0BB2  0008               	return
  2904  0BB3                     __end_of_initTMR1:	
  2905                           
  2906                           	psect	text10
  2907  0C14                     __ptext10:	
  2908 ;; *************** function _initPins *****************
  2909 ;; Defined at:
  2910 ;;		line 45 in file "powerspy.c"
  2911 ;; Parameters:    Size  Location     Type
  2912 ;;		None
  2913 ;; Auto vars:     Size  Location     Type
  2914 ;;		None
  2915 ;; Return value:  Size  Location     Type
  2916 ;;                  1    wreg      void 
  2917 ;; Registers used:
  2918 ;;		wreg, status,2
  2919 ;; Tracked objects:
  2920 ;;		On entry : 0/0
  2921 ;;		On exit  : 0/0
  2922 ;;		Unchanged: 0/0
  2923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2924 ;;      Params:         0       0       0       0       0       0
  2925 ;;      Locals:         0       0       0       0       0       0
  2926 ;;      Temps:          0       0       0       0       0       0
  2927 ;;      Totals:         0       0       0       0       0       0
  2928 ;;Total ram usage:        0 bytes
  2929 ;; Hardware stack levels used:    1
  2930 ;; Hardware stack levels required when called:    1
  2931 ;; This function calls:
  2932 ;;		Nothing
  2933 ;; This function is called by:
  2934 ;;		_main
  2935 ;; This function uses a non-reentrant model
  2936 ;;
  2937                           
  2938                           
  2939                           ;psect for function _initPins
  2940  0C14                     _initPins:	
  2941                           
  2942                           ;powerspy.c: 47: PORTA = 0b00000000;
  2943                           
  2944                           ;incstack = 0
  2945                           ; Regs used in _initPins: [wreg+status,2]
  2946  0C14  0020               	movlb	0	; select bank0
  2947  0C15  018C               	clrf	12	;volatile
  2948                           
  2949                           ;powerspy.c: 48: ANSELA = 0b00000111;
  2950  0C16  3007               	movlw	7
  2951  0C17  0023               	movlb	3	; select bank3
  2952  0C18  008C               	movwf	12	;volatile
  2953                           
  2954                           ;powerspy.c: 49: TRISA = 0b00000111;
  2955  0C19  3007               	movlw	7
  2956  0C1A  0021               	movlb	1	; select bank1
  2957  0C1B  008C               	movwf	12	;volatile
  2958                           
  2959                           ;powerspy.c: 51: PORTB = 0b00000000;
  2960  0C1C  0020               	movlb	0	; select bank0
  2961  0C1D  018D               	clrf	13	;volatile
  2962                           
  2963                           ;powerspy.c: 52: ANSELB = 0b00110000;
  2964  0C1E  3030               	movlw	48
  2965  0C1F  0023               	movlb	3	; select bank3
  2966  0C20  008D               	movwf	13	;volatile
  2967                           
  2968                           ;powerspy.c: 53: TRISB = 0b00111010;
  2969  0C21  303A               	movlw	58
  2970  0C22  0021               	movlb	1	; select bank1
  2971  0C23  008D               	movwf	13	;volatile
  2972                           
  2973                           ;powerspy.c: 55: nWPUEN = 0;
  2974  0C24  1395               	bcf	21,7	;volatile
  2975                           
  2976                           ;powerspy.c: 56: WPUB = 0b00001000;
  2977  0C25  3008               	movlw	8
  2978  0C26  0024               	movlb	4	; select bank4
  2979  0C27  008D               	movwf	13	;volatile
  2980                           
  2981                           ;powerspy.c: 60: SCS0 = 0;
  2982  0C28  0021               	movlb	1	; select bank1
  2983  0C29  1019               	bcf	25,0	;volatile
  2984                           
  2985                           ;powerspy.c: 61: SCS1 = 0;
  2986  0C2A  1099               	bcf	25,1	;volatile
  2987                           
  2988                           ;powerspy.c: 63: IRCF0 = 0;
  2989  0C2B  1199               	bcf	25,3	;volatile
  2990                           
  2991                           ;powerspy.c: 64: IRCF1 = 1;
  2992  0C2C  1619               	bsf	25,4	;volatile
  2993                           
  2994                           ;powerspy.c: 65: IRCF2 = 1;
  2995  0C2D  1699               	bsf	25,5	;volatile
  2996                           
  2997                           ;powerspy.c: 66: IRCF3 = 1;
  2998  0C2E  1719               	bsf	25,6	;volatile
  2999                           
  3000                           ;powerspy.c: 68: SPLLEN = 1;
  3001  0C2F  1799               	bsf	25,7	;volatile
  3002  0C30  0008               	return
  3003  0C31                     __end_of_initPins:	
  3004                           
  3005                           	psect	text11
  3006  0C4F                     __ptext11:	
  3007 ;; *************** function _initPWMTMR4 *****************
  3008 ;; Defined at:
  3009 ;;		line 200 in file "powerspy.c"
  3010 ;; Parameters:    Size  Location     Type
  3011 ;;		None
  3012 ;; Auto vars:     Size  Location     Type
  3013 ;;		None
  3014 ;; Return value:  Size  Location     Type
  3015 ;;                  1    wreg      void 
  3016 ;; Registers used:
  3017 ;;		wreg, status,2, status,0
  3018 ;; Tracked objects:
  3019 ;;		On entry : 0/0
  3020 ;;		On exit  : 0/0
  3021 ;;		Unchanged: 0/0
  3022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3023 ;;      Params:         0       0       0       0       0       0
  3024 ;;      Locals:         0       0       0       0       0       0
  3025 ;;      Temps:          1       0       0       0       0       0
  3026 ;;      Totals:         1       0       0       0       0       0
  3027 ;;Total ram usage:        1 bytes
  3028 ;; Hardware stack levels used:    1
  3029 ;; Hardware stack levels required when called:    1
  3030 ;; This function calls:
  3031 ;;		Nothing
  3032 ;; This function is called by:
  3033 ;;		_main
  3034 ;; This function uses a non-reentrant model
  3035 ;;
  3036                           
  3037                           
  3038                           ;psect for function _initPWMTMR4
  3039  0C4F                     _initPWMTMR4:	
  3040                           
  3041                           ;powerspy.c: 204: CCP1SEL = 1;
  3042                           
  3043                           ;incstack = 0
  3044                           ; Regs used in _initPWMTMR4: [wreg+status,2+status,0]
  3045  0C4F  0022               	movlb	2	; select bank2
  3046  0C50  141D               	bsf	29,0	;volatile
  3047                           
  3048                           ;powerspy.c: 207: TRISBbits.TRISB0 = 1;
  3049  0C51  0021               	movlb	1	; select bank1
  3050  0C52  140D               	bsf	13,0	;volatile
  3051                           
  3052                           ;powerspy.c: 210: PR2 = 0xff;
  3053  0C53  30FF               	movlw	255
  3054  0C54  0020               	movlb	0	; select bank0
  3055  0C55  009B               	movwf	27	;volatile
  3056                           
  3057                           ;powerspy.c: 211: CCP1CON = 0b00110000;
  3058  0C56  3030               	movlw	48
  3059  0C57  0025               	movlb	5	; select bank5
  3060  0C58  0093               	movwf	19	;volatile
  3061                           
  3062                           ;powerspy.c: 214: CCP1CON |= 0b00001100;
  3063  0C59  300C               	movlw	12
  3064  0C5A  00F2               	movwf	??_initPWMTMR4
  3065  0C5B  0872               	movf	??_initPWMTMR4,w
  3066  0C5C  0493               	iorwf	19,f	;volatile
  3067                           
  3068                           ;powerspy.c: 220: CCPR1L = 0x7f;
  3069  0C5D  307F               	movlw	127
  3070  0C5E  0091               	movwf	17	;volatile
  3071                           
  3072                           ;powerspy.c: 223: DC1B0 = 1;
  3073  0C5F  1613               	bsf	19,4	;volatile
  3074                           
  3075                           ;powerspy.c: 224: DC1B1 = 1;
  3076  0C60  1693               	bsf	19,5	;volatile
  3077                           
  3078                           ;powerspy.c: 228: C1TSEL0 = 1;
  3079  0C61  141E               	bsf	30,0	;volatile
  3080                           
  3081                           ;powerspy.c: 229: C1TSEL1 = 0;
  3082  0C62  109E               	bcf	30,1	;volatile
  3083                           
  3084                           ;powerspy.c: 230: TMR4IF = 0;
  3085  0C63  0020               	movlb	0	; select bank0
  3086  0C64  1093               	bcf	19,1	;volatile
  3087                           
  3088                           ;powerspy.c: 233: T4CKPS0 = 0;
  3089  0C65  0028               	movlb	8	; select bank8
  3090  0C66  1017               	bcf	23,0	;volatile
  3091                           
  3092                           ;powerspy.c: 234: T4CKPS1 = 0;
  3093  0C67  1097               	bcf	23,1	;volatile
  3094                           
  3095                           ;powerspy.c: 236: TMR4ON = 1;
  3096  0C68  1517               	bsf	23,2	;volatile
  3097                           
  3098                           ;powerspy.c: 240: TMR4IF = 0;
  3099  0C69  0020               	movlb	0	; select bank0
  3100  0C6A  1093               	bcf	19,1	;volatile
  3101                           
  3102                           ;powerspy.c: 242: TRISBbits.TRISB0 = 0;
  3103  0C6B  0021               	movlb	1	; select bank1
  3104  0C6C  100D               	bcf	13,0	;volatile
  3105  0C6D  0008               	return
  3106  0C6E                     __end_of_initPWMTMR4:	
  3107                           
  3108                           	psect	text12
  3109  0B6C                     __ptext12:	
  3110 ;; *************** function _initMessaging *****************
  3111 ;; Defined at:
  3112 ;;		line 16 in file "message.c"
  3113 ;; Parameters:    Size  Location     Type
  3114 ;;		None
  3115 ;; Auto vars:     Size  Location     Type
  3116 ;;		None
  3117 ;; Return value:  Size  Location     Type
  3118 ;;                  1    wreg      void 
  3119 ;; Registers used:
  3120 ;;		status,2
  3121 ;; Tracked objects:
  3122 ;;		On entry : 0/0
  3123 ;;		On exit  : 0/0
  3124 ;;		Unchanged: 0/0
  3125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3126 ;;      Params:         0       0       0       0       0       0
  3127 ;;      Locals:         0       0       0       0       0       0
  3128 ;;      Temps:          0       0       0       0       0       0
  3129 ;;      Totals:         0       0       0       0       0       0
  3130 ;;Total ram usage:        0 bytes
  3131 ;; Hardware stack levels used:    1
  3132 ;; Hardware stack levels required when called:    1
  3133 ;; This function calls:
  3134 ;;		Nothing
  3135 ;; This function is called by:
  3136 ;;		_main
  3137 ;; This function uses a non-reentrant model
  3138 ;;
  3139                           
  3140                           
  3141                           ;psect for function _initMessaging
  3142  0B6C                     _initMessaging:	
  3143                           
  3144                           ;message.c: 18: buffpos = -1;
  3145                           
  3146                           ;incstack = 0
  3147                           ; Regs used in _initMessaging: [status,2]
  3148  0B6C  01FA               	clrf	_buffpos
  3149  0B6D  03FA               	decf	_buffpos,f
  3150                           
  3151                           ;message.c: 19: readpos = 0;
  3152  0B6E  01FB               	clrf	_readpos
  3153                           
  3154                           ;message.c: 20: reading = 0;
  3155  0B6F  0020               	movlb	0	; select bank0
  3156  0B70  01ED               	clrf	_reading
  3157  0B71  0008               	return
  3158  0B72                     __end_of_initMessaging:	
  3159                           
  3160                           	psect	text13
  3161  0B95                     __ptext13:	
  3162 ;; *************** function _initFVR *****************
  3163 ;; Defined at:
  3164 ;;		line 174 in file "powerspy.c"
  3165 ;; Parameters:    Size  Location     Type
  3166 ;;		None
  3167 ;; Auto vars:     Size  Location     Type
  3168 ;;		None
  3169 ;; Return value:  Size  Location     Type
  3170 ;;                  1    wreg      void 
  3171 ;; Registers used:
  3172 ;;		None
  3173 ;; Tracked objects:
  3174 ;;		On entry : 0/0
  3175 ;;		On exit  : 0/0
  3176 ;;		Unchanged: 0/0
  3177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3178 ;;      Params:         0       0       0       0       0       0
  3179 ;;      Locals:         0       0       0       0       0       0
  3180 ;;      Temps:          0       0       0       0       0       0
  3181 ;;      Totals:         0       0       0       0       0       0
  3182 ;;Total ram usage:        0 bytes
  3183 ;; Hardware stack levels used:    1
  3184 ;; Hardware stack levels required when called:    1
  3185 ;; This function calls:
  3186 ;;		Nothing
  3187 ;; This function is called by:
  3188 ;;		_main
  3189 ;; This function uses a non-reentrant model
  3190 ;;
  3191                           
  3192                           
  3193                           ;psect for function _initFVR
  3194  0B95                     _initFVR:	
  3195                           
  3196                           ;powerspy.c: 186: ADFVR0 = 1;
  3197                           
  3198                           ;incstack = 0
  3199                           ; Regs used in _initFVR: []
  3200  0B95  0022               	movlb	2	; select bank2
  3201  0B96  1417               	bsf	23,0	;volatile
  3202                           
  3203                           ;powerspy.c: 187: ADFVR1 = 0;
  3204  0B97  1097               	bcf	23,1	;volatile
  3205                           
  3206                           ;powerspy.c: 189: CDAFVR0 = 0;
  3207  0B98  1117               	bcf	23,2	;volatile
  3208                           
  3209                           ;powerspy.c: 190: CDAFVR1 = 0;
  3210  0B99  1197               	bcf	23,3	;volatile
  3211                           
  3212                           ;powerspy.c: 191: FVREN = 1;
  3213  0B9A  1797               	bsf	23,7	;volatile
  3214  0B9B                     l245:	
  3215                           ;powerspy.c: 192: while (!FVRRDY);
  3216                           
  3217  0B9B  1B17               	btfsc	23,6	;volatile
  3218  0B9C  0008               	return
  3219  0B9D  2B9B               	goto	l245
  3220  0B9E                     __end_of_initFVR:	
  3221                           
  3222                           	psect	text14
  3223  0BC0                     __ptext14:	
  3224 ;; *************** function _initCOMP2 *****************
  3225 ;; Defined at:
  3226 ;;		line 294 in file "powerspy.c"
  3227 ;; Parameters:    Size  Location     Type
  3228 ;;		None
  3229 ;; Auto vars:     Size  Location     Type
  3230 ;;		None
  3231 ;; Return value:  Size  Location     Type
  3232 ;;                  1    wreg      void 
  3233 ;; Registers used:
  3234 ;;		None
  3235 ;; Tracked objects:
  3236 ;;		On entry : 0/0
  3237 ;;		On exit  : 0/0
  3238 ;;		Unchanged: 0/0
  3239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3240 ;;      Params:         0       0       0       0       0       0
  3241 ;;      Locals:         0       0       0       0       0       0
  3242 ;;      Temps:          0       0       0       0       0       0
  3243 ;;      Totals:         0       0       0       0       0       0
  3244 ;;Total ram usage:        0 bytes
  3245 ;; Hardware stack levels used:    1
  3246 ;; Hardware stack levels required when called:    1
  3247 ;; This function calls:
  3248 ;;		Nothing
  3249 ;; This function is called by:
  3250 ;;		_main
  3251 ;; This function uses a non-reentrant model
  3252 ;;
  3253                           
  3254                           
  3255                           ;psect for function _initCOMP2
  3256  0BC0                     _initCOMP2:	
  3257                           
  3258                           ;powerspy.c: 299: C2NCH0 = 0;
  3259                           
  3260                           ;incstack = 0
  3261                           ; Regs used in _initCOMP2: []
  3262  0BC0  0022               	movlb	2	; select bank2
  3263  0BC1  1014               	bcf	20,0	;volatile
  3264                           
  3265                           ;powerspy.c: 300: C2NCH1 = 0;
  3266  0BC2  1094               	bcf	20,1	;volatile
  3267                           
  3268                           ;powerspy.c: 313: C2PCH0 = 0;
  3269  0BC3  1214               	bcf	20,4	;volatile
  3270                           
  3271                           ;powerspy.c: 314: C2PCH1 = 0;
  3272  0BC4  1294               	bcf	20,5	;volatile
  3273                           
  3274                           ;powerspy.c: 317: C2INTP = 1;
  3275  0BC5  1794               	bsf	20,7	;volatile
  3276                           
  3277                           ;powerspy.c: 318: C2IE = 1;
  3278  0BC6  0021               	movlb	1	; select bank1
  3279  0BC7  1712               	bsf	18,6	;volatile
  3280                           
  3281                           ;powerspy.c: 319: C2IF = 0;
  3282  0BC8  0020               	movlb	0	; select bank0
  3283  0BC9  1312               	bcf	18,6	;volatile
  3284                           
  3285                           ;powerspy.c: 320: C2ON = 1;
  3286  0BCA  0022               	movlb	2	; select bank2
  3287  0BCB  1793               	bsf	19,7	;volatile
  3288  0BCC  0008               	return
  3289  0BCD                     __end_of_initCOMP2:	
  3290                           
  3291                           	psect	text15
  3292  0BB3                     __ptext15:	
  3293 ;; *************** function _initCOMP1 *****************
  3294 ;; Defined at:
  3295 ;;		line 260 in file "powerspy.c"
  3296 ;; Parameters:    Size  Location     Type
  3297 ;;		None
  3298 ;; Auto vars:     Size  Location     Type
  3299 ;;		None
  3300 ;; Return value:  Size  Location     Type
  3301 ;;                  1    wreg      void 
  3302 ;; Registers used:
  3303 ;;		None
  3304 ;; Tracked objects:
  3305 ;;		On entry : 0/0
  3306 ;;		On exit  : 0/0
  3307 ;;		Unchanged: 0/0
  3308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3309 ;;      Params:         0       0       0       0       0       0
  3310 ;;      Locals:         0       0       0       0       0       0
  3311 ;;      Temps:          0       0       0       0       0       0
  3312 ;;      Totals:         0       0       0       0       0       0
  3313 ;;Total ram usage:        0 bytes
  3314 ;; Hardware stack levels used:    1
  3315 ;; Hardware stack levels required when called:    1
  3316 ;; This function calls:
  3317 ;;		Nothing
  3318 ;; This function is called by:
  3319 ;;		_main
  3320 ;; This function uses a non-reentrant model
  3321 ;;
  3322                           
  3323                           
  3324                           ;psect for function _initCOMP1
  3325  0BB3                     _initCOMP1:	
  3326                           
  3327                           ;powerspy.c: 265: C1NCH0 = 1;
  3328                           
  3329                           ;incstack = 0
  3330                           ; Regs used in _initCOMP1: []
  3331  0BB3  0022               	movlb	2	; select bank2
  3332  0BB4  1412               	bsf	18,0	;volatile
  3333                           
  3334                           ;powerspy.c: 266: C1NCH1 = 0;
  3335  0BB5  1092               	bcf	18,1	;volatile
  3336                           
  3337                           ;powerspy.c: 280: C1PCH0 = 0;
  3338  0BB6  1212               	bcf	18,4	;volatile
  3339                           
  3340                           ;powerspy.c: 281: C1PCH1 = 1;
  3341  0BB7  1692               	bsf	18,5	;volatile
  3342                           
  3343                           ;powerspy.c: 284: C1INTP = 1;
  3344  0BB8  1792               	bsf	18,7	;volatile
  3345                           
  3346                           ;powerspy.c: 285: C1IE = 1;
  3347  0BB9  0021               	movlb	1	; select bank1
  3348  0BBA  1692               	bsf	18,5	;volatile
  3349                           
  3350                           ;powerspy.c: 286: C1IF = 0;
  3351  0BBB  0020               	movlb	0	; select bank0
  3352  0BBC  1292               	bcf	18,5	;volatile
  3353                           
  3354                           ;powerspy.c: 287: C1ON = 1;
  3355  0BBD  0022               	movlb	2	; select bank2
  3356  0BBE  1791               	bsf	17,7	;volatile
  3357  0BBF  0008               	return
  3358  0BC0                     __end_of_initCOMP1:	
  3359                           
  3360                           	psect	text16
  3361  0BE2                     __ptext16:	
  3362 ;; *************** function _initBT *****************
  3363 ;; Defined at:
  3364 ;;		line 327 in file "powerspy.c"
  3365 ;; Parameters:    Size  Location     Type
  3366 ;;		None
  3367 ;; Auto vars:     Size  Location     Type
  3368 ;;		None
  3369 ;; Return value:  Size  Location     Type
  3370 ;;                  1    wreg      void 
  3371 ;; Registers used:
  3372 ;;		wreg
  3373 ;; Tracked objects:
  3374 ;;		On entry : 0/0
  3375 ;;		On exit  : 0/0
  3376 ;;		Unchanged: 0/0
  3377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3378 ;;      Params:         0       0       0       0       0       0
  3379 ;;      Locals:         0       0       0       0       0       0
  3380 ;;      Temps:          0       0       0       0       0       0
  3381 ;;      Totals:         0       0       0       0       0       0
  3382 ;;Total ram usage:        0 bytes
  3383 ;; Hardware stack levels used:    1
  3384 ;; Hardware stack levels required when called:    1
  3385 ;; This function calls:
  3386 ;;		Nothing
  3387 ;; This function is called by:
  3388 ;;		_main
  3389 ;; This function uses a non-reentrant model
  3390 ;;
  3391                           
  3392                           
  3393                           ;psect for function _initBT
  3394  0BE2                     _initBT:	
  3395                           
  3396                           ;powerspy.c: 331: RXDTSEL = 0;
  3397                           
  3398                           ;incstack = 0
  3399                           ; Regs used in _initBT: [wreg]
  3400  0BE2  0022               	movlb	2	; select bank2
  3401  0BE3  139D               	bcf	29,7	;volatile
  3402                           
  3403                           ;powerspy.c: 332: TXCKSEL = 0;
  3404  0BE4  101E               	bcf	30,0	;volatile
  3405                           
  3406                           ;powerspy.c: 335: TXEN = 1;
  3407  0BE5  0023               	movlb	3	; select bank3
  3408  0BE6  169E               	bsf	30,5	;volatile
  3409                           
  3410                           ;powerspy.c: 336: SYNC = 0;
  3411  0BE7  121E               	bcf	30,4	;volatile
  3412                           
  3413                           ;powerspy.c: 337: SPEN = 1;
  3414  0BE8  179D               	bsf	29,7	;volatile
  3415                           
  3416                           ;powerspy.c: 340: CREN = 1;
  3417  0BE9  161D               	bsf	29,4	;volatile
  3418                           
  3419                           ;powerspy.c: 341: SYNC = 0;
  3420  0BEA  121E               	bcf	30,4	;volatile
  3421                           
  3422                           ;powerspy.c: 342: SPEN = 1;
  3423  0BEB  179D               	bsf	29,7	;volatile
  3424                           
  3425                           ;powerspy.c: 345: BRGH = 0;
  3426  0BEC  111E               	bcf	30,2	;volatile
  3427                           
  3428                           ;powerspy.c: 346: BRG16 = 0;
  3429  0BED  119F               	bcf	31,3	;volatile
  3430                           
  3431                           ;powerspy.c: 347: SPBRG = 51;
  3432  0BEE  3033               	movlw	51
  3433  0BEF  009B               	movwf	27	;volatile
  3434  0BF0                     l2996:	
  3435                           ;powerspy.c: 349: while (RCIF) {
  3436                           
  3437  0BF0  0020               	movlb	0	; select bank0
  3438  0BF1  1E91               	btfss	17,5	;volatile
  3439  0BF2  2BF6               	goto	l262
  3440                           
  3441                           ;powerspy.c: 350: RCREG;
  3442  0BF3  0023               	movlb	3	; select bank3
  3443  0BF4  0819               	movf	25,w	;volatile
  3444  0BF5  2BF0               	goto	l2996
  3445  0BF6                     l262:	
  3446                           
  3447                           ;powerspy.c: 351: }
  3448                           ;powerspy.c: 353: RCIE = 1;
  3449  0BF6  0021               	movlb	1	; select bank1
  3450  0BF7  1691               	bsf	17,5	;volatile
  3451  0BF8  0008               	return
  3452  0BF9                     __end_of_initBT:	
  3453                           
  3454                           	psect	text17
  3455  0B9E                     __ptext17:	
  3456 ;; *************** function _initADC *****************
  3457 ;; Defined at:
  3458 ;;		line 75 in file "powerspy.c"
  3459 ;; Parameters:    Size  Location     Type
  3460 ;;		None
  3461 ;; Auto vars:     Size  Location     Type
  3462 ;;		None
  3463 ;; Return value:  Size  Location     Type
  3464 ;;                  1    wreg      void 
  3465 ;; Registers used:
  3466 ;;		None
  3467 ;; Tracked objects:
  3468 ;;		On entry : 0/0
  3469 ;;		On exit  : 0/0
  3470 ;;		Unchanged: 0/0
  3471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3472 ;;      Params:         0       0       0       0       0       0
  3473 ;;      Locals:         0       0       0       0       0       0
  3474 ;;      Temps:          0       0       0       0       0       0
  3475 ;;      Totals:         0       0       0       0       0       0
  3476 ;;Total ram usage:        0 bytes
  3477 ;; Hardware stack levels used:    1
  3478 ;; Hardware stack levels required when called:    1
  3479 ;; This function calls:
  3480 ;;		Nothing
  3481 ;; This function is called by:
  3482 ;;		_main
  3483 ;; This function uses a non-reentrant model
  3484 ;;
  3485                           
  3486                           
  3487                           ;psect for function _initADC
  3488  0B9E                     _initADC:	
  3489                           
  3490                           ;powerspy.c: 79: ADFM = 0;
  3491                           
  3492                           ;incstack = 0
  3493                           ; Regs used in _initADC: []
  3494  0B9E  0021               	movlb	1	; select bank1
  3495  0B9F  139E               	bcf	30,7	;volatile
  3496                           
  3497                           ;powerspy.c: 83: ADCS0 = 0;
  3498  0BA0  121E               	bcf	30,4	;volatile
  3499                           
  3500                           ;powerspy.c: 84: ADCS1 = 1;
  3501  0BA1  169E               	bsf	30,5	;volatile
  3502                           
  3503                           ;powerspy.c: 85: ADCS2 = 1;
  3504  0BA2  171E               	bsf	30,6	;volatile
  3505                           
  3506                           ;powerspy.c: 89: ADPREF0 = 0;
  3507  0BA3  101E               	bcf	30,0	;volatile
  3508                           
  3509                           ;powerspy.c: 90: ADPREF1 = 0;
  3510  0BA4  109E               	bcf	30,1	;volatile
  3511                           
  3512                           ;powerspy.c: 91: ADNREF = 0;
  3513  0BA5  111E               	bcf	30,2	;volatile
  3514                           
  3515                           ;powerspy.c: 93: ADON = 1;
  3516  0BA6  141D               	bsf	29,0	;volatile
  3517  0BA7  0008               	return
  3518  0BA8                     __end_of_initADC:	
  3519                           
  3520                           	psect	text18
  3521  0D1F                     __ptext18:	
  3522 ;; *************** function _deltaT *****************
  3523 ;; Defined at:
  3524 ;;		line 538 in file "powerspy.c"
  3525 ;; Parameters:    Size  Location     Type
  3526 ;;  tm_low          2    2[COMMON] unsigned short 
  3527 ;;  tm_high         2    4[COMMON] unsigned short 
  3528 ;; Auto vars:     Size  Location     Type
  3529 ;;  res             2    0[BANK0 ] unsigned short 
  3530 ;; Return value:  Size  Location     Type
  3531 ;;                  2    2[COMMON] unsigned short 
  3532 ;; Registers used:
  3533 ;;		wreg, status,2, status,0
  3534 ;; Tracked objects:
  3535 ;;		On entry : 0/0
  3536 ;;		On exit  : 0/0
  3537 ;;		Unchanged: 0/0
  3538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3539 ;;      Params:         4       0       0       0       0       0
  3540 ;;      Locals:         0       2       0       0       0       0
  3541 ;;      Temps:          4       0       0       0       0       0
  3542 ;;      Totals:         8       2       0       0       0       0
  3543 ;;Total ram usage:       10 bytes
  3544 ;; Hardware stack levels used:    1
  3545 ;; Hardware stack levels required when called:    1
  3546 ;; This function calls:
  3547 ;;		Nothing
  3548 ;; This function is called by:
  3549 ;;		_main
  3550 ;; This function uses a non-reentrant model
  3551 ;;
  3552                           
  3553                           
  3554                           ;psect for function _deltaT
  3555  0D1F                     _deltaT:	
  3556                           
  3557                           ;powerspy.c: 540: uint16_t res;
  3558                           ;powerspy.c: 542: GIE = 0;
  3559                           
  3560                           ;incstack = 0
  3561                           ; Regs used in _deltaT: [wreg+status,2+status,0]
  3562  0D1F  138B               	bcf	11,7	;volatile
  3563                           
  3564                           ;powerspy.c: 543: volt_time = 0;
  3565  0D20  0021               	movlb	1	; select bank1
  3566  0D21  01E7               	clrf	_volt_time^(0+128)
  3567  0D22  01E8               	clrf	(_volt_time+1)^(0+128)
  3568                           
  3569                           ;powerspy.c: 544: curr_time = 0;
  3570  0D23  01E5               	clrf	_curr_time^(0+128)
  3571  0D24  01E6               	clrf	(_curr_time+1)^(0+128)
  3572                           
  3573                           ;powerspy.c: 545: GIE = 1;
  3574  0D25  178B               	bsf	11,7	;volatile
  3575                           
  3576                           ;powerspy.c: 547: if (tm_low < tm_high) {
  3577  0D26  0875               	movf	deltaT@tm_high+1,w
  3578  0D27  0273               	subwf	deltaT@tm_low+1,w
  3579  0D28  1D03               	skipz
  3580  0D29  2D2C               	goto	u5265
  3581  0D2A  0874               	movf	deltaT@tm_high,w
  3582  0D2B  0272               	subwf	deltaT@tm_low,w
  3583  0D2C                     u5265:	
  3584  0D2C  1803               	skipnc
  3585  0D2D  2D3C               	goto	l4088
  3586                           
  3587                           ;powerspy.c: 548: res = tm_high - tm_low;
  3588  0D2E  0972               	comf	deltaT@tm_low,w
  3589  0D2F  00F6               	movwf	??_deltaT
  3590  0D30  0973               	comf	deltaT@tm_low+1,w
  3591  0D31  00F7               	movwf	??_deltaT+1
  3592  0D32  0AF6               	incf	??_deltaT,f
  3593  0D33  1903               	skipnz
  3594  0D34  0AF7               	incf	??_deltaT+1,f
  3595  0D35  0874               	movf	deltaT@tm_high,w
  3596  0D36  0776               	addwf	??_deltaT,w
  3597  0D37  0020               	movlb	0	; select bank0
  3598  0D38  00A0               	movwf	deltaT@res
  3599  0D39  0875               	movf	deltaT@tm_high+1,w
  3600  0D3A  3D77               	addwfc	??_deltaT+1,w
  3601  0D3B  2D4F               	goto	L3
  3602  0D3C                     l4088:	
  3603                           ;powerspy.c: 549: } else {
  3604                           
  3605                           
  3606                           ;powerspy.c: 550: res = 0xffff - tm_low + tm_high;
  3607  0D3C  0972               	comf	deltaT@tm_low,w
  3608  0D3D  00F6               	movwf	??_deltaT
  3609  0D3E  0973               	comf	deltaT@tm_low+1,w
  3610  0D3F  00F7               	movwf	??_deltaT+1
  3611  0D40  0AF6               	incf	??_deltaT,f
  3612  0D41  1903               	skipnz
  3613  0D42  0AF7               	incf	??_deltaT+1,f
  3614  0D43  0874               	movf	deltaT@tm_high,w
  3615  0D44  0776               	addwf	??_deltaT,w
  3616  0D45  00F8               	movwf	??_deltaT+2
  3617  0D46  0875               	movf	deltaT@tm_high+1,w
  3618  0D47  3D77               	addwfc	??_deltaT+1,w
  3619  0D48  00F9               	movwf	??_deltaT+3
  3620  0D49  0878               	movf	??_deltaT+2,w
  3621  0D4A  3EFF               	addlw	255
  3622  0D4B  0020               	movlb	0	; select bank0
  3623  0D4C  00A0               	movwf	deltaT@res
  3624  0D4D  30FF               	movlw	255
  3625  0D4E  3D79               	addwfc	??_deltaT+3,w
  3626  0D4F                     L3:	
  3627  0D4F  00A1               	movwf	deltaT@res+1
  3628                           
  3629                           ;powerspy.c: 551: }
  3630                           ;powerspy.c: 553: return res;
  3631  0D50  0821               	movf	deltaT@res+1,w
  3632  0D51  00F3               	movwf	?_deltaT+1
  3633  0D52  0820               	movf	deltaT@res,w
  3634  0D53  00F2               	movwf	?_deltaT
  3635  0D54  0008               	return
  3636  0D55                     __end_of_deltaT:	
  3637                           
  3638                           	psect	text19
  3639  0706                     __ptext19:	
  3640 ;; *************** function _cos *****************
  3641 ;; Defined at:
  3642 ;;		line 13 in file "/Applications/microchip/xc8/v1.36/sources/common/cos.c"
  3643 ;; Parameters:    Size  Location     Type
  3644 ;;  f               3   74[BANK0 ] unsigned short 
  3645 ;; Auto vars:     Size  Location     Type
  3646 ;;		None
  3647 ;; Return value:  Size  Location     Type
  3648 ;;                  3   74[BANK0 ] unsigned short 
  3649 ;; Registers used:
  3650 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3651 ;; Tracked objects:
  3652 ;;		On entry : 0/0
  3653 ;;		On exit  : 0/0
  3654 ;;		Unchanged: 0/0
  3655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3656 ;;      Params:         0       3       0       0       0       0
  3657 ;;      Locals:         0       0       3       0       0       0
  3658 ;;      Temps:          0       0       0       0       0       0
  3659 ;;      Totals:         0       3       3       0       0       0
  3660 ;;Total ram usage:        6 bytes
  3661 ;; Hardware stack levels used:    1
  3662 ;; Hardware stack levels required when called:    5
  3663 ;; This function calls:
  3664 ;;		___ftadd
  3665 ;;		___ftge
  3666 ;;		_sin
  3667 ;; This function is called by:
  3668 ;;		_main
  3669 ;; This function uses a non-reentrant model
  3670 ;;
  3671                           
  3672                           
  3673                           ;psect for function _cos
  3674  0706                     _cos:	
  3675                           
  3676                           ;incstack = 0
  3677                           ; Regs used in _cos: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3678  0706  3010               	movlw	16
  3679  0707  00F2               	movwf	___ftge@ff1
  3680  0708  3049               	movlw	73
  3681  0709  00F3               	movwf	___ftge@ff1+1
  3682  070A  3040               	movlw	64
  3683  070B  00F4               	movwf	___ftge@ff1+2
  3684  070C  0020               	movlb	0	; select bank0
  3685  070D  086A               	movf	cos@f,w
  3686  070E  00F5               	movwf	___ftge@ff2
  3687  070F  086B               	movf	cos@f+1,w
  3688  0710  00F6               	movwf	___ftge@ff2+1
  3689  0711  086C               	movf	cos@f+2,w
  3690  0712  00F7               	movwf	___ftge@ff2+2
  3691  0713  318D  25CB  3187   	fcall	___ftge
  3692  0716  1803               	btfsc	3,0
  3693  0717  2F49               	goto	l4114
  3694  0718  30CC               	movlw	204
  3695  0719  0020               	movlb	0	; select bank0
  3696  071A  00CA               	movwf	___ftadd@f1
  3697  071B  3096               	movlw	150
  3698  071C  00CB               	movwf	___ftadd@f1+1
  3699  071D  30C0               	movlw	192
  3700  071E  00CC               	movwf	___ftadd@f1+2
  3701  071F  086A               	movf	cos@f,w
  3702  0720  00CD               	movwf	___ftadd@f2
  3703  0721  086B               	movf	cos@f+1,w
  3704  0722  00CE               	movwf	___ftadd@f2+1
  3705  0723  086C               	movf	cos@f+2,w
  3706  0724  00CF               	movwf	___ftadd@f2+2
  3707  0725  3183  23A7  3187   	fcall	___ftadd
  3708  0728  0020               	movlb	0	; select bank0
  3709  0729  084A               	movf	?___ftadd,w
  3710  072A  0021               	movlb	1	; select bank1
  3711  072B  00CF               	movwf	_cos$986^(0+128)
  3712  072C  0020               	movlb	0	; select bank0
  3713  072D  084B               	movf	?___ftadd+1,w
  3714  072E  0021               	movlb	1	; select bank1
  3715  072F  00D0               	movwf	(_cos$986+1)^(0+128)
  3716  0730  0020               	movlb	0	; select bank0
  3717  0731  084C               	movf	?___ftadd+2,w
  3718  0732  0021               	movlb	1	; select bank1
  3719  0733  00D1               	movwf	(_cos$986+2)^(0+128)
  3720  0734  084F               	movf	_cos$986^(0+128),w
  3721  0735  0020               	movlb	0	; select bank0
  3722  0736  00E6               	movwf	sin@f
  3723  0737  0021               	movlb	1	; select bank1
  3724  0738  0850               	movf	(_cos$986+1)^(0+128),w
  3725  0739  0020               	movlb	0	; select bank0
  3726  073A  00E7               	movwf	sin@f+1
  3727  073B  0021               	movlb	1	; select bank1
  3728  073C  0851               	movf	(_cos$986+2)^(0+128),w
  3729  073D  0020               	movlb	0	; select bank0
  3730  073E  00E8               	movwf	sin@f+2
  3731  073F  3182  2223         	fcall	_sin
  3732  0741  0020               	movlb	0	; select bank0
  3733  0742  0866               	movf	?_sin,w
  3734  0743  00EA               	movwf	?_cos
  3735  0744  0867               	movf	?_sin+1,w
  3736  0745  00EB               	movwf	?_cos+1
  3737  0746  0868               	movf	?_sin+2,w
  3738  0747  00EC               	movwf	?_cos+2
  3739  0748  0008               	return
  3740  0749                     l4114:	
  3741  0749  3010               	movlw	16
  3742  074A  0020               	movlb	0	; select bank0
  3743  074B  00CA               	movwf	___ftadd@f1
  3744  074C  30C9               	movlw	201
  3745  074D  00CB               	movwf	___ftadd@f1+1
  3746  074E  303F               	movlw	63
  3747  074F  00CC               	movwf	___ftadd@f1+2
  3748  0750  086A               	movf	cos@f,w
  3749  0751  00CD               	movwf	___ftadd@f2
  3750  0752  086B               	movf	cos@f+1,w
  3751  0753  00CE               	movwf	___ftadd@f2+1
  3752  0754  086C               	movf	cos@f+2,w
  3753  0755  00CF               	movwf	___ftadd@f2+2
  3754  0756  3183  23A7  3187   	fcall	___ftadd
  3755  0759  0020               	movlb	0	; select bank0
  3756  075A  084A               	movf	?___ftadd,w
  3757  075B  0021               	movlb	1	; select bank1
  3758  075C  00CF               	movwf	_cos$986^(0+128)
  3759  075D  0020               	movlb	0	; select bank0
  3760  075E  084B               	movf	?___ftadd+1,w
  3761  075F  0021               	movlb	1	; select bank1
  3762  0760  00D0               	movwf	(_cos$986+1)^(0+128)
  3763  0761  0020               	movlb	0	; select bank0
  3764  0762  084C               	movf	?___ftadd+2,w
  3765  0763  0021               	movlb	1	; select bank1
  3766  0764  00D1               	movwf	(_cos$986+2)^(0+128)
  3767  0765  084F               	movf	_cos$986^(0+128),w
  3768  0766  0020               	movlb	0	; select bank0
  3769  0767  00E6               	movwf	sin@f
  3770  0768  0021               	movlb	1	; select bank1
  3771  0769  0850               	movf	(_cos$986+1)^(0+128),w
  3772  076A  0020               	movlb	0	; select bank0
  3773  076B  00E7               	movwf	sin@f+1
  3774  076C  0021               	movlb	1	; select bank1
  3775  076D  0851               	movf	(_cos$986+2)^(0+128),w
  3776  076E  0020               	movlb	0	; select bank0
  3777  076F  00E8               	movwf	sin@f+2
  3778  0770  3182  2223         	fcall	_sin
  3779  0772  0020               	movlb	0	; select bank0
  3780  0773  0866               	movf	?_sin,w
  3781  0774  00EA               	movwf	?_cos
  3782  0775  0867               	movf	?_sin+1,w
  3783  0776  00EB               	movwf	?_cos+1
  3784  0777  0868               	movf	?_sin+2,w
  3785  0778  00EC               	movwf	?_cos+2
  3786  0779  0008               	return
  3787  077A                     __end_of_cos:	
  3788                           
  3789                           	psect	text20
  3790  0223                     __ptext20:	
  3791 ;; *************** function _sin *****************
  3792 ;; Defined at:
  3793 ;;		line 13 in file "/Applications/microchip/xc8/v1.36/sources/common/sin.c"
  3794 ;; Parameters:    Size  Location     Type
  3795 ;;  f               3   70[BANK0 ] unsigned short 
  3796 ;; Auto vars:     Size  Location     Type
  3797 ;;  x2              3    6[BANK1 ] unsigned short 
  3798 ;;  y               3    0[BANK1 ] unsigned short 
  3799 ;;  sgn             1    9[BANK1 ] unsigned char 
  3800 ;; Return value:  Size  Location     Type
  3801 ;;                  3   70[BANK0 ] unsigned char 
  3802 ;; Registers used:
  3803 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3804 ;; Tracked objects:
  3805 ;;		On entry : 0/0
  3806 ;;		On exit  : 0/0
  3807 ;;		Unchanged: 0/0
  3808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3809 ;;      Params:         0       3       0       0       0       0
  3810 ;;      Locals:         0       0      10       0       0       0
  3811 ;;      Temps:          0       1       0       0       0       0
  3812 ;;      Totals:         0       4      10       0       0       0
  3813 ;;Total ram usage:       14 bytes
  3814 ;; Hardware stack levels used:    1
  3815 ;; Hardware stack levels required when called:    4
  3816 ;; This function calls:
  3817 ;;		___ftadd
  3818 ;;		___ftdiv
  3819 ;;		___ftge
  3820 ;;		___ftmul
  3821 ;;		___ftneg
  3822 ;;		___ftsub
  3823 ;;		_eval_poly
  3824 ;;		_floor
  3825 ;; This function is called by:
  3826 ;;		_cos
  3827 ;; This function uses a non-reentrant model
  3828 ;;
  3829                           
  3830                           
  3831                           ;psect for function _sin
  3832  0223                     _sin:	
  3833                           
  3834                           ;incstack = 0
  3835                           ; Regs used in _sin: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3836  0223  0021               	movlb	1	; select bank1
  3837  0224  01CE               	clrf	sin@sgn^(0+128)
  3838  0225  0020               	movlb	0	; select bank0
  3839  0226  0866               	movf	sin@f,w
  3840  0227  00F2               	movwf	___ftge@ff1
  3841  0228  0867               	movf	sin@f+1,w
  3842  0229  00F3               	movwf	___ftge@ff1+1
  3843  022A  0868               	movf	sin@f+2,w
  3844  022B  00F4               	movwf	___ftge@ff1+2
  3845  022C  3000               	movlw	0
  3846  022D  00F5               	movwf	___ftge@ff2
  3847  022E  3000               	movlw	0
  3848  022F  00F6               	movwf	___ftge@ff2+1
  3849  0230  3000               	movlw	0
  3850  0231  00F7               	movwf	___ftge@ff2+2
  3851  0232  318D  25CB  3182   	fcall	___ftge
  3852  0235  1803               	btfsc	3,0
  3853  0236  2A4B               	goto	l4036
  3854  0237  0020               	movlb	0	; select bank0
  3855  0238  0866               	movf	sin@f,w
  3856  0239  00C7               	movwf	___ftneg@f1
  3857  023A  0867               	movf	sin@f+1,w
  3858  023B  00C8               	movwf	___ftneg@f1+1
  3859  023C  0868               	movf	sin@f+2,w
  3860  023D  00C9               	movwf	___ftneg@f1+2
  3861  023E  318B  238C  3182   	fcall	___ftneg
  3862  0241  0020               	movlb	0	; select bank0
  3863  0242  0847               	movf	?___ftneg,w
  3864  0243  00E6               	movwf	sin@f
  3865  0244  0848               	movf	?___ftneg+1,w
  3866  0245  00E7               	movwf	sin@f+1
  3867  0246  0849               	movf	?___ftneg+2,w
  3868  0247  00E8               	movwf	sin@f+2
  3869  0248  0021               	movlb	1	; select bank1
  3870  0249  01CE               	clrf	sin@sgn^(0+128)
  3871  024A  0ACE               	incf	sin@sgn^(0+128),f
  3872  024B                     l4036:	
  3873  024B  30FA               	movlw	250
  3874  024C  0020               	movlb	0	; select bank0
  3875  024D  00A4               	movwf	___ftmul@f1
  3876  024E  3022               	movlw	34
  3877  024F  00A5               	movwf	___ftmul@f1+1
  3878  0250  303E               	movlw	62
  3879  0251  00A6               	movwf	___ftmul@f1+2
  3880  0252  0866               	movf	sin@f,w
  3881  0253  00A7               	movwf	___ftmul@f2
  3882  0254  0867               	movf	sin@f+1,w
  3883  0255  00A8               	movwf	___ftmul@f2+1
  3884  0256  0868               	movf	sin@f+2,w
  3885  0257  00A9               	movwf	___ftmul@f2+2
  3886  0258  3184  249D  3182   	fcall	___ftmul
  3887  025B  0020               	movlb	0	; select bank0
  3888  025C  0824               	movf	?___ftmul,w
  3889  025D  00E6               	movwf	sin@f
  3890  025E  0825               	movf	?___ftmul+1,w
  3891  025F  00E7               	movwf	sin@f+1
  3892  0260  0826               	movf	?___ftmul+2,w
  3893  0261  00E8               	movwf	sin@f+2
  3894  0262  0866               	movf	sin@f,w
  3895  0263  00D7               	movwf	floor@x
  3896  0264  0867               	movf	sin@f+1,w
  3897  0265  00D8               	movwf	floor@x+1
  3898  0266  0868               	movf	sin@f+2,w
  3899  0267  00D9               	movwf	floor@x+2
  3900  0268  3186  2681  3182   	fcall	_floor
  3901  026B  0020               	movlb	0	; select bank0
  3902  026C  0857               	movf	?_floor,w
  3903  026D  00E0               	movwf	___ftsub@f2
  3904  026E  0858               	movf	?_floor+1,w
  3905  026F  00E1               	movwf	___ftsub@f2+1
  3906  0270  0859               	movf	?_floor+2,w
  3907  0271  00E2               	movwf	___ftsub@f2+2
  3908  0272  0866               	movf	sin@f,w
  3909  0273  00E3               	movwf	___ftsub@f1
  3910  0274  0867               	movf	sin@f+1,w
  3911  0275  00E4               	movwf	___ftsub@f1+1
  3912  0276  0868               	movf	sin@f+2,w
  3913  0277  00E5               	movwf	___ftsub@f1+2
  3914  0278  318C  2431  3182   	fcall	___ftsub
  3915  027B  0020               	movlb	0	; select bank0
  3916  027C  0860               	movf	?___ftsub,w
  3917  027D  00E6               	movwf	sin@f
  3918  027E  0861               	movf	?___ftsub+1,w
  3919  027F  00E7               	movwf	sin@f+1
  3920  0280  0862               	movf	?___ftsub+2,w
  3921  0281  00E8               	movwf	sin@f+2
  3922  0282  3000               	movlw	0
  3923  0283  00A4               	movwf	___ftmul@f1
  3924  0284  3080               	movlw	128
  3925  0285  00A5               	movwf	___ftmul@f1+1
  3926  0286  3040               	movlw	64
  3927  0287  00A6               	movwf	___ftmul@f1+2
  3928  0288  0866               	movf	sin@f,w
  3929  0289  00A7               	movwf	___ftmul@f2
  3930  028A  0867               	movf	sin@f+1,w
  3931  028B  00A8               	movwf	___ftmul@f2+1
  3932  028C  0868               	movf	sin@f+2,w
  3933  028D  00A9               	movwf	___ftmul@f2+2
  3934  028E  3184  249D  3182   	fcall	___ftmul
  3935  0291  0020               	movlb	0	; select bank0
  3936  0292  0824               	movf	?___ftmul,w
  3937  0293  00E6               	movwf	sin@f
  3938  0294  0825               	movf	?___ftmul+1,w
  3939  0295  00E7               	movwf	sin@f+1
  3940  0296  0826               	movf	?___ftmul+2,w
  3941  0297  00E8               	movwf	sin@f+2
  3942  0298  3000               	movlw	0
  3943  0299  00F2               	movwf	___ftge@ff1
  3944  029A  3000               	movlw	0
  3945  029B  00F3               	movwf	___ftge@ff1+1
  3946  029C  3040               	movlw	64
  3947  029D  00F4               	movwf	___ftge@ff1+2
  3948  029E  0866               	movf	sin@f,w
  3949  029F  00F5               	movwf	___ftge@ff2
  3950  02A0  0867               	movf	sin@f+1,w
  3951  02A1  00F6               	movwf	___ftge@ff2+1
  3952  02A2  0868               	movf	sin@f+2,w
  3953  02A3  00F7               	movwf	___ftge@ff2+2
  3954  02A4  318D  25CB  3182   	fcall	___ftge
  3955  02A7  1803               	btfsc	3,0
  3956  02A8  2ACC               	goto	l4048
  3957  02A9  3000               	movlw	0
  3958  02AA  0020               	movlb	0	; select bank0
  3959  02AB  00E0               	movwf	___ftsub@f2
  3960  02AC  3000               	movlw	0
  3961  02AD  00E1               	movwf	___ftsub@f2+1
  3962  02AE  3040               	movlw	64
  3963  02AF  00E2               	movwf	___ftsub@f2+2
  3964  02B0  0866               	movf	sin@f,w
  3965  02B1  00E3               	movwf	___ftsub@f1
  3966  02B2  0867               	movf	sin@f+1,w
  3967  02B3  00E4               	movwf	___ftsub@f1+1
  3968  02B4  0868               	movf	sin@f+2,w
  3969  02B5  00E5               	movwf	___ftsub@f1+2
  3970  02B6  318C  2431  3182   	fcall	___ftsub
  3971  02B9  0020               	movlb	0	; select bank0
  3972  02BA  0860               	movf	?___ftsub,w
  3973  02BB  00E6               	movwf	sin@f
  3974  02BC  0861               	movf	?___ftsub+1,w
  3975  02BD  00E7               	movwf	sin@f+1
  3976  02BE  0862               	movf	?___ftsub+2,w
  3977  02BF  00E8               	movwf	sin@f+2
  3978  02C0  0021               	movlb	1	; select bank1
  3979  02C1  084E               	movf	sin@sgn^(0+128),w
  3980  02C2  1D03               	btfss	3,2
  3981  02C3  2AC6               	goto	u5220
  3982  02C4  3001               	movlw	1
  3983  02C5  2AC7               	goto	u5230
  3984  02C6                     u5220:	
  3985  02C6  3000               	movlw	0
  3986  02C7                     u5230:	
  3987  02C7  0020               	movlb	0	; select bank0
  3988  02C8  00E9               	movwf	??_sin
  3989  02C9  0869               	movf	??_sin,w
  3990  02CA  0021               	movlb	1	; select bank1
  3991  02CB  00CE               	movwf	sin@sgn^(0+128)
  3992  02CC                     l4048:	
  3993  02CC  3000               	movlw	0
  3994  02CD  00F2               	movwf	___ftge@ff1
  3995  02CE  3080               	movlw	128
  3996  02CF  00F3               	movwf	___ftge@ff1+1
  3997  02D0  303F               	movlw	63
  3998  02D1  00F4               	movwf	___ftge@ff1+2
  3999  02D2  0020               	movlb	0	; select bank0
  4000  02D3  0866               	movf	sin@f,w
  4001  02D4  00F5               	movwf	___ftge@ff2
  4002  02D5  0867               	movf	sin@f+1,w
  4003  02D6  00F6               	movwf	___ftge@ff2+1
  4004  02D7  0868               	movf	sin@f+2,w
  4005  02D8  00F7               	movwf	___ftge@ff2+2
  4006  02D9  318D  25CB  3182   	fcall	___ftge
  4007  02DC  1803               	btfsc	3,0
  4008  02DD  2AFF               	goto	l1053
  4009  02DE  3000               	movlw	0
  4010  02DF  0020               	movlb	0	; select bank0
  4011  02E0  00CA               	movwf	___ftadd@f1
  4012  02E1  3000               	movlw	0
  4013  02E2  00CB               	movwf	___ftadd@f1+1
  4014  02E3  3040               	movlw	64
  4015  02E4  00CC               	movwf	___ftadd@f1+2
  4016  02E5  0866               	movf	sin@f,w
  4017  02E6  00C7               	movwf	___ftneg@f1
  4018  02E7  0867               	movf	sin@f+1,w
  4019  02E8  00C8               	movwf	___ftneg@f1+1
  4020  02E9  0868               	movf	sin@f+2,w
  4021  02EA  00C9               	movwf	___ftneg@f1+2
  4022  02EB  318B  238C  3182   	fcall	___ftneg
  4023  02EE  0020               	movlb	0	; select bank0
  4024  02EF  0847               	movf	?___ftneg,w
  4025  02F0  00CD               	movwf	___ftadd@f2
  4026  02F1  0848               	movf	?___ftneg+1,w
  4027  02F2  00CE               	movwf	___ftadd@f2+1
  4028  02F3  0849               	movf	?___ftneg+2,w
  4029  02F4  00CF               	movwf	___ftadd@f2+2
  4030  02F5  3183  23A7  3182   	fcall	___ftadd
  4031  02F8  0020               	movlb	0	; select bank0
  4032  02F9  084A               	movf	?___ftadd,w
  4033  02FA  00E6               	movwf	sin@f
  4034  02FB  084B               	movf	?___ftadd+1,w
  4035  02FC  00E7               	movwf	sin@f+1
  4036  02FD  084C               	movf	?___ftadd+2,w
  4037  02FE  00E8               	movwf	sin@f+2
  4038  02FF                     l1053:	
  4039  02FF  0020               	movlb	0	; select bank0
  4040  0300  0866               	movf	sin@f,w
  4041  0301  00A4               	movwf	___ftmul@f1
  4042  0302  0867               	movf	sin@f+1,w
  4043  0303  00A5               	movwf	___ftmul@f1+1
  4044  0304  0868               	movf	sin@f+2,w
  4045  0305  00A6               	movwf	___ftmul@f1+2
  4046  0306  0866               	movf	sin@f,w
  4047  0307  00A7               	movwf	___ftmul@f2
  4048  0308  0867               	movf	sin@f+1,w
  4049  0309  00A8               	movwf	___ftmul@f2+1
  4050  030A  0868               	movf	sin@f+2,w
  4051  030B  00A9               	movwf	___ftmul@f2+2
  4052  030C  3184  249D  3182   	fcall	___ftmul
  4053  030F  0020               	movlb	0	; select bank0
  4054  0310  0824               	movf	?___ftmul,w
  4055  0311  0021               	movlb	1	; select bank1
  4056  0312  00CB               	movwf	sin@x2^(0+128)
  4057  0313  0020               	movlb	0	; select bank0
  4058  0314  0825               	movf	?___ftmul+1,w
  4059  0315  0021               	movlb	1	; select bank1
  4060  0316  00CC               	movwf	(sin@x2+1)^(0+128)
  4061  0317  0020               	movlb	0	; select bank0
  4062  0318  0826               	movf	?___ftmul+2,w
  4063  0319  0021               	movlb	1	; select bank1
  4064  031A  00CD               	movwf	(sin@x2+2)^(0+128)
  4065  031B  084B               	movf	sin@x2^(0+128),w
  4066  031C  0020               	movlb	0	; select bank0
  4067  031D  00D7               	movwf	eval_poly@x
  4068  031E  0021               	movlb	1	; select bank1
  4069  031F  084C               	movf	(sin@x2+1)^(0+128),w
  4070  0320  0020               	movlb	0	; select bank0
  4071  0321  00D8               	movwf	eval_poly@x+1
  4072  0322  0021               	movlb	1	; select bank1
  4073  0323  084D               	movf	(sin@x2+2)^(0+128),w
  4074  0324  0020               	movlb	0	; select bank0
  4075  0325  00D9               	movwf	eval_poly@x+2
  4076  0326  30F8               	movlw	low (sin@coeff_b| (0+32768))
  4077  0327  00DA               	movwf	eval_poly@d
  4078  0328  3087               	movlw	high (sin@coeff_b| (0+32768))
  4079  0329  00DB               	movwf	eval_poly@d+1
  4080  032A  3003               	movlw	3
  4081  032B  00DC               	movwf	eval_poly@n
  4082  032C  3000               	movlw	0
  4083  032D  00DD               	movwf	eval_poly@n+1
  4084  032E  318F  273C  3182   	fcall	_eval_poly
  4085  0331  0020               	movlb	0	; select bank0
  4086  0332  0857               	movf	?_eval_poly,w
  4087  0333  0021               	movlb	1	; select bank1
  4088  0334  00C5               	movwf	sin@y^(0+128)
  4089  0335  0020               	movlb	0	; select bank0
  4090  0336  0858               	movf	?_eval_poly+1,w
  4091  0337  0021               	movlb	1	; select bank1
  4092  0338  00C6               	movwf	(sin@y+1)^(0+128)
  4093  0339  0020               	movlb	0	; select bank0
  4094  033A  0859               	movf	?_eval_poly+2,w
  4095  033B  0021               	movlb	1	; select bank1
  4096  033C  00C7               	movwf	(sin@y+2)^(0+128)
  4097  033D  3004               	movlw	4
  4098  033E  0020               	movlb	0	; select bank0
  4099  033F  00DC               	movwf	eval_poly@n
  4100  0340  3000               	movlw	0
  4101  0341  00DD               	movwf	eval_poly@n+1
  4102  0342  30E9               	movlw	low (sin@coeff_a| (0+32768))
  4103  0343  00DA               	movwf	eval_poly@d
  4104  0344  3087               	movlw	high (sin@coeff_a| (0+32768))
  4105  0345  00DB               	movwf	eval_poly@d+1
  4106  0346  0021               	movlb	1	; select bank1
  4107  0347  084B               	movf	sin@x2^(0+128),w
  4108  0348  0020               	movlb	0	; select bank0
  4109  0349  00D7               	movwf	eval_poly@x
  4110  034A  0021               	movlb	1	; select bank1
  4111  034B  084C               	movf	(sin@x2+1)^(0+128),w
  4112  034C  0020               	movlb	0	; select bank0
  4113  034D  00D8               	movwf	eval_poly@x+1
  4114  034E  0021               	movlb	1	; select bank1
  4115  034F  084D               	movf	(sin@x2+2)^(0+128),w
  4116  0350  0020               	movlb	0	; select bank0
  4117  0351  00D9               	movwf	eval_poly@x+2
  4118  0352  318F  273C  3182   	fcall	_eval_poly
  4119  0355  0020               	movlb	0	; select bank0
  4120  0356  0857               	movf	?_eval_poly,w
  4121  0357  00B7               	movwf	___ftdiv@f1
  4122  0358  0858               	movf	?_eval_poly+1,w
  4123  0359  00B8               	movwf	___ftdiv@f1+1
  4124  035A  0859               	movf	?_eval_poly+2,w
  4125  035B  00B9               	movwf	___ftdiv@f1+2
  4126  035C  0021               	movlb	1	; select bank1
  4127  035D  0845               	movf	sin@y^(0+128),w
  4128  035E  0020               	movlb	0	; select bank0
  4129  035F  00B4               	movwf	___ftdiv@f2
  4130  0360  0021               	movlb	1	; select bank1
  4131  0361  0846               	movf	(sin@y+1)^(0+128),w
  4132  0362  0020               	movlb	0	; select bank0
  4133  0363  00B5               	movwf	___ftdiv@f2+1
  4134  0364  0021               	movlb	1	; select bank1
  4135  0365  0847               	movf	(sin@y+2)^(0+128),w
  4136  0366  0020               	movlb	0	; select bank0
  4137  0367  00B6               	movwf	___ftdiv@f2+2
  4138  0368  3185  2551  3182   	fcall	___ftdiv
  4139  036B  0020               	movlb	0	; select bank0
  4140  036C  0834               	movf	?___ftdiv,w
  4141  036D  0021               	movlb	1	; select bank1
  4142  036E  00C8               	movwf	_sin$987^(0+128)
  4143  036F  0020               	movlb	0	; select bank0
  4144  0370  0835               	movf	?___ftdiv+1,w
  4145  0371  0021               	movlb	1	; select bank1
  4146  0372  00C9               	movwf	(_sin$987+1)^(0+128)
  4147  0373  0020               	movlb	0	; select bank0
  4148  0374  0836               	movf	?___ftdiv+2,w
  4149  0375  0021               	movlb	1	; select bank1
  4150  0376  00CA               	movwf	(_sin$987+2)^(0+128)
  4151  0377  0848               	movf	_sin$987^(0+128),w
  4152  0378  0020               	movlb	0	; select bank0
  4153  0379  00A4               	movwf	___ftmul@f1
  4154  037A  0021               	movlb	1	; select bank1
  4155  037B  0849               	movf	(_sin$987+1)^(0+128),w
  4156  037C  0020               	movlb	0	; select bank0
  4157  037D  00A5               	movwf	___ftmul@f1+1
  4158  037E  0021               	movlb	1	; select bank1
  4159  037F  084A               	movf	(_sin$987+2)^(0+128),w
  4160  0380  0020               	movlb	0	; select bank0
  4161  0381  00A6               	movwf	___ftmul@f1+2
  4162  0382  0866               	movf	sin@f,w
  4163  0383  00A7               	movwf	___ftmul@f2
  4164  0384  0867               	movf	sin@f+1,w
  4165  0385  00A8               	movwf	___ftmul@f2+1
  4166  0386  0868               	movf	sin@f+2,w
  4167  0387  00A9               	movwf	___ftmul@f2+2
  4168  0388  3184  249D  3182   	fcall	___ftmul
  4169  038B  0020               	movlb	0	; select bank0
  4170  038C  0824               	movf	?___ftmul,w
  4171  038D  00E6               	movwf	sin@f
  4172  038E  0825               	movf	?___ftmul+1,w
  4173  038F  00E7               	movwf	sin@f+1
  4174  0390  0826               	movf	?___ftmul+2,w
  4175  0391  00E8               	movwf	sin@f+2
  4176  0392  0021               	movlb	1	; select bank1
  4177  0393  084E               	movf	sin@sgn^(0+128),w
  4178  0394  1903               	btfsc	3,2
  4179  0395  0008               	return
  4180  0396  0020               	movlb	0	; select bank0
  4181  0397  0866               	movf	sin@f,w
  4182  0398  00C7               	movwf	___ftneg@f1
  4183  0399  0867               	movf	sin@f+1,w
  4184  039A  00C8               	movwf	___ftneg@f1+1
  4185  039B  0868               	movf	sin@f+2,w
  4186  039C  00C9               	movwf	___ftneg@f1+2
  4187  039D  318B  238C         	fcall	___ftneg
  4188  039F  0020               	movlb	0	; select bank0
  4189  03A0  0847               	movf	?___ftneg,w
  4190  03A1  00E6               	movwf	?_sin
  4191  03A2  0848               	movf	?___ftneg+1,w
  4192  03A3  00E7               	movwf	?_sin+1
  4193  03A4  0849               	movf	?___ftneg+2,w
  4194  03A5  00E8               	movwf	?_sin+2
  4195  03A6  0008               	return
  4196  03A7                     __end_of_sin:	
  4197                           
  4198                           	psect	text21
  4199  0681                     __ptext21:	
  4200 ;; *************** function _floor *****************
  4201 ;; Defined at:
  4202 ;;		line 13 in file "/Applications/microchip/xc8/v1.36/sources/common/floor.c"
  4203 ;; Parameters:    Size  Location     Type
  4204 ;;  x               3   55[BANK0 ] unsigned char 
  4205 ;; Auto vars:     Size  Location     Type
  4206 ;;  i               3   59[BANK0 ] unsigned char 
  4207 ;;  expon           2   62[BANK0 ] int 
  4208 ;; Return value:  Size  Location     Type
  4209 ;;                  3   55[BANK0 ] int 
  4210 ;; Registers used:
  4211 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4212 ;; Tracked objects:
  4213 ;;		On entry : 0/0
  4214 ;;		On exit  : 0/0
  4215 ;;		Unchanged: 0/0
  4216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4217 ;;      Params:         0       3       0       0       0       0
  4218 ;;      Locals:         0       5       0       0       0       0
  4219 ;;      Temps:          0       1       0       0       0       0
  4220 ;;      Totals:         0       9       0       0       0       0
  4221 ;;Total ram usage:        9 bytes
  4222 ;; Hardware stack levels used:    1
  4223 ;; Hardware stack levels required when called:    3
  4224 ;; This function calls:
  4225 ;;		___altoft
  4226 ;;		___ftadd
  4227 ;;		___ftge
  4228 ;;		___fttol
  4229 ;;		_frexp
  4230 ;; This function is called by:
  4231 ;;		_sin
  4232 ;; This function uses a non-reentrant model
  4233 ;;
  4234                           
  4235                           
  4236                           ;psect for function _floor
  4237  0681                     _floor:	
  4238                           
  4239                           ;incstack = 0
  4240                           ; Regs used in _floor: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4241  0681  0020               	movlb	0	; select bank0
  4242  0682  0857               	movf	floor@x,w
  4243  0683  00F2               	movwf	frexp@value
  4244  0684  0858               	movf	floor@x+1,w
  4245  0685  00F3               	movwf	frexp@value+1
  4246  0686  0859               	movf	floor@x+2,w
  4247  0687  00F4               	movwf	frexp@value+2
  4248  0688  305E               	movlw	(low (floor@expon| 0))& (0+255)
  4249  0689  00DA               	movwf	??_floor
  4250  068A  085A               	movf	??_floor,w
  4251  068B  00F5               	movwf	frexp@eptr
  4252  068C  318C  24EA  3186   	fcall	_frexp
  4253  068F  0020               	movlb	0	; select bank0
  4254  0690  1FDF               	btfss	floor@expon+1,7
  4255  0691  2EB3               	goto	l3984
  4256  0692  0857               	movf	floor@x,w
  4257  0693  00F2               	movwf	___ftge@ff1
  4258  0694  0858               	movf	floor@x+1,w
  4259  0695  00F3               	movwf	___ftge@ff1+1
  4260  0696  0859               	movf	floor@x+2,w
  4261  0697  00F4               	movwf	___ftge@ff1+2
  4262  0698  3000               	movlw	0
  4263  0699  00F5               	movwf	___ftge@ff2
  4264  069A  3000               	movlw	0
  4265  069B  00F6               	movwf	___ftge@ff2+1
  4266  069C  3000               	movlw	0
  4267  069D  00F7               	movwf	___ftge@ff2+2
  4268  069E  318D  25CB  3186   	fcall	___ftge
  4269  06A1  1803               	btfsc	3,0
  4270  06A2  2EAB               	goto	l3980
  4271  06A3  3000               	movlw	0
  4272  06A4  0020               	movlb	0	; select bank0
  4273  06A5  00D7               	movwf	?_floor
  4274  06A6  3080               	movlw	128
  4275  06A7  00D8               	movwf	?_floor+1
  4276  06A8  30BF               	movlw	191
  4277  06A9  00D9               	movwf	?_floor+2
  4278  06AA  0008               	return
  4279  06AB                     l3980:	
  4280  06AB  3000               	movlw	0
  4281  06AC  0020               	movlb	0	; select bank0
  4282  06AD  00D7               	movwf	?_floor
  4283  06AE  3000               	movlw	0
  4284  06AF  00D8               	movwf	?_floor+1
  4285  06B0  3000               	movlw	0
  4286  06B1  00D9               	movwf	?_floor+2
  4287  06B2  0008               	return
  4288  06B3                     l3984:	
  4289  06B3  3000               	movlw	0
  4290  06B4  025F               	subwf	floor@expon+1,w
  4291  06B5  3015               	movlw	21
  4292  06B6  1903               	skipnz
  4293  06B7  025E               	subwf	floor@expon,w
  4294  06B8  1803               	btfsc	3,0
  4295  06B9  0008               	return
  4296  06BA  0857               	movf	floor@x,w
  4297  06BB  00F2               	movwf	___fttol@f1
  4298  06BC  0858               	movf	floor@x+1,w
  4299  06BD  00F3               	movwf	___fttol@f1+1
  4300  06BE  0859               	movf	floor@x+2,w
  4301  06BF  00F4               	movwf	___fttol@f1+2
  4302  06C0  3185  25FA  3186   	fcall	___fttol
  4303  06C3  0875               	movf	?___fttol+3,w
  4304  06C4  0020               	movlb	0	; select bank0
  4305  06C5  00A9               	movwf	___altoft@c+3
  4306  06C6  0874               	movf	?___fttol+2,w
  4307  06C7  00A8               	movwf	___altoft@c+2
  4308  06C8  0873               	movf	?___fttol+1,w
  4309  06C9  00A7               	movwf	___altoft@c+1
  4310  06CA  0872               	movf	?___fttol,w
  4311  06CB  00A6               	movwf	___altoft@c
  4312  06CC  318D  258E  3186   	fcall	___altoft
  4313  06CF  0020               	movlb	0	; select bank0
  4314  06D0  0826               	movf	?___altoft,w
  4315  06D1  00DB               	movwf	floor@i
  4316  06D2  0827               	movf	?___altoft+1,w
  4317  06D3  00DC               	movwf	floor@i+1
  4318  06D4  0828               	movf	?___altoft+2,w
  4319  06D5  00DD               	movwf	floor@i+2
  4320  06D6  0857               	movf	floor@x,w
  4321  06D7  00F2               	movwf	___ftge@ff1
  4322  06D8  0858               	movf	floor@x+1,w
  4323  06D9  00F3               	movwf	___ftge@ff1+1
  4324  06DA  0859               	movf	floor@x+2,w
  4325  06DB  00F4               	movwf	___ftge@ff1+2
  4326  06DC  085B               	movf	floor@i,w
  4327  06DD  00F5               	movwf	___ftge@ff2
  4328  06DE  085C               	movf	floor@i+1,w
  4329  06DF  00F6               	movwf	___ftge@ff2+1
  4330  06E0  085D               	movf	floor@i+2,w
  4331  06E1  00F7               	movwf	___ftge@ff2+2
  4332  06E2  318D  25CB  3186   	fcall	___ftge
  4333  06E5  1803               	btfsc	3,0
  4334  06E6  2EFE               	goto	l3994
  4335  06E7  3000               	movlw	0
  4336  06E8  0020               	movlb	0	; select bank0
  4337  06E9  00CA               	movwf	___ftadd@f1
  4338  06EA  3080               	movlw	128
  4339  06EB  00CB               	movwf	___ftadd@f1+1
  4340  06EC  30BF               	movlw	191
  4341  06ED  00CC               	movwf	___ftadd@f1+2
  4342  06EE  085B               	movf	floor@i,w
  4343  06EF  00CD               	movwf	___ftadd@f2
  4344  06F0  085C               	movf	floor@i+1,w
  4345  06F1  00CE               	movwf	___ftadd@f2+1
  4346  06F2  085D               	movf	floor@i+2,w
  4347  06F3  00CF               	movwf	___ftadd@f2+2
  4348  06F4  3183  23A7         	fcall	___ftadd
  4349  06F6  0020               	movlb	0	; select bank0
  4350  06F7  084A               	movf	?___ftadd,w
  4351  06F8  00D7               	movwf	?_floor
  4352  06F9  084B               	movf	?___ftadd+1,w
  4353  06FA  00D8               	movwf	?_floor+1
  4354  06FB  084C               	movf	?___ftadd+2,w
  4355  06FC  00D9               	movwf	?_floor+2
  4356  06FD  0008               	return
  4357  06FE                     l3994:	
  4358  06FE  0020               	movlb	0	; select bank0
  4359  06FF  085B               	movf	floor@i,w
  4360  0700  00D7               	movwf	?_floor
  4361  0701  085C               	movf	floor@i+1,w
  4362  0702  00D8               	movwf	?_floor+1
  4363  0703  085D               	movf	floor@i+2,w
  4364  0704  00D9               	movwf	?_floor+2
  4365  0705  0008               	return
  4366  0706                     __end_of_floor:	
  4367                           
  4368                           	psect	text22
  4369  0CEA                     __ptext22:	
  4370 ;; *************** function _frexp *****************
  4371 ;; Defined at:
  4372 ;;		line 254 in file "/Applications/microchip/xc8/v1.36/sources/common/frexp.c"
  4373 ;; Parameters:    Size  Location     Type
  4374 ;;  value           3    2[COMMON] int 
  4375 ;;  eptr            1    5[COMMON] PTR int 
  4376 ;;		 -> floor@expon(2), 
  4377 ;; Auto vars:     Size  Location     Type
  4378 ;;		None
  4379 ;; Return value:  Size  Location     Type
  4380 ;;                  3    2[COMMON] PTR int 
  4381 ;; Registers used:
  4382 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4383 ;; Tracked objects:
  4384 ;;		On entry : 0/0
  4385 ;;		On exit  : 0/0
  4386 ;;		Unchanged: 0/0
  4387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4388 ;;      Params:         4       0       0       0       0       0
  4389 ;;      Locals:         0       0       0       0       0       0
  4390 ;;      Temps:          2       0       0       0       0       0
  4391 ;;      Totals:         6       0       0       0       0       0
  4392 ;;Total ram usage:        6 bytes
  4393 ;; Hardware stack levels used:    1
  4394 ;; Hardware stack levels required when called:    1
  4395 ;; This function calls:
  4396 ;;		Nothing
  4397 ;; This function is called by:
  4398 ;;		_floor
  4399 ;; This function uses a non-reentrant model
  4400 ;;
  4401                           
  4402                           
  4403                           ;psect for function _frexp
  4404  0CEA                     _frexp:	
  4405                           
  4406                           ;incstack = 0
  4407                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
  4408  0CEA  0874               	movf	frexp@value+2,w
  4409  0CEB  0473               	iorwf	frexp@value+1,w
  4410  0CEC  0472               	iorwf	frexp@value,w
  4411  0CED  1D03               	skipz
  4412  0CEE  2CF6               	goto	l3874
  4413  0CEF  0875               	movf	frexp@eptr,w
  4414  0CF0  0086               	movwf	6
  4415  0CF1  0187               	clrf	7
  4416  0CF2  3000               	movlw	0
  4417  0CF3  3FC0               	movwi [0]fsr1
  4418  0CF4  3FC1               	movwi [1]fsr1
  4419                           
  4420                           ;	Return value of _frexp is never used
  4421  0CF5  0008               	return
  4422  0CF6                     l3874:	
  4423  0CF6  0874               	movf	frexp@value+2,w
  4424  0CF7  397F               	andlw	127
  4425  0CF8  00F6               	movwf	??_frexp
  4426  0CF9  01F7               	clrf	??_frexp+1
  4427  0CFA  35F6               	lslf	??_frexp,f
  4428  0CFB  0DF7               	rlf	??_frexp+1,f
  4429  0CFC  0875               	movf	frexp@eptr,w
  4430  0CFD  0086               	movwf	6
  4431  0CFE  0187               	clrf	7
  4432  0CFF  0876               	movf	??_frexp,w
  4433  0D00  3FC0               	movwi [0]fsr1
  4434  0D01  0877               	movf	??_frexp+1,w
  4435  0D02  3FC1               	movwi [1]fsr1
  4436  0D03  0D73               	rlf	frexp@value+1,w
  4437  0D04  0D73               	rlf	frexp@value+1,w
  4438  0D05  3901               	andlw	1
  4439  0D06  00F6               	movwf	??_frexp
  4440  0D07  01F7               	clrf	??_frexp+1
  4441  0D08  0875               	movf	frexp@eptr,w
  4442  0D09  0086               	movwf	6
  4443  0D0A  0187               	clrf	7
  4444  0D0B  0876               	movf	??_frexp,w
  4445  0D0C  0481               	iorwf	1,f
  4446  0D0D  3141               	addfsr 1,1
  4447  0D0E  0877               	movf	??_frexp+1,w
  4448  0D0F  0481               	iorwf	1,f
  4449  0D10  0875               	movf	frexp@eptr,w
  4450  0D11  0086               	movwf	6
  4451  0D12  0187               	clrf	7
  4452  0D13  3082               	movlw	130
  4453  0D14  0781               	addwf	1,f
  4454  0D15  3141               	addfsr 1,1
  4455  0D16  30FF               	movlw	255
  4456  0D17  3D81               	addwfc	1,f
  4457  0D18  317F               	addfsr 1,-1
  4458  0D19  0874               	movf	frexp@value+2,w
  4459  0D1A  3980               	andlw	-128
  4460  0D1B  383F               	iorlw	63
  4461  0D1C  00F4               	movwf	frexp@value+2
  4462  0D1D  13F3               	bcf	frexp@value+1,7
  4463  0D1E  0008               	return
  4464  0D1F                     __end_of_frexp:	
  4465                           ;	Return value of _frexp is never used
  4466                           
  4467                           
  4468                           	psect	text23
  4469  05FA                     __ptext23:	
  4470 ;; *************** function ___fttol *****************
  4471 ;; Defined at:
  4472 ;;		line 44 in file "/Applications/microchip/xc8/v1.36/sources/common/fttol.c"
  4473 ;; Parameters:    Size  Location     Type
  4474 ;;  f1              3    2[COMMON] float 
  4475 ;; Auto vars:     Size  Location     Type
  4476 ;;  lval            4    1[BANK0 ] unsigned long 
  4477 ;;  exp1            1    5[BANK0 ] unsigned char 
  4478 ;;  sign1           1    0[BANK0 ] unsigned char 
  4479 ;; Return value:  Size  Location     Type
  4480 ;;                  4    2[COMMON] long 
  4481 ;; Registers used:
  4482 ;;		wreg, status,2, status,0
  4483 ;; Tracked objects:
  4484 ;;		On entry : 0/0
  4485 ;;		On exit  : 0/0
  4486 ;;		Unchanged: 0/0
  4487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4488 ;;      Params:         4       0       0       0       0       0
  4489 ;;      Locals:         0       6       0       0       0       0
  4490 ;;      Temps:          4       0       0       0       0       0
  4491 ;;      Totals:         8       6       0       0       0       0
  4492 ;;Total ram usage:       14 bytes
  4493 ;; Hardware stack levels used:    1
  4494 ;; Hardware stack levels required when called:    1
  4495 ;; This function calls:
  4496 ;;		Nothing
  4497 ;; This function is called by:
  4498 ;;		_floor
  4499 ;;		__round_down
  4500 ;;		__round_up
  4501 ;;		__round
  4502 ;;		_flt_to_str
  4503 ;; This function uses a non-reentrant model
  4504 ;;
  4505                           
  4506                           
  4507                           ;psect for function ___fttol
  4508  05FA                     ___fttol:	
  4509                           
  4510                           ;incstack = 0
  4511                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  4512  05FA  0872               	movf	___fttol@f1,w
  4513  05FB  00F6               	movwf	??___fttol
  4514  05FC  0873               	movf	___fttol@f1+1,w
  4515  05FD  00F7               	movwf	??___fttol+1
  4516  05FE  0874               	movf	___fttol@f1+2,w
  4517  05FF  00F8               	movwf	??___fttol+2
  4518  0600  1003               	clrc
  4519  0601  0D77               	rlf	??___fttol+1,w
  4520  0602  0D78               	rlf	??___fttol+2,w
  4521  0603  00F9               	movwf	??___fttol+3
  4522  0604  0879               	movf	??___fttol+3,w
  4523  0605  0020               	movlb	0	; select bank0
  4524  0606  00A5               	movwf	___fttol@exp1
  4525  0607  0825               	movf	___fttol@exp1,w
  4526  0608  1D03               	btfss	3,2
  4527  0609  2E13               	goto	l3832
  4528  060A  3000               	movlw	0
  4529  060B  00F5               	movwf	?___fttol+3
  4530  060C  3000               	movlw	0
  4531  060D  00F4               	movwf	?___fttol+2
  4532  060E  3000               	movlw	0
  4533  060F  00F3               	movwf	?___fttol+1
  4534  0610  3000               	movlw	0
  4535  0611  00F2               	movwf	?___fttol
  4536  0612  0008               	return
  4537  0613                     l3832:	
  4538  0613  0872               	movf	___fttol@f1,w
  4539  0614  00F6               	movwf	??___fttol
  4540  0615  0873               	movf	___fttol@f1+1,w
  4541  0616  00F7               	movwf	??___fttol+1
  4542  0617  0874               	movf	___fttol@f1+2,w
  4543  0618  00F8               	movwf	??___fttol+2
  4544  0619  3017               	movlw	23
  4545  061A                     u4895:	
  4546  061A  36F8               	lsrf	??___fttol+2,f
  4547  061B  0CF7               	rrf	??___fttol+1,f
  4548  061C  0CF6               	rrf	??___fttol,f
  4549  061D  0B89               	decfsz	9,f
  4550  061E  2E1A               	goto	u4895
  4551  061F  0876               	movf	??___fttol,w
  4552  0620  00F9               	movwf	??___fttol+3
  4553  0621  0879               	movf	??___fttol+3,w
  4554  0622  00A0               	movwf	___fttol@sign1
  4555  0623  17F3               	bsf	___fttol@f1+1,7
  4556  0624  30FF               	movlw	255
  4557  0625  05F2               	andwf	___fttol@f1,f
  4558  0626  30FF               	movlw	255
  4559  0627  05F3               	andwf	___fttol@f1+1,f
  4560  0628  3000               	movlw	0
  4561  0629  05F4               	andwf	___fttol@f1+2,f
  4562  062A  0872               	movf	___fttol@f1,w
  4563  062B  00A1               	movwf	___fttol@lval
  4564  062C  0873               	movf	___fttol@f1+1,w
  4565  062D  00A2               	movwf	___fttol@lval+1
  4566  062E  0874               	movf	___fttol@f1+2,w
  4567  062F  00A3               	movwf	___fttol@lval+2
  4568  0630  01A4               	clrf	___fttol@lval+3
  4569  0631  308E               	movlw	142
  4570  0632  02A5               	subwf	___fttol@exp1,f
  4571  0633  1FA5               	btfss	___fttol@exp1,7
  4572  0634  2E51               	goto	l3852
  4573  0635  0825               	movf	___fttol@exp1,w
  4574  0636  3A80               	xorlw	128
  4575  0637  3E8F               	addlw	143
  4576  0638  1803               	skipnc
  4577  0639  2E43               	goto	l3850
  4578  063A  3000               	movlw	0
  4579  063B  00F5               	movwf	?___fttol+3
  4580  063C  3000               	movlw	0
  4581  063D  00F4               	movwf	?___fttol+2
  4582  063E  3000               	movlw	0
  4583  063F  00F3               	movwf	?___fttol+1
  4584  0640  3000               	movlw	0
  4585  0641  00F2               	movwf	?___fttol
  4586  0642  0008               	return
  4587  0643                     l3850:	
  4588  0643  3001               	movlw	1
  4589  0644                     u4925:	
  4590  0644  36A4               	lsrf	___fttol@lval+3,f
  4591  0645  0CA3               	rrf	___fttol@lval+2,f
  4592  0646  0CA2               	rrf	___fttol@lval+1,f
  4593  0647  0CA1               	rrf	___fttol@lval,f
  4594  0648  0B89               	decfsz	9,f
  4595  0649  2E44               	goto	u4925
  4596  064A  3001               	movlw	1
  4597  064B  00F6               	movwf	??___fttol
  4598  064C  0876               	movf	??___fttol,w
  4599  064D  07A5               	addwf	___fttol@exp1,f
  4600  064E  1903               	btfsc	3,2
  4601  064F  2E6A               	goto	l3860
  4602  0650  2E43               	goto	l3850
  4603  0651                     l3852:	
  4604  0651  3018               	movlw	24
  4605  0652  0225               	subwf	___fttol@exp1,w
  4606  0653  1C03               	skipc
  4607  0654  2E67               	goto	l938
  4608  0655  3000               	movlw	0
  4609  0656  00F5               	movwf	?___fttol+3
  4610  0657  3000               	movlw	0
  4611  0658  00F4               	movwf	?___fttol+2
  4612  0659  3000               	movlw	0
  4613  065A  00F3               	movwf	?___fttol+1
  4614  065B  3000               	movlw	0
  4615  065C  00F2               	movwf	?___fttol
  4616  065D  0008               	return
  4617  065E                     l3858:	
  4618  065E  3001               	movlw	1
  4619  065F                     u4955:	
  4620  065F  35A1               	lslf	___fttol@lval,f
  4621  0660  0DA2               	rlf	___fttol@lval+1,f
  4622  0661  0DA3               	rlf	___fttol@lval+2,f
  4623  0662  0DA4               	rlf	___fttol@lval+3,f
  4624  0663  0B89               	decfsz	9,f
  4625  0664  2E5F               	goto	u4955
  4626  0665  3001               	movlw	1
  4627  0666  02A5               	subwf	___fttol@exp1,f
  4628  0667                     l938:	
  4629  0667  0825               	movf	___fttol@exp1,w
  4630  0668  1D03               	btfss	3,2
  4631  0669  2E5E               	goto	l3858
  4632  066A                     l3860:	
  4633  066A  0820               	movf	___fttol@sign1,w
  4634  066B  1903               	btfsc	3,2
  4635  066C  2E78               	goto	l3864
  4636  066D  09A1               	comf	___fttol@lval,f
  4637  066E  09A2               	comf	___fttol@lval+1,f
  4638  066F  09A3               	comf	___fttol@lval+2,f
  4639  0670  09A4               	comf	___fttol@lval+3,f
  4640  0671  0AA1               	incf	___fttol@lval,f
  4641  0672  1903               	skipnz
  4642  0673  0AA2               	incf	___fttol@lval+1,f
  4643  0674  1903               	skipnz
  4644  0675  0AA3               	incf	___fttol@lval+2,f
  4645  0676  1903               	skipnz
  4646  0677  0AA4               	incf	___fttol@lval+3,f
  4647  0678                     l3864:	
  4648  0678  0824               	movf	___fttol@lval+3,w
  4649  0679  00F5               	movwf	?___fttol+3
  4650  067A  0823               	movf	___fttol@lval+2,w
  4651  067B  00F4               	movwf	?___fttol+2
  4652  067C  0822               	movf	___fttol@lval+1,w
  4653  067D  00F3               	movwf	?___fttol+1
  4654  067E  0821               	movf	___fttol@lval,w
  4655  067F  00F2               	movwf	?___fttol
  4656  0680  0008               	return
  4657  0681                     __end_of___fttol:	
  4658                           
  4659                           	psect	text24
  4660  0DCB                     __ptext24:	
  4661 ;; *************** function ___ftge *****************
  4662 ;; Defined at:
  4663 ;;		line 4 in file "/Applications/microchip/xc8/v1.36/sources/common/ftge.c"
  4664 ;; Parameters:    Size  Location     Type
  4665 ;;  ff1             3    2[COMMON] float 
  4666 ;;  ff2             3    5[COMMON] float 
  4667 ;; Auto vars:     Size  Location     Type
  4668 ;;		None
  4669 ;; Return value:  Size  Location     Type
  4670 ;;		None               void
  4671 ;; Registers used:
  4672 ;;		wreg, status,2, status,0
  4673 ;; Tracked objects:
  4674 ;;		On entry : 0/0
  4675 ;;		On exit  : 0/0
  4676 ;;		Unchanged: 0/0
  4677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4678 ;;      Params:         6       0       0       0       0       0
  4679 ;;      Locals:         0       0       0       0       0       0
  4680 ;;      Temps:          0       3       0       0       0       0
  4681 ;;      Totals:         6       3       0       0       0       0
  4682 ;;Total ram usage:        9 bytes
  4683 ;; Hardware stack levels used:    1
  4684 ;; Hardware stack levels required when called:    1
  4685 ;; This function calls:
  4686 ;;		Nothing
  4687 ;; This function is called by:
  4688 ;;		_cos
  4689 ;;		_sin
  4690 ;;		_floor
  4691 ;;		__abs
  4692 ;;		__signum
  4693 ;;		__taylor_cos
  4694 ;;		__cos
  4695 ;;		__taylor_sin
  4696 ;;		__sin
  4697 ;;		_flt_to_str
  4698 ;; This function uses a non-reentrant model
  4699 ;;
  4700                           
  4701                           
  4702                           ;psect for function ___ftge
  4703  0DCB                     ___ftge:	
  4704                           
  4705                           ;incstack = 0
  4706                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  4707  0DCB  1FF4               	btfss	___ftge@ff1+2,7
  4708  0DCC  2DE2               	goto	l3760
  4709  0DCD  0972               	comf	___ftge@ff1,w
  4710  0DCE  0020               	movlb	0	; select bank0
  4711  0DCF  00A0               	movwf	??___ftge
  4712  0DD0  0973               	comf	___ftge@ff1+1,w
  4713  0DD1  00A1               	movwf	??___ftge+1
  4714  0DD2  0974               	comf	___ftge@ff1+2,w
  4715  0DD3  00A2               	movwf	??___ftge+2
  4716  0DD4  0AA0               	incf	??___ftge,f
  4717  0DD5  1903               	skipnz
  4718  0DD6  0AA1               	incf	??___ftge+1,f
  4719  0DD7  1903               	skipnz
  4720  0DD8  0AA2               	incf	??___ftge+2,f
  4721  0DD9  3000               	movlw	0
  4722  0DDA  0720               	addwf	??___ftge,w
  4723  0DDB  00F2               	movwf	___ftge@ff1
  4724  0DDC  3000               	movlw	0
  4725  0DDD  3D21               	addwfc	??___ftge+1,w
  4726  0DDE  00F3               	movwf	___ftge@ff1+1
  4727  0DDF  3080               	movlw	128
  4728  0DE0  3D22               	addwfc	??___ftge+2,w
  4729  0DE1  00F4               	movwf	___ftge@ff1+2
  4730  0DE2                     l3760:	
  4731  0DE2  1FF7               	btfss	___ftge@ff2+2,7
  4732  0DE3  2DF9               	goto	l3764
  4733  0DE4  0975               	comf	___ftge@ff2,w
  4734  0DE5  0020               	movlb	0	; select bank0
  4735  0DE6  00A0               	movwf	??___ftge
  4736  0DE7  0976               	comf	___ftge@ff2+1,w
  4737  0DE8  00A1               	movwf	??___ftge+1
  4738  0DE9  0977               	comf	___ftge@ff2+2,w
  4739  0DEA  00A2               	movwf	??___ftge+2
  4740  0DEB  0AA0               	incf	??___ftge,f
  4741  0DEC  1903               	skipnz
  4742  0DED  0AA1               	incf	??___ftge+1,f
  4743  0DEE  1903               	skipnz
  4744  0DEF  0AA2               	incf	??___ftge+2,f
  4745  0DF0  3000               	movlw	0
  4746  0DF1  0720               	addwf	??___ftge,w
  4747  0DF2  00F5               	movwf	___ftge@ff2
  4748  0DF3  3000               	movlw	0
  4749  0DF4  3D21               	addwfc	??___ftge+1,w
  4750  0DF5  00F6               	movwf	___ftge@ff2+1
  4751  0DF6  3080               	movlw	128
  4752  0DF7  3D22               	addwfc	??___ftge+2,w
  4753  0DF8  00F7               	movwf	___ftge@ff2+2
  4754  0DF9                     l3764:	
  4755  0DF9  3080               	movlw	128
  4756  0DFA  06F4               	xorwf	___ftge@ff1+2,f
  4757  0DFB  3080               	movlw	128
  4758  0DFC  06F7               	xorwf	___ftge@ff2+2,f
  4759  0DFD  0877               	movf	___ftge@ff2+2,w
  4760  0DFE  0274               	subwf	___ftge@ff1+2,w
  4761  0DFF  1D03               	skipz
  4762  0E00  0008               	return
  4763  0E01  0876               	movf	___ftge@ff2+1,w
  4764  0E02  0273               	subwf	___ftge@ff1+1,w
  4765  0E03  1D03               	skipz
  4766  0E04  0008               	return
  4767  0E05  0875               	movf	___ftge@ff2,w
  4768  0E06  0272               	subwf	___ftge@ff1,w
  4769  0E07  0008               	return
  4770  0E08                     __end_of___ftge:	
  4771                           
  4772                           	psect	text25
  4773  0D8E                     __ptext25:	
  4774 ;; *************** function ___altoft *****************
  4775 ;; Defined at:
  4776 ;;		line 42 in file "/Applications/microchip/xc8/v1.36/sources/common/altoft.c"
  4777 ;; Parameters:    Size  Location     Type
  4778 ;;  c               4    6[BANK0 ] long 
  4779 ;; Auto vars:     Size  Location     Type
  4780 ;;  sign            1   13[BANK0 ] unsigned char 
  4781 ;;  exp             1   12[BANK0 ] unsigned char 
  4782 ;; Return value:  Size  Location     Type
  4783 ;;                  3    6[BANK0 ] float 
  4784 ;; Registers used:
  4785 ;;		wreg, status,2, status,0, pclath, cstack
  4786 ;; Tracked objects:
  4787 ;;		On entry : 0/0
  4788 ;;		On exit  : 0/0
  4789 ;;		Unchanged: 0/0
  4790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4791 ;;      Params:         0       4       0       0       0       0
  4792 ;;      Locals:         0       2       0       0       0       0
  4793 ;;      Temps:          0       2       0       0       0       0
  4794 ;;      Totals:         0       8       0       0       0       0
  4795 ;;Total ram usage:        8 bytes
  4796 ;; Hardware stack levels used:    1
  4797 ;; Hardware stack levels required when called:    2
  4798 ;; This function calls:
  4799 ;;		___ftpack
  4800 ;; This function is called by:
  4801 ;;		_floor
  4802 ;; This function uses a non-reentrant model
  4803 ;;
  4804                           
  4805                           
  4806                           ;psect for function ___altoft
  4807  0D8E                     ___altoft:	
  4808                           
  4809                           ;incstack = 0
  4810                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
  4811  0D8E  0020               	movlb	0	; select bank0
  4812  0D8F  01AD               	clrf	___altoft@sign
  4813  0D90  308E               	movlw	142
  4814  0D91  00AA               	movwf	??___altoft
  4815  0D92  082A               	movf	??___altoft,w
  4816  0D93  00AC               	movwf	___altoft@exp
  4817  0D94  1FA9               	btfss	___altoft@c+3,7
  4818  0D95  2DA3               	goto	l3680
  4819  0D96  09A6               	comf	___altoft@c,f
  4820  0D97  09A7               	comf	___altoft@c+1,f
  4821  0D98  09A8               	comf	___altoft@c+2,f
  4822  0D99  09A9               	comf	___altoft@c+3,f
  4823  0D9A  0AA6               	incf	___altoft@c,f
  4824  0D9B  1903               	skipnz
  4825  0D9C  0AA7               	incf	___altoft@c+1,f
  4826  0D9D  1903               	skipnz
  4827  0D9E  0AA8               	incf	___altoft@c+2,f
  4828  0D9F  1903               	skipnz
  4829  0DA0  0AA9               	incf	___altoft@c+3,f
  4830  0DA1  01AD               	clrf	___altoft@sign
  4831  0DA2  0AAD               	incf	___altoft@sign,f
  4832  0DA3                     l3680:	
  4833  0DA3  30FF               	movlw	255
  4834  0DA4  0529               	andwf	___altoft@c+3,w
  4835  0DA5  1903               	btfsc	3,2
  4836  0DA6  2DB3               	goto	l3682
  4837  0DA7  3001               	movlw	1
  4838  0DA8                     u4485:	
  4839  0DA8  36A9               	lsrf	___altoft@c+3,f
  4840  0DA9  0CA8               	rrf	___altoft@c+2,f
  4841  0DAA  0CA7               	rrf	___altoft@c+1,f
  4842  0DAB  0CA6               	rrf	___altoft@c,f
  4843  0DAC  0B89               	decfsz	9,f
  4844  0DAD  2DA8               	goto	u4485
  4845  0DAE  3001               	movlw	1
  4846  0DAF  00AA               	movwf	??___altoft
  4847  0DB0  082A               	movf	??___altoft,w
  4848  0DB1  07AC               	addwf	___altoft@exp,f
  4849  0DB2  2DA3               	goto	l3680
  4850  0DB3                     l3682:	
  4851  0DB3  0826               	movf	___altoft@c,w
  4852  0DB4  00F2               	movwf	___ftpack@arg
  4853  0DB5  0827               	movf	___altoft@c+1,w
  4854  0DB6  00F3               	movwf	___ftpack@arg+1
  4855  0DB7  0828               	movf	___altoft@c+2,w
  4856  0DB8  00F4               	movwf	___ftpack@arg+2
  4857  0DB9  082C               	movf	___altoft@exp,w
  4858  0DBA  00AA               	movwf	??___altoft
  4859  0DBB  082A               	movf	??___altoft,w
  4860  0DBC  00F5               	movwf	___ftpack@exp
  4861  0DBD  082D               	movf	___altoft@sign,w
  4862  0DBE  00AB               	movwf	??___altoft+1
  4863  0DBF  082B               	movf	??___altoft+1,w
  4864  0DC0  00F6               	movwf	___ftpack@sign
  4865  0DC1  318F  279C         	fcall	___ftpack
  4866  0DC3  0872               	movf	?___ftpack,w
  4867  0DC4  0020               	movlb	0	; select bank0
  4868  0DC5  00A6               	movwf	?___altoft
  4869  0DC6  0873               	movf	?___ftpack+1,w
  4870  0DC7  00A7               	movwf	?___altoft+1
  4871  0DC8  0874               	movf	?___ftpack+2,w
  4872  0DC9  00A8               	movwf	?___altoft+2
  4873  0DCA  0008               	return
  4874  0DCB                     __end_of___altoft:	
  4875                           
  4876                           	psect	text26
  4877  0F3C                     __ptext26:	
  4878 ;; *************** function _eval_poly *****************
  4879 ;; Defined at:
  4880 ;;		line 4 in file "/Applications/microchip/xc8/v1.36/sources/common/evalpoly.c"
  4881 ;; Parameters:    Size  Location     Type
  4882 ;;  x               3   55[BANK0 ] float 
  4883 ;;  d               2   58[BANK0 ] PTR const 
  4884 ;;		 -> sin@coeff_a(15), sin@coeff_b(12), 
  4885 ;;  n               2   60[BANK0 ] int 
  4886 ;; Auto vars:     Size  Location     Type
  4887 ;;  res             3   62[BANK0 ] int 
  4888 ;; Return value:  Size  Location     Type
  4889 ;;                  3   55[BANK0 ] int 
  4890 ;; Registers used:
  4891 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4892 ;; Tracked objects:
  4893 ;;		On entry : 0/0
  4894 ;;		On exit  : 0/0
  4895 ;;		Unchanged: 0/0
  4896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4897 ;;      Params:         0       7       0       0       0       0
  4898 ;;      Locals:         0       3       0       0       0       0
  4899 ;;      Temps:          0       0       0       0       0       0
  4900 ;;      Totals:         0      10       0       0       0       0
  4901 ;;Total ram usage:       10 bytes
  4902 ;; Hardware stack levels used:    1
  4903 ;; Hardware stack levels required when called:    3
  4904 ;; This function calls:
  4905 ;;		___ftadd
  4906 ;;		___ftmul
  4907 ;;		___wmul
  4908 ;; This function is called by:
  4909 ;;		_sin
  4910 ;; This function uses a non-reentrant model
  4911 ;;
  4912                           
  4913                           
  4914                           ;psect for function _eval_poly
  4915  0F3C                     _eval_poly:	
  4916                           
  4917                           ;incstack = 0
  4918                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4919  0F3C  0020               	movlb	0	; select bank0
  4920  0F3D  085D               	movf	eval_poly@n+1,w
  4921  0F3E  00F3               	movwf	___wmul@multiplier+1
  4922  0F3F  085C               	movf	eval_poly@n,w
  4923  0F40  00F2               	movwf	___wmul@multiplier
  4924  0F41  3003               	movlw	3
  4925  0F42  00F4               	movwf	___wmul@multiplicand
  4926  0F43  3000               	movlw	0
  4927  0F44  00F5               	movwf	___wmul@multiplicand+1
  4928  0F45  318B  23F9  318F   	fcall	___wmul
  4929  0F48  0020               	movlb	0	; select bank0
  4930  0F49  085A               	movf	eval_poly@d,w
  4931  0F4A  0772               	addwf	?___wmul,w
  4932  0F4B  0084               	movwf	4
  4933  0F4C  085B               	movf	eval_poly@d+1,w
  4934  0F4D  3D73               	addwfc	?___wmul+1,w
  4935  0F4E  0085               	movwf	5
  4936  0F4F  3F00               	moviw [0]fsr0
  4937  0F50  00DE               	movwf	eval_poly@res
  4938  0F51  3F01               	moviw [1]fsr0
  4939  0F52  00DF               	movwf	eval_poly@res+1
  4940  0F53  3F02               	moviw [2]fsr0
  4941  0F54                     L5:	
  4942  0F54  00E0               	movwf	eval_poly@res+2
  4943  0F55  085C               	movf	eval_poly@n,w
  4944  0F56  045D               	iorwf	eval_poly@n+1,w
  4945  0F57  1903               	btfsc	3,2
  4946  0F58  2F95               	goto	l4004
  4947  0F59  30FF               	movlw	255
  4948  0F5A  07DC               	addwf	eval_poly@n,f
  4949  0F5B  30FF               	movlw	255
  4950  0F5C  3DDD               	addwfc	eval_poly@n+1,f
  4951  0F5D  085D               	movf	eval_poly@n+1,w
  4952  0F5E  00F3               	movwf	___wmul@multiplier+1
  4953  0F5F  085C               	movf	eval_poly@n,w
  4954  0F60  00F2               	movwf	___wmul@multiplier
  4955  0F61  3003               	movlw	3
  4956  0F62  00F4               	movwf	___wmul@multiplicand
  4957  0F63  3000               	movlw	0
  4958  0F64  00F5               	movwf	___wmul@multiplicand+1
  4959  0F65  318B  23F9  318F   	fcall	___wmul
  4960  0F68  0020               	movlb	0	; select bank0
  4961  0F69  085A               	movf	eval_poly@d,w
  4962  0F6A  0772               	addwf	?___wmul,w
  4963  0F6B  0084               	movwf	4
  4964  0F6C  085B               	movf	eval_poly@d+1,w
  4965  0F6D  3D73               	addwfc	?___wmul+1,w
  4966  0F6E  0085               	movwf	5
  4967  0F6F  3F00               	moviw [0]fsr0
  4968  0F70  00CA               	movwf	___ftadd@f1
  4969  0F71  3F01               	moviw [1]fsr0
  4970  0F72  00CB               	movwf	___ftadd@f1+1
  4971  0F73  3F02               	moviw [2]fsr0
  4972  0F74  00CC               	movwf	___ftadd@f1+2
  4973  0F75  085E               	movf	eval_poly@res,w
  4974  0F76  00A4               	movwf	___ftmul@f1
  4975  0F77  085F               	movf	eval_poly@res+1,w
  4976  0F78  00A5               	movwf	___ftmul@f1+1
  4977  0F79  0860               	movf	eval_poly@res+2,w
  4978  0F7A  00A6               	movwf	___ftmul@f1+2
  4979  0F7B  0857               	movf	eval_poly@x,w
  4980  0F7C  00A7               	movwf	___ftmul@f2
  4981  0F7D  0858               	movf	eval_poly@x+1,w
  4982  0F7E  00A8               	movwf	___ftmul@f2+1
  4983  0F7F  0859               	movf	eval_poly@x+2,w
  4984  0F80  00A9               	movwf	___ftmul@f2+2
  4985  0F81  3184  249D  318F   	fcall	___ftmul
  4986  0F84  0020               	movlb	0	; select bank0
  4987  0F85  0824               	movf	?___ftmul,w
  4988  0F86  00CD               	movwf	___ftadd@f2
  4989  0F87  0825               	movf	?___ftmul+1,w
  4990  0F88  00CE               	movwf	___ftadd@f2+1
  4991  0F89  0826               	movf	?___ftmul+2,w
  4992  0F8A  00CF               	movwf	___ftadd@f2+2
  4993  0F8B  3183  23A7  318F   	fcall	___ftadd
  4994  0F8E  0020               	movlb	0	; select bank0
  4995  0F8F  084A               	movf	?___ftadd,w
  4996  0F90  00DE               	movwf	eval_poly@res
  4997  0F91  084B               	movf	?___ftadd+1,w
  4998  0F92  00DF               	movwf	eval_poly@res+1
  4999  0F93  084C               	movf	?___ftadd+2,w
  5000  0F94  2F54               	goto	L5
  5001  0F95                     l4004:	
  5002  0F95  085E               	movf	eval_poly@res,w
  5003  0F96  00D7               	movwf	?_eval_poly
  5004  0F97  085F               	movf	eval_poly@res+1,w
  5005  0F98  00D8               	movwf	?_eval_poly+1
  5006  0F99  0860               	movf	eval_poly@res+2,w
  5007  0F9A  00D9               	movwf	?_eval_poly+2
  5008  0F9B  0008               	return
  5009  0F9C                     __end_of_eval_poly:	
  5010                           
  5011                           	psect	text27
  5012  0BF9                     __ptext27:	
  5013 ;; *************** function ___wmul *****************
  5014 ;; Defined at:
  5015 ;;		line 15 in file "/Applications/microchip/xc8/v1.36/sources/common/Umul16.c"
  5016 ;; Parameters:    Size  Location     Type
  5017 ;;  multiplier      2    2[COMMON] unsigned int 
  5018 ;;  multiplicand    2    4[COMMON] unsigned int 
  5019 ;; Auto vars:     Size  Location     Type
  5020 ;;  product         2    6[COMMON] unsigned int 
  5021 ;; Return value:  Size  Location     Type
  5022 ;;                  2    2[COMMON] unsigned int 
  5023 ;; Registers used:
  5024 ;;		wreg, status,2, status,0
  5025 ;; Tracked objects:
  5026 ;;		On entry : 0/0
  5027 ;;		On exit  : 0/0
  5028 ;;		Unchanged: 0/0
  5029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5030 ;;      Params:         4       0       0       0       0       0
  5031 ;;      Locals:         2       0       0       0       0       0
  5032 ;;      Temps:          0       0       0       0       0       0
  5033 ;;      Totals:         6       0       0       0       0       0
  5034 ;;Total ram usage:        6 bytes
  5035 ;; Hardware stack levels used:    1
  5036 ;; Hardware stack levels required when called:    1
  5037 ;; This function calls:
  5038 ;;		Nothing
  5039 ;; This function is called by:
  5040 ;;		_eval_poly
  5041 ;; This function uses a non-reentrant model
  5042 ;;
  5043                           
  5044                           
  5045                           ;psect for function ___wmul
  5046  0BF9                     ___wmul:	
  5047                           
  5048                           ;incstack = 0
  5049                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5050  0BF9  01F6               	clrf	___wmul@product
  5051  0BFA  01F7               	clrf	___wmul@product+1
  5052  0BFB                     l3658:	
  5053  0BFB  1C72               	btfss	___wmul@multiplier,0
  5054  0BFC  2C01               	goto	l680
  5055  0BFD  0874               	movf	___wmul@multiplicand,w
  5056  0BFE  07F6               	addwf	___wmul@product,f
  5057  0BFF  0875               	movf	___wmul@multiplicand+1,w
  5058  0C00  3DF7               	addwfc	___wmul@product+1,f
  5059  0C01                     l680:	
  5060  0C01  3001               	movlw	1
  5061  0C02                     u4445:	
  5062  0C02  35F4               	lslf	___wmul@multiplicand,f
  5063  0C03  0DF5               	rlf	___wmul@multiplicand+1,f
  5064  0C04  0B89               	decfsz	9,f
  5065  0C05  2C02               	goto	u4445
  5066  0C06  3001               	movlw	1
  5067  0C07                     u4455:	
  5068  0C07  36F3               	lsrf	___wmul@multiplier+1,f
  5069  0C08  0CF2               	rrf	___wmul@multiplier,f
  5070  0C09  0B89               	decfsz	9,f
  5071  0C0A  2C07               	goto	u4455
  5072  0C0B  0872               	movf	___wmul@multiplier,w
  5073  0C0C  0473               	iorwf	___wmul@multiplier+1,w
  5074  0C0D  1D03               	btfss	3,2
  5075  0C0E  2BFB               	goto	l3658
  5076  0C0F  0877               	movf	___wmul@product+1,w
  5077  0C10  00F3               	movwf	?___wmul+1
  5078  0C11  0876               	movf	___wmul@product,w
  5079  0C12  00F2               	movwf	?___wmul
  5080  0C13  0008               	return
  5081  0C14                     __end_of___wmul:	
  5082                           
  5083                           	psect	text28
  5084  049D                     __ptext28:	
  5085 ;; *************** function ___ftmul *****************
  5086 ;; Defined at:
  5087 ;;		line 62 in file "/Applications/microchip/xc8/v1.36/sources/common/ftmul.c"
  5088 ;; Parameters:    Size  Location     Type
  5089 ;;  f1              3    4[BANK0 ] float 
  5090 ;;  f2              3    7[BANK0 ] float 
  5091 ;; Auto vars:     Size  Location     Type
  5092 ;;  f3_as_produc    3   15[BANK0 ] unsigned um
  5093 ;;  sign            1   19[BANK0 ] unsigned char 
  5094 ;;  cntr            1   18[BANK0 ] unsigned char 
  5095 ;;  exp             1   14[BANK0 ] unsigned char 
  5096 ;; Return value:  Size  Location     Type
  5097 ;;                  3    4[BANK0 ] float 
  5098 ;; Registers used:
  5099 ;;		wreg, status,2, status,0, pclath, cstack
  5100 ;; Tracked objects:
  5101 ;;		On entry : 0/0
  5102 ;;		On exit  : 0/0
  5103 ;;		Unchanged: 0/0
  5104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5105 ;;      Params:         0       6       0       0       0       0
  5106 ;;      Locals:         0       6       0       0       0       0
  5107 ;;      Temps:          0       4       0       0       0       0
  5108 ;;      Totals:         0      16       0       0       0       0
  5109 ;;Total ram usage:       16 bytes
  5110 ;; Hardware stack levels used:    1
  5111 ;; Hardware stack levels required when called:    2
  5112 ;; This function calls:
  5113 ;;		___ftpack
  5114 ;; This function is called by:
  5115 ;;		_readCurrent
  5116 ;;		_readVdd
  5117 ;;		_main
  5118 ;;		_sin
  5119 ;;		_eval_poly
  5120 ;;		__round_down
  5121 ;;		__round_up
  5122 ;;		__round
  5123 ;;		__pow
  5124 ;;		_flt_to_str
  5125 ;; This function uses a non-reentrant model
  5126 ;;
  5127                           
  5128                           
  5129                           ;psect for function ___ftmul
  5130  049D                     ___ftmul:	
  5131                           
  5132                           ;incstack = 0
  5133                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  5134  049D  0020               	movlb	0	; select bank0
  5135  049E  0824               	movf	___ftmul@f1,w
  5136  049F  00AA               	movwf	??___ftmul
  5137  04A0  0825               	movf	___ftmul@f1+1,w
  5138  04A1  00AB               	movwf	??___ftmul+1
  5139  04A2  0826               	movf	___ftmul@f1+2,w
  5140  04A3  00AC               	movwf	??___ftmul+2
  5141  04A4  1003               	clrc
  5142  04A5  0D2B               	rlf	??___ftmul+1,w
  5143  04A6  0D2C               	rlf	??___ftmul+2,w
  5144  04A7  00AD               	movwf	??___ftmul+3
  5145  04A8  082D               	movf	??___ftmul+3,w
  5146  04A9  00AE               	movwf	___ftmul@exp
  5147  04AA  082E               	movf	___ftmul@exp,w
  5148  04AB  1D03               	btfss	3,2
  5149  04AC  2CB4               	goto	l3782
  5150  04AD  3000               	movlw	0
  5151  04AE  00A4               	movwf	?___ftmul
  5152  04AF  3000               	movlw	0
  5153  04B0  00A5               	movwf	?___ftmul+1
  5154  04B1  3000               	movlw	0
  5155  04B2  00A6               	movwf	?___ftmul+2
  5156  04B3  0008               	return
  5157  04B4                     l3782:	
  5158  04B4  0827               	movf	___ftmul@f2,w
  5159  04B5  00AA               	movwf	??___ftmul
  5160  04B6  0828               	movf	___ftmul@f2+1,w
  5161  04B7  00AB               	movwf	??___ftmul+1
  5162  04B8  0829               	movf	___ftmul@f2+2,w
  5163  04B9  00AC               	movwf	??___ftmul+2
  5164  04BA  1003               	clrc
  5165  04BB  0D2B               	rlf	??___ftmul+1,w
  5166  04BC  0D2C               	rlf	??___ftmul+2,w
  5167  04BD  00AD               	movwf	??___ftmul+3
  5168  04BE  082D               	movf	??___ftmul+3,w
  5169  04BF  00B3               	movwf	___ftmul@sign
  5170  04C0  0833               	movf	___ftmul@sign,w
  5171  04C1  1D03               	btfss	3,2
  5172  04C2  2CCA               	goto	l3788
  5173  04C3  3000               	movlw	0
  5174  04C4  00A4               	movwf	?___ftmul
  5175  04C5  3000               	movlw	0
  5176  04C6  00A5               	movwf	?___ftmul+1
  5177  04C7  3000               	movlw	0
  5178  04C8  00A6               	movwf	?___ftmul+2
  5179  04C9  0008               	return
  5180  04CA                     l3788:	
  5181  04CA  0833               	movf	___ftmul@sign,w
  5182  04CB  3E7B               	addlw	123
  5183  04CC  00AA               	movwf	??___ftmul
  5184  04CD  082A               	movf	??___ftmul,w
  5185  04CE  07AE               	addwf	___ftmul@exp,f
  5186  04CF  0824               	movf	___ftmul@f1,w
  5187  04D0  00AA               	movwf	??___ftmul
  5188  04D1  0825               	movf	___ftmul@f1+1,w
  5189  04D2  00AB               	movwf	??___ftmul+1
  5190  04D3  0826               	movf	___ftmul@f1+2,w
  5191  04D4  00AC               	movwf	??___ftmul+2
  5192  04D5  3010               	movlw	16
  5193  04D6                     u4785:	
  5194  04D6  36AC               	lsrf	??___ftmul+2,f
  5195  04D7  0CAB               	rrf	??___ftmul+1,f
  5196  04D8  0CAA               	rrf	??___ftmul,f
  5197  04D9  0B89               	decfsz	9,f
  5198  04DA  2CD6               	goto	u4785
  5199  04DB  082A               	movf	??___ftmul,w
  5200  04DC  00AD               	movwf	??___ftmul+3
  5201  04DD  082D               	movf	??___ftmul+3,w
  5202  04DE  00B3               	movwf	___ftmul@sign
  5203  04DF  0827               	movf	___ftmul@f2,w
  5204  04E0  00AA               	movwf	??___ftmul
  5205  04E1  0828               	movf	___ftmul@f2+1,w
  5206  04E2  00AB               	movwf	??___ftmul+1
  5207  04E3  0829               	movf	___ftmul@f2+2,w
  5208  04E4  00AC               	movwf	??___ftmul+2
  5209  04E5  3010               	movlw	16
  5210  04E6                     u4795:	
  5211  04E6  36AC               	lsrf	??___ftmul+2,f
  5212  04E7  0CAB               	rrf	??___ftmul+1,f
  5213  04E8  0CAA               	rrf	??___ftmul,f
  5214  04E9  0B89               	decfsz	9,f
  5215  04EA  2CE6               	goto	u4795
  5216  04EB  082A               	movf	??___ftmul,w
  5217  04EC  00AD               	movwf	??___ftmul+3
  5218  04ED  082D               	movf	??___ftmul+3,w
  5219  04EE  06B3               	xorwf	___ftmul@sign,f
  5220  04EF  3080               	movlw	128
  5221  04F0  00AA               	movwf	??___ftmul
  5222  04F1  082A               	movf	??___ftmul,w
  5223  04F2  05B3               	andwf	___ftmul@sign,f
  5224  04F3  17A5               	bsf	___ftmul@f1+1,7
  5225  04F4  17A8               	bsf	___ftmul@f2+1,7
  5226  04F5  30FF               	movlw	255
  5227  04F6  05A7               	andwf	___ftmul@f2,f
  5228  04F7  30FF               	movlw	255
  5229  04F8  05A8               	andwf	___ftmul@f2+1,f
  5230  04F9  3000               	movlw	0
  5231  04FA  05A9               	andwf	___ftmul@f2+2,f
  5232  04FB  3000               	movlw	0
  5233  04FC  00AF               	movwf	___ftmul@f3_as_product
  5234  04FD  3000               	movlw	0
  5235  04FE  00B0               	movwf	___ftmul@f3_as_product+1
  5236  04FF  3000               	movlw	0
  5237  0500  00B1               	movwf	___ftmul@f3_as_product+2
  5238  0501  3007               	movlw	7
  5239  0502  00AA               	movwf	??___ftmul
  5240  0503  082A               	movf	??___ftmul,w
  5241  0504  00B2               	movwf	___ftmul@cntr
  5242  0505                     l3800:	
  5243  0505  1C24               	btfss	___ftmul@f1,0
  5244  0506  2D0D               	goto	l3804
  5245  0507  0827               	movf	___ftmul@f2,w
  5246  0508  07AF               	addwf	___ftmul@f3_as_product,f
  5247  0509  0828               	movf	___ftmul@f2+1,w
  5248  050A  3DB0               	addwfc	___ftmul@f3_as_product+1,f
  5249  050B  0829               	movf	___ftmul@f2+2,w
  5250  050C  3DB1               	addwfc	___ftmul@f3_as_product+2,f
  5251  050D                     l3804:	
  5252  050D  3001               	movlw	1
  5253  050E                     u4815:	
  5254  050E  36A6               	lsrf	___ftmul@f1+2,f
  5255  050F  0CA5               	rrf	___ftmul@f1+1,f
  5256  0510  0CA4               	rrf	___ftmul@f1,f
  5257  0511  0B89               	decfsz	9,f
  5258  0512  2D0E               	goto	u4815
  5259  0513  3001               	movlw	1
  5260  0514                     u4825:	
  5261  0514  35A7               	lslf	___ftmul@f2,f
  5262  0515  0DA8               	rlf	___ftmul@f2+1,f
  5263  0516  0DA9               	rlf	___ftmul@f2+2,f
  5264  0517  0B89               	decfsz	9,f
  5265  0518  2D14               	goto	u4825
  5266  0519  3001               	movlw	1
  5267  051A  02B2               	subwf	___ftmul@cntr,f
  5268  051B  1D03               	btfss	3,2
  5269  051C  2D05               	goto	l3800
  5270  051D  3009               	movlw	9
  5271  051E  00AA               	movwf	??___ftmul
  5272  051F  082A               	movf	??___ftmul,w
  5273  0520  00B2               	movwf	___ftmul@cntr
  5274  0521                     l3812:	
  5275  0521  1C24               	btfss	___ftmul@f1,0
  5276  0522  2D29               	goto	l3816
  5277  0523  0827               	movf	___ftmul@f2,w
  5278  0524  07AF               	addwf	___ftmul@f3_as_product,f
  5279  0525  0828               	movf	___ftmul@f2+1,w
  5280  0526  3DB0               	addwfc	___ftmul@f3_as_product+1,f
  5281  0527  0829               	movf	___ftmul@f2+2,w
  5282  0528  3DB1               	addwfc	___ftmul@f3_as_product+2,f
  5283  0529                     l3816:	
  5284  0529  3001               	movlw	1
  5285  052A                     u4855:	
  5286  052A  36A6               	lsrf	___ftmul@f1+2,f
  5287  052B  0CA5               	rrf	___ftmul@f1+1,f
  5288  052C  0CA4               	rrf	___ftmul@f1,f
  5289  052D  0B89               	decfsz	9,f
  5290  052E  2D2A               	goto	u4855
  5291  052F  3001               	movlw	1
  5292  0530                     u4865:	
  5293  0530  36B1               	lsrf	___ftmul@f3_as_product+2,f
  5294  0531  0CB0               	rrf	___ftmul@f3_as_product+1,f
  5295  0532  0CAF               	rrf	___ftmul@f3_as_product,f
  5296  0533  0B89               	decfsz	9,f
  5297  0534  2D30               	goto	u4865
  5298  0535  3001               	movlw	1
  5299  0536  02B2               	subwf	___ftmul@cntr,f
  5300  0537  1D03               	btfss	3,2
  5301  0538  2D21               	goto	l3812
  5302  0539  082F               	movf	___ftmul@f3_as_product,w
  5303  053A  00F2               	movwf	___ftpack@arg
  5304  053B  0830               	movf	___ftmul@f3_as_product+1,w
  5305  053C  00F3               	movwf	___ftpack@arg+1
  5306  053D  0831               	movf	___ftmul@f3_as_product+2,w
  5307  053E  00F4               	movwf	___ftpack@arg+2
  5308  053F  082E               	movf	___ftmul@exp,w
  5309  0540  00AA               	movwf	??___ftmul
  5310  0541  082A               	movf	??___ftmul,w
  5311  0542  00F5               	movwf	___ftpack@exp
  5312  0543  0833               	movf	___ftmul@sign,w
  5313  0544  00AB               	movwf	??___ftmul+1
  5314  0545  082B               	movf	??___ftmul+1,w
  5315  0546  00F6               	movwf	___ftpack@sign
  5316  0547  318F  279C         	fcall	___ftpack
  5317  0549  0872               	movf	?___ftpack,w
  5318  054A  0020               	movlb	0	; select bank0
  5319  054B  00A4               	movwf	?___ftmul
  5320  054C  0873               	movf	?___ftpack+1,w
  5321  054D  00A5               	movwf	?___ftmul+1
  5322  054E  0874               	movf	?___ftpack+2,w
  5323  054F  00A6               	movwf	?___ftmul+2
  5324  0550  0008               	return
  5325  0551                     __end_of___ftmul:	
  5326                           
  5327                           	psect	text29
  5328  0C31                     __ptext29:	
  5329 ;; *************** function ___ftsub *****************
  5330 ;; Defined at:
  5331 ;;		line 18 in file "/Applications/microchip/xc8/v1.36/sources/common/ftsub.c"
  5332 ;; Parameters:    Size  Location     Type
  5333 ;;  f2              3   64[BANK0 ] float 
  5334 ;;  f1              3   67[BANK0 ] float 
  5335 ;; Auto vars:     Size  Location     Type
  5336 ;;		None
  5337 ;; Return value:  Size  Location     Type
  5338 ;;                  3   64[BANK0 ] float 
  5339 ;; Registers used:
  5340 ;;		wreg, status,2, status,0, pclath, cstack
  5341 ;; Tracked objects:
  5342 ;;		On entry : 0/0
  5343 ;;		On exit  : 0/0
  5344 ;;		Unchanged: 0/0
  5345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5346 ;;      Params:         0       6       0       0       0       0
  5347 ;;      Locals:         0       0       0       0       0       0
  5348 ;;      Temps:          0       0       0       0       0       0
  5349 ;;      Totals:         0       6       0       0       0       0
  5350 ;;Total ram usage:        6 bytes
  5351 ;; Hardware stack levels used:    1
  5352 ;; Hardware stack levels required when called:    3
  5353 ;; This function calls:
  5354 ;;		___ftadd
  5355 ;; This function is called by:
  5356 ;;		_sin
  5357 ;;		__cos
  5358 ;;		__sin
  5359 ;; This function uses a non-reentrant model
  5360 ;;
  5361                           
  5362                           
  5363                           ;psect for function ___ftsub
  5364  0C31                     ___ftsub:	
  5365                           
  5366                           ;incstack = 0
  5367                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  5368  0C31  0020               	movlb	0	; select bank0
  5369  0C32  0862               	movf	___ftsub@f2+2,w
  5370  0C33  0461               	iorwf	___ftsub@f2+1,w
  5371  0C34  0460               	iorwf	___ftsub@f2,w
  5372  0C35  1903               	skipnz
  5373  0C36  2C39               	goto	l3966
  5374  0C37  3080               	movlw	128
  5375  0C38  06E2               	xorwf	___ftsub@f2+2,f
  5376  0C39                     l3966:	
  5377  0C39  0863               	movf	___ftsub@f1,w
  5378  0C3A  00CA               	movwf	___ftadd@f1
  5379  0C3B  0864               	movf	___ftsub@f1+1,w
  5380  0C3C  00CB               	movwf	___ftadd@f1+1
  5381  0C3D  0865               	movf	___ftsub@f1+2,w
  5382  0C3E  00CC               	movwf	___ftadd@f1+2
  5383  0C3F  0860               	movf	___ftsub@f2,w
  5384  0C40  00CD               	movwf	___ftadd@f2
  5385  0C41  0861               	movf	___ftsub@f2+1,w
  5386  0C42  00CE               	movwf	___ftadd@f2+1
  5387  0C43  0862               	movf	___ftsub@f2+2,w
  5388  0C44  00CF               	movwf	___ftadd@f2+2
  5389  0C45  3183  23A7         	fcall	___ftadd
  5390  0C47  0020               	movlb	0	; select bank0
  5391  0C48  084A               	movf	?___ftadd,w
  5392  0C49  00E0               	movwf	?___ftsub
  5393  0C4A  084B               	movf	?___ftadd+1,w
  5394  0C4B  00E1               	movwf	?___ftsub+1
  5395  0C4C  084C               	movf	?___ftadd+2,w
  5396  0C4D  00E2               	movwf	?___ftsub+2
  5397  0C4E  0008               	return
  5398  0C4F                     __end_of___ftsub:	
  5399                           
  5400                           	psect	text30
  5401  03A7                     __ptext30:	
  5402 ;; *************** function ___ftadd *****************
  5403 ;; Defined at:
  5404 ;;		line 86 in file "/Applications/microchip/xc8/v1.36/sources/common/ftadd.c"
  5405 ;; Parameters:    Size  Location     Type
  5406 ;;  f1              3   42[BANK0 ] float 
  5407 ;;  f2              3   45[BANK0 ] float 
  5408 ;; Auto vars:     Size  Location     Type
  5409 ;;  exp1            1   54[BANK0 ] unsigned char 
  5410 ;;  exp2            1   53[BANK0 ] unsigned char 
  5411 ;;  sign            1   52[BANK0 ] unsigned char 
  5412 ;; Return value:  Size  Location     Type
  5413 ;;                  3   42[BANK0 ] float 
  5414 ;; Registers used:
  5415 ;;		wreg, status,2, status,0, pclath, cstack
  5416 ;; Tracked objects:
  5417 ;;		On entry : 0/0
  5418 ;;		On exit  : 0/0
  5419 ;;		Unchanged: 0/0
  5420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5421 ;;      Params:         0       6       0       0       0       0
  5422 ;;      Locals:         0       3       0       0       0       0
  5423 ;;      Temps:          0       4       0       0       0       0
  5424 ;;      Totals:         0      13       0       0       0       0
  5425 ;;Total ram usage:       13 bytes
  5426 ;; Hardware stack levels used:    1
  5427 ;; Hardware stack levels required when called:    2
  5428 ;; This function calls:
  5429 ;;		___ftpack
  5430 ;; This function is called by:
  5431 ;;		_readCurrent
  5432 ;;		_cos
  5433 ;;		___ftsub
  5434 ;;		_sin
  5435 ;;		_eval_poly
  5436 ;;		_floor
  5437 ;;		__sqrt
  5438 ;;		__taylor_cos
  5439 ;;		__taylor_sin
  5440 ;; This function uses a non-reentrant model
  5441 ;;
  5442                           
  5443                           
  5444                           ;psect for function ___ftadd
  5445  03A7                     ___ftadd:	
  5446                           
  5447                           ;incstack = 0
  5448                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  5449  03A7  0020               	movlb	0	; select bank0
  5450  03A8  084A               	movf	___ftadd@f1,w
  5451  03A9  00D0               	movwf	??___ftadd
  5452  03AA  084B               	movf	___ftadd@f1+1,w
  5453  03AB  00D1               	movwf	??___ftadd+1
  5454  03AC  084C               	movf	___ftadd@f1+2,w
  5455  03AD  00D2               	movwf	??___ftadd+2
  5456  03AE  1003               	clrc
  5457  03AF  0D51               	rlf	??___ftadd+1,w
  5458  03B0  0D52               	rlf	??___ftadd+2,w
  5459  03B1  00D3               	movwf	??___ftadd+3
  5460  03B2  0853               	movf	??___ftadd+3,w
  5461  03B3  00D6               	movwf	___ftadd@exp1
  5462  03B4  084D               	movf	___ftadd@f2,w
  5463  03B5  00D0               	movwf	??___ftadd
  5464  03B6  084E               	movf	___ftadd@f2+1,w
  5465  03B7  00D1               	movwf	??___ftadd+1
  5466  03B8  084F               	movf	___ftadd@f2+2,w
  5467  03B9  00D2               	movwf	??___ftadd+2
  5468  03BA  1003               	clrc
  5469  03BB  0D51               	rlf	??___ftadd+1,w
  5470  03BC  0D52               	rlf	??___ftadd+2,w
  5471  03BD  00D3               	movwf	??___ftadd+3
  5472  03BE  0853               	movf	??___ftadd+3,w
  5473  03BF  00D5               	movwf	___ftadd@exp2
  5474  03C0  0856               	movf	___ftadd@exp1,w
  5475  03C1  1903               	btfsc	3,2
  5476  03C2  2BCF               	goto	l3692
  5477  03C3  0855               	movf	___ftadd@exp2,w
  5478  03C4  0256               	subwf	___ftadd@exp1,w
  5479  03C5  1803               	skipnc
  5480  03C6  2BD6               	goto	l3696
  5481  03C7  0356               	decf	___ftadd@exp1,w
  5482  03C8  3AFF               	xorlw	255
  5483  03C9  0755               	addwf	___ftadd@exp2,w
  5484  03CA  00D0               	movwf	??___ftadd
  5485  03CB  3019               	movlw	25
  5486  03CC  0250               	subwf	??___ftadd,w
  5487  03CD  1C03               	skipc
  5488  03CE  2BD6               	goto	l3696
  5489  03CF                     l3692:	
  5490  03CF  084D               	movf	___ftadd@f2,w
  5491  03D0  00CA               	movwf	?___ftadd
  5492  03D1  084E               	movf	___ftadd@f2+1,w
  5493  03D2  00CB               	movwf	?___ftadd+1
  5494  03D3  084F               	movf	___ftadd@f2+2,w
  5495  03D4  00CC               	movwf	?___ftadd+2
  5496  03D5  0008               	return
  5497  03D6                     l3696:	
  5498  03D6  0855               	movf	___ftadd@exp2,w
  5499  03D7  1903               	btfsc	3,2
  5500  03D8  0008               	return
  5501  03D9  0856               	movf	___ftadd@exp1,w
  5502  03DA  0255               	subwf	___ftadd@exp2,w
  5503  03DB  1803               	skipnc
  5504  03DC  2BE5               	goto	l3702
  5505  03DD  0355               	decf	___ftadd@exp2,w
  5506  03DE  3AFF               	xorlw	255
  5507  03DF  0756               	addwf	___ftadd@exp1,w
  5508  03E0  00D0               	movwf	??___ftadd
  5509  03E1  3019               	movlw	25
  5510  03E2  0250               	subwf	??___ftadd,w
  5511  03E3  1803               	btfsc	3,0
  5512  03E4  0008               	return
  5513  03E5                     l3702:	
  5514  03E5  3006               	movlw	6
  5515  03E6  00D0               	movwf	??___ftadd
  5516  03E7  0850               	movf	??___ftadd,w
  5517  03E8  00D4               	movwf	___ftadd@sign
  5518  03E9  1BCC               	btfsc	___ftadd@f1+2,7
  5519  03EA  17D4               	bsf	___ftadd@sign,7
  5520  03EB  1BCF               	btfsc	___ftadd@f2+2,7
  5521  03EC  1754               	bsf	___ftadd@sign,6
  5522  03ED  17CB               	bsf	___ftadd@f1+1,7
  5523  03EE  30FF               	movlw	255
  5524  03EF  05CA               	andwf	___ftadd@f1,f
  5525  03F0  30FF               	movlw	255
  5526  03F1  05CB               	andwf	___ftadd@f1+1,f
  5527  03F2  3000               	movlw	0
  5528  03F3  05CC               	andwf	___ftadd@f1+2,f
  5529  03F4  17CE               	bsf	___ftadd@f2+1,7
  5530  03F5  30FF               	movlw	255
  5531  03F6  05CD               	andwf	___ftadd@f2,f
  5532  03F7  30FF               	movlw	255
  5533  03F8  05CE               	andwf	___ftadd@f2+1,f
  5534  03F9  3000               	movlw	0
  5535  03FA  05CF               	andwf	___ftadd@f2+2,f
  5536  03FB  0855               	movf	___ftadd@exp2,w
  5537  03FC  0256               	subwf	___ftadd@exp1,w
  5538  03FD  1803               	skipnc
  5539  03FE  2C21               	goto	l3724
  5540  03FF                     l3714:	
  5541  03FF  3001               	movlw	1
  5542  0400                     u4595:	
  5543  0400  35CD               	lslf	___ftadd@f2,f
  5544  0401  0DCE               	rlf	___ftadd@f2+1,f
  5545  0402  0DCF               	rlf	___ftadd@f2+2,f
  5546  0403  0B89               	decfsz	9,f
  5547  0404  2C00               	goto	u4595
  5548  0405  3001               	movlw	1
  5549  0406  02D5               	subwf	___ftadd@exp2,f
  5550  0407  0855               	movf	___ftadd@exp2,w
  5551  0408  0656               	xorwf	___ftadd@exp1,w
  5552  0409  1903               	skipnz
  5553  040A  2C1C               	goto	l3722
  5554  040B  3001               	movlw	1
  5555  040C  02D4               	subwf	___ftadd@sign,f
  5556  040D  0854               	movf	___ftadd@sign,w
  5557  040E  3907               	andlw	7
  5558  040F  1903               	btfsc	3,2
  5559  0410  2C1C               	goto	l3722
  5560  0411  2BFF               	goto	l3714
  5561  0412                     l3720:	
  5562  0412  3001               	movlw	1
  5563  0413                     u4625:	
  5564  0413  36CC               	lsrf	___ftadd@f1+2,f
  5565  0414  0CCB               	rrf	___ftadd@f1+1,f
  5566  0415  0CCA               	rrf	___ftadd@f1,f
  5567  0416  0B89               	decfsz	9,f
  5568  0417  2C13               	goto	u4625
  5569  0418  3001               	movlw	1
  5570  0419  00D0               	movwf	??___ftadd
  5571  041A  0850               	movf	??___ftadd,w
  5572  041B  07D6               	addwf	___ftadd@exp1,f
  5573  041C                     l3722:	
  5574  041C  0856               	movf	___ftadd@exp1,w
  5575  041D  0655               	xorwf	___ftadd@exp2,w
  5576  041E  1903               	btfsc	3,2
  5577  041F  2C46               	goto	l878
  5578  0420  2C12               	goto	l3720
  5579  0421                     l3724:	
  5580  0421  0856               	movf	___ftadd@exp1,w
  5581  0422  0255               	subwf	___ftadd@exp2,w
  5582  0423  1803               	skipnc
  5583  0424  2C46               	goto	l878
  5584  0425                     l3726:	
  5585  0425  3001               	movlw	1
  5586  0426                     u4655:	
  5587  0426  35CA               	lslf	___ftadd@f1,f
  5588  0427  0DCB               	rlf	___ftadd@f1+1,f
  5589  0428  0DCC               	rlf	___ftadd@f1+2,f
  5590  0429  0B89               	decfsz	9,f
  5591  042A  2C26               	goto	u4655
  5592  042B  3001               	movlw	1
  5593  042C  02D6               	subwf	___ftadd@exp1,f
  5594  042D  0855               	movf	___ftadd@exp2,w
  5595  042E  0656               	xorwf	___ftadd@exp1,w
  5596  042F  1903               	skipnz
  5597  0430  2C42               	goto	l3734
  5598  0431  3001               	movlw	1
  5599  0432  02D4               	subwf	___ftadd@sign,f
  5600  0433  0854               	movf	___ftadd@sign,w
  5601  0434  3907               	andlw	7
  5602  0435  1903               	btfsc	3,2
  5603  0436  2C42               	goto	l3734
  5604  0437  2C25               	goto	l3726
  5605  0438                     l3732:	
  5606  0438  3001               	movlw	1
  5607  0439                     u4685:	
  5608  0439  36CF               	lsrf	___ftadd@f2+2,f
  5609  043A  0CCE               	rrf	___ftadd@f2+1,f
  5610  043B  0CCD               	rrf	___ftadd@f2,f
  5611  043C  0B89               	decfsz	9,f
  5612  043D  2C39               	goto	u4685
  5613  043E  3001               	movlw	1
  5614  043F  00D0               	movwf	??___ftadd
  5615  0440  0850               	movf	??___ftadd,w
  5616  0441  07D5               	addwf	___ftadd@exp2,f
  5617  0442                     l3734:	
  5618  0442  0856               	movf	___ftadd@exp1,w
  5619  0443  0655               	xorwf	___ftadd@exp2,w
  5620  0444  1D03               	skipz
  5621  0445  2C38               	goto	l3732
  5622  0446                     l878:	
  5623  0446  1FD4               	btfss	___ftadd@sign,7
  5624  0447  2C58               	goto	l3738
  5625  0448  30FF               	movlw	255
  5626  0449  06CA               	xorwf	___ftadd@f1,f
  5627  044A  30FF               	movlw	255
  5628  044B  06CB               	xorwf	___ftadd@f1+1,f
  5629  044C  30FF               	movlw	255
  5630  044D  06CC               	xorwf	___ftadd@f1+2,f
  5631  044E  3001               	movlw	1
  5632  044F  07CA               	addwf	___ftadd@f1,f
  5633  0450  3000               	movlw	0
  5634  0451  1803               	skipnc
  5635  0452  3001               	movlw	1
  5636  0453  07CB               	addwf	___ftadd@f1+1,f
  5637  0454  3000               	movlw	0
  5638  0455  1803               	skipnc
  5639  0456  3001               	movlw	1
  5640  0457  07CC               	addwf	___ftadd@f1+2,f
  5641  0458                     l3738:	
  5642  0458  1F54               	btfss	___ftadd@sign,6
  5643  0459  2C6A               	goto	l3742
  5644  045A  30FF               	movlw	255
  5645  045B  06CD               	xorwf	___ftadd@f2,f
  5646  045C  30FF               	movlw	255
  5647  045D  06CE               	xorwf	___ftadd@f2+1,f
  5648  045E  30FF               	movlw	255
  5649  045F  06CF               	xorwf	___ftadd@f2+2,f
  5650  0460  3001               	movlw	1
  5651  0461  07CD               	addwf	___ftadd@f2,f
  5652  0462  3000               	movlw	0
  5653  0463  1803               	skipnc
  5654  0464  3001               	movlw	1
  5655  0465  07CE               	addwf	___ftadd@f2+1,f
  5656  0466  3000               	movlw	0
  5657  0467  1803               	skipnc
  5658  0468  3001               	movlw	1
  5659  0469  07CF               	addwf	___ftadd@f2+2,f
  5660  046A                     l3742:	
  5661  046A  01D4               	clrf	___ftadd@sign
  5662  046B  084A               	movf	___ftadd@f1,w
  5663  046C  07CD               	addwf	___ftadd@f2,f
  5664  046D  084B               	movf	___ftadd@f1+1,w
  5665  046E  3DCE               	addwfc	___ftadd@f2+1,f
  5666  046F  084C               	movf	___ftadd@f1+2,w
  5667  0470  3DCF               	addwfc	___ftadd@f2+2,f
  5668  0471  1FCF               	btfss	___ftadd@f2+2,7
  5669  0472  2C85               	goto	l3752
  5670  0473  30FF               	movlw	255
  5671  0474  06CD               	xorwf	___ftadd@f2,f
  5672  0475  30FF               	movlw	255
  5673  0476  06CE               	xorwf	___ftadd@f2+1,f
  5674  0477  30FF               	movlw	255
  5675  0478  06CF               	xorwf	___ftadd@f2+2,f
  5676  0479  3001               	movlw	1
  5677  047A  07CD               	addwf	___ftadd@f2,f
  5678  047B  3000               	movlw	0
  5679  047C  1803               	skipnc
  5680  047D  3001               	movlw	1
  5681  047E  07CE               	addwf	___ftadd@f2+1,f
  5682  047F  3000               	movlw	0
  5683  0480  1803               	skipnc
  5684  0481  3001               	movlw	1
  5685  0482  07CF               	addwf	___ftadd@f2+2,f
  5686  0483  01D4               	clrf	___ftadd@sign
  5687  0484  0AD4               	incf	___ftadd@sign,f
  5688  0485                     l3752:	
  5689  0485  084D               	movf	___ftadd@f2,w
  5690  0486  00F2               	movwf	___ftpack@arg
  5691  0487  084E               	movf	___ftadd@f2+1,w
  5692  0488  00F3               	movwf	___ftpack@arg+1
  5693  0489  084F               	movf	___ftadd@f2+2,w
  5694  048A  00F4               	movwf	___ftpack@arg+2
  5695  048B  0856               	movf	___ftadd@exp1,w
  5696  048C  00D0               	movwf	??___ftadd
  5697  048D  0850               	movf	??___ftadd,w
  5698  048E  00F5               	movwf	___ftpack@exp
  5699  048F  0854               	movf	___ftadd@sign,w
  5700  0490  00D1               	movwf	??___ftadd+1
  5701  0491  0851               	movf	??___ftadd+1,w
  5702  0492  00F6               	movwf	___ftpack@sign
  5703  0493  318F  279C         	fcall	___ftpack
  5704  0495  0872               	movf	?___ftpack,w
  5705  0496  0020               	movlb	0	; select bank0
  5706  0497  00CA               	movwf	?___ftadd
  5707  0498  0873               	movf	?___ftpack+1,w
  5708  0499  00CB               	movwf	?___ftadd+1
  5709  049A  0874               	movf	?___ftpack+2,w
  5710  049B  00CC               	movwf	?___ftadd+2
  5711  049C  0008               	return
  5712  049D                     __end_of___ftadd:	
  5713                           
  5714                           	psect	text31
  5715  0B8C                     __ptext31:	
  5716 ;; *************** function ___ftneg *****************
  5717 ;; Defined at:
  5718 ;;		line 15 in file "/Applications/microchip/xc8/v1.36/sources/common/ftneg.c"
  5719 ;; Parameters:    Size  Location     Type
  5720 ;;  f1              3   39[BANK0 ] float 
  5721 ;; Auto vars:     Size  Location     Type
  5722 ;;		None
  5723 ;; Return value:  Size  Location     Type
  5724 ;;                  3   39[BANK0 ] float 
  5725 ;; Registers used:
  5726 ;;		wreg
  5727 ;; Tracked objects:
  5728 ;;		On entry : 0/0
  5729 ;;		On exit  : 0/0
  5730 ;;		Unchanged: 0/0
  5731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5732 ;;      Params:         0       3       0       0       0       0
  5733 ;;      Locals:         0       0       0       0       0       0
  5734 ;;      Temps:          0       0       0       0       0       0
  5735 ;;      Totals:         0       3       0       0       0       0
  5736 ;;Total ram usage:        3 bytes
  5737 ;; Hardware stack levels used:    1
  5738 ;; Hardware stack levels required when called:    1
  5739 ;; This function calls:
  5740 ;;		Nothing
  5741 ;; This function is called by:
  5742 ;;		_main
  5743 ;;		_sin
  5744 ;;		__abs
  5745 ;;		__taylor_cos
  5746 ;;		__taylor_sin
  5747 ;; This function uses a non-reentrant model
  5748 ;;
  5749                           
  5750                           
  5751                           ;psect for function ___ftneg
  5752  0B8C                     ___ftneg:	
  5753                           
  5754                           ;incstack = 0
  5755                           ; Regs used in ___ftneg: [wreg]
  5756  0B8C  0020               	movlb	0	; select bank0
  5757  0B8D  0849               	movf	___ftneg@f1+2,w
  5758  0B8E  0448               	iorwf	___ftneg@f1+1,w
  5759  0B8F  0447               	iorwf	___ftneg@f1,w
  5760  0B90  1903               	skipnz
  5761  0B91  0008               	return
  5762  0B92  3080               	movlw	128
  5763  0B93  06C9               	xorwf	___ftneg@f1+2,f
  5764  0B94  0008               	return
  5765  0B95                     __end_of___ftneg:	
  5766                           
  5767                           	psect	text32
  5768  0551                     __ptext32:	
  5769 ;; *************** function ___ftdiv *****************
  5770 ;; Defined at:
  5771 ;;		line 56 in file "/Applications/microchip/xc8/v1.36/sources/common/ftdiv.c"
  5772 ;; Parameters:    Size  Location     Type
  5773 ;;  f2              3   20[BANK0 ] float 
  5774 ;;  f1              3   23[BANK0 ] float 
  5775 ;; Auto vars:     Size  Location     Type
  5776 ;;  f3              3   31[BANK0 ] float 
  5777 ;;  sign            1   35[BANK0 ] unsigned char 
  5778 ;;  exp             1   34[BANK0 ] unsigned char 
  5779 ;;  cntr            1   30[BANK0 ] unsigned char 
  5780 ;; Return value:  Size  Location     Type
  5781 ;;                  3   20[BANK0 ] float 
  5782 ;; Registers used:
  5783 ;;		wreg, status,2, status,0, pclath, cstack
  5784 ;; Tracked objects:
  5785 ;;		On entry : 0/0
  5786 ;;		On exit  : 0/0
  5787 ;;		Unchanged: 0/0
  5788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5789 ;;      Params:         0       6       0       0       0       0
  5790 ;;      Locals:         0       6       0       0       0       0
  5791 ;;      Temps:          0       4       0       0       0       0
  5792 ;;      Totals:         0      16       0       0       0       0
  5793 ;;Total ram usage:       16 bytes
  5794 ;; Hardware stack levels used:    1
  5795 ;; Hardware stack levels required when called:    2
  5796 ;; This function calls:
  5797 ;;		___ftpack
  5798 ;; This function is called by:
  5799 ;;		_readCurrent
  5800 ;;		_readVdd
  5801 ;;		_main
  5802 ;;		_sin
  5803 ;;		__round_down
  5804 ;;		__round_up
  5805 ;;		__round
  5806 ;;		__sqrt
  5807 ;;		__taylor_cos
  5808 ;;		__taylor_sin
  5809 ;; This function uses a non-reentrant model
  5810 ;;
  5811                           
  5812                           
  5813                           ;psect for function ___ftdiv
  5814  0551                     ___ftdiv:	
  5815                           
  5816                           ;incstack = 0
  5817                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  5818  0551  0020               	movlb	0	; select bank0
  5819  0552  0837               	movf	___ftdiv@f1,w
  5820  0553  00BA               	movwf	??___ftdiv
  5821  0554  0838               	movf	___ftdiv@f1+1,w
  5822  0555  00BB               	movwf	??___ftdiv+1
  5823  0556  0839               	movf	___ftdiv@f1+2,w
  5824  0557  00BC               	movwf	??___ftdiv+2
  5825  0558  1003               	clrc
  5826  0559  0D3B               	rlf	??___ftdiv+1,w
  5827  055A  0D3C               	rlf	??___ftdiv+2,w
  5828  055B  00BD               	movwf	??___ftdiv+3
  5829  055C  083D               	movf	??___ftdiv+3,w
  5830  055D  00C2               	movwf	___ftdiv@exp
  5831  055E  0842               	movf	___ftdiv@exp,w
  5832  055F  1D03               	btfss	3,2
  5833  0560  2D68               	goto	l3918
  5834  0561  3000               	movlw	0
  5835  0562  00B4               	movwf	?___ftdiv
  5836  0563  3000               	movlw	0
  5837  0564  00B5               	movwf	?___ftdiv+1
  5838  0565  3000               	movlw	0
  5839  0566  00B6               	movwf	?___ftdiv+2
  5840  0567  0008               	return
  5841  0568                     l3918:	
  5842  0568  0834               	movf	___ftdiv@f2,w
  5843  0569  00BA               	movwf	??___ftdiv
  5844  056A  0835               	movf	___ftdiv@f2+1,w
  5845  056B  00BB               	movwf	??___ftdiv+1
  5846  056C  0836               	movf	___ftdiv@f2+2,w
  5847  056D  00BC               	movwf	??___ftdiv+2
  5848  056E  1003               	clrc
  5849  056F  0D3B               	rlf	??___ftdiv+1,w
  5850  0570  0D3C               	rlf	??___ftdiv+2,w
  5851  0571  00BD               	movwf	??___ftdiv+3
  5852  0572  083D               	movf	??___ftdiv+3,w
  5853  0573  00C3               	movwf	___ftdiv@sign
  5854  0574  0843               	movf	___ftdiv@sign,w
  5855  0575  1D03               	btfss	3,2
  5856  0576  2D7E               	goto	l3924
  5857  0577  3000               	movlw	0
  5858  0578  00B4               	movwf	?___ftdiv
  5859  0579  3000               	movlw	0
  5860  057A  00B5               	movwf	?___ftdiv+1
  5861  057B  3000               	movlw	0
  5862  057C  00B6               	movwf	?___ftdiv+2
  5863  057D  0008               	return
  5864  057E                     l3924:	
  5865  057E  3000               	movlw	0
  5866  057F  00BF               	movwf	___ftdiv@f3
  5867  0580  3000               	movlw	0
  5868  0581  00C0               	movwf	___ftdiv@f3+1
  5869  0582  3000               	movlw	0
  5870  0583  00C1               	movwf	___ftdiv@f3+2
  5871  0584  3089               	movlw	137
  5872  0585  0743               	addwf	___ftdiv@sign,w
  5873  0586  00BA               	movwf	??___ftdiv
  5874  0587  083A               	movf	??___ftdiv,w
  5875  0588  02C2               	subwf	___ftdiv@exp,f
  5876  0589  0837               	movf	___ftdiv@f1,w
  5877  058A  00BA               	movwf	??___ftdiv
  5878  058B  0838               	movf	___ftdiv@f1+1,w
  5879  058C  00BB               	movwf	??___ftdiv+1
  5880  058D  0839               	movf	___ftdiv@f1+2,w
  5881  058E  00BC               	movwf	??___ftdiv+2
  5882  058F  3010               	movlw	16
  5883  0590                     u5045:	
  5884  0590  36BC               	lsrf	??___ftdiv+2,f
  5885  0591  0CBB               	rrf	??___ftdiv+1,f
  5886  0592  0CBA               	rrf	??___ftdiv,f
  5887  0593  0B89               	decfsz	9,f
  5888  0594  2D90               	goto	u5045
  5889  0595  083A               	movf	??___ftdiv,w
  5890  0596  00BD               	movwf	??___ftdiv+3
  5891  0597  083D               	movf	??___ftdiv+3,w
  5892  0598  00C3               	movwf	___ftdiv@sign
  5893  0599  0834               	movf	___ftdiv@f2,w
  5894  059A  00BA               	movwf	??___ftdiv
  5895  059B  0835               	movf	___ftdiv@f2+1,w
  5896  059C  00BB               	movwf	??___ftdiv+1
  5897  059D  0836               	movf	___ftdiv@f2+2,w
  5898  059E  00BC               	movwf	??___ftdiv+2
  5899  059F  3010               	movlw	16
  5900  05A0                     u5055:	
  5901  05A0  36BC               	lsrf	??___ftdiv+2,f
  5902  05A1  0CBB               	rrf	??___ftdiv+1,f
  5903  05A2  0CBA               	rrf	??___ftdiv,f
  5904  05A3  0B89               	decfsz	9,f
  5905  05A4  2DA0               	goto	u5055
  5906  05A5  083A               	movf	??___ftdiv,w
  5907  05A6  00BD               	movwf	??___ftdiv+3
  5908  05A7  083D               	movf	??___ftdiv+3,w
  5909  05A8  06C3               	xorwf	___ftdiv@sign,f
  5910  05A9  3080               	movlw	128
  5911  05AA  00BA               	movwf	??___ftdiv
  5912  05AB  083A               	movf	??___ftdiv,w
  5913  05AC  05C3               	andwf	___ftdiv@sign,f
  5914  05AD  17B8               	bsf	___ftdiv@f1+1,7
  5915  05AE  30FF               	movlw	255
  5916  05AF  05B7               	andwf	___ftdiv@f1,f
  5917  05B0  30FF               	movlw	255
  5918  05B1  05B8               	andwf	___ftdiv@f1+1,f
  5919  05B2  3000               	movlw	0
  5920  05B3  05B9               	andwf	___ftdiv@f1+2,f
  5921  05B4  17B5               	bsf	___ftdiv@f2+1,7
  5922  05B5  30FF               	movlw	255
  5923  05B6  05B4               	andwf	___ftdiv@f2,f
  5924  05B7  30FF               	movlw	255
  5925  05B8  05B5               	andwf	___ftdiv@f2+1,f
  5926  05B9  3000               	movlw	0
  5927  05BA  05B6               	andwf	___ftdiv@f2+2,f
  5928  05BB  3018               	movlw	24
  5929  05BC  00BA               	movwf	??___ftdiv
  5930  05BD  083A               	movf	??___ftdiv,w
  5931  05BE  00BE               	movwf	___ftdiv@cntr
  5932  05BF                     l3938:	
  5933  05BF  3001               	movlw	1
  5934  05C0                     u5065:	
  5935  05C0  35BF               	lslf	___ftdiv@f3,f
  5936  05C1  0DC0               	rlf	___ftdiv@f3+1,f
  5937  05C2  0DC1               	rlf	___ftdiv@f3+2,f
  5938  05C3  0B89               	decfsz	9,f
  5939  05C4  2DC0               	goto	u5065
  5940  05C5  0836               	movf	___ftdiv@f2+2,w
  5941  05C6  0239               	subwf	___ftdiv@f1+2,w
  5942  05C7  1D03               	skipz
  5943  05C8  2DCF               	goto	u5075
  5944  05C9  0835               	movf	___ftdiv@f2+1,w
  5945  05CA  0238               	subwf	___ftdiv@f1+1,w
  5946  05CB  1D03               	skipz
  5947  05CC  2DCF               	goto	u5075
  5948  05CD  0834               	movf	___ftdiv@f2,w
  5949  05CE  0237               	subwf	___ftdiv@f1,w
  5950  05CF                     u5075:	
  5951  05CF  1C03               	skipc
  5952  05D0  2DD8               	goto	l3946
  5953  05D1  0834               	movf	___ftdiv@f2,w
  5954  05D2  02B7               	subwf	___ftdiv@f1,f
  5955  05D3  0835               	movf	___ftdiv@f2+1,w
  5956  05D4  3BB8               	subwfb	___ftdiv@f1+1,f
  5957  05D5  0836               	movf	___ftdiv@f2+2,w
  5958  05D6  3BB9               	subwfb	___ftdiv@f1+2,f
  5959  05D7  143F               	bsf	___ftdiv@f3,0
  5960  05D8                     l3946:	
  5961  05D8  3001               	movlw	1
  5962  05D9                     u5085:	
  5963  05D9  35B7               	lslf	___ftdiv@f1,f
  5964  05DA  0DB8               	rlf	___ftdiv@f1+1,f
  5965  05DB  0DB9               	rlf	___ftdiv@f1+2,f
  5966  05DC  0B89               	decfsz	9,f
  5967  05DD  2DD9               	goto	u5085
  5968  05DE  3001               	movlw	1
  5969  05DF  02BE               	subwf	___ftdiv@cntr,f
  5970  05E0  1D03               	btfss	3,2
  5971  05E1  2DBF               	goto	l3938
  5972  05E2  083F               	movf	___ftdiv@f3,w
  5973  05E3  00F2               	movwf	___ftpack@arg
  5974  05E4  0840               	movf	___ftdiv@f3+1,w
  5975  05E5  00F3               	movwf	___ftpack@arg+1
  5976  05E6  0841               	movf	___ftdiv@f3+2,w
  5977  05E7  00F4               	movwf	___ftpack@arg+2
  5978  05E8  0842               	movf	___ftdiv@exp,w
  5979  05E9  00BA               	movwf	??___ftdiv
  5980  05EA  083A               	movf	??___ftdiv,w
  5981  05EB  00F5               	movwf	___ftpack@exp
  5982  05EC  0843               	movf	___ftdiv@sign,w
  5983  05ED  00BB               	movwf	??___ftdiv+1
  5984  05EE  083B               	movf	??___ftdiv+1,w
  5985  05EF  00F6               	movwf	___ftpack@sign
  5986  05F0  318F  279C         	fcall	___ftpack
  5987  05F2  0872               	movf	?___ftpack,w
  5988  05F3  0020               	movlb	0	; select bank0
  5989  05F4  00B4               	movwf	?___ftdiv
  5990  05F5  0873               	movf	?___ftpack+1,w
  5991  05F6  00B5               	movwf	?___ftdiv+1
  5992  05F7  0874               	movf	?___ftpack+2,w
  5993  05F8  00B6               	movwf	?___ftdiv+2
  5994  05F9  0008               	return
  5995  05FA                     __end_of___ftdiv:	
  5996                           
  5997                           	psect	text33
  5998  0CB8                     __ptext33:	
  5999 ;; *************** function ___lmul *****************
  6000 ;; Defined at:
  6001 ;;		line 15 in file "/Applications/microchip/xc8/v1.36/sources/common/Umul32.c"
  6002 ;; Parameters:    Size  Location     Type
  6003 ;;  multiplier      4    2[COMMON] unsigned long 
  6004 ;;  multiplicand    4    6[COMMON] unsigned long 
  6005 ;; Auto vars:     Size  Location     Type
  6006 ;;  product         4    0[BANK0 ] unsigned long 
  6007 ;; Return value:  Size  Location     Type
  6008 ;;                  4    2[COMMON] unsigned long 
  6009 ;; Registers used:
  6010 ;;		wreg, status,2, status,0
  6011 ;; Tracked objects:
  6012 ;;		On entry : 0/0
  6013 ;;		On exit  : 0/0
  6014 ;;		Unchanged: 0/0
  6015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6016 ;;      Params:         8       0       0       0       0       0
  6017 ;;      Locals:         0       4       0       0       0       0
  6018 ;;      Temps:          0       0       0       0       0       0
  6019 ;;      Totals:         8       4       0       0       0       0
  6020 ;;Total ram usage:       12 bytes
  6021 ;; Hardware stack levels used:    1
  6022 ;; Hardware stack levels required when called:    1
  6023 ;; This function calls:
  6024 ;;		Nothing
  6025 ;; This function is called by:
  6026 ;;		_main
  6027 ;; This function uses a non-reentrant model
  6028 ;;
  6029                           
  6030                           
  6031                           ;psect for function ___lmul
  6032  0CB8                     ___lmul:	
  6033                           
  6034                           ;incstack = 0
  6035                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  6036  0CB8  3000               	movlw	0
  6037  0CB9  0020               	movlb	0	; select bank0
  6038  0CBA  00A3               	movwf	___lmul@product+3
  6039  0CBB  3000               	movlw	0
  6040  0CBC  00A2               	movwf	___lmul@product+2
  6041  0CBD  3000               	movlw	0
  6042  0CBE  00A1               	movwf	___lmul@product+1
  6043  0CBF  3000               	movlw	0
  6044  0CC0  00A0               	movwf	___lmul@product
  6045  0CC1                     l3232:	
  6046  0CC1  1C72               	btfss	___lmul@multiplier,0
  6047  0CC2  2CCC               	goto	l3236
  6048  0CC3  0876               	movf	___lmul@multiplicand,w
  6049  0CC4  0020               	movlb	0	; select bank0
  6050  0CC5  07A0               	addwf	___lmul@product,f
  6051  0CC6  0877               	movf	___lmul@multiplicand+1,w
  6052  0CC7  3DA1               	addwfc	___lmul@product+1,f
  6053  0CC8  0878               	movf	___lmul@multiplicand+2,w
  6054  0CC9  3DA2               	addwfc	___lmul@product+2,f
  6055  0CCA  0879               	movf	___lmul@multiplicand+3,w
  6056  0CCB  3DA3               	addwfc	___lmul@product+3,f
  6057  0CCC                     l3236:	
  6058  0CCC  3001               	movlw	1
  6059  0CCD                     u3745:	
  6060  0CCD  35F6               	lslf	___lmul@multiplicand,f
  6061  0CCE  0DF7               	rlf	___lmul@multiplicand+1,f
  6062  0CCF  0DF8               	rlf	___lmul@multiplicand+2,f
  6063  0CD0  0DF9               	rlf	___lmul@multiplicand+3,f
  6064  0CD1  0B89               	decfsz	9,f
  6065  0CD2  2CCD               	goto	u3745
  6066  0CD3  3001               	movlw	1
  6067  0CD4                     u3755:	
  6068  0CD4  36F5               	lsrf	___lmul@multiplier+3,f
  6069  0CD5  0CF4               	rrf	___lmul@multiplier+2,f
  6070  0CD6  0CF3               	rrf	___lmul@multiplier+1,f
  6071  0CD7  0CF2               	rrf	___lmul@multiplier,f
  6072  0CD8  0B89               	decfsz	9,f
  6073  0CD9  2CD4               	goto	u3755
  6074  0CDA  0875               	movf	___lmul@multiplier+3,w
  6075  0CDB  0474               	iorwf	___lmul@multiplier+2,w
  6076  0CDC  0473               	iorwf	___lmul@multiplier+1,w
  6077  0CDD  0472               	iorwf	___lmul@multiplier,w
  6078  0CDE  1D03               	skipz
  6079  0CDF  2CC1               	goto	l3232
  6080  0CE0  0020               	movlb	0	; select bank0
  6081  0CE1  0823               	movf	___lmul@product+3,w
  6082  0CE2  00F5               	movwf	?___lmul+3
  6083  0CE3  0822               	movf	___lmul@product+2,w
  6084  0CE4  00F4               	movwf	?___lmul+2
  6085  0CE5  0821               	movf	___lmul@product+1,w
  6086  0CE6  00F3               	movwf	?___lmul+1
  6087  0CE7  0820               	movf	___lmul@product,w
  6088  0CE8  00F2               	movwf	?___lmul
  6089  0CE9  0008               	return
  6090  0CEA                     __end_of___lmul:	
  6091                           
  6092                           	psect	text34
  6093  0C8E                     __ptext34:	
  6094 ;; *************** function ___lltoft *****************
  6095 ;; Defined at:
  6096 ;;		line 35 in file "/Applications/microchip/xc8/v1.36/sources/common/lltoft.c"
  6097 ;; Parameters:    Size  Location     Type
  6098 ;;  c               4    0[BANK0 ] unsigned long 
  6099 ;; Auto vars:     Size  Location     Type
  6100 ;;  exp             1    5[BANK0 ] unsigned char 
  6101 ;; Return value:  Size  Location     Type
  6102 ;;                  3    0[BANK0 ] float 
  6103 ;; Registers used:
  6104 ;;		wreg, status,2, status,0, pclath, cstack
  6105 ;; Tracked objects:
  6106 ;;		On entry : 0/0
  6107 ;;		On exit  : 0/0
  6108 ;;		Unchanged: 0/0
  6109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6110 ;;      Params:         0       4       0       0       0       0
  6111 ;;      Locals:         0       1       0       0       0       0
  6112 ;;      Temps:          0       1       0       0       0       0
  6113 ;;      Totals:         0       6       0       0       0       0
  6114 ;;Total ram usage:        6 bytes
  6115 ;; Hardware stack levels used:    1
  6116 ;; Hardware stack levels required when called:    2
  6117 ;; This function calls:
  6118 ;;		___ftpack
  6119 ;; This function is called by:
  6120 ;;		_main
  6121 ;; This function uses a non-reentrant model
  6122 ;;
  6123                           
  6124                           
  6125                           ;psect for function ___lltoft
  6126  0C8E                     ___lltoft:	
  6127                           
  6128                           ;incstack = 0
  6129                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  6130  0C8E  308E               	movlw	142
  6131  0C8F  0020               	movlb	0	; select bank0
  6132  0C90  00A4               	movwf	??___lltoft
  6133  0C91  0824               	movf	??___lltoft,w
  6134  0C92  00A5               	movwf	___lltoft@exp
  6135  0C93                     l4254:	
  6136  0C93  30FF               	movlw	255
  6137  0C94  0523               	andwf	___lltoft@c+3,w
  6138  0C95  1903               	btfsc	3,2
  6139  0C96  2CA3               	goto	l4256
  6140  0C97  3001               	movlw	1
  6141  0C98                     u5525:	
  6142  0C98  36A3               	lsrf	___lltoft@c+3,f
  6143  0C99  0CA2               	rrf	___lltoft@c+2,f
  6144  0C9A  0CA1               	rrf	___lltoft@c+1,f
  6145  0C9B  0CA0               	rrf	___lltoft@c,f
  6146  0C9C  0B89               	decfsz	9,f
  6147  0C9D  2C98               	goto	u5525
  6148  0C9E  3001               	movlw	1
  6149  0C9F  00A4               	movwf	??___lltoft
  6150  0CA0  0824               	movf	??___lltoft,w
  6151  0CA1  07A5               	addwf	___lltoft@exp,f
  6152  0CA2  2C93               	goto	l4254
  6153  0CA3                     l4256:	
  6154  0CA3  0820               	movf	___lltoft@c,w
  6155  0CA4  00F2               	movwf	___ftpack@arg
  6156  0CA5  0821               	movf	___lltoft@c+1,w
  6157  0CA6  00F3               	movwf	___ftpack@arg+1
  6158  0CA7  0822               	movf	___lltoft@c+2,w
  6159  0CA8  00F4               	movwf	___ftpack@arg+2
  6160  0CA9  0825               	movf	___lltoft@exp,w
  6161  0CAA  00A4               	movwf	??___lltoft
  6162  0CAB  0824               	movf	??___lltoft,w
  6163  0CAC  00F5               	movwf	___ftpack@exp
  6164  0CAD  01F6               	clrf	___ftpack@sign
  6165  0CAE  318F  279C         	fcall	___ftpack
  6166  0CB0  0872               	movf	?___ftpack,w
  6167  0CB1  0020               	movlb	0	; select bank0
  6168  0CB2  00A0               	movwf	?___lltoft
  6169  0CB3  0873               	movf	?___ftpack+1,w
  6170  0CB4  00A1               	movwf	?___lltoft+1
  6171  0CB5  0874               	movf	?___ftpack+2,w
  6172  0CB6  00A2               	movwf	?___lltoft+2
  6173  0CB7  0008               	return
  6174  0CB8                     __end_of___lltoft:	
  6175                           
  6176                           	psect	text35
  6177  0F9C                     __ptext35:	
  6178 ;; *************** function ___ftpack *****************
  6179 ;; Defined at:
  6180 ;;		line 62 in file "/Applications/microchip/xc8/v1.36/sources/common/float.c"
  6181 ;; Parameters:    Size  Location     Type
  6182 ;;  arg             3    2[COMMON] unsigned um
  6183 ;;  exp             1    5[COMMON] unsigned char 
  6184 ;;  sign            1    6[COMMON] unsigned char 
  6185 ;; Auto vars:     Size  Location     Type
  6186 ;;		None
  6187 ;; Return value:  Size  Location     Type
  6188 ;;                  3    2[COMMON] float 
  6189 ;; Registers used:
  6190 ;;		wreg, status,2, status,0
  6191 ;; Tracked objects:
  6192 ;;		On entry : 0/0
  6193 ;;		On exit  : 0/0
  6194 ;;		Unchanged: 0/0
  6195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6196 ;;      Params:         5       0       0       0       0       0
  6197 ;;      Locals:         0       0       0       0       0       0
  6198 ;;      Temps:          3       0       0       0       0       0
  6199 ;;      Totals:         8       0       0       0       0       0
  6200 ;;Total ram usage:        8 bytes
  6201 ;; Hardware stack levels used:    1
  6202 ;; Hardware stack levels required when called:    1
  6203 ;; This function calls:
  6204 ;;		Nothing
  6205 ;; This function is called by:
  6206 ;;		___altoft
  6207 ;;		___ftadd
  6208 ;;		___ftdiv
  6209 ;;		___ftmul
  6210 ;;		___lltoft
  6211 ;;		___lwtoft
  6212 ;; This function uses a non-reentrant model
  6213 ;;
  6214                           
  6215                           
  6216                           ;psect for function ___ftpack
  6217  0F9C                     ___ftpack:	
  6218                           
  6219                           ;incstack = 0
  6220                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  6221  0F9C  0875               	movf	___ftpack@exp,w
  6222  0F9D  1903               	btfsc	3,2
  6223  0F9E  2FA4               	goto	l3628
  6224  0F9F  0874               	movf	___ftpack@arg+2,w
  6225  0FA0  0473               	iorwf	___ftpack@arg+1,w
  6226  0FA1  0472               	iorwf	___ftpack@arg,w
  6227  0FA2  1D03               	skipz
  6228  0FA3  2FB5               	goto	l3634
  6229  0FA4                     l3628:	
  6230  0FA4  3000               	movlw	0
  6231  0FA5  00F2               	movwf	?___ftpack
  6232  0FA6  3000               	movlw	0
  6233  0FA7  00F3               	movwf	?___ftpack+1
  6234  0FA8  3000               	movlw	0
  6235  0FA9  00F4               	movwf	?___ftpack+2
  6236  0FAA  0008               	return
  6237  0FAB                     l3632:	
  6238  0FAB  3001               	movlw	1
  6239  0FAC  00F7               	movwf	??___ftpack
  6240  0FAD  0877               	movf	??___ftpack,w
  6241  0FAE  07F5               	addwf	___ftpack@exp,f
  6242  0FAF  3001               	movlw	1
  6243  0FB0                     u4335:	
  6244  0FB0  36F4               	lsrf	___ftpack@arg+2,f
  6245  0FB1  0CF3               	rrf	___ftpack@arg+1,f
  6246  0FB2  0CF2               	rrf	___ftpack@arg,f
  6247  0FB3  0B89               	decfsz	9,f
  6248  0FB4  2FB0               	goto	u4335
  6249  0FB5                     l3634:	
  6250  0FB5  30FE               	movlw	254
  6251  0FB6  0574               	andwf	___ftpack@arg+2,w
  6252  0FB7  1903               	btfsc	3,2
  6253  0FB8  2FCE               	goto	l847
  6254  0FB9  2FAB               	goto	l3632
  6255  0FBA                     l3636:	
  6256  0FBA  3001               	movlw	1
  6257  0FBB  00F7               	movwf	??___ftpack
  6258  0FBC  0877               	movf	??___ftpack,w
  6259  0FBD  07F5               	addwf	___ftpack@exp,f
  6260  0FBE  3001               	movlw	1
  6261  0FBF  07F2               	addwf	___ftpack@arg,f
  6262  0FC0  3000               	movlw	0
  6263  0FC1  1803               	skipnc
  6264  0FC2  3001               	movlw	1
  6265  0FC3  07F3               	addwf	___ftpack@arg+1,f
  6266  0FC4  3000               	movlw	0
  6267  0FC5  1803               	skipnc
  6268  0FC6  3001               	movlw	1
  6269  0FC7  07F4               	addwf	___ftpack@arg+2,f
  6270  0FC8  3001               	movlw	1
  6271  0FC9                     u4355:	
  6272  0FC9  36F4               	lsrf	___ftpack@arg+2,f
  6273  0FCA  0CF3               	rrf	___ftpack@arg+1,f
  6274  0FCB  0CF2               	rrf	___ftpack@arg,f
  6275  0FCC  0B89               	decfsz	9,f
  6276  0FCD  2FC9               	goto	u4355
  6277  0FCE                     l847:	
  6278  0FCE  30FF               	movlw	255
  6279  0FCF  0574               	andwf	___ftpack@arg+2,w
  6280  0FD0  1903               	btfsc	3,2
  6281  0FD1  2FDB               	goto	l3644
  6282  0FD2  2FBA               	goto	l3636
  6283  0FD3                     l3642:	
  6284  0FD3  3001               	movlw	1
  6285  0FD4  02F5               	subwf	___ftpack@exp,f
  6286  0FD5  3001               	movlw	1
  6287  0FD6                     u4375:	
  6288  0FD6  35F2               	lslf	___ftpack@arg,f
  6289  0FD7  0DF3               	rlf	___ftpack@arg+1,f
  6290  0FD8  0DF4               	rlf	___ftpack@arg+2,f
  6291  0FD9  0B89               	decfsz	9,f
  6292  0FDA  2FD6               	goto	u4375
  6293  0FDB                     l3644:	
  6294  0FDB  1BF3               	btfsc	___ftpack@arg+1,7
  6295  0FDC  2FE1               	goto	l854
  6296  0FDD  3002               	movlw	2
  6297  0FDE  0275               	subwf	___ftpack@exp,w
  6298  0FDF  1803               	skipnc
  6299  0FE0  2FD3               	goto	l3642
  6300  0FE1                     l854:	
  6301  0FE1  1875               	btfsc	___ftpack@exp,0
  6302  0FE2  2FE9               	goto	l855
  6303  0FE3  30FF               	movlw	255
  6304  0FE4  05F2               	andwf	___ftpack@arg,f
  6305  0FE5  307F               	movlw	127
  6306  0FE6  05F3               	andwf	___ftpack@arg+1,f
  6307  0FE7  30FF               	movlw	255
  6308  0FE8  05F4               	andwf	___ftpack@arg+2,f
  6309  0FE9                     l855:	
  6310  0FE9  1003               	clrc
  6311  0FEA  0CF5               	rrf	___ftpack@exp,f
  6312  0FEB  0875               	movf	___ftpack@exp,w
  6313  0FEC  00F7               	movwf	??___ftpack
  6314  0FED  01F8               	clrf	??___ftpack+1
  6315  0FEE  01F9               	clrf	??___ftpack+2
  6316  0FEF  3010               	movlw	16
  6317  0FF0                     u4415:	
  6318  0FF0  35F7               	lslf	??___ftpack,f
  6319  0FF1  0DF8               	rlf	??___ftpack+1,f
  6320  0FF2  0DF9               	rlf	??___ftpack+2,f
  6321  0FF3  0B89               	decfsz	9,f
  6322  0FF4  2FF0               	goto	u4415
  6323  0FF5  0877               	movf	??___ftpack,w
  6324  0FF6  04F2               	iorwf	___ftpack@arg,f
  6325  0FF7  0878               	movf	??___ftpack+1,w
  6326  0FF8  04F3               	iorwf	___ftpack@arg+1,f
  6327  0FF9  0879               	movf	??___ftpack+2,w
  6328  0FFA  04F4               	iorwf	___ftpack@arg+2,f
  6329  0FFB  0876               	movf	___ftpack@sign,w
  6330  0FFC  1903               	btfsc	3,2
  6331  0FFD  0008               	return
  6332  0FFE  17F4               	bsf	___ftpack@arg+2,7
  6333  0FFF  0008               	return
  6334  1000                     __end_of___ftpack:	
  6335                           
  6336                           	psect	text36
  6337  0EE9                     __ptext36:	
  6338 ;; *************** function ___lldiv *****************
  6339 ;; Defined at:
  6340 ;;		line 6 in file "/Applications/microchip/xc8/v1.36/sources/common/lldiv.c"
  6341 ;; Parameters:    Size  Location     Type
  6342 ;;  divisor         4    2[COMMON] unsigned long 
  6343 ;;  dividend        4    6[COMMON] unsigned long 
  6344 ;; Auto vars:     Size  Location     Type
  6345 ;;  quotient        4    1[BANK0 ] unsigned long 
  6346 ;;  counter         1    5[BANK0 ] unsigned char 
  6347 ;; Return value:  Size  Location     Type
  6348 ;;                  4    2[COMMON] unsigned long 
  6349 ;; Registers used:
  6350 ;;		wreg, status,2, status,0
  6351 ;; Tracked objects:
  6352 ;;		On entry : 0/0
  6353 ;;		On exit  : 0/0
  6354 ;;		Unchanged: 0/0
  6355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6356 ;;      Params:         8       0       0       0       0       0
  6357 ;;      Locals:         0       5       0       0       0       0
  6358 ;;      Temps:          0       1       0       0       0       0
  6359 ;;      Totals:         8       6       0       0       0       0
  6360 ;;Total ram usage:       14 bytes
  6361 ;; Hardware stack levels used:    1
  6362 ;; Hardware stack levels required when called:    1
  6363 ;; This function calls:
  6364 ;;		Nothing
  6365 ;; This function is called by:
  6366 ;;		_main
  6367 ;; This function uses a non-reentrant model
  6368 ;;
  6369                           
  6370                           
  6371                           ;psect for function ___lldiv
  6372  0EE9                     ___lldiv:	
  6373                           
  6374                           ;incstack = 0
  6375                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6376  0EE9  3000               	movlw	0
  6377  0EEA  0020               	movlb	0	; select bank0
  6378  0EEB  00A4               	movwf	___lldiv@quotient+3
  6379  0EEC  3000               	movlw	0
  6380  0EED  00A3               	movwf	___lldiv@quotient+2
  6381  0EEE  3000               	movlw	0
  6382  0EEF  00A2               	movwf	___lldiv@quotient+1
  6383  0EF0  3000               	movlw	0
  6384  0EF1  00A1               	movwf	___lldiv@quotient
  6385  0EF2  0875               	movf	___lldiv@divisor+3,w
  6386  0EF3  0474               	iorwf	___lldiv@divisor+2,w
  6387  0EF4  0473               	iorwf	___lldiv@divisor+1,w
  6388  0EF5  0472               	iorwf	___lldiv@divisor,w
  6389  0EF6  1903               	skipnz
  6390  0EF7  2F33               	goto	l4246
  6391  0EF8  01A5               	clrf	___lldiv@counter
  6392  0EF9  0AA5               	incf	___lldiv@counter,f
  6393  0EFA                     l4232:	
  6394  0EFA  1BF5               	btfsc	___lldiv@divisor+3,7
  6395  0EFB  2F08               	goto	l4234
  6396  0EFC  3001               	movlw	1
  6397  0EFD                     u5465:	
  6398  0EFD  35F2               	lslf	___lldiv@divisor,f
  6399  0EFE  0DF3               	rlf	___lldiv@divisor+1,f
  6400  0EFF  0DF4               	rlf	___lldiv@divisor+2,f
  6401  0F00  0DF5               	rlf	___lldiv@divisor+3,f
  6402  0F01  0B89               	decfsz	9,f
  6403  0F02  2EFD               	goto	u5465
  6404  0F03  3001               	movlw	1
  6405  0F04  00A0               	movwf	??___lldiv
  6406  0F05  0820               	movf	??___lldiv,w
  6407  0F06  07A5               	addwf	___lldiv@counter,f
  6408  0F07  2EFA               	goto	l4232
  6409  0F08                     l4234:	
  6410  0F08  3001               	movlw	1
  6411  0F09                     u5485:	
  6412  0F09  35A1               	lslf	___lldiv@quotient,f
  6413  0F0A  0DA2               	rlf	___lldiv@quotient+1,f
  6414  0F0B  0DA3               	rlf	___lldiv@quotient+2,f
  6415  0F0C  0DA4               	rlf	___lldiv@quotient+3,f
  6416  0F0D  0B89               	decfsz	9,f
  6417  0F0E  2F09               	goto	u5485
  6418  0F0F  0875               	movf	___lldiv@divisor+3,w
  6419  0F10  0279               	subwf	___lldiv@dividend+3,w
  6420  0F11  1D03               	skipz
  6421  0F12  2F1D               	goto	u5495
  6422  0F13  0874               	movf	___lldiv@divisor+2,w
  6423  0F14  0278               	subwf	___lldiv@dividend+2,w
  6424  0F15  1D03               	skipz
  6425  0F16  2F1D               	goto	u5495
  6426  0F17  0873               	movf	___lldiv@divisor+1,w
  6427  0F18  0277               	subwf	___lldiv@dividend+1,w
  6428  0F19  1D03               	skipz
  6429  0F1A  2F1D               	goto	u5495
  6430  0F1B  0872               	movf	___lldiv@divisor,w
  6431  0F1C  0276               	subwf	___lldiv@dividend,w
  6432  0F1D                     u5495:	
  6433  0F1D  1C03               	skipc
  6434  0F1E  2F28               	goto	l4242
  6435  0F1F  0872               	movf	___lldiv@divisor,w
  6436  0F20  02F6               	subwf	___lldiv@dividend,f
  6437  0F21  0873               	movf	___lldiv@divisor+1,w
  6438  0F22  3BF7               	subwfb	___lldiv@dividend+1,f
  6439  0F23  0874               	movf	___lldiv@divisor+2,w
  6440  0F24  3BF8               	subwfb	___lldiv@dividend+2,f
  6441  0F25  0875               	movf	___lldiv@divisor+3,w
  6442  0F26  3BF9               	subwfb	___lldiv@dividend+3,f
  6443  0F27  1421               	bsf	___lldiv@quotient,0
  6444  0F28                     l4242:	
  6445  0F28  3001               	movlw	1
  6446  0F29                     u5505:	
  6447  0F29  36F5               	lsrf	___lldiv@divisor+3,f
  6448  0F2A  0CF4               	rrf	___lldiv@divisor+2,f
  6449  0F2B  0CF3               	rrf	___lldiv@divisor+1,f
  6450  0F2C  0CF2               	rrf	___lldiv@divisor,f
  6451  0F2D  0B89               	decfsz	9,f
  6452  0F2E  2F29               	goto	u5505
  6453  0F2F  3001               	movlw	1
  6454  0F30  02A5               	subwf	___lldiv@counter,f
  6455  0F31  1D03               	btfss	3,2
  6456  0F32  2F08               	goto	l4234
  6457  0F33                     l4246:	
  6458  0F33  0824               	movf	___lldiv@quotient+3,w
  6459  0F34  00F5               	movwf	?___lldiv+3
  6460  0F35  0823               	movf	___lldiv@quotient+2,w
  6461  0F36  00F4               	movwf	?___lldiv+2
  6462  0F37  0822               	movf	___lldiv@quotient+1,w
  6463  0F38  00F3               	movwf	?___lldiv+1
  6464  0F39  0821               	movf	___lldiv@quotient,w
  6465  0F3A  00F2               	movwf	?___lldiv
  6466  0F3B  0008               	return
  6467  0F3C                     __end_of___lldiv:	
  6468                           
  6469                           	psect	intentry
  6470  0004                     __pintentry:	
  6471 ;; *************** function _ISR *****************
  6472 ;; Defined at:
  6473 ;;		line 583 in file "powerspy.c"
  6474 ;; Parameters:    Size  Location     Type
  6475 ;;		None
  6476 ;; Auto vars:     Size  Location     Type
  6477 ;;		None
  6478 ;; Return value:  Size  Location     Type
  6479 ;;                  1    wreg      void 
  6480 ;; Registers used:
  6481 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6482 ;; Tracked objects:
  6483 ;;		On entry : 0/0
  6484 ;;		On exit  : 0/0
  6485 ;;		Unchanged: 0/0
  6486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6487 ;;      Params:         0       0       0       0       0       0
  6488 ;;      Locals:         0       0       0       0       0       0
  6489 ;;      Temps:          2       0       0       0       0       0
  6490 ;;      Totals:         2       0       0       0       0       0
  6491 ;;Total ram usage:        2 bytes
  6492 ;; Hardware stack levels used:    1
  6493 ;; This function calls:
  6494 ;;		Nothing
  6495 ;; This function is called by:
  6496 ;;		Interrupt level 1
  6497 ;; This function uses a non-reentrant model
  6498 ;;
  6499                           
  6500  0004                     _ISR:	
  6501                           
  6502                           ;incstack = 0
  6503                           ; Regs used in _ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  6504  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  6505  0005  3180               	pagesel	$
  6506  0006  0020               	movlb	0	; select bank0
  6507  0007  087F               	movf	127,w
  6508  0008  00F1               	movwf	??_ISR+1
  6509                           
  6510                           ;powerspy.c: 586: if (RCIE && RCIF) {
  6511  0009  0021               	movlb	1	; select bank1
  6512  000A  1E91               	btfss	17,5	;volatile
  6513  000B  2822               	goto	i1l3320
  6514  000C  0020               	movlb	0	; select bank0
  6515  000D  1E91               	btfss	17,5	;volatile
  6516  000E  2822               	goto	i1l3320
  6517                           
  6518                           ;powerspy.c: 587: receive_buff[buffpos] = RCREG;
  6519  000F  0023               	movlb	3	; select bank3
  6520  0010  0819               	movf	25,w	;volatile
  6521  0011  00F0               	movwf	??_ISR
  6522  0012  087A               	movf	_buffpos,w
  6523  0013  3EA0               	addlw	(low (_receive_buff| 0))& (0+255)
  6524  0014  0086               	movwf	6
  6525  0015  0187               	clrf	7
  6526  0016  0870               	movf	??_ISR,w
  6527  0017  0081               	movwf	1
  6528                           
  6529                           ;powerspy.c: 588: buffpos++;
  6530  0018  3001               	movlw	1
  6531  0019  00F0               	movwf	??_ISR
  6532  001A  0870               	movf	??_ISR,w
  6533  001B  07FA               	addwf	_buffpos,f
  6534                           
  6535                           ;powerspy.c: 589: buffpos %= 32;
  6536  001C  301F               	movlw	31
  6537  001D  00F0               	movwf	??_ISR
  6538  001E  0870               	movf	??_ISR,w
  6539  001F  05FA               	andwf	_buffpos,f
  6540                           
  6541                           ;powerspy.c: 590: RCIF = 0;
  6542  0020  0020               	movlb	0	; select bank0
  6543  0021  1291               	bcf	17,5	;volatile
  6544  0022                     i1l3320:	
  6545                           
  6546                           ;powerspy.c: 591: }
  6547                           ;powerspy.c: 594: if (TMR1IE && TMR1IF) {
  6548  0022  0021               	movlb	1	; select bank1
  6549  0023  1C11               	btfss	17,0	;volatile
  6550  0024  2829               	goto	i1l345
  6551  0025  0020               	movlb	0	; select bank0
  6552  0026  1C11               	btfss	17,0	;volatile
  6553  0027  2829               	goto	i1l345
  6554                           
  6555                           ;powerspy.c: 595: TMR1IF = 0;
  6556  0028  1011               	bcf	17,0	;volatile
  6557  0029                     i1l345:	
  6558                           
  6559                           ;powerspy.c: 596: }
  6560                           ;powerspy.c: 599: if (C1IE && C1IF) {
  6561  0029  0021               	movlb	1	; select bank1
  6562  002A  1E92               	btfss	18,5	;volatile
  6563  002B  2841               	goto	i1l3340
  6564  002C  0020               	movlb	0	; select bank0
  6565  002D  1E92               	btfss	18,5	;volatile
  6566  002E  2841               	goto	i1l3340
  6567                           
  6568                           ;powerspy.c: 601: volt_time = TMR1;
  6569  002F  0817               	movf	23,w	;volatile
  6570  0030  0021               	movlb	1	; select bank1
  6571  0031  00E8               	movwf	(_volt_time+1)^(0+128)
  6572  0032  0020               	movlb	0	; select bank0
  6573  0033  0816               	movf	22,w	;volatile
  6574  0034  0021               	movlb	1	; select bank1
  6575  0035  00E7               	movwf	_volt_time^(0+128)
  6576                           
  6577                           ;powerspy.c: 602: if (flag & 0x02)
  6578  0036  18C4               	btfsc	_flag^(0+128),1
  6579                           
  6580                           ;powerspy.c: 603: flag |= 0x08;
  6581  0037  15C4               	bsf	_flag^(0+128),3
  6582                           
  6583                           ;powerspy.c: 604: if (flag & 0x04)
  6584  0038  1D44               	btfss	_flag^(0+128),2
  6585  0039  283E               	goto	i1l3336
  6586                           
  6587                           ;powerspy.c: 605: flag &= ~0x04;
  6588  003A  30FB               	movlw	251
  6589  003B  00F0               	movwf	??_ISR
  6590  003C  0870               	movf	??_ISR,w
  6591  003D  05C4               	andwf	_flag^(0+128),f
  6592  003E                     i1l3336:	
  6593                           
  6594                           ;powerspy.c: 606: flag |= 0x01;
  6595  003E  1444               	bsf	_flag^(0+128),0
  6596                           
  6597                           ;powerspy.c: 609: C1IF = 0;
  6598  003F  0020               	movlb	0	; select bank0
  6599  0040  1292               	bcf	18,5	;volatile
  6600  0041                     i1l3340:	
  6601                           
  6602                           ;powerspy.c: 610: }
  6603                           ;powerspy.c: 613: if (C2IE && C2IF) {
  6604  0041  0021               	movlb	1	; select bank1
  6605  0042  1F12               	btfss	18,6	;volatile
  6606  0043  2859               	goto	i1l3356
  6607  0044  0020               	movlb	0	; select bank0
  6608  0045  1F12               	btfss	18,6	;volatile
  6609  0046  2859               	goto	i1l3356
  6610                           
  6611                           ;powerspy.c: 615: curr_time = TMR1;
  6612  0047  0817               	movf	23,w	;volatile
  6613  0048  0021               	movlb	1	; select bank1
  6614  0049  00E6               	movwf	(_curr_time+1)^(0+128)
  6615  004A  0020               	movlb	0	; select bank0
  6616  004B  0816               	movf	22,w	;volatile
  6617  004C  0021               	movlb	1	; select bank1
  6618  004D  00E5               	movwf	_curr_time^(0+128)
  6619                           
  6620                           ;powerspy.c: 616: if (flag & 0x01)
  6621  004E  1844               	btfsc	_flag^(0+128),0
  6622                           
  6623                           ;powerspy.c: 617: flag |= 0x04;
  6624  004F  1544               	bsf	_flag^(0+128),2
  6625                           
  6626                           ;powerspy.c: 618: if (flag & 0x08)
  6627  0050  1DC4               	btfss	_flag^(0+128),3
  6628  0051  2856               	goto	i1l3352
  6629                           
  6630                           ;powerspy.c: 619: flag &= ~0x08;
  6631  0052  30F7               	movlw	247
  6632  0053  00F0               	movwf	??_ISR
  6633  0054  0870               	movf	??_ISR,w
  6634  0055  05C4               	andwf	_flag^(0+128),f
  6635  0056                     i1l3352:	
  6636                           
  6637                           ;powerspy.c: 620: flag |= 0x02;
  6638  0056  14C4               	bsf	_flag^(0+128),1
  6639                           
  6640                           ;powerspy.c: 622: C2IF = 0;
  6641  0057  0020               	movlb	0	; select bank0
  6642  0058  1312               	bcf	18,6	;volatile
  6643  0059                     i1l3356:	
  6644                           
  6645                           ;powerspy.c: 623: }
  6646                           ;powerspy.c: 625: if (TMR2IE && TMR2IF) {
  6647  0059  0021               	movlb	1	; select bank1
  6648  005A  1C91               	btfss	17,1	;volatile
  6649  005B  2860               	goto	i1l353
  6650  005C  0020               	movlb	0	; select bank0
  6651  005D  1C91               	btfss	17,1	;volatile
  6652  005E  2860               	goto	i1l353
  6653                           
  6654                           ;powerspy.c: 626: TMR2IF = 0;
  6655  005F  1091               	bcf	17,1	;volatile
  6656  0060                     i1l353:	
  6657  0060  0871               	movf	??_ISR+1,w
  6658  0061  0020               	movlb	0	; select bank0
  6659  0062  00FF               	movwf	127
  6660  0063  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  6661  0064  0009               	retfie
  6662  0065                     __end_of_ISR:	
  6663  007E                     btemp	set	126	;btemp
  6664  007E                     int$flags	set	126
  6665  007E                     wtemp	set	126
  6666  007E                     wtemp0	set	126
  6667  0080                     wtemp1	set	128
  6668  0082                     wtemp2	set	130
  6669  0084                     wtemp3	set	132
  6670  0086                     wtemp4	set	134
  6671  0088                     wtemp5	set	136
  6672  007F                     wtemp6	set	127
  6673  007E                     ttemp	set	126
  6674  007E                     ttemp0	set	126
  6675  0081                     ttemp1	set	129
  6676  0084                     ttemp2	set	132
  6677  0087                     ttemp3	set	135
  6678  007F                     ttemp4	set	127
  6679  007E                     ltemp	set	126
  6680  007E                     ltemp0	set	126
  6681  0082                     ltemp1	set	130
  6682  0086                     ltemp2	set	134
  6683  0080                     ltemp3	set	128


Data Sizes:
    Strings     33
    Constant    37
    Data        7
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     77      78
    BANK1            80     29      73
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> floor@expon(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 15
		 -> sin@coeff_a(CODE[15]), sin@coeff_b(CODE[12]), 

    sendString@val	PTR unsigned char  size(2) Largest target is 15
		 -> STR_3(CODE[15]), STR_2(CODE[10]), STR_1(CODE[8]), 

    sendFloat@ptr	PTR unsigned um size(1) Largest target is 3
		 -> sendFloat@f(BANK0[3]), 


Critical Paths under _main in COMMON

    _main->___lldiv
    _main->___lmul
    _main->_deltaT
    _sendString->__sendchar_
    _sendInt32->__sendchar_
    ___lwtoft->___ftpack
    _floor->___fttol
    ___altoft->___ftpack
    ___altoft->___fttol
    ___ftmul->___ftpack
    ___ftadd->___ftpack
    ___ftdiv->___ftpack
    ___lltoft->___ftpack

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_cos
    _sendFloat->_readCurrent
    _readVdd->___ftdiv
    _readCurrent->___ftadd
    _cos->_sin
    _sin->___ftsub
    _floor->___ftadd
    ___altoft->___fttol
    _eval_poly->___ftadd
    ___ftmul->___lwtoft
    ___ftsub->_floor
    ___ftadd->___ftneg
    ___ftneg->_readVdd
    ___ftdiv->___ftmul

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_cos
    _cos->_sin

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0   99300
                                             13 BANK1     16    16      0
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                            ___lldiv
                           ___lltoft
                             ___lmul
                                _cos
                             _deltaT
                            _initADC
                             _initBT
                          _initCOMP1
                          _initCOMP2
                            _initFVR
                      _initMessaging
                        _initPWMTMR4
                           _initPins
                           _initTMR1
                        _readCurrent
                            _readVdd
                          _sendFloat
                          _sendInt32
                         _sendString
 ---------------------------------------------------------------------------------
 (1) _sendString                                           3     1      2     291
                                              3 COMMON     3     1      2
                         __sendchar_
 ---------------------------------------------------------------------------------
 (1) _sendInt32                                            9     5      4     220
                                              3 COMMON     4     0      4
                                              0 BANK0      5     5      0
                         __sendchar_
 ---------------------------------------------------------------------------------
 (1) _sendFloat                                            7     4      3     297
                                             61 BANK0      7     4      3
                         __sendchar_
                        _readCurrent (ARG)
 ---------------------------------------------------------------------------------
 (2) __sendchar_                                           1     1      0      31
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _readVdd                                              3     0      3   12163
                                             36 BANK0      3     0      3
                            ___ftdiv
                            ___ftmul
                           ___lwtoft
                                _adc
 ---------------------------------------------------------------------------------
 (1) _readCurrent                                          6     3      3   17430
                                             55 BANK0      6     3      3
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                           ___lwtoft
                                _adc
 ---------------------------------------------------------------------------------
 (2) _adc                                                  2     2      0     110
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             4     1      3    2349
                                              0 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _initTMR1                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initPins                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initPWMTMR4                                          1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initMessaging                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initFVR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initCOMP2                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initCOMP1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initBT                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _deltaT                                              10     6      4     483
                                              2 COMMON     8     4      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _cos                                                  9     6      3   54753
                                             74 BANK0      3     0      3
                                             10 BANK1      3     3      0
                            ___ftadd
                             ___ftge
                                _sin
 ---------------------------------------------------------------------------------
 (2) _sin                                                 14    11      3   47118
                                             70 BANK0      4     1      3
                                              0 BANK1     10    10      0
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                          _eval_poly
                              _floor
 ---------------------------------------------------------------------------------
 (3) _floor                                                9     6      3   11420
                                             55 BANK0      9     6      3
                           ___altoft
                            ___ftadd
                             ___ftge
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (4) _frexp                                                6     2      4     428
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___fttol                                             14    10      4     761
                                              2 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (4) ___ftge                                               9     3      6    2108
                                              2 COMMON     6     0      6
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) ___altoft                                             8     4      4    2457
                                              6 BANK0      8     4      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (3) _eval_poly                                           10     3      7   11289
                                             55 BANK0     10     3      7
                            ___ftadd
                            ___ftdiv (ARG)
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     396
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    5016
                                              4 BANK0     16    10      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftsub                                              6     0      6    5849
                                             64 BANK0      6     0      6
                            ___ftadd
                              _floor (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             13     7      6    5233
                                             42 BANK0     13     7      6
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3     695
                                             39 BANK0      3     0      3
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                            _readVdd (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    4688
                                             20 BANK0     16    10      6
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     198
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) ___lltoft                                             6     2      4    2355
                                              0 BANK0      6     2      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2188
                                              2 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             14     6      8     371
                                              2 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___ftdiv
     ___ftmul (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
   ___ftmul
     ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   ___ftneg
     ___ftdiv (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     _readVdd (ARG)
       ___ftdiv
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft
         ___ftpack
       _adc
   ___lldiv
   ___lltoft
     ___ftpack
   ___lmul
   _cos
     ___ftadd
       ___ftdiv (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         _readVdd (ARG)
           ___ftdiv
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft
             ___ftpack
           _adc
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
     ___ftge
     _sin
       ___ftadd
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           _readVdd (ARG)
             ___ftdiv
               ___ftmul (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftmul
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft
               ___ftpack
             _adc
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
       ___ftdiv
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftge
       ___ftmul
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         _readVdd (ARG)
           ___ftdiv
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft
             ___ftpack
           _adc
       ___ftsub
         ___ftadd
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___ftdiv (ARG)
               ___ftmul (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             _readVdd (ARG)
               ___ftdiv
                 ___ftmul (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftmul
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft
                 ___ftpack
               _adc
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         _floor (ARG)
           ___altoft
             ___ftpack
             ___fttol (ARG)
           ___ftadd
             ___ftdiv (ARG)
               ___ftmul (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___ftdiv (ARG)
                 ___ftmul (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftmul (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               _readVdd (ARG)
                 ___ftdiv
                   ___ftmul (ARG)
                     ___ftpack
                     ___lwtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftmul
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___lwtoft
                   ___ftpack
                 _adc
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
           ___ftge
           ___fttol
           _frexp
       _eval_poly
         ___ftadd
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___ftdiv (ARG)
               ___ftmul (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             _readVdd (ARG)
               ___ftdiv
                 ___ftmul (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftmul
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft
                 ___ftpack
               _adc
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___wmul (ARG)
       _floor
         ___altoft
           ___ftpack
           ___fttol (ARG)
         ___ftadd
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___ftdiv (ARG)
               ___ftmul (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             _readVdd (ARG)
               ___ftdiv
                 ___ftmul (ARG)
                   ___ftpack
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftmul
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft
                 ___ftpack
               _adc
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
         ___ftge
         ___fttol
         _frexp
   _deltaT
   _initADC
   _initBT
   _initCOMP1
   _initCOMP2
   _initFVR
   _initMessaging
   _initPWMTMR4
   _initPins
   _initTMR1
   _readCurrent
     ___ftadd
       ___ftdiv (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         _readVdd (ARG)
           ___ftdiv
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft
             ___ftpack
           _adc
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
     ___ftdiv
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
     _adc
   _readVdd
     ___ftdiv
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
     _adc
   _sendFloat
     __sendchar_
     _readCurrent (ARG)
       ___ftadd
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           _readVdd (ARG)
             ___ftdiv
               ___ftmul (ARG)
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftmul
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft
               ___ftpack
             _adc
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
       ___ftdiv
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft
         ___ftpack
       _adc
   _sendInt32
     __sendchar_
   _sendString
     __sendchar_

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      A3       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     4D      4E       6       97.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     1D      49       8       91.2%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      A3      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Sun May  8 18:00:54 2016

           ___altoft@exp 002C              __CFG_CP$OFF 0000            ___altoft@sign 002D  
    ___wmul@multiplicand 0074             ___ftadd@exp1 0056             ___ftadd@exp2 0055  
           ___ftadd@sign 0054                      l245 0B9B                      l262 0BF6  
                    l266 0EE6                      l358 00F9                      l529 0B82  
                    l680 0C01                      l854 0FE1                      l855 0FE9  
                    l847 0FCE                      l938 0667                      l878 0446  
                    _GIE 005F                      _RA3 0063                      _RA4 0064  
                    _RA6 0066                      _RA7 0067                      _PR2 001B  
           __CFG_CPD$OFF 0000                      _ISR 0004          _readCurrent$980 005A  
                    _adc 0E98                      _cos 0706                      _sin 0223  
           __CFG_BORV$LO 0000                      wreg 0009             __CFG_LVP$OFF 0000  
                   ?_ISR 0070             ___ftdiv@cntr 003E             ___ftdiv@sign 0043  
                   ?_adc 0070                     _C1IE 0495                     _C1IF 0095  
                   l1053 02FF                     _C2IE 0496                     _C2IF 0096  
                   l4004 0F95                     l4100 0C76                     l4102 0C8A  
                   l3232 0CC1                     _C1ON 088F                     l4114 0749  
                   l3236 0CCC                     l4036 024B                     _C2ON 089F  
                   l4232 0EFA                     l4048 02CC                     l4242 0F28  
                   l4234 0F08                     l4314 020E                     l2820 0EB0  
                   ?_cos 006A                     l4246 0F33                     l4254 0C93  
                   l3702 03E5                     l2822 0EC0                     l3632 0FAB  
                   l4256 0CA3                     l3720 0412                     l3800 0505  
                   l4088 0D3C                     l2824 0ED0                     l4280 00EB  
                   l3642 0FD3                     l3634 0FB5                     l3722 041C  
                   l3714 03FF                     l2818 0EA0                     l4290 010D  
                   l3644 0FDB                     l3636 0FBA                     l3628 0FA4  
                   l3732 0438                     l3724 0421                     l3812 0521  
                   l3804 050D                     l3742 046A                     l3734 0442  
                   l3726 0425                     l3752 0485                     l3816 0529  
                   l3680 0DA3                     l3760 0DE2                     l3832 0613  
                   l3738 0458                     l3658 0BFB                     l3682 0DB3  
                   l3850 0643                     l3924 057E                     l3692 03CF  
                   l3764 0DF9                     l3860 066A                     l3852 0651  
                   l3918 0568                     l3782 04B4                     l3696 03D6  
                   l3864 0678                     l3946 05D8                     l3938 05BF  
                   l3858 065E                     l3874 0CF6                     l3788 04CA  
                   l3980 06AB                     l2996 0BF0                     l3966 0C39  
                   l3984 06B3                     _ADFM 04F7                     l3994 06FE  
                   ?_sin 0066                     _ADON 04E8                     _CHS0 04EA  
                   _CHS1 04EB                     _CHS2 04EC                     _CHS3 04ED  
                   _CHS4 04EE                     STR_1 081D                     STR_2 0813  
                   STR_3 0804                     _BRGH 0CF2                     _CREN 0CEC  
                   u3110 0E9E                     u3200 0ECE                     u3140 0EAE  
                   u3230 0EDE                     u3135 0EA3                     u3225 0ED3  
                   u3170 0EBE                     u3244 0EE0                     u3165 0EB3  
                   u3195 0EC3                     u5220 02C6                     u5045 0590  
                   u5230 02C7                     u4415 0FF0                     u4335 0FB0  
                   u5055 05A0                     u5065 05C0                     u5305 0E86  
                   u4355 0FC9                     u5075 05CF                     _PEIE 005E  
                   u5085 05D9                     u4445 0C02                     u5325 0E20  
                   u4375 0FD6                     u4455 0C07                     u5335 0E34  
                   u5505 0F29                     u3745 0CCD                     u4625 0413  
                   u5265 0D2C                     u3755 0CD4                     _RCIE 048D  
                   _RCIF 008D                     u5525 0C98                     u4485 0DA8  
                   u5285 0E5C                     u4655 0426                     u4815 050E  
                   u5295 0E71                     u5465 0EFD                     u4825 0514  
                   _SCS0 04C8                     u4595 0400                     _SCS1 04C9  
                   u5485 0F09                     u4685 0439                     u4925 0644  
                   u5495 0F1D                     u4855 052A                     u4865 0530  
                   u4785 04D6                     u4795 04E6                     u4955 065F  
                   u5747 0EE2                     u4895 061A                     _TMR1 0016  
                   _SPEN 0CEF                     _TRMT 0CF1                     _TXEN 0CF5  
                   _SYNC 0CF4                     _WPUB 020D             __CFG_WRT$OFF 0000  
                   _flag 00C4             ?_initPWMTMR4 0070                     _main 0081  
           ___ftpack@arg 0072                     cos@f 006A             ___ftpack@exp 0075  
                   fsr0h 0005                     fsr1h 0007                     fsr0l 0004  
                   indf0 0000                     indf1 0001                     fsr1l 0006  
                   btemp 007E                     sin@f 0066                     sin@y 00C5  
                   ltemp 007E                     start 0065                     ttemp 007E  
                   wtemp 007E            __CFG_IESO$OFF 0000            __CFG_MCLRE$ON 0000  
           ___ftmul@cntr 0032             ___ftmul@sign 0033                    ??_ISR 0070  
           ___fttol@exp1 0025                    ??_adc 0072                    ??_cos 007A  
           ___fttol@lval 0021                    ??_sin 0069            __CFG_PLLEN$ON 0000  
           ?_readCurrent 0057                    _DC1B0 149C                    _DC1B1 149D  
                  _ADCS0 04F4                    _ADCS1 04F5                    _ADCS2 04F6  
                  ?_main 0070                    _ADRES 009B          __end_of___ftadd 049D  
                  _BRG16 0CFB            __CFG_WDTE$OFF 0000          __end_of___ftdiv 05FA  
        __end_of___ftneg 0B95          __end_of___lldiv 0F3C          __end_of___ftmul 0551  
        __end_of___ftsub 0C4F          __end_of___fttol 0681                    _IRCF0 04CB  
                  _IRCF1 04CC                    _IRCF2 04CD                    _IRCF3 04CE  
                  i1l353 0060                    i1l345 0029                    _FVREN 08BF  
                  _RCREG 0199                    _SPBRG 019B                    _PORTA 000C  
                  _PORTB 000D                    _TRISA 008C                    _TRISB 008D  
     __end_ofsin@coeff_a 07F8       __end_ofsin@coeff_b 0804                    _TXREG 019A  
    ___lmul@multiplicand 0076             ___lltoft@exp 0025           __CFG_FCMEN$OFF 0000  
        __end_of_initADC 0BA8          __end_of_initFVR 0B9E                    _floor 0681  
        __end_of_readVdd 0D8E                    _frexp 0CEA                    _errno 00C0  
          ___ftpack@sign 0076           __CFG_BOREN$OFF 0000                    sin@x2 00CB  
                  ltemp0 007E                    ltemp1 0082                    ltemp2 0086  
                  ltemp3 0080                    ttemp0 007E                    ttemp1 0081  
                  ttemp2 0084                    ttemp3 0087                    ttemp4 007F  
                  status 0003                    wtemp0 007E                    wtemp1 0080  
                  wtemp2 0082                    wtemp3 0084                    wtemp4 0086  
                  wtemp5 0088                    wtemp6 007F          __initialization 0067  
 __size_of_initMessaging 0006             __end_of_main 0223                   ??_main 007A  
          ___fttol@sign1 0020                   _C1NCH0 0890                   _C1NCH1 0891  
                 _C2NCH0 08A0                   _C1PCH0 0894                   _C2NCH1 08A1  
                 _C1PCH1 0895                   _C2PCH0 08A4                   _C2PCH1 08A5  
                 _C1INTP 0897                   _C2INTP 08A7                   ?_floor 0057  
                 _ADFVR0 08B8                   _ADFVR1 08B9                   ?_frexp 0072  
       __end_of___altoft 0DCB                   _ADNREF 04F2                   _CCPR1L 0291  
                 _ANSELA 018C                   _ANSELB 018D         __end_of___ftpack 1000  
       __end_of___lltoft 0CB8                   i1l3320 0022                   i1l3340 0041  
                 i1l3352 0056                   i1l3336 003E                   i1l3356 0059  
                 _FVRRDY 08BE         __end_of___lwtoft 0BE2                   _TMR1IE 0488  
                 _TMR1IF 0088                   _TMR2IE 0489                   _TMR2IF 0089  
                 _TMR4IF 0099                   _TMR1ON 00C0                   _TMR2ON 00E2  
                 _TMR4ON 20BA                   _SPLLEN 04CF           __CFG_PWRTE$OFF 0000  
                 _nWPUEN 04AF                   ___ftge 0DCB                   ___lmul 0CB8  
                 adc@src 0073                   ___wmul 0BF9                ??___ftadd 0050  
              ??___ftdiv 003A                ??___ftneg 007A                ??___lldiv 0020  
                 _deltaT 0D1F                ??___ftmul 002A         __end_of_initTMR1 0BB3  
              ??___ftsub 007A                ??___fttol 0076         __end_of_initPins 0C31  
                 _initBT 0BE2                   floor@i 005B                   floor@x 0057  
              ??_initADC 0072    ___ftmul@f3_as_product 002F                ??_initFVR 0072  
              ??_readVdd 007A                   sin@sgn 00CE            _initMessaging 0B6C  
__end_of__initialization 007D               ___altoft@c 0026               ___ftadd@f1 004A  
             ___ftadd@f2 004D               ___ftge@ff1 0072               ___ftge@ff2 0075  
           eval_poly@res 005E               ___ftdiv@f1 0037               ___ftdiv@f2 0034  
             ___ftdiv@f3 003F               ___ftneg@f1 0047     __size_of_initPWMTMR4 001F  
             ___ftmul@f1 0024               ___ftmul@f2 0027               ___ftsub@f1 0063  
             ___ftsub@f2 0060               ___fttol@f1 0072           __pcstackCOMMON 0070  
           __pidataBANK1 0B85               ___lltoft@c 0020            __end_of_floor 0706  
          __end_of_frexp 0D1F               ___lwtoft@c 0020     __size_of_readCurrent 0065  
         ?_initMessaging 0070                  ??_floor 005A                  ??_frexp 0076  
     __size_of_initCOMP1 000D       __size_of_initCOMP2 000D               __pbssBANK0 006D  
             __pbssBANK1 00A0       __size_of_eval_poly 0060               __pmaintext 0081  
             __sendchar_ 0B7E                  ?___ftge 0072                  ?___lmul 0072  
     __size_of_sendInt32 004F                  ?___wmul 0072       __size_of_sendFloat 0041  
           __sendchar_@c 0072                  _C1TSEL0 14F0                  _C1TSEL1 14F1  
                ?_deltaT 0072               __pintentry 0004                  _CCP1CON 0293  
                _CDAFVR0 08BA                  _CDAFVR1 08BB                  ?_initBT 0070  
                _CCP1SEL 08E8                ?___altoft 0026                  _ADPREF0 04F0  
                _ADPREF1 04F1           ___lmul@product 0020                ?___ftpack 0072  
              ?___lltoft 0020                  _T1CKPS0 00C4                  _T1CKPS1 00C5  
                _T2CKPS0 00E0                  _T2CKPS1 00E1                ?___lwtoft 0020  
                _T4CKPS0 20B8                  _T4CKPS1 20B9                  _TMR1CS0 00C6  
                _TMR1CS1 00C7                  _RXDTSEL 08EF                  _TXCKSEL 08F0  
              ?_initTMR1 0070                ?_initPins 0070          __size_of___ftge 003D  
        __size_of___lmul 0032                  ___ftadd 03A7                  ___ftdiv 0551  
                _cos$986 00CF                  ___ftneg 0B8C                  ___lldiv 0EE9  
        __size_of___wmul 001B                  ___ftmul 049D                  ___ftsub 0C31  
                ___fttol 05FA          __size_of_deltaT 0036        __end_of_initCOMP1 0BC0  
      __end_of_initCOMP2 0BCD               ??___altoft 002A          __CFG_STVREN$OFF 0000  
        __size_of_initBT 0017               ??___ftpack 0077        __end_of_eval_poly 0F9C  
             ??___lltoft 0024                  __ptext1 0C6E                  __ptext2 0E49  
                __ptext3 0E08                  __ptext4 0B7E                  __ptext5 0D55  
                __ptext6 077A                  __ptext7 0E98                  __ptext8 0BCD  
                __ptext9 0BA8                  _sin$987 00C8               ??___lwtoft 0023  
                _buffpos 007A          ??_initMessaging 0072                  _initADC 0B9E  
           __size_of_ISR 0061                  _initFVR 0B95             __size_of_adc 0051  
                _readVdd 0D55             __size_of_cos 0074             __size_of_sin 0184  
                _reading 006D                  _readpos 007B        __end_of_sendInt32 0E98  
                clrloop0 0B79        __end_of_sendFloat 0E49     end_of_initialization 007D  
             ??_initTMR1 0072               _sendString 0C6E               ??_initPins 0072  
                init_ram 0B72                  initloop 0B73          ___lldiv@divisor 0072  
        ___lldiv@counter 0025              ?__sendchar_ 0070             __pstringtext 07DF  
          sendString@val 0073         __CFG_FOSC$INTOSC 0000                _TRISBbits 008D  
            ___ftdiv@exp 0042              ___ftmul@exp 002E           __end_of___ftge 0E08  
         __end_of___lmul 0CEA            deltaT@tm_high 0074           __end_of___wmul 0C14  
         __end_of_deltaT 0D55           __end_of_initBT 0BF9               floor@expon 005E  
    start_initialization 0067               eval_poly@d 005A               eval_poly@n 005C  
             eval_poly@x 0057              __end_of_ISR 0065              __end_of_adc 0EE9  
            __end_of_cos 077A              __end_of_sin 03A7      __size_of__sendchar_ 0007  
             frexp@value 0072              ?_sendString 0073            ??_initPWMTMR4 0072  
               ??___ftge 0020                 ??___lmul 007A                 ??___wmul 0076  
               ??_deltaT 0076              __pdataBANK1 00E2                 ??_initBT 0072  
          ??_readCurrent 007A        __size_of___altoft 003D        __size_of___ftpack 0064  
      __size_of___lltoft 002A              __pbssCOMMON 007A                ___latbits 0001  
      __size_of___lwtoft 0015            __pcstackBANK0 0020            __pcstackBANK1 00C5  
             sin@coeff_a 07E9               sin@coeff_b 07F8        __size_of_initTMR1 000B  
             sendInt32@i 0073        __size_of_initPins 001D             sendFloat@ptr 0063  
             sendFloat@f 005D      __end_of_initPWMTMR4 0C6E                 ?___ftadd 004A  
               ?___ftdiv 0034                 ?___ftneg 0047                 ?___lldiv 0072  
               ?___ftmul 0024                 ?___ftsub 0060                 ?___fttol 0072  
    __size_of_sendString 0020                 ?_initADC 0070                 ?_initFVR 0070  
              _initCOMP1 0BB3                _initCOMP2 0BC0                 ?_readVdd 0044  
              _eval_poly 0F3C      __end_of_readCurrent 07DF                _curr_time 00E5  
         __size_of_floor 0085           __size_of_frexp 0035                 _T2OUTPS0 00E3  
               _T2OUTPS1 00E4                 _T2OUTPS2 00E5                 _T2OUTPS3 00E6  
              _sendInt32 0E49           ___wmul@product 0076             _receive_buff 00A0  
              _sendFloat 0E08                deltaT@res 0020                clear_ram0 0B78  
           ??__sendchar_ 0072                 _GO_nDONE 04E9        ___wmul@multiplier 0072  
             ?_initCOMP1 0070               ?_initCOMP2 0070                main@diff_ 00DB  
              main@angle 00D2               ?_eval_poly 0057    __end_of_initMessaging 0B72  
              _volt_time 00E7             deltaT@tm_low 0072        ___lmul@multiplier 0072  
     __end_of__sendchar_ 0B85               ?_sendInt32 0073              _initPWMTMR4 0C4F  
             ?_sendFloat 005D                frexp@eptr 0075         __size_of___ftadd 00F6  
       __size_of___ftdiv 00A9         __size_of___ftneg 0009         __size_of___lldiv 0053  
               ___altoft 0D8E         __size_of___ftmul 00B4         __size_of___ftsub 001E  
       __size_of___fttol 0087              _readCurrent 077A                 ___ftpack 0F9C  
               ___lltoft 0C8E                 ___lwtoft 0BCD         __size_of_initADC 000A  
       __size_of_initFVR 0009         __size_of_readVdd 0039                 _main$981 00D5  
               _main$982 00D8                 __ptext10 0C14                 __ptext11 0C4F  
               __ptext20 0223                 __ptext12 0B6C                 __ptext21 0681  
               __ptext13 0B95                 __ptext30 03A7                 __ptext22 0CEA  
               __ptext14 0BC0                 __ptext31 0B8C                 __ptext23 05FA  
               __ptext15 0BB3                 __ptext32 0551                 __ptext24 0DCB  
               __ptext16 0BE2                 __ptext33 0CB8                 __ptext25 0D8E  
               __ptext17 0B9E                 __ptext34 0C8E                 __ptext26 0F3C  
               __ptext18 0D1F                 __ptext35 0F9C                 __ptext27 0BF9  
               __ptext19 0706                 __ptext36 0EE9                 __ptext28 049D  
               __ptext29 0C31                 _i_u_offs 00E2                 _led_rest 00C2  
               _initTMR1 0BA8             ??_sendString 0075                 _initPins 0C14  
          __size_of_main 01A2                 int$flags 007E                 main@diff 00DE  
            ??_initCOMP1 0072              ??_initCOMP2 0072       __end_of_sendString 0C8E  
            ??_eval_poly 007A           _get_shift_byte 07DF                 intlevel1 0000  
            ??_sendInt32 0020         ___lldiv@dividend 0076              ??_sendFloat 0060  
      __CFG_CLKOUTEN$OFF 0000         ___lldiv@quotient 0021   __end_of_get_shift_byte 07E9  
